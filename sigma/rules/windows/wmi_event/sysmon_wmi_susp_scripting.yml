title: Suspicious Scripting in a WMI Consumer
id: fe21810c-2a8c-478f-8dd3-5a287fb2a0e0
status: test
description: Detects suspicious commands that are related to scripting/powershell
  in WMI Event Consumers
references:
- https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/
- https://github.com/Neo23x0/signature-base/blob/615bf1f6bac3c1bdc417025c40c073e6c2771a76/yara/gen_susp_lnk_files.yar#L19
- https://github.com/RiccardoAncarani/LiquidSnake
author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro
date: 2019-04-15
modified: 2023-09-09
tags:
- attack.execution
- attack.t1059.005
logsource:
  product: windows
  category: wmi_event
detection:
  selection_destination:
  - Destination|contains|all:
    - 'new-object'
    - 'net.webclient'
    - '.downloadstring'
  - Destination|contains|all:
    - 'new-object'
    - 'net.webclient'
    - '.downloadfile'
  - Destination|contains:
    - ' iex('
    - ' -nop '
    - ' -noprofile '
    - ' -decode '
    - ' -enc '
    - 'WScript.Shell'
    - 'System.Security.Cryptography.FromBase64Transform'
  condition: selection_destination
fields:
- User
- Operation
falsepositives:
- Legitimate administrative scripts
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying potentially malicious scripting activity within Windows Management Instrumentation (WMI) Event Consumers, particularly involving PowerShell commands and method calls. The rule looks for specific patterns in WMI event logs, targeting script commands that use `.NET` objects like `System.Net.WebClient` for downloading files or executing scripts. By analyzing the `Destination` field for indications of common scripting practices, such as using `iex(` or encoded script commands, the rule aims to catch suspicious behavior that could signify an attempt to execute unauthorized or harmful scripts within the enterprise environment. The primary data source involved is WMI event logs, which capture these command executions.
  ### Investigation Steps
  - Review the WMI event logs in your SIEM to locate the events related to the identified scripts and examine the `Destination` field for any suspicious commands or parameters. 
  - Utilize EDR tools to examine the process tree associated with the detected scripts, paying attention to parent processes that initiated these WMI calls to identify potential malicious execution paths.
  - Check any recent changes to system configurations or administrative scripts, as legitimate scripts may generate similar WMI events. This can differentiate benign activities from genuine threats.
  - Analyze network logs for subsequent connections initiated by the involved endpoints to domains known for malicious activity, particularly those related to the downloaded scripts.
