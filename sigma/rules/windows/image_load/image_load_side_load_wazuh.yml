title: Potential Wazuh Security Platform DLL Sideloading
id: db77ce78-7e28-4188-9337-cf30e2b3ba9f
status: test
description: Detects potential DLL side loading of DLLs that are part of the Wazuh
  security platform
references:
- https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html
author: X__Junior (Nextron Systems)
date: 2023-03-13
modified: 2023-05-12
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith:
    - '\libwazuhshared.dll'
    - '\libwinpthread-1.dll'
  filter_main_generic:
    ImageLoaded|startswith:
    - 'C:\Program Files\'
    - 'C:\Program Files (x86)\'
  filter_optional_mingw64:
        # Note: Many third party apps installed in "AppData" or "ProgramData" and leverage "mingw64" make use of "libwinpthread-1.dll"
        # In production its best to make a list of these apps and replace this filter with a specific one.
    ImageLoaded|contains:
    - '\AppData\Local\'
    - '\ProgramData\'
    ImageLoaded|endswith: '\mingw64\bin\libwinpthread-1.dll'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Many legitimate applications leverage this DLL. (Visual Studio, JetBrains, Ruby,
  Anaconda, GithubDesktop, etc.)
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential DLL sideloading attacks involving the Wazuh security platform libraries on Windows systems. DLL sideloading occurs when a malicious actor places a malicious DLL in a directory where a legitimate application expects to find a trusted DLL, leading to the execution of the malicious code. The rule specifically monitors for instances where the `libwazuhshared.dll` or `libwinpthread-1.dll` libraries are loaded, ensuring that they originate from legitimate system folders, such as 'C:\Program Files\' or 'C:\Program Files (x86)\'. It also checks to see if these library loads occur from atypical locations like 'AppData' or 'ProgramData', which are common targets for DLL sideloading. By applying these filters, the rule aims to highlight suspicious behavior while reducing false positives that could arise from legitimate software uses.
  ### Investigation Steps
  Investigate the alert using EDR tools to examine the process tree, identifying which parent processes loaded the potentially malicious DLLs.
  Use process creation logs to track the creation time and parameters of processes associated with the loaded libraries for abnormal behavior.
  Review endpoint logs for additional context about any recent software installations or updates that might explain the DLL activity.
  Check user access and authentication logs to determine if any unauthorized users might have accessed or executed applications related to the detected DLLs.
