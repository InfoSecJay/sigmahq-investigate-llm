title: Potential DLL Sideloading Using Coregen.exe
id: 0fa66f66-e3f6-4a9c-93f8-4f2610b00171
status: test
description: Detect usage of the "coregen.exe" (Microsoft CoreCLR Native Image Generator)
  binary to sideload arbitrary DLLs.
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Coregen/
author: frack113
date: 2022-12-31
tags:
- attack.defense-evasion
- attack.t1218
- attack.t1055
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith: '\coregen.exe'
  filter_main_legit_paths:
    ImageLoaded|startswith:
    - 'C:\Program Files (x86)\Microsoft Silverlight\'
    - 'C:\Program Files\Microsoft Silverlight\'
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule aims to detect the potential use of "coregen.exe," which is the Microsoft CoreCLR Native Image Generator. This binary, when misused, can be leveraged by attackers to sideload arbitrary Dynamic-Link Libraries (DLLs), a technique often employed to evade detection and execute malicious code under the guise of legitimate processes. The rule primarily inspects image load events, specifically focusing on instances where "coregen.exe" is being executed outside of its typical legitimate directory paths, which are typically within certain Microsoft system folders or the program files associated with Silverlight.
  Key data sources include Windows event logs monitoring image loading activities, which provide insight into the binaries that are being executed and the associated libraries they load. In terms of the MITRE ATT&CK framework, this rule is linked to the tactics of defense evasion (ID: T1218), and specifically the technique of "Signed Binary Proxy Execution" (ID: T1055). The detection focuses on deviations from expected behavior, which can indicate malicious activity.
  ### Investigation Steps
  - **Verify Binary Origin:** Check the path of "coregen.exe" in the EDR logs to confirm whether the binary is executed from a legitimate location or if it appears suspiciously sourced from a non-standard directory.
  - **Analyze Loaded DLLs:** Use Sysmon logs to review the DLLs being loaded by "coregen.exe" and look for any known malicious libraries or unusual file names.
  - **Check Process Parents:** Investigate the parent processes of "coregen.exe" to identify whether it was spawned by a legitimate system process or another suspicious process, which could provide context on potential lateral movement or exploitation attempts.
  - **Correlate with Network Activity:** Use NDR to assess outgoing connections made during the timeframe of the alert to identify any suspicious or unexpected network calls that correspond with the execution of "coregen.exe."
  ### Prioritization
  The severity level of this alert is medium because the execution of "coregen.exe" in non-standard locations can indicate an attempt at DLL sideloading, a common tactic used to bypass security mechanisms. While not immediately indicative of a breach, it warrants timely investigation to rule out potential malicious intent.
  ### Blind Spots and Assumptions
  This rule may not fire if an attacker utilizes "coregen.exe" from within legitimate paths or if the DLLs are designed to be innocuous, thus blending in with normal operations. Additionally, if the telemetry lacks comprehensive coverage of all relevant image loads or if the adversary employs legitimate tools for malicious purposes, detections could be missed. Furthermore, it assumes that Sysmon is properly configured to capture image load events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
