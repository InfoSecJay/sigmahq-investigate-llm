title: GAC DLL Loaded Via Office Applications
id: 90217a70-13fc-48e4-b3db-0d836c5824ac
status: test
description: Detects any GAC DLL being loaded by an Office Product
references:
- https://medium.com/threatpunter/detecting-adversary-tradecraft-with-image-load-event-logging-and-eql-8de93338c16
author: Antonlovesdnb
date: 2020-02-19
modified: 2023-02-10
tags:
- attack.execution
- attack.t1204.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith:
    - '\excel.exe'
    - '\mspub.exe'
    - '\onenote.exe'
    - '\onenoteim.exe'         # Just in case
    - '\outlook.exe'
    - '\powerpnt.exe'
    - '\winword.exe'
    ImageLoaded|startswith: 'C:\Windows\Microsoft.NET\assembly\GAC_MSIL'
  condition: selection
falsepositives:
- Legitimate macro usage. Add the appropriate filter according to your environment
level: high
notes: |
  ### Technical Context
  The "GAC DLL Loaded Via Office Applications" detection rule is designed to identify instances where Global Assembly Cache (GAC) DLLs are loaded by Microsoft Office applications. By monitoring image load events for specific Office executables, such as Word, Excel, and PowerPoint, the rule looks for the presence of DLLs that originate from the GACâ€”this is significant because adversaries may leverage these DLLs to execute malicious code, particularly through macro-enabled documents. The rule works by analyzing the paths of loaded images, specifically targeting those that begin with `C:\Windows\Microsoft.NET\assembly\GAC_MSIL` and ensuring that they are associated with the specified Office applications. Responders should note that legitimate macro usage may also trigger this alert; therefore, contextual filtering based on established usage patterns may be necessary to reduce false positives.
  ### Investigation Steps
  - Query EDR logs to identify the process creation and command-line parameters associated with the Office application that triggered the alert. Assess any suspicious command-line arguments that could indicate exploitation attempts.  
  - Review relevant Windows Event Logs to obtain details about the GAC DLL that was loaded, including any parent processes that initiated the Office application. Understanding the loading context can help differentiate between legitimate and malicious activity.  
  - Check the network activity logs from NDR or firewall systems to detect any outbound connections made by the Office application post-DLL load. Malicious actions typically involve communication with external command-and-control (C2) servers.  
  - Investigate proxy logs to analyze any web requests made by the Office application around the time of the alert. This can help uncover any unauthorized downloads or connections that may indicate compromise.
