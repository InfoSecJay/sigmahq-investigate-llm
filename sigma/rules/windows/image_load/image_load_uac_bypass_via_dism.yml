title: UAC Bypass With Fake DLL
id: a5ea83a7-05a5-44c1-be2e-addccbbd8c03
status: test
description: Attempts to load dismcore.dll after dropping it
references:
- https://steemit.com/utopian-io/@ah101/uac-bypassing-utility
author: oscd.community, Dmitry Uchakin
date: 2020-10-06
modified: 2022-12-25
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith: '\dism.exe'
    ImageLoaded|endswith: '\dismcore.dll'
  filter:
    ImageLoaded: 'C:\Windows\System32\Dism\dismcore.dll'
  condition: selection and not filter
falsepositives:
- Actions of a legitimate telnet client
level: high
notes: |
  ### Technical Context
  This detection rule focuses on the potential abuse of User Account Control (UAC) by adversaries attempting to bypass security controls through the loading of a malicious Dynamic Link Library (DLL). Specifically, the rule captures instances where the legitimate process `dism.exe` (Deployment Image Service and Management Tool) loads the suspicious `dismcore.dll` from its typical path, `C:\Windows\System32\Dism\dismcore.dll`. This action is often associated with privilege escalation exploits and is classified under the MITRE ATT&CK technique T1548.002 (Abuse Elevation Control Mechanism: Bypass User Access Control). The primary data sources leveraged for detection include image load events captured by Sysmon, which detail the processes and their associated loaded images, thereby allowing the identification of any anomalous behavior that deviates from established norms.
  ### Investigation Steps
  - **Review EDR Events:** Check the endpoint detection and response (EDR) logs for any recorded instances of `dism.exe` loading `dismcore.dll`. Pay attention to the context and associated processes to establish a chain of events leading up to the alert.
    
  - **Analyze Process Creation Logs:** Utilize Windows Security Event Logs to track the creation of the `dism.exe` process. Evaluate the command-line arguments present at runtime for any signs of manipulation or suspicious activity.
    
  - **Inspect Network Connections:** Examine network traffic logs for any unusual external communications initiated by the `dism.exe` process. Analyzing this traffic can help identify potential command-and-control (C2) interactions associated with the flagged activity.
    
  - **Evaluate Sysmon Logs:** Check Sysmon logs for related events, such as process creations, image loads, or file creations, that occurred in conjunction with the UAC bypass attempt. This provides broader context and can help trace the attacker's movement through the environment.
  ### Prioritization
  The alert is categorized as high severity due to the potential for significant risk associated with privilege escalation techniques employed by adversaries; successful exploitation could lead to unauthorized access and control over sensitive systems.
  ### Blind Spots and Assumptions
  This rule assumes that the environment is adequately monitored with Windows Sysmon and that logging is properly configured to capture image load events. However, it may not fire in scenarios where legitimate applications or users perform similar actions without malicious intent, which could lead to false positives. Additionally, variations in the path from which the malicious DLL is loaded or the use of alternative methods (e.g., DLL hijacking) may result in the detection evasion of this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
