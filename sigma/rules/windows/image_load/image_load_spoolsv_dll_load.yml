title: Windows Spooler Service Suspicious Binary Load
id: 02fb90de-c321-4e63-a6b9-25f4b03dfd14
status: test
description: Detect DLL Load from Spooler Service backup folder
references:
- https://web.archive.org/web/20210629055600/https://github.com/hhlxf/PrintNightmare/
- https://github.com/ly4k/SpoolFool
author: FPT.EagleEye, Thomas Patzke (improvements)
date: 2021-06-29
modified: 2022-06-02
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574
- cve.2021-1675
- cve.2021-34527
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith: '\spoolsv.exe'
    ImageLoaded|contains:
    - '\Windows\System32\spool\drivers\x64\3\'
    - '\Windows\System32\spool\drivers\x64\4\'
    ImageLoaded|endswith: '.dll'
  condition: selection
falsepositives:
- Loading of legitimate driver
level: informational
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect suspicious activity within the Windows Spooler service, particularly focusing on instances where a DLL file is loaded from backup folders typically associated with spool drivers. The rule monitors the `ImageLoaded` events to check if the loaded images end with '.dll' and originate from specific directories tied to the Spooler service (i.e., `C:\Windows\System32\spool\drivers\x64\3\` and `C:\Windows\System32\spool\drivers\x64\4\`). The rule specifically looks for the process `spoolsv.exe`, which is the Windows Spooler service executable. If it detects unusual DLL loading patterns that suggest potential privilege escalation or evasion techniques, it triggers an alert. This detection falls under the MITRE ATT&CK tactics of Persistence, Defense Evasion, and Privilege Escalation, specifically associated with technique T1574, which addresses the use of DLL side-loading and similar methods.
  ### Investigation Steps
  - **Check EDR Alerts:** Review endpoint detection and response alerts for any anomalies associated with `spoolsv.exe` to gather additional context regarding the processes and users involved during the time of the DLL load.
  - **Analyze Windows Event Logs:** Inspect relevant Windows event logs, particularly the Security logs for process creations and the System logs for any unusual Spooler service behavior to correlate events with the flagged DLL loading.
  - **Investigate File Path:** Validate the legitimacy of the DLLs located in the identified spool driver directories by cross-referencing with known good images or vendor documentation.
  - **Network Analysis:** Evaluate outbound connections made by the Spooler service during the detection timeframe to identify any unusual communication attempts that may indicate compromise.
  ### Prioritization
  The alert generated by this rule is classified as informational; however, it requires timely evaluation due to the potential for this behavior to indicate an attempt to exploit known vulnerabilities or escalate privileges.
  ### Blind Spots and Assumptions
  This detection rule is based on the use of the image loading events within the Spooler service environment. The rule may not fire if legitimate drivers are loaded without any malicious payloads or if attackers employ techniques that do not utilize the monitored directories. Additionally, if an adversary utilizes other persistence methods or conducts their operations outside of the spool driver directories, such as through native system processes or different DLL locations, this rule may fail to detect those actions.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
