title: Potential DLL Sideloading Of DBGHELP.DLL
id: 6414b5cd-b19d-447e-bb5e-9f03940b5784
status: test
description: Detects potential DLL sideloading of "dbghelp.dll"
references:
- https://hijacklibs.net/     # For list of DLLs that could be sideloaded (search for dlls mentioned here in there)
author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
date: 2022-10-25
modified: 2023-05-05
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\dbghelp.dll'
  filter_main_generic:
    ImageLoaded|startswith:
    - 'C:\Program Files (x86)\'
    - 'C:\Program Files\'
    - 'C:\Windows\SoftwareDistribution\'
    - 'C:\Windows\System32\'
    - 'C:\Windows\SystemTemp\'
    - 'C:\Windows\SysWOW64\'
    - 'C:\Windows\WinSxS\'
  filter_optional_anaconda:
    ImageLoaded|endswith:
    - '\Anaconda3\Lib\site-packages\vtrace\platforms\windll\amd64\dbghelp.dll'
    - '\Anaconda3\Lib\site-packages\vtrace\platforms\windll\i386\dbghelp.dll'
  filter_optional_epicgames:
    ImageLoaded|endswith:
    - '\Epic Games\Launcher\Engine\Binaries\ThirdParty\DbgHelp\dbghelp.dll'
    - '\Epic Games\MagicLegends\x86\dbghelp.dll'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Legitimate applications loading their own versions of the DLL mentioned in this
  rule
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential DLL sideloading involving the "dbghelp.dll" file. DLL sideloading is a technique used by attackers to execute malicious code by loading a DLL that is not the expected version, often in a trusted application context. The rule looks for instances where the "dbghelp.dll" is loaded from directories that are not standard for legitimate application paths. Specifically, it checks for the DLL's loading by querying the image load events from Windows systems. The technical data sources used in this detection include Windows Event Logs, specifically focusing on image load events, to monitor where and how DLLs are being utilized. This rule falls under MITRE ATT&CK techniques for defense evasion (T1574.001) and persistence (T1574.002), highlighting the risk associated with the improper loading of libraries, which can enable privilege escalation and other malicious activities.
  ### Investigation Steps
  - **Check EDR Logs**: Investigate the endpoint using EDR tools to view process creation events related to the identified DLL loading to assess the command line and parent processes involved.
  - **Review Security Logs**: Examine Windows Security logs for any unusual authentication attempts or permissions changes that correlate with the time of the DLL load event.
  - **Analyze Network Traffic**: Utilize NDR tools to monitor network activity from the host system to identify any unexpected outbound connections that could indicate malicious behavior.
  - **Cross-Reference with Known Sources**: Compare the loaded DLL path against the database of known legitimate applications and their corresponding libraries to rule out false positives.
  ### Prioritization
  Alerts generated by this rule should be considered medium severity due to the potential for exploitation. While there are legitimate use cases for loading "dbghelp.dll," the presence of this activity in non-standard directories may indicate an adversary attempting to evade detection, warranting further investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the adversary uses legitimate applications or tools that have already been whitelisted in the environment, which could lead to false negatives. Additionally, if DLL sideloading occurs from unexpected or lesser-known directories not included in the rule's conditions, the detection may fail. Engineers should be aware that in highly customized environments or those utilizing specific distributions of applications, legitimate pathways for loading DLLs may also lead to challenges in accurately detecting malicious activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
