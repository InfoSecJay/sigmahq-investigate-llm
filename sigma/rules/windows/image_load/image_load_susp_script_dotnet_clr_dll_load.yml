title: DotNet CLR DLL Loaded By Scripting Applications
id: 4508a70e-97ef-4300-b62b-ff27992990ea
status: test
description: Detects .NET CLR DLLs being loaded by scripting applications such as
  wscript or cscript. This could be an indication of potential suspicious execution.
references:
- https://github.com/tyranid/DotNetToJScript
- https://thewover.github.io/Introducing-Donut/
- https://web.archive.org/web/20230329154538/https://blog.menasec.net/2019/07/interesting-difr-traces-of-net-clr.html
- https://web.archive.org/web/20221026202428/https://gist.github.com/code-scrap/d7f152ffcdb3e0b02f7f394f5187f008
author: omkar72, oscd.community
date: 2020-10-14
modified: 2023-02-23
tags:
- attack.execution
- attack.privilege-escalation
- attack.t1055
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith:
    - '\cmstp.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\msxsl.exe'
    - '\regsvr32.exe'
            # - '\svchost.exe'
    - '\wmic.exe'
    - '\wscript.exe'
    ImageLoaded|endswith:
    - '\clr.dll'
    - '\mscoree.dll'
    - '\mscorlib.dll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify instances where .NET Common Language Runtime (CLR) Dynamic Link Libraries (DLLs) are loaded by scripting applications such as `wscript.exe`, `cscript.exe`, and others. Such behavior can be indicative of potentially suspicious or malicious execution attempts, as these scripting engines are often exploited by attackers to execute arbitrary code, enabling a compromise of the system. The rule leverages image load logs to detect specific combinations of scripting applications initiating the loading of targeted .NET DLLs. This is aligned with the MITRE ATT&CK framework, specifically the tactic of Execution (TA0002) and technique T1055, which covers the use of process injection as a means to execute malicious code.
  ### Investigation Steps
  - **Check Process Execution Context:** Utilize EDR tools to review the execution context of the identified scripts, noting any unusual parent processes or command-line arguments that may indicate uncommon usage patterns.
  - **Analyze Network Activity:** Inspect relevant network logs for any outbound connections initiated by the scripting applications at the time of the alert to check for potential data exfiltration or command-and-control communications.
  - **Review File System Changes:** Use your file integrity monitoring capabilities to identify any recent changes to files and registries that correlate with the timing of the alert, concentrating on paths or files associated with .NET applications.
  - **Collect System Logs:** Gather relevant Windows Event Logs (Security, System, or Application) to correlate with this detection and identify any account activities, especially those associated with privilege escalation or abnormal logon patterns.
  ### Prioritization
  Given the rule's high severity level, it is crucial to treat alerts with urgency and assess potential risks promptly, as the loading of .NET CLR DLLs by scripting applications can signify advanced persistent threat (APT) behavior or malware attempts, demanding immediate investigation.
  ### Blind Spots and Assumptions
  This rule assumes that logging is appropriately enabled and that all relevant scripting applications are monitored in order to detect suspicious activities effectively. There may be instances of benign processes that utilize the same libraries in legitimate ways, which could lead to false positives. Additionally, advanced adversaries might employ obfuscation techniques or use alternative execution methods, potentially evading detection through custom scripts or processes not specified in the rule parameters.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
