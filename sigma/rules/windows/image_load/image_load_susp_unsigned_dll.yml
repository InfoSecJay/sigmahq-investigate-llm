title: Unsigned DLL Loaded by Windows Utility
id: b5de0c9a-6f19-43e0-af4e-55ad01f550af
status: test
description: |
  Detects windows utilities loading an unsigned or untrusted DLL.
  Adversaries often abuse those programs to proxy execution of malicious code.
references:
- https://www.elastic.co/security-labs/Hunting-for-Suspicious-Windows-Libraries-for-Execution-and-Evasion
- https://akhere.hashnode.dev/hunting-unsigned-dlls-using-kql
- https://unit42.paloaltonetworks.com/unsigned-dlls/?web_view=true
author: Swachchhanda Shrawan Poudel
date: 2024-02-28
modified: 2024-03-07
tags:
- attack.t1218.011
- attack.t1218.010
- attack.defense-evasion
logsource:
  product: windows
  category: image_load
detection:
  selection:
    Image|endswith:
            # Note: Add additional utilities that allow the loading of DLLs
    - '\InstallUtil.exe'
    - '\RegAsm.exe'
    - '\RegSvcs.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
  filter_main_signed:
    Signed: 'true'
  filter_main_sig_status:
    SignatureStatus:
    - 'errorChaining'
    - 'errorCode_endpoint'
    - 'errorExpired'
    - 'trusted'
  filter_main_signed_null:
    Signed:
  filter_main_signed_empty:
    Signed:
    - ''
    - '-'
  filter_main_sig_status_null:
    SignatureStatus:
  filter_main_sig_status_empty:
    SignatureStatus:
    - ''
    - '-'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies instances where specific Windows utilities load unsigned or untrusted Dynamic Link Libraries (DLLs). Executables like `InstallUtil.exe`, `RegAsm.exe`, `regsvr32.exe`, and `rundll32.exe` are common targets exploited by threat actors to execute malicious payloads under the guise of legitimate tools. The rule examines logs for DLL loading events and checks the signature status of these DLLs to determine if they are signed, unsigned, or have certain signature verification errors. This helps to distinguish potentially malicious activity from benign operations by verifying the authenticity of the loaded libraries, enabling analysts to detect suspicious behavior indicative of tactics such as DLL sideloading or abuse of legitimate utilities.
  ### Investigation Steps
  - Examine the EDR logs for the process details of the detected utility execution, focusing on the command line arguments and associated DLLs loaded.
  - Cross-reference the DLLs identified in the alert with threat intelligence databases to check for known malicious signatures or associations.
  - Review the AV and endpoint security logs for any related alerts that might indicate if the unsigned DLL has previously been flagged or quarantined.
  - If applicable, check the Proxy and cloud logs to monitor for any unusual outbound connections made by the suspicious utility during the time of the alert for potential data exfiltration.
