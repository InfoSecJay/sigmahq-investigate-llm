title: Microsoft Office DLL Sideload
id: 829a3bdf-34da-4051-9cf4-8ed221a8ae4f
status: test
description: Detects DLL sideloading of DLLs that are part of Microsoft Office from
  non standard location
references:
- https://hijacklibs.net/     # For list of DLLs that could be sideloaded (search for dlls mentioned here in there)
author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
date: 2022-08-17
modified: 2023-03-15
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\outllib.dll'
  filter:
    ImageLoaded|startswith:
    - 'C:\Program Files\Microsoft Office\OFFICE'
    - 'C:\Program Files (x86)\Microsoft Office\OFFICE'
    - 'C:\Program Files\Microsoft Office\Root\OFFICE'
    - 'C:\Program Files (x86)\Microsoft Office\Root\OFFICE'
  condition: selection and not filter
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  The "Microsoft Office DLL Sideload" Sigma rule is designed to detect malicious activity commonly associated with the DLL sideloading technique. Sideloading occurs when a legitimate application loads a dynamic link library (DLL) from a non-standard location instead of the expected installation path. This rule specifically looks for instances where `outllib.dll`, a DLL associated with Microsoft Office, is loaded from an unauthorized directory, indicating potential threat behavior. The rule leverages telemetry data captured from image load events on Windows systems, particularly tracking the paths from which DLLs are loaded. When the path of the loaded `outllib.dll` does not conform to the standard Microsoft Office directories, it raises an alert. This method corresponds to the MITRE ATT&CK techniques T1574.001 (DLL Side-Loading) and T1574.002 (Compromise Software Dependencies and Development Tools) under the tactics of Defense Evasion, Persistence, and Privilege Escalation.
  ### Investigation Steps
  - **Check EDR Alerts:** Review EDR logs for any history of process creation that might be linked to the loading of `outllib.dll` from non-standard directories. Look for any associated executables that may indicate malicious intent.
  - **Analyze Event Logs:** Examine Windows Event Logs (particularly Sysmon's image load events) for timestamps and user account information associated with the suspicious loading of the DLL. Confirm whether the process that loaded the DLL matches any known malicious activity.
  - **Review Network Connections:** Utilize network detection tools to analyze any outgoing connections made by processes involved in the suspicious activity. This could unveil Command and Control (C2) communications that follow DLL sideloading.
  - **Cross-reference with Threat Intelligence:** Consult the threat intelligence database or utilize the provided hyperlinks to assess the legitimacy of the loaded `outllib.dll` and whether its loading is consistent with known DLL hijacking techniques.
  ### Prioritization
  The alert generated by this rule is high severity due to the potential indications of a sophisticated attack leveraging DLL sideloading techniques. An alert here should prompt immediate analysis as this could lead to significant system compromise and security breaches.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious DLL is named differently or is disguised in a manner that avoids detection. Additionally, it assumes that Sysmon is properly configured to log image load events effectively. Therefore, if Sysmon is disabled or improperly configured, this alert will be unable to generate. Adversaries may also attempt to preemptively delete logs or obfuscate their techniques to evade detection, which could further limit this rule's effectiveness.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
