title: HackTool - SharpEvtMute DLL Load
id: 49329257-089d-46e6-af37-4afce4290685
related:
- id: bedfc8ad-d1c7-4e37-a20e-e2b0dbee759c     # Process Creation
  type: similar
status: test
description: Detects the load of EvtMuteHook.dll, a key component of SharpEvtHook,
  a tool that tampers with the Windows event logs
references:
- https://github.com/bats3c/EvtMute
author: Florian Roth (Nextron Systems)
date: 2022-09-07
modified: 2024-11-23
tags:
- attack.defense-evasion
- attack.t1562.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Hashes|contains: 'IMPHASH=330768A4F172E10ACB6287B87289D83B'
  condition: selection
falsepositives:
- Other DLLs with the same Imphash
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "HackTool 
  - SharpEvtMute DLL Load" is designed to detect the loading of the `EvtMuteHook.dll`, which is associated with the `SharpEvtHook` tool. This tool is known for tampering with Windows event logs, thereby evading detection mechanisms. The rule focuses on monitoring the process of DLL loading in Windows environments and particularly looks for the specific import hash (Imphash) of the `EvtMuteHook.dll`. The primary technical data source for this rule involves image load events, which capture details whenever a dynamic link library is loaded into memory, enabling the detection of potential malicious actions conducted by this tool.
  When the rule is triggered, it indicates that an instance of `EvtMuteHook.dll` has been loaded, which is a strong indicator of an attempt to manipulate log activity. This behavior is common among adversaries aiming to hide their tracks. Security operations teams must investigate alerts generated by this rule promptly, as it suggests possible unauthorized access and potential breaches requiring immediate attention.
  ### Investigation Steps
  - Review process creation logs in your EDR to identify any processes that loaded `EvtMuteHook.dll`, noting the parent process and execution context.
  - Analyze the command-line parameters of the associated processes to understand the context in which the DLL was loaded, looking for suspicious or unusual entries.
  - Check Windows event logs for any abnormal logging activity around the time of DLL loading, focusing on events related to log manipulation.
  - Utilize threat intelligence platforms to correlate the Imphash with known malicious activity and determine if the detected behavior aligns with recognized attack indicators.
