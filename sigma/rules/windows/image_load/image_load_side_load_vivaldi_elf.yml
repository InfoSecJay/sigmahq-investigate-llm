title: Potential Vivaldi_elf.DLL Sideloading
id: 2092cacb-d77b-4f98-ab0d-32b32f99a054
status: test
description: Detects potential DLL sideloading of "vivaldi_elf.dll"
references:
- https://research.checkpoint.com/2023/beyond-the-horizon-traveling-the-world-on-camaro-dragons-usb-flash-drives/
author: X__Junior (Nextron Systems)
date: 2023-08-03
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\vivaldi_elf.dll'
  filter_main_legit_path:
    Image|endswith: '\Vivaldi\Application\vivaldi.exe'
    ImageLoaded|contains: '\Vivaldi\Application\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Vivaldi_elf.DLL Sideloading" is designed to detect suspicious loading of the "vivaldi_elf.dll" dynamic link library in the context of the Vivaldi web browser. This rule operates on the premise that a legitimate process, specifically "vivaldi.exe", might be co-opted to load an unauthorized or altered DLL, indicative of a lateral movement or privilege escalation attempt by an adversary. The detection relies specifically on Windows' image load events, identifying when the Vivaldi browser attempts to load the "vivaldi_elf.dll". 
  The log source utilized for this rule is the `image_load` category, capturing instances of loaded images and their corresponding paths. In terms of MITRE ATT&CK framework, this rule connects to the tactics of Defense Evasion (T1574.001) and Privilege Escalation (T1574.002), as it targets mechanisms adversaries might use to manipulate legitimate applications for malicious purposes. By monitoring this dynamic link library activity, the SOC can effectively identify potential sideloading attempts.
  ### Investigation Steps
  - **Verify Process Context**: Review process details in your EDR to confirm the legitimacy of the instance of "vivaldi.exe" that loaded "vivaldi_elf.dll". Identify its parent process and check for any unusual attributes.
  - **Check DLL Integrity**: Utilize tools such as Sysinternals' Sigcheck or a similar utility to inspect the "vivaldi_elf.dll" for digital signatures and compare file hashes against known good values.
  - **Review Network Traffic**: Analyze logs from your NDR to search for any suspicious network connections that may correlate with the timing of the DLL loading event, possibly indicating data exfiltration or command-and-control activity.
  - **Assess User Behavior**: Look at user activity logs within your SIEM to determine if there were any abnormal user actions or processes initiated by users who interacted with the Vivaldi browser around the time of the alert.
  ### Prioritization
  Given the medium severity level of this alert, it is crucial to investigate promptly as legitimate applications being manipulated for malicious purposes can lead to privilege escalation or further compromise of critical systems within the enterprise.
  ### Blind Spots and Assumptions
  Analysts should consider that this rule may not fire if the "vivaldi_elf.dll" is executed outside the context of the Vivaldi browser or if a different, less common execution method is used for loading the DLL. Additionally, potential misconfigurations in logging or absence of relevant event logs may prevent detection. Adversaries may also utilize various obfuscation techniques to disguise their actions, thereby bypassing this detection rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
