title: Amsi.DLL Loaded Via LOLBIN Process
id: 6ec86d9e-912e-4726-91a2-209359b999b9
status: test
description: Detects loading of "Amsi.dll" by a living of the land process. This could
  be an indication of a "PowerShell without PowerShell" attack
references:
- Internal Research
- https://www.paloaltonetworks.com/blog/security-operations/stopping-powershell-without-powershell/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-06-01
modified: 2023-09-20
tags:
- attack.defense-evasion
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\amsi.dll'
    Image|endswith:
            # TODO: Add more interesting processes
    - '\ExtExport.exe'
    - '\odbcconf.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Amsi.DLL Loaded Via LOLBIN Process" is designed to identify instances where the `amsi.dll` library is loaded through "Living Off The Land Binaries" (LOLBIN). This detection is particularly important because it can indicate a potential "PowerShell without PowerShell" attack, where malicious actors leverage built-in Windows tools to execute code and evade detection. The primary data sources involved include image load events captured from Windows, specifically targeting the execution of certain benign processes (such as `ExtExport.exe`, `odbcconf.exe`, `regsvr32.exe`, and `rundll32.exe`) that are commonly exploited by attackers to manipulate legitimate system functionalities. By focusing on the loading of `amsi.dll`, this detection rule aligns with the MITRE ATT&CK technique for defense evasion, specifically under the tactic of evading defenses.
  ### Investigation Steps
  - **Review Process Activity:** Investigate the processes that triggered the alert by analyzing EDR logs and corroborating their command-line parameters to identify any malicious intent.
  - **Analyze Event Logs:** Check Windows Event Logs (specifically Application and Security) for any suspicious activities or alerts surrounding the time the `amsi.dll` was loaded.
  - **Correlate with Network Traffic:** Utilize network monitoring tools to analyze outbound connections from the identified LOLBIN processes to detect any unusual or unexpected communication.
  - **Monitor for Follow-up Activity:** Look for subsequent activities that may indicate further exploitation, such as additional process creations or network connections originating from the initial processes.
  ### Prioritization
  This alert is classified as medium severity as the loading of `amsi.dll` via LOLBIN processes may indicate potential malfeasance but does not confirm a compromise; further context is always required to assess the actual threat level.
  ### Blind Spots and Assumptions
  This detection relies on the visibility of image load events for specified binaries, and it may miss instances where `amsi.dll` is manipulated through processes not accounted for in the detection logic. Additionally, adversaries may exploit other methods or tools to accomplish similar objectives without alerting this rule, such as using custom binaries or misusing other legitimate Windows functionalities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
