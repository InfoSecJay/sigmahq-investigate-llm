title: Potential 7za.DLL Sideloading
id: 4f6edb78-5c21-42ab-a558-fd2a6fc1fd57
status: test
description: Detects potential DLL sideloading of "7za.dll"
references:
- https://www.gov.pl/attachment/ee91f24d-3e67-436d-aa50-7fa56acf789d
author: X__Junior
date: 2023-06-09
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\7za.dll'
  filter_main_legit_path:
    Image|startswith:
    - 'C:\Program Files (x86)\'
    - 'C:\Program Files\'
    ImageLoaded|startswith:
    - 'C:\Program Files (x86)\'
    - 'C:\Program Files\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Legitimate third party application located in "AppData" may leverage this DLL to
  offer 7z compression functionality and may generate false positives. Apply additional
  filters as needed.
level: low
notes: |
  ### Technical Context
  This detection rule is designed to identify potential DLL sideloading of "7za.dll" on Windows systems. DLL sideloading is a technique where an attacker places a malicious DLL file in a location where a legitimate application is expected to load it, thus executing the malicious code. The rule operates by monitoring images loaded into the system, specifically looking for instances where "7za.dll" is loaded in paths inconsistent with legitimate installation directories. The primary technical data sources involved in this rule are Windows Sysmon image load events, which log details about the dynamic link libraries being loaded by processes. By checking that the DLL is loaded from a non-standard path, the rule helps identify potential malicious activities consistent with the MITRE ATT&CK techniques T1574.001 (DLL Sideloading) and T1574.002 (Code Signing Evasion).
  ### Investigation Steps
  - **Review EDR Alerts:** Cross-reference the instances of "7za.dll" loading flagged by this rule with EDR alerts to determine if any suspicious behavior is associated with the loading process.
  - **Check Process Paths:** Analyze the process tree to determine the full execution path of the loading application, ensuring it aligns with legitimate locations like "C:\Program Files" or "C:\Program Files (x86)".
  - **Examine Sysmon Logs:** Investigate Sysmon logs to verify prior process creation and any command-line arguments that may provide context regarding the processes that invoked the DLL loading.
  - **Consult Application Logs:** If applicable, review application logs for any legitimate software that may use the "7za.dll" to justify its presence or establish the legitimacy of the loading process.
  ### Prioritization
  The severity level of this alert is categorized as low due to the potential for legitimate applications to use "7za.dll" for compression functionalities. However, the occurrence of this alert warrants investigation because it can also signify evasion techniques employed by adversaries.
  ### Blind Spots and Assumptions
  This rule may not fire if the "7za.dll" is loaded from recognized legitimate directories or if the DLL is used by trusted applications inappropriately hosted outside of standard paths. Additionally, it assumes that attackers have not modified their techniques to evade detection by employing various code signing mechanisms or obfuscation techniques. Furthermore, false positives may arise from trusted third-party applications utilizing the DLL within user profile directories such as "AppData".
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
