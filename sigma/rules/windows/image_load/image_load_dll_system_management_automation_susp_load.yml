title: PowerShell Core DLL Loaded By Non PowerShell Process
id: 092bc4b9-3d1d-43b4-a6b4-8c8acd83522f
related:
- id: 867613fb-fa60-4497-a017-a82df74a172c
  type: obsolete
- id: fe6e002f-f244-4278-9263-20e4b593827f
  type: obsolete
status: test
description: |
  Detects loading of essential DLLs used by PowerShell by non-PowerShell process.
  Detects behavior similar to meterpreter's "load powershell" extension.
references:
- https://adsecurity.org/?p=2921
- https://github.com/p3nt4/PowerShdll
author: Tom Kern, oscd.community, Natalia Shornikova, Tim Shelton, Roberto Rodriguez
  (Cyb3rWard0g), OTR (Open Threat Research)
date: 2019-11-14
modified: 2024-01-17
tags:
- attack.t1059.001
- attack.execution
logsource:
  category: image_load
  product: windows
detection:
  selection:
  - Description: 'System.Management.Automation'
  - OriginalFileName: 'System.Management.Automation.dll'
  - ImageLoaded|endswith:
    - '\System.Management.Automation.dll'
    - '\System.Management.Automation.ni.dll'
  filter_main_generic:
    Image|endswith:
    - ':\Program Files\PowerShell\7\pwsh.exe'         # PowerShell 7
    - ':\Windows\System32\dsac.exe'
    - ':\WINDOWS\System32\RemoteFXvGPUDisablement.exe'
    - ':\Windows\System32\runscripthelper.exe'
    - ':\WINDOWS\System32\sdiagnhost.exe'
    - ':\Windows\System32\ServerManager.exe'
    - ':\Windows\System32\SyncAppvPublishingServer.exe'
    - ':\Windows\System32\WindowsPowerShell\v1.0\powershell_ise.exe'
    - ':\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
    - ':\Windows\System32\winrshost.exe'
    - ':\Windows\System32\wsmprovhost.exe'
    - ':\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell_ise.exe'
    - ':\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe'
    - ':\Windows\SysWOW64\winrshost.exe'
    - ':\Windows\SysWOW64\wsmprovhost.exe'
  filter_main_dotnet:
    Image|contains:
    - ':\Windows\Microsoft.NET\Framework\'
    - ':\Windows\Microsoft.NET\Framework64\'
    Image|endswith: '\mscorsvw.exe'
  filter_optional_sql_server_mgmt:
    Image|contains:
    - ':\Program Files (x86)\Microsoft SQL Server Management Studio'
    - ':\Program Files\Microsoft SQL Server Management Studio'
    Image|endswith: '\IDE\Ssms.exe'
  filter_optional_sql_server_tools:
    Image|contains:
    - ':\Program Files (x86)\Microsoft SQL Server\'
    - ':\Program Files\Microsoft SQL Server\'
    Image|endswith: '\Tools\Binn\SQLPS.exe'
  filter_optional_citrix:
    Image|endswith: '\Citrix\ConfigSync\ConfigSyncRun.exe'
  filter_optional_vs:
    Image|contains:
    - ':\Program Files (x86)\Microsoft Visual Studio\'
    - ':\Program Files\Microsoft Visual Studio\'
  filter_optional_chocolatey:
    Image|contains: ':\ProgramData\chocolatey\choco.exe'
  filter_optional_nextron:
    Image|contains: ':\Windows\Temp\asgard2-agent\'
    Image|endswith:
    - '\thor64.exe'
    - '\thor.exe'
        # User: 'NT AUTHORITY\SYSTEM'   # if set, matches all powershell processes not launched by SYSTEM
  filter_optional_aurora:
        # This filter is to avoid a race condition FP with this specific ETW provider in aurora
    Image:
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Used by some .NET binaries, minimal on user workstation.
- Used by Microsoft SQL Server Management Studio
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect when the PowerShell DLL (`System.Management.Automation.dll`) is loaded by a non-PowerShell process. Under normal circumstances, this DLL is typically accessed by legitimate PowerShell executions, but threat actors may leverage it inappropriately by loading it into other processes to execute malicious commands or evade detection. The rule operates by monitoring image load events and looking specifically for instances where the target DLL is loaded outside of designated PowerShell executable paths. The detection utilizes Windows Event Logs, particularly focusing on image load events that indicate which DLLs are accessed by running processes. This behavior is relevant to the MITRE ATT&CK technique **T1059.001 (Command and Scripting Interpreter: PowerShell)**, which encompasses various methods adversaries may use to execute scripts and gain control over systems.
  ### Investigation Steps
  - **Check EDR Alerts**: Review EDR logs for the process that triggered the alert, focusing on its execution path, parent process, and any related network connections or file events.
  - **Analyze Process Tree**: Using process monitoring tools, reconstruct the process tree to identify how the suspicious process was initiated and whether it shows signs of malicious activity.
  - **Review Sysmon Logs**: Correlate Sysmon logs that detail DLL loading events with the detected alert; specifically, note any unusual or unexpected parent processes attempting to load the PowerShell DLL.
  - **Consult Network Logs**: Access network logs to check for any anomalous outbound connections or command-and-control (C2) communication patterns from the process in question.
  ### Prioritization
  This alert has a medium severity level due to the potential for misuse of trusted system components like PowerShell, which could indicate a more extensive compromise or lateral movement within the network. Immediate investigation is recommended, particularly in environments where PowerShell is strictly controlled.
  ### Blind Spots and Assumptions
  The rule may not fire if the DLL is loaded in a legitimate context, as seen with Microsoft's SQL Server Management Studio or specific .NET applications. Additionally, if an adversary modifies the executable paths or employs advanced techniques to mask their activity, they may evade detection. It is assumed that environments are adequately logging and monitoring PowerShell activity, which might not hold true in all situations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
