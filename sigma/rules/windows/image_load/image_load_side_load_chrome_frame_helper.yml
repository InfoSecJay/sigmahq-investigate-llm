title: Potential Chrome Frame Helper DLL Sideloading
id: 72ca7c75-bf85-45cd-aca7-255d360e423c
status: test
description: Detects potential DLL sideloading of "chrome_frame_helper.dll"
references:
- https://hijacklibs.net/entries/3rd_party/google/chrome_frame_helper.html
author: Nasreddine Bencherchali (Nextron Systems), Wietze Beukema (project and research)
date: 2022-08-17
modified: 2023-05-15
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\chrome_frame_helper.dll'
  filter_main_path:
    ImageLoaded|startswith:
    - 'C:\Program Files\Google\Chrome\Application\'
    - 'C:\Program Files (x86)\Google\Chrome\Application\'
  filter_optional_user_path:
    ImageLoaded|contains: '\AppData\local\Google\Chrome\Application\'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify potential DLL sideloading of the "chrome_frame_helper.dll" file by monitoring image load events in a Windows environment. DLL sideloading is a technique that attackers use to execute malicious code by tricking applications into loading a maliciously crafted DLL. The rule inspects the `ImageLoaded` event sourced from Windows Process telemetry, specifically targeting instances where `chrome_frame_helper.dll` is loaded. It emphasizes that a legitimate load should come from expected application directories like `C:\Program Files\Google\Chrome\Application\` or `C:\Program Files (x86)\Google\Chrome\Application\` and should not originate from unconventional paths such as user profile directories (e.g., `\AppData\local\`). This correlates with the MITRE ATT&CK techniques T1574.001 and T1574.002, which concern "DLL Search Order Hijacking" and "Sideloading," respectively.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation events around the time the `chrome_frame_helper.dll` was loaded to determine if any suspicious processes were initiated in tandem.
  - **Analyze EDR Events:** Use your EDR tool to examine the timeline of process activities, focusing on any unusual applications or parent-child process relationships that might indicate malicious behavior.
  - **Review Windows Event Logs:** Search for any relevant records in the Windows Security and System logs that may indicate the execution of unexpected scripts or other malicious activities accompanying the DLL load.
  - **Inspect Network Connections:** Utilize network detection tools (NDR) to check for outbound connections initiated by the processes involved in this alert, particularly those reaching out to known malicious domains or IPs.
  ### Prioritization
  The alert is categorized with a medium severity level due to the potential for privilege escalation and persistence tactics employed by attackers. While the threat should not be ignored, it warrants further investigation rather than immediate escalation due to its specific targeting of a known DLL.
  ### Blind Spots and Assumptions
  This rule may not trigger in instances where the `chrome_frame_helper.dll` is loaded as expected from legitimate paths. Additionally, if an attacker can successfully replace the DLL in a standard application directory or employ other evasion techniques, the rule may fail to detect malicious activity. It is assumed that logs are configured correctly and that there is consistent monitoring of image load activities across all endpoints. Adversaries might exploit legitimate applications to load payloads without triggering this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
