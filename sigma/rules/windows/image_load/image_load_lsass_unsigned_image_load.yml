title: Unsigned Image Loaded Into LSASS Process
id: 857c8db3-c89b-42fb-882b-f681c7cf4da2
status: test
description: Loading unsigned image (DLL, EXE) into LSASS process
references:
- https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment
author: Teymur Kheirkhabarov, oscd.community
date: 2019-10-22
modified: 2021-11-27
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith: '\lsass.exe'
    Signed: 'false'
  condition: selection
falsepositives:
- Valid user connecting using RDP
level: medium
notes: |
  ### Technical Context
  This detection rule identifies instances where an unsigned image, such as a DLL or EXE file, is loaded into the LSASS (Local Security Authority Subsystem Service) process. LSASS is a critical Windows process responsible for enforcing security policies, handling credential validation, and managing authentication. Loading unsigned images into LSASS can be indicative of malicious activities, such as credential dumping or the execution of a payload intended to exploit security weaknesses. This rule primarily utilizes the image load telemetry from Windows, focusing on the `Image` field to detect any instances where the LSASS process (`lsass.exe`) loads an unsigned DLL or executable. The rule aligns with the MITRE ATT&CK technique T1003.001 (Credential Dumping: LSASS Memory), which highlights the potential threat posed by adversaries attempting to steal credentials using this method.
  ### Investigation Steps
  - **Check EDR Alerts**: Review any alerts generated by EDR related to the LSASS process during the timeframe of the detected event, focusing on associated processes and their activity.
    
  - **Examine Process Creation Logs**: Investigate Windows Event Logs for any suspicious process creation events related to `lsass.exe`, which may shed light on the origin of the unsigned image and additional processes involved.
  - **Review Image Load Events**: Utilize Sysmon logs to filter for `event ID 10` (Image Load) and correlate with the time of the alert to identify the specific unsigned image loaded into LSASS.
  - **Analyze Network Connections**: If applicable, check network logs for unusual outbound connections that coincide with the loading of the unsigned image, as these may indicate further malicious behavior or data exfiltration attempts.
  ### Prioritization
  Given the critical role of LSASS in managing security credentials, the alert holds a medium severity level due to the potential for significant credential compromise, which could facilitate further unauthorized access throughout the enterprise environment.
  ### Blind Spots and Assumptions
  This rule may not fire if the attacker uses a signed image or manipulates the process in a way that evades detection. Additionally, environments that heavily rely on RDP sessions might generate false positives due to valid user behaviors. Understanding that certain administrative tasks may require unsigned images to be loaded into LSASS can also aid in differentiating between legitimate actions and potential malicious activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
