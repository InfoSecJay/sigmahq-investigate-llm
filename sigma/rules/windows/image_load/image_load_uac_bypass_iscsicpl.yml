title: UAC Bypass Using Iscsicpl - ImageLoad
id: 9ed5959a-c43c-4c59-84e3-d28628429456
status: test
description: Detects the "iscsicpl.exe" UAC bypass technique that leverages a DLL
  Search Order hijacking technique to load a custom DLL's from temp or a any user
  controlled location in the users %PATH%
references:
- https://github.com/hackerhouse-opensource/iscsicpl_bypassUAC
- https://twitter.com/wdormann/status/1547583317410607110
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-17
modified: 2022-07-25
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  product: windows
  category: image_load
detection:
  selection:
    Image: C:\Windows\SysWOW64\iscsicpl.exe
    ImageLoaded|endswith: '\iscsiexe.dll'
  filter:
    ImageLoaded|contains|all:
    - 'C:\Windows\'
    - 'iscsiexe.dll'
  condition: selection and not filter
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects a UAC (User Account Control) bypass technique that employs "iscsicpl.exe," which is part of the Windows iSCSI Control Panel. The method exploits DLL search order hijacking to load a malicious DLL (specifically `iscsiexe.dll`) from a user-controlled location, such as temporary files. The primary data sources monitored for this detection include image load events, which log when executables or DLLs are loaded into memory. The rule checks for specific characteristics, where `iscsicpl.exe` is loaded but not from a legitimate Windows directory. By correlating these events, security teams can identify and respond to potential privilege escalation attacks leveraging this technique. This detection aligns with the MITRE ATT&CK framework under the tactics of Defense Evasion (T1548.002) and Privilege Escalation.
  ### Investigation Steps
  - **Analyze Event Logs**: Review Windows Sysmon logs for `image_load` events that include `iscsicpl.exe` and `iscsiexe.dll` to confirm the presence of the attack vector indicated by the alert.
  - **Check Process Tree**: Utilize EDR tools to inspect the process tree associated with `iscsicpl.exe` to determine if it was spawned by a legitimate process or resulted from suspicious activity.
  - **Review DLL Path**: Investigate the filesystem for `iscsiexe.dll`, checking its path and origin to verify if it was loaded from a trusted source or if it was introduced from a temporary, user-controlled directory.
  - **Cross-Referencing**: Utilize threat intelligence platforms to correlate findings with known bad indicators related to UAC bypass techniques and malicious DLLs.
  ### Prioritization
  Due to the severity of potential privilege escalation associated with UAC bypass methods, alerts generated from this rule are classified as high. This is critical in an enterprise environment, as it indicates a real possibility of an attacker gaining elevated privileges, which could lead to significant data breaches or system compromises.
  ### Blind Spots and Assumptions
  This rule relies on the loading of `iscsiexe.dll` from a non-standard location; thus, if an attacker uses a different file name or legitimate executable to perform the same technique, the rule may not trigger. Additionally, it assumes that Sysmon is implemented correctly and that logs are retained for sufficient durations. The detection might not fire in environments where Sysmon configuration excludes certain event types or where administrative controls prevent unauthorized access to the necessary directories.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
