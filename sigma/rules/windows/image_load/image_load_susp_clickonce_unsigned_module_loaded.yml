title: Unsigned Module Loaded by ClickOnce Application
id: 060d5ad4-3153-47bb-8382-43e5e29eda92
status: test
description: Detects unsigned module load by ClickOnce application.
references:
- https://posts.specterops.io/less-smartscreen-more-caffeine-ab-using-clickonce-for-trusted-code-execution-1446ea8051c5
author: '@SerkinValery'
date: 2023-06-08
tags:
- attack.persistence
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection_path:
    Image|contains: '\AppData\Local\Apps\2.0\'
  selection_sig_status:
  - Signed: 'false'
  - SignatureStatus: 'Expired'
  condition: all of selection_*
falsepositives:
- Unlikely
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the loading of unsigned modules by ClickOnce applications on Windows systems. ClickOnce is a deployment technology used to install and run applications from a web browser, and it is often exploited by adversaries to execute untrusted or malicious code under the guise of legitimate applications. The rule specifically examines the image load events reported by Windows, focusing on modules located in the `\AppData\Local\Apps\2.0\` directory, which is typically where ClickOnce applications reside. The detection logic is set to trigger alerts when it identifies that a module is either unsigned or has an expired signature, both of which indicate a higher risk of executing potentially malicious code. This aligns with the MITRE ATT&CK tactic of persistence (T1574.002), where threat actors use legitimate software mechanisms to maintain access to a target system.
  ### Investigation Steps
  - **Review Windows Event Logs:** Search for image load events in Sysmon logs or Windows Event Logs to identify the specific ClickOnce application and the associated unsigned modules that triggered the alert.
  - **Correlate with Process Creation Logs:** Validate the context of the ClickOnce application by reviewing process creation logs, examining the command-line arguments for anomalies or indicative signs of compromise.
  - **Analyze Network Connections:** Utilize network detection tools to check for any outbound connections made by the ClickOnce application during its execution, which may provide insights into potential data exfiltration or communication with Command and Control (C2) servers.
  - **Inspect Application Behavior:** Use EDR tools to monitor the behavior of the ClickOnce application post-execution, assessing for any suspicious file modifications, registry changes, or lateral movement.
  ### Prioritization
  This alert is considered medium severity as the presence of unsigned or expired signature modules executed through a ClickOnce application can indicate a risk of malicious activity. Immediate investigation is warranted to assess potential compromise and ensure that appropriate containment measures are taken.
  ### Blind Spots and Assumptions
  The rule assumes that all ClickOnce applications are evaluated based on their signature status, which may not capture cases where trusted applications are misused. Additionally, there may be environments where legitimate unsigned module use is common; thus, the alert could lead to false positives. Adversaries may also employ evasion techniques to bypass detection, such as using fully signed legitimate applications or modifying their execution environment to prevent signature checks from triggering alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
