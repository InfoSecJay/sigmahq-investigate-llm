title: Microsoft VBA For Outlook Addin Loaded Via Outlook
id: 9a0b8719-cd3c-4f0a-90de-765a4cb3f5ed
status: test
description: Detects outlvba (Microsoft VBA for Outlook Addin) DLL being loaded by
  the outlook process
references:
- https://speakerdeck.com/heirhabarov/hunting-for-persistence-via-microsoft-exchange-server-or-outlook?slide=58
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-02-08
modified: 2024-03-12
tags:
- attack.execution
- attack.t1204.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    Image|endswith: '\outlook.exe'
    ImageLoaded|endswith: '\outlvba.dll'
  condition: selection
falsepositives:
- Legitimate macro usage. Add the appropriate filter according to your environment
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the loading of the `outlvba.dll` file, which is associated with Microsoft VBA (Visual Basic for Applications) for Outlook. This behavior is relevant for identifying potential malicious activity, particularly in the context of macro-based malware exploits. The detection relies on the `image_load` log source, specifically focusing on events where the Outlook process (`outlook.exe`) loads the `outlvba.dll`. By monitoring the image load events, this rule aims to catch unauthorized or suspicious usage of VBA add-ins, which can be exploited for executing malicious scripts or maintaining persistence within an environment. This aligns with the MITRE ATT&CK technique T1204.002 (Malicious File Execution), which encompasses macro usage as a vector for delivering malware.
  ### Investigation Steps
  - **Verify the Source of the Alert:** Check the event details in your EDR tool to confirm the timing and associated processes for the `outlvba.dll` loading event. Look for related activities that may indicate whether this was part of a legitimate macro functionality.
    
  - **Review Recent Macros:** Examine recent Outlook macro activity through the Outlook application logs or relevant Exchange server logs to determine if the macros were user-generated and business-related.
  - **Assess User Behavioral Context:** Analyze the user context related to the alert, including their recent activities and file accesses. This can help in determining whether the VBS macros were likely used as part of normal business operations.
  - **Utilize Network Logs:** Correlate this event with network activity logs, particularly looking at DNS queries or outbound network connections. This helps uncover further potential malicious communication patterns associated with the macro execution.
  ### Prioritization
  The medium severity level is assigned to this alert due to the potential risk associated with VBA macros being exploited for malicious purposes, despite the common usage of macros in legitimate business processes.
  ### Blind spots and Assumptions
  One key assumption of this rule is that not all legitimate uses of macros will appropriately filter out in the detection criteria, potentially leading to false positives. Additionally, if the adversary utilizes different methods to load malicious code without involving the `outlvba.dll` (such as through other legitimate processes or different injection techniques), this rule may not trigger. It is also possible that varying environments may have different installations of Outlook that do not utilize the `outlvba.dll`, hence the rule won't fire in those cases.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
