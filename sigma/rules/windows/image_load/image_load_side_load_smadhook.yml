title: Potential SmadHook.DLL Sideloading
id: 24b6cf51-6122-469e-861a-22974e9c1e5b
status: test
description: Detects potential DLL sideloading of "SmadHook.dll", a DLL used by SmadAV
  antivirus
references:
- https://research.checkpoint.com/2023/malware-spotlight-camaro-dragons-tinynote-backdoor/
- https://www.qurium.org/alerts/targeted-malware-against-crph/
author: X__Junior (Nextron Systems)
date: 2023-06-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith:
    - '\SmadHook32c.dll'
    - '\SmadHook64c.dll'
  filter_main_legit_path:
    Image:
    - 'C:\Program Files (x86)\SMADAV\SmadavProtect32.exe'
    - 'C:\Program Files (x86)\SMADAV\SmadavProtect64.exe'
    - 'C:\Program Files\SMADAV\SmadavProtect32.exe'
    - 'C:\Program Files\SMADAV\SmadavProtect64.exe'
    ImageLoaded|startswith:
    - 'C:\Program Files (x86)\SMADAV\'
    - 'C:\Program Files\SMADAV\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule detects the potential side-loading of the "SmadHook.DLL" file, which is associated with the SmadAV antivirus software. DLL side-loading is a method by which malicious DLL files can be executed by masquerading as legitimate files, enabling the delivery of malware into the environment. This rule specifically monitors image loading events in Windows systems, focusing on the loading of the two versions of the SmadHook DLL (`SmadHook32.dll` and `SmadHook64.dll`). The detection mechanism looks for instances where these DLLs are loaded by specific executable paths related to SmadAV, ensuring that alerts are generated only for loadings that divert from expected behavior. This relates to the MITRE ATT&CK techniques T1574.001 (DLL Side-Loading) and T1574.002 (Sideloading Applications).
  ### Investigation Steps
  - **Verify DLL Integrity:** Use EDR tools to check the hash values of `SmadHook32.dll` and `SmadHook64.dll` against known good values to determine if they have been tampered with.
  - **Review Process Execution:** Investigate the process creation logs to identify which process attempted to load the SmadHook DLLs and verify if it aligns with legitimate application behavior.
  - **Examine Network Connections:** Utilize network detection tools to assess whether the related executable (SmadavProtect) established any unauthorized outbound connections that may suggest a compromise.
  - **Analyze Associated Events:** Correlate Sysmon logs for any suspicious activities like process injection or abnormal parent-child process relationships that can indicate lateral movement or privilege escalation.
  ### Prioritization
  The severity level is considered high due to the potential for unauthorized privilege escalation and evasion of defenses, representing a significant risk to the enterprise's security posture.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious actors rename the DLL or use different methods to load the SmadHook DLLs outside the monitored paths. Additionally, the efficacy of this detection is predicated on the presence of the legitimate SmadAV application in the environment, thereby assuming its installation and correct configuration. If the adversary employs similar techniques using other DLLs or legitimate-looking processes, the detection may fail.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
