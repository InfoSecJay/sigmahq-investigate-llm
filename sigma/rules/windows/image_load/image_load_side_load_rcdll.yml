title: Potential Rcdll.DLL Sideloading
id: 6e78b74f-c762-4800-82ad-f66787f10c8a
status: test
description: Detects potential DLL sideloading of rcdll.dll
references:
- https://www.trendmicro.com/en_us/research/23/c/iron-tiger-sysupdate-adds-linux-targeting.html
author: X__Junior (Nextron Systems)
date: 2023-03-13
modified: 2023-03-15
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded|endswith: '\rcdll.dll'
  filter:
    ImageLoaded|startswith:
    - 'C:\Program Files (x86)\Microsoft Visual Studio\'
    - 'C:\Program Files (x86)\Windows Kits\'
  condition: selection and not filter
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Rcdll.DLL Sideloading" is designed to detect instances where the `rcdll.dll` file is loaded from unexpected locations, indicating potential DLL sideloading, which is a common technique used by adversaries for defense evasion and privilege escalation (MITRE ATT&CK techniques T1574.001 and T1574.002). This behavior is identified through the monitoring of image load events in Windows, particularly those involving `rcdll.dll`, where the loading source is not one of the expected directories associated with Microsoft Visual Studio or Windows Kits. By examining the `ImageLoaded` parameter, the rule can highlight potentially malicious activities when this DLL is loaded from arbitrary or untrusted paths.
  The primary data sources leveraged in this rule include Windows Security and Sysmon event logs to capture the loading of DLLs. Specifically, this rule looks for the `ImageLoaded` event that signifies where the DLL was loaded from, ensuring that any loads outside of the specified directories are flagged for further investigation. By doing this, the rule provides valuable detection capabilities for possible threat actor activities attempting to misuse trusted libraries to execute malicious code.
  ### Investigation Steps
  - **Check Process Details:** Investigate the process details of the detected alert using the EDR to understand which process loaded `rcdll.dll`, noting its parent process and command-line arguments for contextual evaluation.
  - **Examine Source Path:** Review the source path of `rcdll.dll` identified in the alert. Cross-check the legitimacy of the path against expected software installations to ascertain whether the loading of the DLL is suspicious.
  - **Investigate Related Network Activity:** Utilize network traffic logs to assess if any anomalous connections or data exfiltration activities occurred concurrently with the DLL loading event, which might indicate further malicious intent.
  - **Review Historical Data:** Analyze historical event logs for any previous occurrences of `rcdll.dll` being loaded, particularly focusing on patterns or trends that could signal persistent adversarial behavior, utilizing Sysmon logs for deeper insights.
  ### Prioritization
  This alert is categorized as high severity due to the inherent risks associated with DLL sideloading, which can facilitate unauthorized code execution and privilege escalation. The loading of `rcdll.dll` from unverified locations may indicate an ongoing compromise that requires immediate investigation to mitigate potential threats.
  ### Blind Spots and Assumptions
  This rule operates under the assumption that `rcdll.dll` will be loaded from known, legitimate directories. If an adversary employs more sophisticated techniques to mimic legitimate loading behaviors, or if they manage to execute the DLL from accepted paths, this detection may fail. Additionally, if the environment lacks comprehensive Sysmon implementation, visibility into DLL loading activities may be insufficient, limiting the effectiveness of this rule. There is also an assumption that there are no benign applications using `rcdll.dll` in unauthorized paths, which could lead to false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
