title: Potential Azure Browser SSO Abuse
id: 50f852e6-af22-4c78-9ede-42ef36aa3453
status: test
description: |
  Detects abusing Azure Browser SSO by requesting OAuth 2.0 refresh tokens for an Azure-AD-authenticated Windows user (i.e. the machine is joined to Azure AD and a user logs in with their Azure AD account) wanting to perform SSO authentication in the browser.
  An attacker can use this to authenticate to Azure AD in a browser as that user.
references:
- https://posts.specterops.io/requesting-azure-ad-request-tokens-on-azure-ad-joined-machines-for-browser-sso-2b0409caad30
author: Den Iuzvyk
date: 2020-07-15
modified: 2023-04-18
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.002
logsource:
  category: image_load
  product: windows
detection:
  selection:
    ImageLoaded: 'C:\Windows\System32\MicrosoftAccountTokenProvider.dll'
  filter_main_bgtaskhost:
    Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
    Image|endswith: '\BackgroundTaskHost.exe'
        # CommandLine|contains: '-ServerNameBackgroundTaskHost.WebAccountProvider'
  filter_optional_devenv:
    Image|startswith:
    - 'C:\Program Files\Microsoft Visual Studio\'
    - 'C:\Program Files (x86)\Microsoft Visual Studio\'
    Image|endswith: '\IDE\devenv.exe'
  filter_optional_ie:
    Image:
    - 'C:\Program Files (x86)\Internet Explorer\iexplore.exe'
    - 'C:\Program Files\Internet Explorer\iexplore.exe'
  filter_optional_edge_1:
  - Image|startswith: 'C:\Program Files (x86)\Microsoft\EdgeWebView\Application\'
  - Image|endswith: '\WindowsApps\MicrosoftEdge.exe'
  - Image:
    - 'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe'
    - 'C:\Program Files\Microsoft\Edge\Application\msedge.exe'
  filter_optional_edge_2:
    Image|startswith:
    - 'C:\Program Files (x86)\Microsoft\EdgeCore\'
    - 'C:\Program Files\Microsoft\EdgeCore\'
    Image|endswith:
    - '\msedge.exe'
    - '\msedgewebview2.exe'
  filter_optional_onedrive:
    Image|endswith: '\AppData\Local\Microsoft\OneDrive\OneDrive.exe'
  filter_optional_null:
    Image:
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- False positives are expected since this rules is only looking for the DLL load event.
  This rule is better used in correlation with related activity
level: low
notes: |
  n
  ### Technical Context
  The "Potential Azure Browser SSO Abuse" detection rule is designed to identify potentially malicious behavior involving the exploitation of Azure Single Sign-On (SSO) by unauthorized requests for OAuth 2.0 refresh tokens on systems that are Azure AD-joined. When a legitimate Windows user logs in with their Azure AD account, an attacker can leverage the `MicrosoftAccountTokenProvider.dll` loaded by the system to gain unauthorized access to Azure AD in a browser context. This rule analyzes the Windows image load events, particularly watching for particular DLLs that may indicate an exploit being initiated through the `BackgroundTaskHost.exe` or legitimate applications like Internet Explorer and Microsoft Edge. The rule uses insights from MITRE ATT&CK, specifically under the tactics of Defense Evasion and Privilege Escalation (Tech ID: T1574.002), emphasizing the need for vigilance in environments utilizing Azure for identity management.
  ### Investigation Steps
  - **Review EDR Logs**: Look for process creation events related to `BackgroundTaskHost.exe` alongside the DLL load event for `MicrosoftAccountTokenProvider.dll` to confirm if the loading aligns with normal user activity.
  - **Check Command Line Arguments**: Investigate command line parameters of `BackgroundTaskHost.exe` to verify if unusual arguments indicate an attack vector specifically associated with SSO requests.
  - **Analyze Browser Activity**: Use Proxy or EDR tools to track any unusual OAuth requests made from browser sessions that correspond with the times of detected DLL loading.
  - **Cross-Reference with User Behavior**: Query User Behavior Analytics (UBA) logs to assess any discrepancies in user access patterns during the time period in question, correlating any matched activity with potential malicious intent.
  ### Prioritization
  Alerts from this rule should be considered high priority due to the potential for unauthorized access to sensitive Azure services which could exploit user identities or sensitive data.
  ### Blind Spots and Assumptions
  This rule may not fire if the attacker uses alternative DLLs or methods for loading the `MicrosoftAccountTokenProvider.dll` that do not stem from monitored processes or exploit paths. Additionally, false negatives can occur if legitimate background tasks or updates take place in normal operating hours, leading to benign activity being mistaken for abusive behavior. It is assumed that all environments have consistent configurations that comply with Azure AD practices, which may not be true in every case.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
