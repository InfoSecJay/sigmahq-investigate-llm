title: Microsoft Defender Blocked from Loading Unsigned DLL
id: 0b0ea3cc-99c8-4730-9c53-45deee2a4c86
status: test
description: Detects Code Integrity (CI) engine blocking Microsoft Defender's processes
  (MpCmdRun and NisSrv) from loading unsigned DLLs which may be an attempt to sideload
  arbitrary DLL
references:
- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool
author: Bhabesh Raj
date: 2022-08-02
modified: 2022-09-28
tags:
- attack.defense-evasion
- attack.t1574.002
logsource:
  product: windows
  service: security-mitigations
detection:
  selection:
    EventID:
    - 11
    - 12         # MDE: ExploitGuardNonMicrosoftSignedBlocked
    ProcessPath|endswith:
    - '\MpCmdRun.exe'
    - '\NisSrv.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies instances where Microsoft Defender's processes, specifically `MpCmdRun.exe` and `NisSrv.exe`, are blocked from loading unsigned Dynamic Link Libraries (DLLs). This activity can indicate a potential sideloading attempt, where attackers may exploit legitimate Windows processes to execute malicious code without raising alarms. The rule leverages events generated by the Code Integrity (CI) engine, which monitors for unauthorized code within these trusted applications. By focusing on Event IDs 11 (indicating a blocked signature validation) and 12 (indicating an exploit guard event), the rule aims to flag risky behavior that may facilitate threat actors in executing malware.
  ### Investigation Steps
  - Use the EDR to analyze the processes running on the affected systems at the time of the alert, focusing on any suspicious or unauthorized instances of `MpCmdRun.exe` and `NisSrv.exe`.
  - Review the security logs in the SIEM for other correlated events around the same timestamp, looking for evidence of attempts to load DLLs related to known threats or unusual behavior.
  - Cross-reference the alert with the proxy logs to check for any outbound traffic associated with these processes, which may indicate communication with a command and control (C2) server.
  - Inspect cloud logs in platforms such as Azure or AWS for any related activities, especially if the affected systems are part of a hybrid environment that may leverage cloud resources.
