title: Weak Encryption Enabled and Kerberoast
id: f6de9536-0441-4b3f-a646-f4e00f300ffd
status: test
description: Detects scenario where weak encryption is enabled for a user profile
  which could be used for hash/password cracking.
references:
- https://adsecurity.org/?p=2053
- https://blog.harmj0y.net/redteaming/another-word-on-delegation/
author: '@neu5ron'
date: 2017-07-30
modified: 2021-11-27
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  product: windows
  service: security
  definition: 'Requirements: Audit Policy : Account Management > Audit User Account
    Management, Group Policy : Computer Configuration\Windows Settings\Security Settings\Advanced
    Audit Policy Configuration\Audit Policies\Account Management\Audit User Account
    Management'
detection:
  selection:
    EventID: 4738
    # According to Microsoft, the bit values are listed here: https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4720
    # However, that seems to be a simple copy from https://learn.microsoft.com/en-us/troubleshoot/windows-server/active-directory/useraccountcontrol-manipulate-account-properties
    # and the actual flags that are used are quite different and, unfortunately, not documented.
    # https://github.com/mdecrevoisier/EVTX-to-MITRE-Attack/ contains a number of EVTX files with relevant events, which can be used to extract
    # the following values.
  olduac_des:   # 0x8000
    OldUacValue|endswith:
    - 8???
    - 9???
    - A???
    - B???
    - C???
    - D???
    - E???
    - F???
  newuac_des:
    NewUacValue|endswith:
    - 8???
    - 9???
    - A???
    - B???
    - C???
    - D???
    - E???
    - F???
  olduac_preauth:   # 0x10000
    OldUacValue|endswith:
    - 1????
    - 3????
    - 5????
    - 7????
    - 9????
    - B????
    - D????
    - F????
  newuac_preauth:
    NewUacValue|endswith:
    - 1????
    - 3????
    - 5????
    - 7????
    - 9????
    - B????
    - D????
    - F????
  olduac_encrypted:   # 0x800
    OldUacValue|endswith:
    - 8??
    - 9??
    - A??
    - B??
    - C??
    - D??
    - E??
    - F??
  newuac_encrypted:
    NewUacValue|endswith:
    - 8??
    - 9??
    - A??
    - B??
    - C??
    - D??
    - E??
    - F??
  condition: selection and ((newuac_des and not olduac_des) or (newuac_preauth and
    not olduac_preauth) or (newuac_encrypted and not olduac_encrypted))
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects instances of weak encryption being enabled for user profiles on Windows systems, which could lead to vulnerabilities allowing for Kerberoasting or password cracking. It specifically monitors security events for changes in User Account Control (UAC) flags associated with user accounts. The rule looks for Event ID 4738, which corresponds to modifications in user account properties, focusing on profiles where weak encryption settings are applied (indicated by specific hexadecimal UAC values) or where pre-authentication has been altered. This detection leverages Windows Security logs, highlighting potentially harmful configurations that could jeopardize the integrity of user authentication processes.
  ### Investigation Steps
  - Examine the relevant security log data around Event ID 4738 using your EDR platform to identify when the user profile encryption settings were modified.
  - Verify the previous and current User Account Control values for affected accounts in the logs to understand the nature of the changes made.
  - Utilize your SIEM to correlate any suspicious logins or account activities that took place around the time of the detected rule trigger.
  - Conduct a thorough analysis of the affected user accounts using additional logs from authentication systems and privilege escalation attempts seen in recent activity.
