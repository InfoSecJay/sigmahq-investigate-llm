title: PowerShell Scripts Installed as Services - Security
id: 2a926e6a-4b81-4011-8a96-e36cc8c04302
related:
- id: a2e5019d-a658-4c6a-92bf-7197b54e2cae
  type: derived
status: test
description: Detects powershell script installed as a Service
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse
author: oscd.community, Natalia Shornikova
date: 2020-10-06
modified: 2022-11-29
tags:
- attack.execution
- attack.t1569.002
logsource:
  product: windows
  service: security
  definition: The 'System Security Extension' audit subcategory need to be enabled
    to log the EID 4697
detection:
  selection:
    EventID: 4697
    ServiceFileName|contains:
    - 'powershell'
    - 'pwsh'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying the installation of PowerShell scripts as Windows services, which can be a common tactic utilized by adversaries to maintain persistence on a compromised system. It achieves this by monitoring Windows Security Event Logs for Event ID 4697, which indicates that a service has been installed. The rule specifically checks the `ServiceFileName` field in the event logs for any mentions of 'powershell' or its executable name 'pwsh'. This is pertinent to the MITRE ATT&CK framework under the Execution tactic and the technique T1569.002 (Service Execution), which highlights the use of Windows services to execute malicious scripts or binaries.
  When adversaries install malicious PowerShell scripts as services, they not only execute malicious commands with system privileges but also ensure that the scripts persist across reboots. This tactic can enable lateral movement, espionage, or data exfiltration depending on the capabilities of the installed script. By leveraging the Windows Security logs, analysts can pinpoint potentially malicious behavior, allowing for timely investigations and responsive actions to mitigate threats.
  ### Investigation Steps
  - **Query EDR for Related Activity:** Check for any related process creation events that occurred around the same timestamp as the service installation to determine if any suspicious PowerShell commands were executed.
  - **Review Service Configuration:** Use the service management console or PowerShell to inspect the configuration of the detected service, particularly the executable path and associated account permissions, to assess the risk level.
  - **Analyze Network Connections:** Look for any outbound network connections made by the service to identify potential command-and-control (C2) communication or data exfiltration attempts.
  - **Consult System and Application Logs:** Investigate Windows System and Application logs for any errors or warnings related to the service to gather context on its behavior and potential impact on the system.
  ### Prioritization
  This alert is categorized as high severity due to the potential for significant security risk if a malicious PowerShell script is effectively installed as a service. The capability for persistence and elevated privileges poses a serious threat to the integrity of the system and the organization.
  ### Blind Spots and Assumptions
  One recognized assumption is that event logging configuration may be incomplete; if the 'System Security Extension' audit subcategory is not enabled, Event ID 4697 may not be logged, resulting in missed detections. Additionally, this rule may not trigger in environments where legitimate services are installed using PowerShell, leading to potential false positives. Adversaries might also use obfuscation techniques or alternative executable names that do not match the keywords specified in the rule, allowing their activities to go undetected.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
