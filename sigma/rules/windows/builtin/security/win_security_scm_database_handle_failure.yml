title: SCM Database Handle Failure
id: 13addce7-47b2-4ca0-a98f-1de964d1d669
status: test
description: Detects non-system users failing to get a handle of the SCM database.
references:
- https://threathunterplaybook.com/hunts/windows/190826-RemoteSCMHandle/notebook.html
author: Roberto Rodriguez @Cyb3rWard0g
date: 2019-08-12
modified: 2022-07-11
tags:
- attack.discovery
- attack.t1010
logsource:
  product: windows
  service: security
detection:
  selection:
    EventID: 4656
    ObjectType: 'SC_MANAGER OBJECT'
    ObjectName: 'ServicesActive'
    AccessMask: '0xf003f'      # is used in the reference; otherwise too many FPs
        # Keywords: 'Audit Failure' <-> in the ref 'Keywords':-9214364837600034816
  filter:
    SubjectLogonId: '0x3e4'
  condition: selection and not filter
falsepositives:
- Unknown
# triggering on many hosts in some environments
level: medium
notes: |
  ### Technical Context
  The "SCM Database Handle Failure" detection rule aims to identify instances where non-system users attempt to gain access to the Service Control Manager (SCM) database but fail, potentially indicating unauthorized access attempts or misconfiguration. This rule specifically monitors the Windows Security Event Logs for Event ID 4656, which records failed attempts to open objects in the SCM, such as 'ServicesActive'. By examining the ObjectType and ObjectName, the rule can pinpoint instances where there is an unauthorized or invalid request that should typically be reserved for system users. This aligns with the MITRE ATT&CK framework, particularly under the Discovery tactic (ID: T1010), highlighting how attackers may enumerate services or the SCM to gather information about the system.
  Key data sources involved include Windows Security logs that capture both successful and failed handle requests, particularly focusing on the Access Mask to filter out specific permissions related to SCM database access. The combination of event filtering for non-system user logon IDs and the identification of specific SCM access failures creates a focused alert aimed at detecting potential malicious activities.
  ### Investigation Steps
  - **Check Security Event Logs:** Review the Windows Security Event Logs around the time of the alert to identify any adjacent Event ID 4656 entries for additional context on the failed SCM handle requests. Note any patterns or repeated failures which could suggest a targeted probing attempt.
  - **Identify User Context:** Use the EDR to examine the user account associated with the failed request. Determine if the account is legitimate or if there are any indications that it might be a compromised account trying to escalate privileges.
  - **Assess System Configuration:** Investigate the configuration of the SCM database and the specific services that the user attempted to access. Verify whether the permissions set for these services are appropriately restrictive or if there may be a misconfiguration allowing unexpected access attempts.
  - **Network and Proxy Review:** Check proxy and network logs for any suspicious traffic that may correlate with the timing of the failed handle attempts. Look for unusual patterns of access that might indicate external reconnaissance activity.
  ### Prioritization
  The severity level of medium is assigned to this alert due to the potential implications of unauthorized attempts to access critical system services, which could indicate broader attempts at discovery and exploitation within the environment. As such, while not immediately critical, it warrants investigation to rule out any malicious intent.
  ### Blind Spots and Assumptions
  This rule may not fire if the monitored systems do not frequently generate Event ID 4656, either due to logging being insufficiently configured or the environment not allowing non-system accounts to access SCM regularly. Additionally, it is assumed that the Service Control Manager is in a default configuration, meaning that it does not have any alternative access controls in place that would impede normal logging. Adversaries can also evade detection by using system accounts or exploiting configurations that bypass SCM interactions entirely.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
