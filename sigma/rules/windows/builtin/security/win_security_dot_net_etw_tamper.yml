title: ETW Logging Disabled In .NET Processes - Registry
id: a4c90ea1-2634-4ca0-adbb-35eae169b6fc
related:
- id: bf4fc428-dcc3-4bbd-99fe-2422aeee2544
  type: similar
status: test
description: Potential adversaries stopping ETW providers recording loaded .NET assemblies.
references:
- https://twitter.com/_xpn_/status/1268712093928378368
- https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr
- https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables
- https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38
- https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39
- https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_
- https://bunnyinside.com/?term=f71e8cb9c76a
- http://managed670.rssing.com/chan-5590147/all_p1.html
- https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code
- https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-06-05
modified: 2022-12-20
tags:
- attack.defense-evasion
- attack.t1112
- attack.t1562
logsource:
  product: windows
  service: security
detection:
  selection_etw_enabled:
    EventID: 4657
    ObjectName|endswith: '\SOFTWARE\Microsoft\.NETFramework'
    ObjectValueName: 'ETWEnabled'
    NewValue: 0
  selection_complus:
    EventID: 4657
    ObjectName|contains: '\Environment'
    ObjectValueName:
    - 'COMPlus_ETWEnabled'
    - 'COMPlus_ETWFlags'
    NewValue: 0
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule ETW Logging Disabled In .NET Processes 
  - Registry detects potential adversary actions aimed at diminishing the observability of .NET applications. This is achieved by monitoring Windows Security Event Log entries, specifically Event ID 4657, which indicate modifications to the registry. The rule looks for the disabling of Event Tracing for Windows (ETW) for .NET applications, either by checking the `ETWEnabled` flag in the .NET Framework registry path or the `COMPlus_ETWEnabled` and `COMPlus_ETWFlags` settings. By setting these registry values to 0, an attacker can stop ETW providers from recording loaded assemblies, effectively evading detection mechanisms. This behavior is associated with the MITRE ATT&CK Tactic of Defense Evasion and the technique T1112 (Modification of Registry).
  ### Investigation Steps
  - **Verify Registry Changes:** Use PowerShell or a registry monitoring tool to confirm whether the values of `ETWEnabled`, `COMPlus_ETWEnabled`, and `COMPlus_ETWFlags` have been modified recently.
  - **Review Process Activity:** Utilize your EDR solution to check for any relevant process creation events that occurred around the same time as the registry changes to identify any potentially malicious activities.
  - **Check Correlated Logs:** Investigate related logs from Windows Event Logs, including logs for service starts and stops, to identify if any legitimate applications were manipulated or restarted post-registry changes.
  - **Analyze Network Activity:** Explore network connections in your NDR or firewall logs that may be associated with the potentially affected applications to assess if anomalous communications occurred.
  ### Prioritization
  The high severity of this alert signifies a critical risk where an adversary might be attempting to disable a key logging feature, which can significantly hamper detection capabilities and may indicate preparation for further malicious actions.
  ### Blind spots and Assumptions
  This rule may not trigger if an adversary uses other methods to disable ETW logging without modifying the registry, such as leveraging system policies or other application configurations. Additionally, legitimate application behavior or administrative changes may also lead to false positives if they coincide with registry modifications. It is assumed that your environment maintains standard application behavior and registry configurations; if custom configurations exist, they may lead to rule efficacy challenges.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
