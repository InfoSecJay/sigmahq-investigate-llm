title: PetitPotam Suspicious Kerberos TGT Request
id: 6a53d871-682d-40b6-83e0-b7c1a6c4e3a5
status: test
description: |
  Detect suspicious Kerberos TGT requests.
  Once an attacer obtains a computer certificate by abusing Active Directory Certificate Services in combination with PetitPotam, the next step would be to leverage the certificate for malicious purposes.
  One way of doing this is to request a Kerberos Ticket Granting Ticket using a tool like Rubeus.
  This request will generate a 4768 event with some unusual fields depending on the environment.
  This analytic will require tuning, we recommend filtering Account_Name to the Domain Controller computer accounts.
references:
- https://github.com/topotam/PetitPotam
- https://isc.sans.edu/forums/diary/Active+Directory+Certificate+Services+ADCS+PKI+domain+admin+vulnerability/27668/
- https://github.com/splunk/security_content/blob/develop/detections/endpoint/petitpotam_suspicious_kerberos_tgt_request.yml
author: Mauricio Velazco, Michael Haag
date: 2021-09-02
modified: 2022-10-05
tags:
- attack.credential-access
- attack.t1187
logsource:
  product: windows
  service: security
  definition: 'The advanced audit policy setting "Account Logon > Kerberos Authentication
    Service" must be configured for Success/Failure'
detection:
  selection:
    EventID: 4768
    TargetUserName|endswith: '$'
    CertThumbprint|contains: '*'
  filter_local:
    IpAddress: '::1'
  filter_thumbprint:
    CertThumbprint: ''
  condition: selection and not 1 of filter_*
falsepositives:
- False positives are possible if the environment is using certificates for authentication.
  We recommend filtering Account_Name to the Domain Controller computer accounts.
level: high
notes: |
  n
  ### Technical Context
  The "PetitPotam Suspicious Kerberos TGT Request" detection rule is designed to monitor for potentially malicious Kerberos Ticket Granting Ticket (TGT) requests, which may indicate abuse of Active Directory Certificate Services. Attackers can exploit vulnerabilities in the Active Directory Certificate Services to request TGTs using a malicious tool like Rubeus. When such a request is made, it generates a Windows Security event (EventID: 4768) with attributes that might be unusual, especially if the requests are coming from computer account names (indicated by a username ending with a dollar sign, `$`). The data sources utilized for this rule primarily include Windows Security event logs that need to have advanced audit policies configured to capture Kerberos authentication services. This corresponds to the MITRE ATT&CK technique T1187 (Forced Authentication) under the Credential Access tactic.
  ### Investigation Steps
  - **Examine the Event Logs**: Review the Windows Security event logs for EventID 4768 to identify any suspicious TGT requests, focusing on certificate thumbprints and users that end with a `$`.
  - **Analyze Source IP**: Use EDR tools to correlate the source IP addresses for the suspicious requests, ensuring that none of them are local (i.e., filter out `::1`).
  - **Check Certificate Usage**: Verify whether the detected certificate thumbprints are legitimate and examine their associated use within the Active Directory environment.
  - **Review Account Activity**: Investigate the behavior of the associated computer accounts for any unauthorized access patterns or anomalous activity in recent logs.
  ### Prioritization
  Given the severity level of high indicated by the alert, this rule highlights the potential for significant security compromise through unauthorized TGT requests which can lead to further exploitation within the domain environment. 
  ### Blind Spots and Assumptions
  There are known limitations with this rule such as potential false positives in environments legitimately using certificates for authentication processes. It is critical for detection engineers to understand that if the account names are not properly filtered or if auditing configurations are incomplete, the detection may fail to trigger. Additionally, savvy adversaries may employ techniques to evade detection by crafting requests carefully or disguising their activities under normal operational behaviors.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
