title: Potential Privileged System Service Operation - SeLoadDriverPrivilege
id: f63508a0-c809-4435-b3be-ed819394d612
status: test
description: |
  Detects the usage of the 'SeLoadDriverPrivilege' privilege. This privilege is required to load or unload a device driver.
  With this privilege, the user can dynamically load and unload device drivers or other code in to kernel mode.
  This user right does not apply to Plug and Play device drivers.
  If you exclude privileged users/admins and processes, which are allowed to do so, you are maybe left with bad programs trying to load malicious kernel drivers.
  This will detect Ghost-In-The-Logs (https://github.com/bats3c/Ghost-In-The-Logs) and the usage of Sysinternals and various other tools. So you have to work with a whitelist to find the bad stuff.
references:
- https://web.archive.org/web/20230331181619/https://blog.dylan.codes/evading-sysmon-and-windows-event-logging/
- https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-10/security/threat-protection/auditing/event-4673
author: xknow (@xknow_infosec), xorxes (@xor_xes)
date: 2019-04-08
modified: 2023-01-20
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  product: windows
  service: security
detection:
  selection_1:
    EventID: 4673
    PrivilegeList: 'SeLoadDriverPrivilege'
    Service: '-'
  filter_exact:
    ProcessName:
    - 'C:\Windows\System32\Dism.exe'
    - 'C:\Windows\System32\rundll32.exe'
    - 'C:\Windows\System32\fltMC.exe'
    - 'C:\Windows\HelpPane.exe'
    - 'C:\Windows\System32\mmc.exe'
    - 'C:\Windows\System32\svchost.exe'
    - 'C:\Windows\System32\wimserv.exe'
    - 'C:\Windows\System32\RuntimeBroker.exe'
    - 'C:\Windows\System32\SystemSettingsBroker.exe'
    - 'C:\Windows\explorer.exe'
  filter_endswith:
    ProcessName|endswith:
    - '\procexp64.exe'
    - '\procexp.exe'
    - '\procmon64.exe'
    - '\procmon.exe'
    - '\Google\Chrome\Application\chrome.exe'
    - '\AppData\Local\Microsoft\Teams\current\Teams.exe'
  filter_startswith:
    ProcessName|startswith: 'C:\Program Files\WindowsApps\Microsoft'
  condition: selection_1 and not 1 of filter_*
falsepositives:
- Other legimate tools loading drivers. Including but not limited to, Sysinternals,
  CPU-Z, AVs etc. A baseline needs to be created according to the used products and
  allowed tools. A good thing to do is to try and exclude users who are allowed to
  load drivers.
level: medium
notes: |
  ### Technical Context
  This rule detects attempts to utilize the 'SeLoadDriverPrivilege', which allows a user to load or unload device drivers into the kernel mode of a Windows operating system. This privilege, while essential for legitimate administrative functions, can also be exploited by malicious software to load harmful drivers that compromise system integrity or execute arbitrary code with higher privileges. The detection is primarily based on Event ID 4673 from Windows Security logs, which is triggered when an operation requiring this privilege is executed. The rule includes specific filters to exclude known legitimate processes, using a whitelist approach, to identify potential threats that may be camouflaged within normal administrative tasks. With the implementation of this detection rule, it helps uncover both targeted attacks and the use of tools like Sysinternals, which malware may leverage to conduct stealthy operations, thereby mapping to the MITRE ATT&CK tactic of Defense Evasion (T1562.001).
  ### Investigation Steps
  - **Validate Event Data:** Check Windows Security event logs for Event ID 4673 indicating the use of 'SeLoadDriverPrivilege' by non-whitelisted applications. Cross-reference the process invoking this privilege with known legitimate services.
    
  - **Analyze Process Behavior:** Utilize EDR tools to conduct a deeper analysis of the executing process and its behavior to determine if it's performing any suspicious actions that align with known malicious tactics.
  - **Review Whitelisted Applications:** Confirm the integrity of the whitelist against legitimate applications that require driver loading privileges. Ensure that no unauthorized modifications have occurred.
  - **Examine System Logs:** Investigate other related logs, such as Sysmon or process creation logs for suspicious process launches or deviations in typical usage patterns during the event timeline.
  ### Prioritization
  Given the potential for system compromise and privilege escalation, alerts for this rule should be treated with medium to high urgency, especially when triggered by processes not recognized as legitimate, indicating possible unauthorized access or exploitation attempts.
  ### Blind Spots and Assumptions
  One significant assumption is that the system has an accurate and up-to-date whitelist of legitimate applications that may invoke the 'SeLoadDriverPrivilege' without drawing suspicion. Additionally, the detection rule may fail to trigger in cases where an attacker has gained administrative access and is using approved tools to load malicious drivers. The rule may also be less effective if the environment frequently utilizes legitimate tools known to use the privilege, as this could lead to a higher incidence of false positives without dynamic adjustment of the whitelist.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
