title: Potentially Suspicious AccessMask Requested From LSASS
id: 4a1b6da0-d94f-4fc3-98fc-2d9cb9e5ee76
status: test
description: Detects process handle on LSASS process with certain access mask
references:
- https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html
- https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment
author: Roberto Rodriguez, Teymur Kheirkhabarov, Dimitrios Slamaris, Mark Russinovich,
  Aleksey Potapov, oscd.community (update)
date: 2019-11-01
modified: 2023-12-19
tags:
- attack.credential-access
- car.2019-04-004
- attack.t1003.001
logsource:
  product: windows
  service: security
detection:
  selection_1:
    EventID: 4656     # A handle to an object was requested.
    ObjectName|endswith: '\lsass.exe'
    AccessMask|contains:
    - '0x40'
    - '0x1400'
            # - '0x1000'  # minimum access requirements to query basic info from service
    - '0x100000'
    - '0x1410'            # car.2019-04-004
    - '0x1010'            # car.2019-04-004
    - '0x1438'            # car.2019-04-004
    - '0x143a'            # car.2019-04-004
    - '0x1418'            # car.2019-04-004
    - '0x1f0fff'
    - '0x1f1fff'
    - '0x1f2fff'
    - '0x1f3fff'
  selection_2:
    EventID: 4663     # An attempt was made to access an object
    ObjectName|endswith: '\lsass.exe'
    AccessList|contains:
    - '4484'
    - '4416'
  filter_main_specific:
    ProcessName|endswith:
    - '\csrss.exe'
    - '\GamingServices.exe'
    - '\lsm.exe'
    - '\MicrosoftEdgeUpdate.exe'
    - '\minionhost.exe'          # Cyberreason
    - '\MRT.exe'                 # MS Malware Removal Tool
    - '\MsMpEng.exe'             # Defender
    - '\perfmon.exe'
    - '\procexp.exe'
    - '\procexp64.exe'
    - '\svchost.exe'
    - '\taskmgr.exe'
    - '\thor.exe'                # THOR
    - '\thor64.exe'              # THOR
    - '\vmtoolsd.exe'
    - '\VsTskMgr.exe'            # McAfee Enterprise
    - '\wininit.exe'
    - '\wmiprvse.exe'
    - 'RtkAudUService64'         # https://medium.com/falconforce/the-curious-case-of-realtek-and-lsass-33fc0c8482ff
    ProcessName|contains:
    - ':\Program Files (x86)\'
    - ':\Program Files\'
    - ':\ProgramData\Microsoft\Windows Defender\Platform\'
    - ':\Windows\SysNative\'
    - ':\Windows\System32\'
    - ':\Windows\SysWow64\'
    - ':\Windows\Temp\asgard2-agent\'
  filter_main_generic:
    ProcessName|contains: ':\Program Files'      # too many false positives with legitimate AV and EDR solutions
  filter_main_exact:
    ProcessName|endswith:
    - ':\Windows\System32\taskhostw.exe'
    - ':\Windows\System32\msiexec.exe'
    - ':\Windows\CCM\CcmExec.exe'
  filter_main_sysmon:
    ProcessName|endswith: ':\Windows\Sysmon64.exe'
    AccessList|contains: '%%4484'
  filter_main_aurora:
    ProcessName|contains: ':\Windows\Temp\asgard2-agent-sc\aurora\'
    ProcessName|endswith: '\aurora-agent-64.exe'
    AccessList|contains: '%%4484'
  filter_main_scenarioengine:
        # Example: C:\a70de9569c3a5aa22184ef52a890177b\x64\SCENARIOENGINE.EXE
    ProcessName|endswith: '\x64\SCENARIOENGINE.EXE'
    AccessList|contains: '%%4484'
  filter_main_avira1:
    ProcessName|contains|all:
    - ':\Users\'
    - '\AppData\Local\Temp\is-'
    ProcessName|endswith: '\avira_system_speedup.tmp'
    AccessList|contains: '%%4484'
  filter_main_avira2:
    ProcessName|contains: ':\Windows\Temp\'
    ProcessName|endswith: '\avira_speedup_setup_update.tmp'
    AccessList|contains: '%%4484'
  filter_main_snmp:
    ProcessName|endswith: ':\Windows\System32\snmp.exe'
    AccessList|contains: '%%4484'
  filter_main_googleupdate:
    ProcessName|contains: ':\Windows\SystemTemp\'
    ProcessName|endswith: '\GoogleUpdate.exe'
    AccessList|contains: '%%4484'
  filter_optional_procmon:
    ProcessName|endswith:
    - '\procmon64.exe'
    - '\procmon.exe'
    AccessList|contains: '%%4484'
  condition: 1 of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Legitimate software accessing LSASS process for legitimate reason; update the whitelist
  with it
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect potentially suspicious access requests to the LSASS (Local Security Authority Subsystem Service) process on Windows systems. LSASS is a critical component that handles authentication and security policy management, making it a prime target for attackers seeking to perform credential dumping. The rule triggers on specific Windows Security event IDs, including 4656 and 4663, which indicate that a handle to the LSASS process was requested or that an attempt was made to access it. It specifically looks for access masks that are typically associated with credential dumping activities, such as '0x40' and '0x1410', among others. The detection primarily relies on Windows Security logs, focusing on detailed attributes of process handle requests, thus enabling the identification of malicious attempts to compromise sensitive information. This aligns with the MITRE ATT&CK technique T1003 (Credential Dumping), specifically the sub-technique T1003.001.
  ### Investigation Steps
  - **Review EDR Alerts**: Examine EDR alerts for any suspicious processes or additional context around the users that triggered the alerts. Focus on processes trying to access LSASS, as these could indicate unauthorized credential dumping attempts.
  - **Analyze Windows Event Logs**: Investigate the relevant security event logs (EventID 4656 and 4663) for the specific access attempts related to LSASS. Check for repeated access attempts from the same source or unusual processes accessing LSASS.
  - **Cross-reference with Anti-Virus and EDR Solutions**: Validate whether the detected process has been flagged by anti-virus or endpoint detection solutions as malicious. This can provide contextual clues about the nature of the access attempt.
  - **Consult Network Activity Logs**: Use network logs to trace any suspicious outbound connections or unusual data transfers that coincide with the timing of the LSASS access. This might reveal exfiltration attempts or communication with known malicious IPs.
  ### Prioritization
  The alert is classified as medium severity due to the sensitive nature of the LSASS process, which, if compromised, could lead to significant security breaches and credential theft in an enterprise environment.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious process is running under a legitimate user account that is trusted or white-listed, or if there are atypical processes or permissions configurations in place. It also assumes that the Security Event logs are being accurately collected and not filtered or omitted in the case of high volume. Additionally, frequent false positives can occur due to legitimate software that needs to access LSASS for functional reasons, requiring accurate whitelisting protocols to be established.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
