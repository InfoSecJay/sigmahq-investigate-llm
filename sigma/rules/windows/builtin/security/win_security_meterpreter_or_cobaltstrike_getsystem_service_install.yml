title: Meterpreter or Cobalt Strike Getsystem Service Installation - Security
id: ecbc5e16-58e0-4521-9c60-eb9a7ea4ad34
related:
- id: 843544a7-56e0-4dcc-a44f-5cc266dd97d6
  type: derived
status: test
description: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting
  a specific service installation
references:
- https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment
- https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/
author: Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)
date: 2019-10-26
modified: 2023-11-15
tags:
- attack.privilege-escalation
- attack.t1134.001
- attack.t1134.002
logsource:
  product: windows
  service: security
  definition: The 'System Security Extension' audit subcategory need to be enabled
    to log the EID 4697
detection:
  selection_eid:
    EventID: 4697
  selection_cli_cmd:
        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\.\pipe\5e120a
        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\.\pipe\5e120a
        # cobaltstrike getsystem technique 1b (expanded %COMSPEC%): %COMSPEC% /c echo 559891bb017 > \\.\pipe\5e120a
    ServiceFileName|contains|all:
    - '/c'
    - 'echo'
    - '\pipe\'
    ServiceFileName|contains:
    - 'cmd'
    - '%COMSPEC%'
  selection_cli_rundll:
        # meterpreter getsystem technique 2: rundll32.exe C:\Users\test\AppData\Local\Temp\tmexsn.dll,a /p:tmexsn
    ServiceFileName|contains|all:
    - 'rundll32'
    - '.dll,a'
    - '/p:'
  selection_cli_share:
    ServiceFileName|startswith: '\\\\127.0.0.1\\ADMIN$\'      # https://twitter.com/svch0st/status/1413688851877416960?lang=en
  condition: selection_eid and 1 of selection_cli_*
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify the use of the "getsystem" command from Meterpreter or Cobalt Strike, which is commonly employed by attackers for privilege escalation on Windows systems. The rule focuses on Event ID 4697, which logs the creation of a new service. It looks for specific patterns in the service installation parameters, particularly commands that involve executing a command-line interface (CLI) to manipulate Windows services, using constructs typically associated with Meterpreter or Cobalt Strike such as the `cmd.exe` or `rundll32.exe` utility with specified arguments pointing to a DLL. This detection aligns with the MITRE ATT&CK techniques T1134.001 (Access Token Manipulation: Create Service) and T1134.002 (Access Token Manipulation: Service Fingerprint).
  ### Investigation Steps
  - **Review Security Event Logs:** Check Windows Security Event Logs for Event ID 4697 to find information related to unauthorized service installations and their corresponding service names.
  - **Analyze Service Configuration:** Use EDR tools to examine the configuration and behavior of the services flagged by the detection, including paths to executable files and any associated command-line arguments.
  - **Assess Network Connections:** Utilize NDR and firewall logs to investigate any outgoing connections made by the identified services, particularly looking for unusual or suspicious endpoints.
  - **Correlate with Threat Intelligence:** Cross-reference any identified services or executables with known threat intelligence sources to determine if they are associated with recognized malicious activity or are part of legitimate software.
  ### Prioritization
  Given the high severity level assigned to this alert, it is crucial to treat it as a potential indication of a serious security incident, such as the presence of a backdoor or malicious tool attempting to escalate privileges. Immediate investigation is necessary to mitigate potential escalations in risk.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where the Event ID 4697 is not logged due to misconfiguration of Windows security auditing policies. Additionally, if attackers use alternative methods to escalate privileges that do not involve service creation, such as exploiting kernel vulnerabilities or using legitimate admin tools without service creation, this rule would fail to detect those actions. It's assumed that the monitored systems have the necessary security auditing configured to capture and log these events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
