title: Invoke-Obfuscation Via Stdin - Security
id: 80b708f3-d034-40e4-a6c8-d23b7a7db3d1
related:
- id: 487c7524-f892-4054-b263-8a0ace63fc25
  type: derived
status: test
description: Detects Obfuscated Powershell via Stdin in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task28)
author: Nikita Nazarov, oscd.community
date: 2020-10-12
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: security
  definition: The 'System Security Extension' audit subcategory need to be enabled
    to log the EID 4697
detection:
  selection:
    EventID: 4697
    ServiceFileName|contains|all:
    - 'set'
    - '&&'
    ServiceFileName|contains:
    - 'environment'
    - 'invoke'
    - '${input)'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Invoke-Obfuscation Via Stdin" rule is designed to detect obfuscated PowerShell scripts that utilize standard input (stdin) during their execution. It identifies specific audit events related to the Windows Security event log, specifically Event ID 4697, which tracks service-related activities. The rule looks for the inclusion of certain keywords in the `ServiceFileName` field, indicating likely obfuscation tactics, such as commands associated with setting environment variables and the use of the "invoke" command. By leveraging these indicators, SOC analysts can detect attempts to evade security measures by running malicious scripts that may otherwise evade traditional detection methods.
  This rule relates primarily to the MITRE ATT&CK framework's tactics of defense evasion (T1027) and execution (T1059.001), showcasing how adversaries might attempt to conceal their activities in a compromised system by using obfuscation techniques and PowerShell scripting.
  ### Investigation Steps
  - **Review Event Logs:** Analyze Windows Security Event Log for Event ID 4697. Check for the presence of suspicious scripts or commands in the `ServiceFileName` field that may indicate obfuscation.
  - **Correlate with EDR Data:** Use Endpoint Detection and Response (EDR) tools to track the process tree and command-line arguments of the identified scripts. Look for any associated processes that may illuminate the execution context and verify if malicious behavior has occurred.
  - **Check for Additional Artifacts:** Search for any related artifacts like temporary files or PowerShell command history that can provide insight into the actions taken by the obfuscated script. This may include analyzing the PowerShell transcript logs if enabled.
  - **Monitor Network Activity:** Utilize network detection and response (NDR) tools to identify any unauthorized outbound connections from the affected host. This can help confirm if the obfuscated scripts were part of a larger attack aiming to exfiltrate data or communicate with external command and control (C2) servers.
  ### Prioritization
  Given that this rule identifies potential obfuscation techniques used for executing malicious PowerShell scripts, alerts generated from this rule should be treated with high priority. The presence of such obfuscation techniques often correlates with advanced and targeted attack vectors, which could pose a significant risk to enterprise security.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where the auditing of Event ID 4697 is not enabled, leading to missed detections of potentially malicious activity. Additionally, sophisticated attackers may circumvent detection by using custom obfuscation methods or alternative techniques to execute PowerShell scripts without triggering this specific rule. It is also assumed that all PowerShell logs are implemented properly; deviations in logging configurations could result in incomplete visibility of activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and completeness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
