title: CodeIntegrity - Disallowed File For Protected Processes Has Been Blocked
id: 5daf11c3-022b-4969-adb9-365e6c078c7c
status: test
description: Detects block events for files that are disallowed by code integrity
  for protected processes
references:
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/operations/event-id-explanations
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/operations/event-tag-explanations
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-06-06
tags:
- attack.privilege-escalation
logsource:
  product: windows
  service: codeintegrity-operational
detection:
  selection:
    EventID: 3104     # Windows blocked file %2 which has been disallowed for protected processes.
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect instances where the Windows Code Integrity feature has blocked files that are explicitly disallowed for protected processes. When a file is deemed unsafe or unauthorized for execution within a protected process, the operating system generates an event with Event ID 3104, indicating that access to the file has been prohibited. By monitoring logs from the Code Integrity operational service, this rule helps identify potential privilege escalation attempts or malware trying to tamper with critical processes. Incident responders can use this information to investigate malicious behavior or ensure that legitimate applications are functioning as intended.
  ### Investigation Steps
  - Review the relevant Code Integrity operational logs in the Windows Event Viewer to confirm the blocking action and identify the specific file involved.
  - Utilize Endpoint Detection and Response (EDR) tools to analyze the process tree and determine the context of the protected process associated with the blocked file.
  - Cross-reference the blocked file's hash and path with threat intelligence feeds to verify if it is known malware or benign software.
  - Check for any related network traffic using your Network Detection and Response (NDR) solution to identify any communication attempts made by the protected process prior to the block.
