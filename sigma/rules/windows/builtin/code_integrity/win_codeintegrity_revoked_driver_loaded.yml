title: CodeIntegrity - Revoked Kernel Driver Loaded
id: 320fccbf-5e32-4101-82b8-2679c5f007c6
status: test
description: Detects the load of a revoked kernel driver
references:
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/operations/event-id-explanations
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/operations/event-tag-explanations
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-06-06
tags:
- attack.privilege-escalation
logsource:
  product: windows
  service: codeintegrity-operational
detection:
  selection:
    EventID:
    - 3021         # Code Integrity determined a revoked kernel module %2 is loaded into the system.  Check with the publisher to see if a new signed version of the kernel module is available.
    - 3022         # Code Integrity determined a revoked kernel module %2 is loaded into the system. The image is allowed to load because kernel mode debugger is attached.
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule aims to identify instances where a revoked kernel driver is loaded into a Windows system, which may indicate potential misuse or unauthorized privilege escalation. The rule specifically looks for Event IDs 3021 and 3022 generated by Windows Code Integrity, which logs events related to kernel driver behavior. Event ID 3021 flags a revoked kernel module that has been loaded, suggesting it has not passed integrity checks from Microsoft. Event ID 3022 indicates a similar loading action but specifies that the driver load was permitted because a kernel mode debugger is attached. By monitoring these events, security teams can quickly pinpoint potential vulnerabilities or malicious activities related to kernel drivers.
  The underlying data sources involved include Windows Code Integrity operational logs, which serve a crucial role in maintaining system integrity by verifying the authenticity of loaded drivers. Alerting on these events can help incident responders to proactively address any threats stemming from compromised kernel drivers.
  ### Investigation Steps
  - Review the relevant Windows Code Integrity operational logs to confirm the presence of Event IDs 3021 or 3022, noting which revoked kernel module has been loaded.
  - Use EDR tools to examine the properties and behavior of the suspected kernel driver, including process memory, file paths, and associated parent processes or applications.
  - Correlate findings with other logs from systems such as antivirus or network detection tools to assess if any known threats or anomalies are related to the event.
  - Consider validating the presence of known trusted versions of the kernel driver by consulting official publisher repositories or security advisories to ensure that the incident is not a false positive.
