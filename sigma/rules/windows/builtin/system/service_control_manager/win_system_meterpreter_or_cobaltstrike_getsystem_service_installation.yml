title: Meterpreter or Cobalt Strike Getsystem Service Installation - System
id: 843544a7-56e0-4dcc-a44f-5cc266dd97d6
status: test
description: Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting
  a specific service installation
references:
- https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment
- https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/
author: Teymur Kheirkhabarov, Ecco, Florian Roth (Nextron Systems)
date: 2019-10-26
modified: 2023-11-15
tags:
- attack.privilege-escalation
- attack.t1134.001
- attack.t1134.002
logsource:
  product: windows
  service: system
detection:
  selection_id:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
  selection_cli_cmd:
        # meterpreter getsystem technique 1: cmd.exe /c echo 559891bb017 > \\.\pipe\5e120a
        # cobaltstrike getsystem technique 1: %COMSPEC% /c echo 559891bb017 > \\.\pipe\5e120a
        # cobaltstrike getsystem technique 1b (expanded %COMSPEC%): %COMSPEC% /c echo 559891bb017 > \\.\pipe\5e120a
    ImagePath|contains|all:
    - '/c'
    - 'echo'
    - '\pipe\'
    ImagePath|contains:
    - 'cmd'
    - '%COMSPEC%'
  selection_cli_rundll:
        # meterpreter getsystem technique 2: rundll32.exe C:\Users\test\AppData\Local\Temp\tmexsn.dll,a /p:tmexsn
    ImagePath|contains|all:
    - 'rundll32'
    - '.dll,a'
    - '/p:'
  selection_cli_share:
    ImagePath|startswith: '\\\\127.0.0.1\\ADMIN$\'      # https://twitter.com/svch0st/status/1413688851877416960?lang=en
  condition: selection_id and 1 of selection_cli_*
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  This detection rule targets privilege escalation attempts using the Meterpreter or Cobalt Strike tools, specifically their `getsystem` command through service installations. It monitors the Windows System event logs for Event ID 7045, which signifies a service being created. The rule identifies specific characteristics of command-line inputs related to the `getsystem` technique, including command invocation with `cmd.exe` or `rundll32.exe` and checks for patterns indicative of direct pipe creations and command executions that are common in these exploitation frameworks. As such, the rule is aligned with the MITRE ATT&CK tactics and techniques relevant to privilege escalation (T1134).
  ### Investigation Steps
  - **Review the Service Installation Logs:** Examine the Windows System event logs for Event ID 7045 to identify any newly created services, noting the corresponding service names and execution times.
  - **Analyze Related Command-Line Inputs:** Utilize EDR tools to look at process creation logs that include `cmd.exe`, `rundll32.exe`, and related command-line parameters found in the suspicious service installation for further context on the execution.
  - **Correlate with Other Telemetry:** Cross-reference with additional telemetry sources such as Sysmon logs (especially for process creation, network connections, and pipe creations) to gather more context on the actions leading up to the service installation and any associated exploit attempts.
  - **Investigate Network Activity:** Inspect network connection logs to/from the device hosting the suspicious service for any unusual communications or connections to known Command and Control (C2) infrastructure related to Meterpreter or Cobalt Strike.
  ### Prioritization
  When this alert is triggered, it indicates a high-severity situation as it involves potential exploitation to gain elevated privileges on the network, which can lead to significant security breaches or data exfiltration if not addressed promptly.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where the attacker uses techniques that are less detectable (like non-standard paths or obfuscation) or employs custom scripts rather than the expected command patterns. Additionally, if users are running legitimate services that employ similar command structures, it could lead to false negatives. It's important to recognize that adversaries may also evade detection by modifying payload delivery methods or utilizing trusted system binaries for their malicious commands.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
