title: Important Windows Service Terminated Unexpectedly
id: 56abae0c-6212-4b97-adc0-0b559bb950c3
status: test
description: Detects important or interesting Windows services that got terminated
  unexpectedly.
references:
- https://www.randori.com/blog/vulnerability-analysis-queuejumper-cve-2023-21554/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-04-14
tags:
- attack.defense-evasion
logsource:
  product: windows
  service: system
detection:
  selection_eid:
    Provider_Name: 'Service Control Manager'
    EventID: 7034     # The X service terminated unexpectedly. It has done this Y time(s).
  selection_name:
        # Note that these names contained in "param1" are "Display Names" and are language specific. If you're using a non-english system these can and will be different
  - param1|contains: 'Message Queuing'
        # Use this If you collect the binary value provided from this event, which is the wide hex encoded value of the service name.
  - Binary|contains:
    - '4d0053004d005100'           # MSMQ (Microsoft Message Queuing). Encoded in upper case just in case
    - '6d0073006d007100'           # msmq
  condition: all of selection_*
falsepositives:
- Rare false positives could occur since service termination could happen due to multiple
  reasons
level: high
notes: |
  ### Technical Context
  This detection rule identifies unexpected terminations of critical Windows services, focusing specifically on the Microsoft Message Queuing (MSMQ) service. Utilizing event logs generated by the Service Control Manager, the rule detects Event ID 7034, which signifies that a service has terminated unexpectedly. The rule is designed to capture not only standard text representations of the service name but also checks for specific binary identifiers associated with MSMQ. By monitoring these events, the rule aims to highlight potentially malicious activities, such as evasion techniques employed by attackers to disable security measures or disrupt communications.
  Key data sources include Windows system event logs, specifically for service management events. Analysts should be aware that while the rule highlights significant service interruptions, legitimate software behavior or system glitches may also trigger alerts. Therefore, contextual analysis is critical when responding to alerts generated by this detection rule.
  ### Investigation Steps
  - Check the EDR logs for any unusual processes or activities corresponding to the time of the service termination event to identify potential malicious behavior.
  - Review system event logs in the SIEM for additional Event IDs related to service starts or stops around the same timeframe to detect potential correlation and pattern.
  - Investigate network traffic via NDR logs to see if there were any unauthorized communications or data exfiltration attempts that coincided with the service termination.
  - Analyze cloud logs from any relevant services (e.g., AWS or Azure) for related suspicious activities, particularly if systems interface with cloud resources during the service disruption event.
