title: Invoke-Obfuscation COMPRESS OBFUSCATION - System
id: 175997c5-803c-4b08-8bb0-70b099f47595
status: test
description: Detects Obfuscated Powershell via COMPRESS OBFUSCATION
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task 19)
author: Timur Zinniatullin, oscd.community
date: 2020-10-18
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: system
detection:
  selection:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
    ImagePath|contains|all:
    - 'new-object'
    - 'text.encoding]::ascii'
    - 'readtoend'
    ImagePath|contains:
    - ':system.io.compression.deflatestream'
    - 'system.io.streamreader'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect obfuscated PowerShell commands that utilize the `COMPRESS OBFUSCATION` technique. Specifically, the rule focuses on monitoring Windows System logs for the creation of new services (Event ID 7045) by the Service Control Manager. It looks for PowerShell commands that include certain terms indicative of obfuscation methods, such as 'new-object', 'text.encoding]::ascii', and 'readtoend'. Additionally, it searches for patterns within the `ImagePath` of the created service that reference compression and stream reading methods, which are frequently used by attackers to obfuscate malicious scripts. This detection aligns with MITRE ATT&CK techniques for defense evasion (T1027) and PowerShell execution (T1059.001).
  ### Investigation Steps
  - **Examine Event Logs:** Review Windows Security and System event logs, specifically Event ID 7045, to identify any anomalous service creations that match the criteria outlined in the Sigma rule.
  - **Analyze Suspicious Services:** Query the service configuration for newly created services using EDR or PowerShell commands to verify if they correspond to legitimate applications or show signs of obfuscation.
  - **Cross-reference with PowerShell logs:** Use PowerShell transcription logs to correlate the execution of commands with the identified new services, especially looking for those that leverage obfuscation techniques.
  - **Conduct Network Traffic Analysis:** Utilize NDR tools to investigate any suspicious outbound connections made by the identified services, checking for any communications with known malicious IPs or domains.
  ### Prioritization
  Given the medium severity level of this alert, the presence of obfuscated PowerShell commands typically suggests a higher likelihood of malicious activity, which warrants prompt investigation in an enterprise environment to prevent potential exploitation.
  ### Blind spots and Assumptions
  This rule may not trigger if the obfuscation techniques used are less common or differ from the specified patterns. Additionally, it assumes that PowerShell logging is enabled and that the logs and associated telemetry are being generated and retained for analysis. An adversary who is aware of detection mechanisms might employ alternative obfuscation methods or run PowerShell instances without sufficient logging, thus evading this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
