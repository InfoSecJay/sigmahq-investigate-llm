title: Invoke-Obfuscation CLIP+ Launcher - System
id: f7385ee2-0e0c-11eb-adc1-0242ac120002
status: test
description: Detects Obfuscated use of Clip.exe to execute PowerShell
references:
- https://github.com/SigmaHQ/sigma/issues/1009      # (Task 26)
author: Jonathan Cheong, oscd.community
date: 2020-10-13
modified: 2023-02-20
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: system
detection:
  selection:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
    ImagePath|contains|all:
    - 'cmd'
    - '&&'
    - 'clipboard]::'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Invoke-Obfuscation CLIP+ Launcher 
  - System" is designed to detect attempts to leverage a legitimate system tool, Clip.exe, for malicious purposes through obfuscation techniques. The rule specifically looks for instances where the Service Control Manager logs an event (Event ID 7045) indicating that a new service has been created that includes command-line elements indicative of this obfuscation. By filtering for strings such as 'cmd', '&&', and 'clipboard]::', the detection focuses on scenarios where PowerShell is executed obfuscated through chaining commands. This kind of threat falls under the MITRE ATT&CK techniques of Defense Evasion (T1027) and Execution (T1059.001), reflecting the methods adversaries use to hide their activities and execute code within the environment undetected.
  The data sources involved in this detection are primarily Windows Security logs and System event logs. Specifically, event logs generated by the Service Control Manager provide crucial insights into service creation activities, acting as a window into potentially malicious administrative actions being taken on a host machine.
  ### Investigation Steps
  - **Review Event Details:** Examine the details of the Event ID 7045 in the Windows System Event Logs to understand the context of the service creation, including the time, service name, and image path invoked.
  - **Analyze Command-Line Arguments:** Utilize EDR tools to inspect any associated command-line parameters for the process linked with the service creation, specifically searching for obfuscated PowerShell code.
  - **Check EDR Alerts:** Look for additional alerts related to suspicious PowerShell activity or usage of Clip.exe in the EDR platform to correlate multiple pieces of evidence for comprehensive analysis.
  - **Assess Network Behavior:** Investigate network connections established by the affected system through NDR logs to identify any communication with known malicious IPs or anomalous domains, which may indicate further malicious intent.
  ### Prioritization
  This alert is rated as high severity because it involves potentially malicious execution of obfuscated code, which is often indicative of an active compromise and can lead to significant security breaches.
  ### Blind Spots and Assumptions
  The rule may not trigger if obfuscation techniques are modified to bypass the specific strings it checks for, or if command execution occurs outside the intended telemetry capture (e.g., in a non-system context). Furthermore, if an adversary uses legitimate administrative tools or scripts that do not invoke Clip.exe in the expected manner, the detection may be evaded. Additionally, inadequate telemetry data or changes in event logging configurations can result in missing crucial log entries necessary for effective detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
