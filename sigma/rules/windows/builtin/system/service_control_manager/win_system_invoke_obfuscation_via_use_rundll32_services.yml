title: Invoke-Obfuscation Via Use Rundll32 - System
id: 641a4bfb-c017-44f7-800c-2aee0184ce9b
status: test
description: Detects Obfuscated Powershell via use Rundll32 in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task30)
author: Nikita Nazarov, oscd.community
date: 2020-10-09
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: system
detection:
  selection:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
    ImagePath|contains|all:
    - '&&'
    - 'rundll32'
    - 'shell32.dll'
    - 'shellexec_rundll'
    ImagePath|contains:
    - 'value'
    - 'invoke'
    - 'comspec'
    - 'iex'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential obfuscated PowerShell execution via the use of the `rundll32.exe` utility, a common technique employed by adversaries to evade detection. The rule specifically monitors Windows system logs for the creation of services (EventID 7045) through the Service Control Manager (SCM) that exhibit particular characteristics indicative of obfuscation. It looks for `ImagePath` values that contain certain keywords such as "&&", "rundll32", and PowerShell-related terms like "invoke" and "iex", which are commonly associated with malicious scripts attempting to blend in with normal system operations.
  The MITRE ATT&CK framework maps this detection to the "Defense Evasion" tactic (Tactic: `TA0060`) and particularly targets the "Obfuscated Files or Information" technique (Technique: `T1027`) as well as "Command and Scripting Interpreter: PowerShell" (Technique: `T1059.001`). By leveraging the Service Creation logs available in Windows, this rule seeks to identify shadows of malicious intent where attackers exploit legitimate system processes for harmful activities.
  ### Investigation Steps
  - **Verify the Event Context:** Check the details of EventID 7045 in the Security or System logs to confirm that the service creation originated from a suspicious command structure and document any associated process IDs.
  - **Correlate Process Activity:** Use EDR to analyze the parent and child process relationships of the suspected `rundll32.exe` invocation to identify if any other malicious behaviors are present, such as unexpected parent processes.
  - **Review PowerShell Logging:** Investigate PowerShell execution logs for any commands or scripts that were executed around the same time as the service creation event; look for signs of obfuscation or unusual command structures.
  - **Conduct Network Analysis:** Utilize the NDR tool to check for any unusual or unauthorized outbound connections related to the identified processes, which may indicate data exfiltration or additional command and control activity.
  ### Prioritization
  The alert is given a high severity level due to the potential for serious compromise; obfuscated PowerShell execution can signal evasive tactics employed by attackers, warranting immediate investigation to determine the presence of a security incident.
  ### Blind Spots and Assumptions
  This rule may not fire in instances where the obfuscation technique leverages different methodologies that do not involve the `rundll32.exe` utility. Additionally, if the adversary is proficient enough to modify the service creation parameters or the process to blend in with benign operations, this detection might be circumvented. The assumption that all malicious PowerShell executions will trigger a service creation event is also a potential limitation, as not all operations may require such logging.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
