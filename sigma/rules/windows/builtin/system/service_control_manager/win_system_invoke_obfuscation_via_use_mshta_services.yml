title: Invoke-Obfuscation Via Use MSHTA - System
id: 7e9c7999-0f9b-4d4a-a6ed-af6d553d4af4
status: test
description: Detects Obfuscated Powershell via use MSHTA in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task31)
author: Nikita Nazarov, oscd.community
date: 2020-10-09
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: system
detection:
  selection:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
    ImagePath|contains|all:
    - 'mshta'
    - 'vbscript:createobject'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule focuses on detecting obfuscated PowerShell execution through the misuse of the Microsoft HTML Application Host (MSHTA) utility. The rule specifically targets Windows EventID 7045 logs generated by the Service Control Manager, which indicate when a service is created. It looks for instances where the MSHTA application is invoked with a command-line that contains the 'vbscript:createobject' parameter, a common method to execute obfuscated scripts. By monitoring these events, security teams can identify potential attempts to execute hidden or malicious PowerShell commands that evade traditional security measures, thereby raising the alert level to high for further investigation.
  The detection leverages key technical data sources, including logs from Windows operating systems that track service management events. By correlating this information, analysts can gain insights into potentially malicious behaviors orchestrated through obfuscated scripts utilizing MSHTA.
  ### Investigation Steps
  - Review the relevant EventID 7045 logs in the EDR for the specified Provider_Name and ensure that the ImagePath contains both 'mshta' and 'vbscript:createobject.'
  - Use process creation logs to identify the parent-child process relationships around the detected MSHTA invocation to assess if it has originated from a legitimate application or a suspicious source.
  - Check the command-line parameters related to the MSHTA execution in the endpoint logs to uncover any additional obfuscation techniques or parameters that may indicate malicious intent.
  - Investigate the network activity associated with the affected host through NDR tools to see if there are external connections made during the execution timeframe that could correlate with known threat indicators.
