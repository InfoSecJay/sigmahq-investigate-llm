title: Invoke-Obfuscation Via Use MSHTA - System
id: 7e9c7999-0f9b-4d4a-a6ed-af6d553d4af4
status: test
description: Detects Obfuscated Powershell via use MSHTA in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task31)
author: Nikita Nazarov, oscd.community
date: 2020-10-09
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  service: system
detection:
  selection:
    Provider_Name: 'Service Control Manager'
    EventID: 7045
    ImagePath|contains|all:
    - 'mshta'
    - 'vbscript:createobject'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the use of obfuscated PowerShell commands that exploit MSHTA (Microsoft HTML Application Host) to execute malicious scripts. It specifically looks for events generated by the Service Control Manager (SCM) that indicate the registration of new services, particularly those involving the 'mshta' application and the use of 'vbscript:createobject.' This combination is often employed by threat actors to bypass traditional security mechanisms by obfuscating their malicious PowerShell commands. The detection integrates data from the Windows System logs, focusing on Event ID 7045, which signifies when a new service is created. By monitoring these events, security teams can identify suspicious activities aligned with the MITRE ATT&CK techniques for Defense Evasion (T1027) and Execution (T1059.001).
  ### Investigation Steps
  - **Validate the Alert:** Review the corresponding Event ID 7045 logs in the Windows System log to confirm the presence of 'mshta' and 'vbscript:createobject' in the ImagePath.
  - **Analyze Process Creation:** Utilize EDR tools to analyze processes initiated by the detected service. Check for any associated PowerShell commands or unusual execution behavior indicative of obfuscation.
  - **Check Network Activity:** Examine network connection logs for any unusual outbound requests made from the instance where the service was created. Identify the domains being accessed and correlate with known malicious indicators.
  - **Review User Context:** Investigate the user account under which the service was created and their permission levels. Validate whether this user account had legitimate reasons to perform such actions or if it appears compromised.
  ### Prioritization
  This alert is classified as high severity due to the potential for significant impact; obfuscated PowerShell execution via MSHTA is a common tactic used by attackers for malware deployment and command and control purposes. Immediate investigation is warranted to prevent further exploitation.
  ### Blind Spots and Assumptions
  This rule may not fire if the obfuscated PowerShell command does not use the specified patterns or if the malicious actors utilize alternative methods to execute their payloads, such as direct PowerShell usage without MSHTA. Additionally, if the logs are not configured to capture Event ID 7045, this important detection mechanism may be entirely bypassed. Engineers should be aware that legitimate applications can also create services using similar patterns, leading to potential false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
