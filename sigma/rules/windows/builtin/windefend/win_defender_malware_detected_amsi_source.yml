title: Windows Defender AMSI Trigger Detected
id: ea9bf0fa-edec-4fb8-8b78-b119f2528186
status: stable
description: Detects triggering of AMSI by Windows Defender.
references:
- https://learn.microsoft.com/en-us/windows/win32/amsi/how-amsi-helps
author: Bhabesh Raj
date: 2020-09-14
modified: 2022-12-07
tags:
- attack.execution
- attack.t1059
logsource:
  product: windows
  service: windefend
detection:
  selection:
    EventID: 1116     # The antimalware platform detected malware or other potentially unwanted software.
    SourceName: 'AMSI'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The "Windows Defender AMSI Trigger Detected" detection rule identifies instances where the Antimalware Scan Interface (AMSI) within Windows Defender has been invoked. AMSI is designed to provide applications the ability to scan content for malware before execution, allowing Microsoft Defender to analyze potentially malicious scripts or applications. The rule specifically looks for Event ID 1116, which indicates that the antimalware platform detected malware or potentially unwanted software via the AMSI source. This detection leverages logs from Windows Defender and focuses on identifying execution attempts that may signal an adversaryâ€™s use of script-based attacks to deploy malicious payloads. The associated MITRE ATT&CK tactics for this rule fall under "Execution" (TA0002) and the related technique "Command and Scripting Interpreter" (T1059).
  ### Investigation Steps
  - **Confirm the Alert**: Check the Windows Defender alerts in the security dashboard for corroborating evidence of the AMSI trigger, including timestamps and involved processes.
  - **Review Process Creation**: Use EDR tools to trace back to the parent process associated with Event ID 1116 and identify if any anomalous or suspicious processes were spawned.
  - **Inspect Network Activity**: Analyze network logs for outbound connections initiated by the logged processes to correlate any exfiltration or command and control (C2) indicators.
  - **Examine Script and Command Line**: Review any relevant Windows Event Logs (particularly PowerShell logs) for the command-line arguments and scripts executed that resulted in the AMSI alert.
  ### Prioritization
  The high severity level assigned to this alert reflects the critical nature of detecting potential malware activity, as such incidents may indicate attempts to execute malicious scripts that could lead to data breaches or system compromise.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where AMSI is bypassed, such as through the use of obfuscation techniques that prevent detection. Additionally, if the attacker has created a process that does not trigger AMSI or leverages a non-Windows environment for the attack vector, the detection will fail. It is also essential to note that legitimate software updates or benign usage of scripting environments could trigger false positives, although these are considered unlikely.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
