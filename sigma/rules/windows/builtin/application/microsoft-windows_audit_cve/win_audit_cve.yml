title: Audit CVE Event
id: 48d91a3a-2363-43ba-a456-ca71ac3da5c2
status: test
description: |
  Detects events generated by user-mode applications when they call the CveEventWrite API when a known vulnerability is trying to be exploited.
  MS started using this log in Jan. 2020 with CVE-2020-0601 (a Windows CryptoAPI vulnerability.
  Unfortunately, that is about the only instance of CVEs being written to this log.
references:
- https://twitter.com/VM_vivisector/status/1217190929330655232
- https://twitter.com/DidierStevens/status/1217533958096924676
- https://twitter.com/FlemmingRiis/status/1217147415482060800
- https://www.youtube.com/watch?v=ebmW42YYveI     # "CVEs in Windows Event Logs? What You Need to Know" by 13Cubed.
- https://nullsec.us/windows-event-log-audit-cve/
author: Florian Roth (Nextron Systems), Zach Mathis
date: 2020-01-15
modified: 2022-10-22
tags:
- attack.execution
- attack.t1203
- attack.privilege-escalation
- attack.t1068
- attack.defense-evasion
- attack.t1211
- attack.credential-access
- attack.t1212
- attack.lateral-movement
- attack.t1210
- attack.impact
- attack.t1499.004
logsource:
  product: windows
  service: application
detection:
  selection:
    Provider_Name:
    - 'Microsoft-Windows-Audit-CVE'
    - 'Audit-CVE'
    EventID: 1
  condition: selection
falsepositives:
- Unknown
level: critical
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious attempts to exploit known vulnerabilities in Windows applications by monitoring for specific events logged by user-mode applications. By tracking calls to the `CveEventWrite` API, the rule captures events that signal a CVE (Common Vulnerability and Exposures) being exploited or tested. This became relevant starting in January 2020, particularly with the introduction of CVE-2020-0601, a significant vulnerability in the Windows CryptoAPI. The logs monitored by this rule come from the Windows Event Log and include specific identifiers like the `Provider_Name` set to either 'Microsoft-Windows-Audit-CVE' or 'Audit-CVE' along with the event ID 1. Gathering and analyzing these logs is crucial for identifying potential threats and responding to them effectively.
  ### Investigation Steps
  - Review the detailed logs associated with the `CveEventWrite` API calls to determine the context of the exploitation attempt. Pay close attention to the user account involved and the timing of the events.
  - Utilize your EDR tool to examine the process tree leading to the event, identifying any suspicious processes that may have initiated the `CveEventWrite` call. 
  - Cross-reference the originating IP addresses and user accounts with any known malicious indicators using threat intelligence feeds. This will help establish if the behaviours are part of a larger attack pattern.
  - Check additional logs from network devices and proxies to ascertain whether any outbound connections were attempted following the exploitation event, as this could indicate further malicious activity.
