title: MSSQL Disable Audit Settings
id: 350dfb37-3706-4cdc-9e2e-5e24bc3a46df
status: test
description: Detects when an attacker calls the "ALTER SERVER AUDIT" or "DROP SERVER
  AUDIT" transaction in order to delete or disable audit logs on the server
references:
- https://www.netspi.com/blog/technical/network-penetration-testing/sql-server-persistence-part-1-startup-stored-procedures/
- https://learn.microsoft.com/en-us/sql/t-sql/statements/drop-server-audit-transact-sql?view=sql-server-ver16
- https://learn.microsoft.com/en-us/sql/t-sql/statements/alter-server-audit-transact-sql?view=sql-server-ver16
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-13
modified: 2024-06-26
tags:
- attack.defense-evasion
logsource:
  product: windows
  service: application
  definition: 'Requirements: MSSQL audit policy must be enabled in order to receive
    this event in the application log'
    # warning: The 'data' field used in the detection section is the container for the event data as a whole. You may have to adapt the rule for your backend accordingly
detection:
  selection:
    Provider_Name|contains: 'MSSQL'     # Note: We use contains to account for other third party providers - See https://github.com/SigmaHQ/sigma/issues/4876
    EventID: 33205
    Data|contains:
    - 'statement:ALTER SERVER AUDIT'
    - 'statement:DROP SERVER AUDIT'
  condition: selection
falsepositives:
- This event should only fire when an administrator is modifying the audit policy.
  Which should be a rare occurrence once it's set up
level: high
notes: |
  ### Technical Context
  The "MSSQL Disable Audit Settings" detection rule identifies unauthorized attempts to modify or disable auditing capabilities within Microsoft SQL Server. Specifically, it looks for the execution of SQL commands, such as "ALTER SERVER AUDIT" or "DROP SERVER AUDIT," which can be used by attackers to erase evidence of their activities. This rule leverages data from application logs generated by Microsoft SQL Server, focusing on events with Event ID 33205. In order to generate these logs, the MSSQL audit policy needs to be enabled, ensuring that any changes to the auditing configuration are properly recorded. By monitoring for these specific SQL statements, security teams can detect potential malicious activities aimed at undermining the integrity of their auditing framework.
  ### Investigation Steps
  - Review recent application logs from the MSSQL instance to identify the timestamp and context of the detected event for further investigation.
  - Utilize your Endpoint Detection and Response (EDR) tool to assess any related process activity on the SQL Server during the time of the alert, focusing on suspicious or unauthorized user activity.
  - Check user permissions and roles within the SQL Server to determine if the user executing the command had the legitimate authority to modify audit settings.
  - Correlate findings with network traffic logs from your Network Detection and Response (NDR) tool to identify any unusual access patterns indicative of a broader attack strategy.
