title: MSSQL XPCmdshell Option Change
id: d08dd86f-681e-4a00-a92c-1db218754417
status: test
description: |
  Detects when the MSSQL "xp_cmdshell" stored procedure setting is changed.
references:
- https://www.netspi.com/blog/technical/network-penetration-testing/sql-server-persistence-part-1-startup-stored-procedures/
- https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-12
modified: 2024-06-26
tags:
- attack.execution
logsource:
  product: windows
  service: application
    # warning: The 'data' field used in the detection section is the container for the event data as a whole. You may have to adapt the rule for your backend accordingly
detection:
  selection:
    Provider_Name|contains: 'MSSQL'     # Note: We use contains to account for other third party providers - See https://github.com/SigmaHQ/sigma/issues/4876
    EventID: 15457
    Data|contains: 'xp_cmdshell'
  condition: selection
falsepositives:
- Legitimate enable/disable of the setting
- Note that since the event contain the change for both values. This means that this
  will trigger on both enable and disable
level: high
notes: |
  ### Technical Context
  The Sigma rule "MSSQL XPCmdshell Option Change" aims to identify changes in the stored procedure settings of the MSSQL database, specifically focusing on the `xp_cmdshell` option. `xp_cmdshell` allows SQL Server to execute command line commands, which can pose significant security risks if misused or enabled without proper controls. The rule works by monitoring application logs for events generated by the SQL Server when the `xp_cmdshell` option is modified, particularly looking for Event ID 15457, which indicates the setting change. The `Provider_Name` is checked to ensure that the event is associated with MSSQL, and the data payload must contain the string 'xp_cmdshell' to validate the trigger. 
  This detection rule is critical for maintaining the security posture of SQL Server environments, as unauthorized changes to this option could indicate malicious activity or an attempt to maintain persistence within the system.
  ### Investigation Steps
  - Use your EDR tools to investigate the device where the event originated and check for any suspicious processes or activity surrounding the time of the Event ID 15457.
  - Cross-reference the event data with MSSQL logs to determine the user account or application that initiated the change to the `xp_cmdshell` setting.
  - Review network logs from your NDR or firewall appliances to identify any unusual outbound connections or data exfiltration attempts following the setting change.
  - Examine cloud logs if the SQL Server is deployed in platforms like AWS, GCP, or Azure to verify if there were any unauthorized access patterns or configurations related to database access.
