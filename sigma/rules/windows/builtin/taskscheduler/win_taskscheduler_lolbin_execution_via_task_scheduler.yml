title: Scheduled Task Executed Uncommon LOLBIN
id: f0767f15-0fb3-44b9-851e-e8d9a6d0005d
status: test
description: Detects the execution of Scheduled Tasks where the program being run
  is located in a suspicious location or where it is an unusual program to be run
  from a Scheduled Task
references:
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-12-05
modified: 2023-02-07
tags:
- attack.persistence
- attack.t1053.005
logsource:
  product: windows
  service: taskscheduler
  definition: 'Requirements: The "Microsoft-Windows-TaskScheduler/Operational" is
    disabled by default and needs to be enabled in order for this detection to trigger'
detection:
  selection:
    EventID: 129     # Created Task Process
    Path|endswith:
    - '\calc.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\mspaint.exe'
    - '\notepad.exe'
    - '\regsvr32.exe'
            # - '\rundll32.exe'
    - '\wscript.exe'
    # filter_system:
    #     Path|endswith: '\rundll32.exe'
    #     TaskName|startswith: '\Microsoft\Windows\'
    # condition: selection and not 1 of filter_*
  condition: selection
falsepositives:
- False positives may occur with some of the selected binaries if you have tasks using
  them (which could be very common in your environment). Exclude all the specific
  trusted tasks before using this rule
level: medium
notes: |
  n
  ### Technical Context
  The "Scheduled Task Executed Uncommon LOLBIN" detection rule identifies suspicious executions of scheduled tasks (EventID 129) that trigger the use of living-off-the-land binaries (LOLBINs). This rule specifically monitors tasks that utilize certain well-known binaries, such as `calc.exe`, `cscript.exe`, and `mshta.exe`, which might not normally be executed from a task scheduler in an organized enterprise environment. By examining the paths from which these binaries are being executed, the rule helps uncover potentially malicious activity that leverages legitimate processes as a means to evade detection. This monitoring relies on the Task Scheduler operational logs, which by default may not be enabled, making proactive configuration necessary for effective detection. This rule aligns with the MITRE ATT&CK tactic of persistence and specifically targets technique T1053.005, which pertains to scheduled tasks.
  ### Investigation Steps
  - **Check Task Scheduler Activity:** Review the Task Scheduler library on the affected system for details on the scheduled task that triggered the alert. Pay particular attention to the path of the executable and associated actions to determine if they are legitimate.
  - **Correlate with EDR Alerts:** Utilize your Endpoint Detection and Response (EDR) tools to check for any other activities linked to the process execution, such as file modifications or network connections that may indicate malicious behavior.
  - **Assess User Context:** Determine the user account under which the task was executed for any signs of compromise, and review user activity logs in the Security logs for unusual access patterns around the execution time.
  - **Review Additional Sources:** Inspect Proxies and Firewall logs for any outbound connections initiated by the identified process, as well as check cloud service logs if there is any remote interaction related to the scheduled task.
  ### Prioritization
  This alert indicates a medium severity level due to the potential use of trusted system binaries for executing malicious activities through scheduled tasks. Immediate investigation is essential as ignoring these alerts could lead to successful persistence mechanisms in the environment.
  ### Blind Spots and Assumptions
  One significant blind spot for this rule is its reliance on the configuration of Task Scheduler logs, which might not be enabled in all environments, potentially causing missed detections. Additionally, environments with widely used scheduled tasks that legitimately employ the monitored binaries may produce false positives. Analysts should consider context and patterns of execution, as sophisticated adversaries may rename or hide their tools to blend in with legitimate operations, making detection more challenging.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
