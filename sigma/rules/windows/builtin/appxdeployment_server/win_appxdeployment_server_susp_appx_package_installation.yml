title: Suspicious AppX Package Installation Attempt
id: 898d5fc9-fbc3-43de-93ad-38e97237c344
status: test
description: Detects an appx package installation with the error code "0x80073cff"
  which indicates that the package didn't meet the signing requirements and could
  be suspicious
references:
- Internal Research
- https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/
- https://learn.microsoft.com/en-us/windows/win32/appxpkg/troubleshooting
- https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-11
tags:
- attack.defense-evasion
logsource:
  product: windows
  service: appxdeployment-server
detection:
  selection:
    EventID: 401
    ErrorCode: '0x80073cff'     # Check ref section to learn more about this error code
  condition: selection
falsepositives:
- Legitimate AppX packages not signed by MS used part of an enterprise
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Suspicious AppX Package Installation Attempt" is designed to detect attempts to install AppX packages in Windows environments that fail to meet the signing requirements. Specifically, it focuses on instances where the error code "0x80073cff" is generated during the installation process. This error indicates that the package in question is either not properly signed or does not conform to expected security protocols, raising potential red flags for being a source of attack or malware delivery. The primary data sources involved are log entries from the AppX Deployment Server, which capture events related to package installations, including the specific Event ID 401 that is referenced in the rule.
  ### Investigation Steps
  - Use EDR tools to search for any recent AppX installation attempts that generated the Event ID 401, particularly focusing on those that returned the error code "0x80073cff."
  - Review the command-line parameters and installation context through the EDR to determine the source of the package and whether it originated from a verified location.
  - Check proxy logs for any inbound or outbound connections that coincide with the time of the installation attempt, which may indicate a connection to a potentially malicious server.
  - Analyze Windows Defender or other AV logs to see if the attempted installation initiated any alerts, providing additional context on whether the package was flagged.
