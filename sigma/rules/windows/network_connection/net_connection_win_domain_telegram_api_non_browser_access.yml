title: Suspicious Non-Browser Network Communication With Telegram API
id: c3dbbc9f-ef1d-470a-a90a-d343448d5875
status: test
description: Detects an a non-browser process interacting with the Telegram API which
  could indicate use of a covert C2
references:
- https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/small-sieve/NCSC-MAR-Small-Sieve.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-19
tags:
- attack.command-and-control
- attack.t1102
logsource:
  product: windows
  category: network_connection
detection:
  selection:
    DestinationHostname|contains: 'api.telegram.org'
    # Other browsers or apps known to use telegram should be added
    # TODO: Add full paths for default install locations
  filter_main_brave:
    Image|endswith: '\brave.exe'
  filter_main_chrome:
    Image:
    - 'C:\Program Files\Google\Chrome\Application\chrome.exe'
    - 'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'
  filter_main_firefox:
    Image:
    - 'C:\Program Files\Mozilla Firefox\firefox.exe'
    - 'C:\Program Files (x86)\Mozilla Firefox\firefox.exe'
  filter_main_ie:
    Image:
    - 'C:\Program Files (x86)\Internet Explorer\iexplore.exe'
    - 'C:\Program Files\Internet Explorer\iexplore.exe'
  filter_main_maxthon:
    Image|endswith: '\maxthon.exe'
  filter_main_edge_1:
  - Image|startswith: 'C:\Program Files (x86)\Microsoft\EdgeWebView\Application\'
  - Image|endswith: '\WindowsApps\MicrosoftEdge.exe'
  - Image:
    - 'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe'
    - 'C:\Program Files\Microsoft\Edge\Application\msedge.exe'
  filter_main_edge_2:
    Image|startswith:
    - 'C:\Program Files (x86)\Microsoft\EdgeCore\'
    - 'C:\Program Files\Microsoft\EdgeCore\'
    Image|endswith:
    - '\msedge.exe'
    - '\msedgewebview2.exe'
  filter_main_opera:
    Image|endswith: '\opera.exe'
  filter_main_safari:
    Image|endswith: '\safari.exe'
  filter_main_seamonkey:
    Image|endswith: '\seamonkey.exe'
  filter_main_vivaldi:
    Image|endswith: '\vivaldi.exe'
  filter_main_whale:
    Image|endswith: '\whale.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Legitimate applications communicating with the Telegram API e.g. web browsers not
  in the exclusion list, app with an RSS  etc.
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify suspicious network communications with the Telegram API that originate from non-browser applications. The core functionality of the rule revolves around monitoring network connections to the hostname “api.telegram.org” while ensuring that these connections do not originate from recognized browsers such as Chrome, Firefox, or Edge. By implementing a series of filters based on application image paths, the rule effectively discriminates between legitimate browser activity and potentially malicious behavior indicative of covert command-and-control (C2) operations. The rule is tagged with the MITRE ATT&CK tactics of Command and Control (T1102), as it seeks to detect the potential misuse of a legitimate communication platform for nefarious purposes.
  ### Investigation Steps
  - **Check Network Connections:** Use EDR or firewall logs to identify non-browser processes making outbound connections to “api.telegram.org” and gather details such as timestamps and source IP addresses.
  - **Review Process Activity:** Utilize process creation logs (Sysmon) to assess the specific processes involved in the network communication and analyze their parent processes to understand their origin.
  - **Analyze File Behavior:** Investigate any associated files or executables linked to the detected processes; EDR can provide insights into file paths and modification timestamps that may indicate unusual behavior.
  - **Correlate with Threat Intelligence:** Crosscheck the identified processes against known threat intelligence databases to determine if they have been associated with any previous malicious activity or campaigns.
  ### Prioritization
  The severity level for this alert is considered medium due to the potential for non-browser applications to be used as vehicles for covert C2 activities, which can lead to data exfiltration or further compromise of the environment.
  ### Blind spots and Assumptions
  The rule may not trigger in scenarios where legitimate applications outside the defined browser list access the Telegram API, such as custom tools or scripts that are not broadly recognized or monitored. There is an assumption that all relevant browser applications are correctly covered in the exclusion list; any omissions may allow for undetected malicious behavior. Furthermore, adversaries may employ techniques such as traffic obfuscation or custom application signatures to bypass detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
