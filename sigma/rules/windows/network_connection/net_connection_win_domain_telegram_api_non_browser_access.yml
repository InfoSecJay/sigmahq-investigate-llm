title: Suspicious Non-Browser Network Communication With Telegram API
id: c3dbbc9f-ef1d-470a-a90a-d343448d5875
status: test
description: Detects an a non-browser process interacting with the Telegram API which
  could indicate use of a covert C2
references:
- https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/small-sieve/NCSC-MAR-Small-Sieve.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-19
tags:
- attack.command-and-control
- attack.t1102
logsource:
  product: windows
  category: network_connection
detection:
  selection:
    DestinationHostname|contains: 'api.telegram.org'
    # Other browsers or apps known to use telegram should be added
    # TODO: Add full paths for default install locations
  filter_main_brave:
    Image|endswith: '\brave.exe'
  filter_main_chrome:
    Image:
    - 'C:\Program Files\Google\Chrome\Application\chrome.exe'
    - 'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'
  filter_main_firefox:
    Image:
    - 'C:\Program Files\Mozilla Firefox\firefox.exe'
    - 'C:\Program Files (x86)\Mozilla Firefox\firefox.exe'
  filter_main_ie:
    Image:
    - 'C:\Program Files (x86)\Internet Explorer\iexplore.exe'
    - 'C:\Program Files\Internet Explorer\iexplore.exe'
  filter_main_maxthon:
    Image|endswith: '\maxthon.exe'
  filter_main_edge_1:
  - Image|startswith: 'C:\Program Files (x86)\Microsoft\EdgeWebView\Application\'
  - Image|endswith: '\WindowsApps\MicrosoftEdge.exe'
  - Image:
    - 'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe'
    - 'C:\Program Files\Microsoft\Edge\Application\msedge.exe'
  filter_main_edge_2:
    Image|startswith:
    - 'C:\Program Files (x86)\Microsoft\EdgeCore\'
    - 'C:\Program Files\Microsoft\EdgeCore\'
    Image|endswith:
    - '\msedge.exe'
    - '\msedgewebview2.exe'
  filter_main_opera:
    Image|endswith: '\opera.exe'
  filter_main_safari:
    Image|endswith: '\safari.exe'
  filter_main_seamonkey:
    Image|endswith: '\seamonkey.exe'
  filter_main_vivaldi:
    Image|endswith: '\vivaldi.exe'
  filter_main_whale:
    Image|endswith: '\whale.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Legitimate applications communicating with the Telegram API e.g. web browsers not
  in the exclusion list, app with an RSS  etc.
level: medium
notes: |
  ### Technical Context
  This detection rule identifies potentially suspicious network activity originating from non-browser applications that communicate with the Telegram API, specifically targeting `api.telegram.org`. By monitoring network connection logs, the rule filters out known web browsers to prevent false positives, allowing only alerts from other applications that interact with the Telegram API. The focus on non-browser processes is crucial as it may indicate covert command and control (C2) behavior, which is characteristic of many malicious activities. The logs examined for this rule include the destination hostname and the process image, allowing the alert to capture unauthorized or unexpected connections to the Telegram service.
  ### Investigation Steps
  - Review EDR logs for the specific process identified in the alert to gather additional context on its behavior and determine if it is a legitimate application or a potential threat.
  - Check network logs on the NGFW for any unusual outbound communication to `api.telegram.org`, and correlate with timestamps from the EDR to understand the extent of the application's activity.
  - Inspect the command-line parameters of the flagged process for any suspicious commands or arguments that could indicate malicious intent or unauthorized activity.
  - Analyze proxy or VPN logs to see if there were any recent anomalies or patterns related to the flagged applicationâ€™s traffic, which may provide deeper insight into its purpose and legitimacy.
