title: Silenttrinity Stager Msbuild Activity
id: 50e54b8d-ad73-43f8-96a1-5191685b17a4
status: test
description: Detects a possible remote connections to Silenttrinity c2
references:
- https://www.blackhillsinfosec.com/my-first-joyride-with-silenttrinity/
author: Kiran kumar s, oscd.community
date: 2020-10-11
modified: 2022-10-05
tags:
- attack.execution
- attack.t1127.001
logsource:
  category: network_connection
  product: windows
detection:
  selection:
    Image|endswith: '\msbuild.exe'
  filter:
    DestinationPort:
    - 80
    - 443
    Initiated: 'true'
  condition: selection and filter
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "Silenttrinity Stager Msbuild Activity" detection rule focuses on identifying potential Command and Control (C2) communication specific to Silent Trinity exploits. This malware framework often utilizes Microsoft Build Engine (MsBuild) as a stager to facilitate remote connections. The telemetry data involved in this detection primarily includes network connection logs that capture outbound communication attempts initiated by processes running MsBuild. The rule looks specifically for instances where MsBuild is attempted to connect to remote destinations on common web traffic ports (80 and 443). This falls under the MITRE ATT&CK tactic of Execution and specifically targets the technique T1127.001, which is centered around task automation and the execution of malicious actions using legitimate software tools.
  ### Investigation Steps
  - **Check Network Connections:** Review EDR or network logging solutions for connections initiated by msbuild.exe, particularly targeting ports 80 and 443 for any suspicious activity.
    
  - **Analyze Process Creation Logs:** Investigate Windows Process Creation logs to confirm if msbuild.exe was executed from an expected location or if it appears suspiciously initiated by other unknown processes.
    
  - **Validate Command Arguments:** Examine command-line arguments of the msbuild.exe process to detect any unusual parameters that could indicate malicious execution or connection attempts.
    
  - **Review Endpoint Security Alerts:** Correlate findings with alerts from AV or EDR tools for known indicators of compromise associated with Silent Trinity or similar C2 frameworks.
  ### Prioritization
  This alert carries a high-severity level due to the potential implication of C2 communication, indicating that an endpoint could be compromised and actively communicating with an external entity, posing a serious security risk to the enterprise.
  ### Blind Spots and Assumptions
  One recognized blind spot is the reliance on the use of specific ports (80 and 443), which could lead to false negatives if attackers utilize other ports for C2 communication. Additionally, if the msbuild.exe execution is masked as part of legitimate administrative tasks or automated processes, it may evade detection. Furthermore, this rule assumes proper logging configurations are in place and that outbound connections are monitored adequately; if firewalls restrict external traffic, these communications might never be logged.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
