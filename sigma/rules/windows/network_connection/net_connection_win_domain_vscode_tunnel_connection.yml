title: Network Connection Initiated To Visual Studio Code Tunnels Domain
id: 4b657234-038e-4ad5-997c-4be42340bce4
related:
- id: 9501f8e6-8e3d-48fc-a8a6-1089dd5d7ef4     # Net Connection DevTunnels
  type: similar
- id: b3e6418f-7c7a-4fad-993a-93b65027a9f1     # DNS VsCode
  type: similar
- id: 1cb0c6ce-3d00-44fc-ab9c-6d6d577bf20b     # DNS DevTunnels
  type: similar
status: test
description: |
  Detects network connections to Visual Studio Code tunnel domains initiated by a process on a system. Attackers can abuse that feature to establish a reverse shell or persistence on a machine.
references:
- https://ipfyx.fr/post/visual-studio-code-tunnel/
- https://badoption.eu/blog/2023/01/31/code_c2.html
- https://cydefops.com/vscode-data-exfiltration
author: Kamran Saifullah
date: 2023-11-20
tags:
- attack.exfiltration
- attack.t1567.001
logsource:
  category: network_connection
  product: windows
detection:
  selection:
    Initiated: 'true'
    DestinationHostname|endswith: '.tunnels.api.visualstudio.com'
  condition: selection
falsepositives:
- Legitimate use of Visual Studio Code tunnel will also trigger this.
level: medium
notes: |
  ### Technical Context
  This detection rule identifies network connections initiated from systems to Visual Studio Code tunnel domains (specifically, those ending with '.tunnels.api.visualstudio.com'). It is important to monitor for these connections as attackers can exploit the Visual Studio Code tunneling feature to establish reverse shells or maintain persistence within a compromised environment. The rule leverages network connection logs that capture details about the initiated connections, including pertinent metadata such as the destination hostname. By specifically looking for connections deemed as initiated, the rule can differentiate between normal usage and potentially malicious activities, thereby highlighting suspicious behavior associated with unauthorized remote access attempts.
  ### Investigation Steps
  - Utilize EDR tools to identify and isolate the process that initiated the connection to the Visual Studio Code tunnel domain. Investigate the process's legitimacy, checking for any unusual behavior or known threats.
  - Review network logs through your NGFW or NDR systems to assess the volume of connections made to the specified tunnel domain and identify any patterns that may indicate automated or unintended access.
  - Examine command-line parameters of the initiating process for suspicious flags or parameters that might indicate exploitation attempts or unauthorized usage of the Visual Studio Code tunneling feature.
  - Cross-reference the affected endpoints with asset management systems to validate whether the usage of Visual Studio Code tunnels aligns with authorized uses within your organization's operational procedures.
