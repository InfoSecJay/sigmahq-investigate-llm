title: Python Initiated Connection
id: bef0bc5a-b9ae-425d-85c6-7b2d705980c6
status: test
description: Detects a Python process initiating a network connection. While this
  often relates to package installation, it can also indicate a potential malicious
  script communicating with a C&C server.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1046/T1046.md#atomic-test-4---port-scan-using-python
- https://pypi.org/project/scapy/
author: frack113
date: 2021-12-10
modified: 2025-01-20
tags:
- attack.discovery
- attack.t1046
logsource:
  category: network_connection
  product: windows
  definition: 'Requirements: Field enrichment is required for the filters to work.
    As field such as CommandLine and ParentImage are not available by default on this
    event type'
detection:
  selection:
    Initiated: 'true'
    Image|contains: 'python'
  filter_optional_conda:
        # Related to anaconda updates. Command example: "conda update conda"
        # This filter will only work with aurora agent enriched data as Sysmon EID 3 doesn't contain CommandLine nor ParentImage
    ParentImage: C:\ProgramData\Anaconda3\Scripts\conda.exe
    CommandLine|contains|all:
    - ':\ProgramData\Anaconda3\Scripts\conda-script.py'
    - 'update'
  filter_optional_conda_jupyter_notebook:
        # Related to anaconda opening an instance of Jupyter Notebook
        # This filter will only work with aurora agent enriched data as Sysmon EID 3 doesn't contain CommandLine nor ParentImage
    ParentImage: C:\ProgramData\Anaconda3\python.exe
    CommandLine|contains: 'C:\ProgramData\Anaconda3\Scripts\jupyter-notebook-script.py'
  filter_main_local_communication:
        # This could be caused when launching an instance of Jupyter Notebook locally for example but can also be caused by other instances of python opening sockets locally etc. So comment this out if you want to monitor for those instances
    DestinationIp: 127.0.0.1
    SourceIp: 127.0.0.1
  filter_main_pip:
    CommandLine|contains|all:
    - 'pip.exe'
    - 'install'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Legitimate python scripts using the socket library or similar will trigger this.
  Apply additional filters and perform an initial baseline before deploying.
level: medium
notes: |
  ### Technical Context
  The "Python Initiated Connection" detection rule identifies instances where a Python process on a Windows system attempts to establish a network connection. While this behavior is frequently associated with legitimate tasks such as package installation, it also raises potential red flags for malicious activities, including communication with command-and-control (C&C) servers. The rule operates by analyzing network connection logs from the Windows environment for indicators that a Python executable is initiating these connections. Key data sources include process creation logs enriched with command-line parameters and parent image details, which help distinguish between benign and potentially harmful Python activities.
  The rule is designed with various optional filters to narrow down the focus on processes that may indicate benign activities, such as those triggered by Anaconda updates or Jupyter Notebook instances. However, those optional filters also allow flexibility for investigators to adjust the rule based on the specific behaviors observed in their environment.
  ### Investigation Steps
  - Examine the EDR logs to identify the Python process and its command-line arguments associated with the initiated connections.
  - Review the network logs for any unusual external IP addresses that the Python executable attempted to connect to, correlating with times of the alert.
  - Check the context around the Python process in the SIEM, specifically looking for related events or any parent processes that could indicate legitimate or malicious activity.
  - If available, analyze the cloud logs for any corresponding actions or changes made by the user or system that may align with the activity of the detected Python process.
