title: Potential Credential Dumping Activity Via LSASS
id: 5ef9853e-4d0e-4a70-846f-a9ca37d876da
status: test
description: |
  Detects process access requests to the LSASS process with specific call trace calls and access masks.
  This behaviour is expressed by many credential dumping tools such as Mimikatz, NanoDump, Invoke-Mimikatz, Procdump and even the Taskmgr dumping feature.
references:
- https://web.archive.org/web/20230329170326/https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html
- https://web.archive.org/web/20230208123920/https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.001/T1003.001.md
- https://research.splunk.com/endpoint/windows_possible_credential_dumping/
author: Samir Bousseaden, Michael Haag
date: 2019-04-03
modified: 2024-03-02
tags:
- attack.credential-access
- attack.t1003.001
- attack.s0002
logsource:
  category: process_access
  product: windows
detection:
  selection:
    TargetImage|endswith: '\lsass.exe'
    GrantedAccess|contains:
    - '0x1038'
    - '0x1438'
    - '0x143a'
    - '0x1fffff'         # Too many false positives
            # - '0x01000'  # Too many false positives
            # - '0x1010'   # Too many false positives
            # - '0x1400'  # Too many false positives
            # - '0x1410' # Too many false positives
            # - '0x40'   # Too many false positives
    CallTrace|contains:
    - 'dbgcore.dll'
    - 'dbghelp.dll'
    - 'kernel32.dll'
    - 'kernelbase.dll'
    - 'ntdll.dll'
  filter_main_system_user:
    SourceUser|contains:     # Covers many language settings
    - 'AUTHORI'
    - 'AUTORI'
  filter_optional_thor:
    CallTrace|contains|all:
    - ':\Windows\Temp\asgard2-agent\'
    - '\thor\thor64.exe+'
    - '|UNKNOWN('
    GrantedAccess: '0x103800'
  filter_optional_sysmon:
    SourceImage|endswith: ':\Windows\Sysmon64.exe'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule targets potential credential dumping activities that may occur through the Local Security Authority Subsystem Service (LSASS) process, commonly exploited by various tools like Mimikatz and Procdump. The rule strategically identifies specific process access requests to the LSASS process, focusing on notable access rights and call traces indicative of malicious intent. The detection relies on monitoring data from process access logs, which capture key elements such as the `TargetImage` (specifically looking for `lsass.exe`), `GrantedAccess` flags (that indicate which permissions are being requested), and the `CallTrace` to pinpoint the libraries being utilized during these access attempts. This rule corresponds to the MITRE ATT&CK tactic of Credential Access, specifically technique T1003.001 (Credential Dumping: LSASS Memory).
  ### Investigation Steps
  - **Review Process Access Logs:** Utilize EDR tools to review the process access logs for any recent requests to the LSASS process that match the criteria outlined in the alert.
  - **Analyze User Context:** Investigate the source user associated with the LSASS access requests to ascertain whether the activity is legitimate or indicative of possible compromise.
  - **Examine Call Trace Information:** Retrieve detailed call trace data from the logs to identify which libraries were engaged during the process access, confirming if they match known credential dumping techniques.
  - **Correlate with Threat Intelligence:** Utilize threat intelligence platforms to correlate the activity with known malicious actors or tools, enriching the context of the alert.
  ### Prioritization
  The severity level for this alert is classified as medium, reflecting the potential risk associated with unauthorized access to LSASS. Given that this access could lead to the extraction of sensitive credentials, it warrants prompt investigation to determine if it indicates a deeper compromise.
  ### Blind Spots and Assumptions
  There are potential blind spots in this rule, including scenarios where malicious actors may use legitimate tools or scripts to access LSASS without triggering the defined behaviors or specific call traces. Additionally, if process access is conducted by a trusted application under normal operational conditions, the rule may not fire, leading to missed detections. Analysts should also note that variants of credential dumping techniques might not exhibit the identified access masks or call traces, influencing detection efficacy.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
