title: Credential Dumping Activity By Python Based Tool
id: f8be3e82-46a3-4e4e-ada5-8e538ae8b9c9
related:
- id: 4b9a8556-99c4-470b-a40c-9c8d02c77ed0
  type: obsolete
- id: 7186e989-4ed7-4f4e-a656-4674b9e3e48b
  type: obsolete
status: stable
description: Detects LSASS process access for potential credential dumping by a Python-like
  tool such as LaZagne or Pypykatz.
references:
- https://twitter.com/bh4b3sh/status/1303674603819081728
- https://github.com/skelsec/pypykatz
author: Bhabesh Raj, Jonhnathan Ribeiro
date: 2023-11-27
modified: 2023-11-29
tags:
- attack.credential-access
- attack.t1003.001
- attack.s0349
logsource:
  category: process_access
  product: windows
detection:
  selection:
    TargetImage|endswith: '\lsass.exe'
    CallTrace|contains|all:
    - '_ctypes.pyd+'
    - ':\Windows\System32\KERNELBASE.dll+'
    - ':\Windows\SYSTEM32\ntdll.dll+'
    CallTrace|contains:
    - 'python27.dll+'
    - 'python3*.dll+'
    GrantedAccess: '0x1FFFFF'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect credential dumping activities targeting the Local Security Authority Subsystem Service (LSASS) process on Windows systems through tools that utilize Python, such as LaZagne or Pypykatz. The rule operates by analyzing logs for specific access attempts to the LSASS process (identified by the `TargetImage` field) and examining the call trace for signs of manipulation consistent with Python-based tools. It particularly looks for access attempts where the `GrantedAccess` value includes high levels of permission (indicated by `0x1FFFFF`), which is often required for memory dumping operations. The rule falls under the MITRE ATT&CK framework, specifically the Credential Access tactic (T1003.001), indicating a focused effort to capture sensitive credential information from memory.
  ### Investigation Steps
  - **Check EDR Alerts:** Review the Endpoint Detection and Response (EDR) system for alerts linked to unsanctioned access to the LSASS process to confirm any suspicious activity.
  - **Review Sysmon Logs:** Analyze Sysmon logs for `Process Access` events corresponding to `lsass.exe` to identify potential unauthorized access attempts.
  - **Correlate with Security Logs:** Investigate Windows Security logs for any authentication events that may correlate with the detected process accesses to understand the context of the activity.
  - **Analyze Network Traffic:** Use network logs to check for any unusual outbound connections from the host where the LSASS access was flagged, which could indicate data exfiltration attempts.
  ### Prioritization
  This alert is classified as high severity due to the nature of credential dumping, which poses significant risks to the security posture of the organization, including unauthorized access to sensitive data and potential system compromise.
  ### Blind Spots and Assumptions
  This rule may not detect credential dumping activity if the attacker uses alternate methods to access LSASS (e.g., using a different scripting language or compiled executables). Additionally, if the Python Runtime Libraries (DLLs) are not present on the system, the rule may fail to trigger. The rule assumes that logs for Sysmon process access and call traces are correctly configured and retained; if logging is insufficient or manipulated by an adversary, detection may be compromised.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
