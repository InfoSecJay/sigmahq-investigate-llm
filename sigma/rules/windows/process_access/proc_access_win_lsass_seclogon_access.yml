title: Suspicious LSASS Access Via MalSecLogon
id: 472159c5-31b9-4f56-b794-b766faa8b0a7
status: test
description: Detects suspicious access to LSASS handle via a call trace to "seclogon.dll"
  with a suspicious access right.
references:
- https://twitter.com/SBousseaden/status/1541920424635912196
- https://github.com/elastic/detection-rules/blob/2bc1795f3d7bcc3946452eb4f07ae799a756d94e/rules/windows/credential_access_lsass_handle_via_malseclogon.toml
- https://splintercod3.blogspot.com/p/the-hidden-side-of-seclogon-part-3.html
author: Samir Bousseaden (original elastic rule), Nasreddine Bencherchali (Nextron
  Systems)
date: 2022-06-29
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  category: process_access
  product: windows
detection:
  selection:
    TargetImage|endswith: '\lsass.exe'
    SourceImage|endswith: '\svchost.exe'
    GrantedAccess: '0x14c0'
    CallTrace|contains: 'seclogon.dll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Suspicious LSASS Access Via MalSecLogon" Sigma rule is designed to identify potentially malicious behavior targeting the Local Security Authority Subsystem Service (LSASS), a crucial component of Windows responsible for enforcing security policies and managing login credentials. This rule specifically looks for instances where a process, typically `svchost.exe`, is granted suspicious access rights (specifically the hexadecimal code `0x14c0`, which denotes read and write access) to the LSASS process (`lsass.exe`). The detection hinges on the presence of a function call trace containing `seclogon.dll`, which is associated with credential management and manipulation.
  By leveraging the process access logs from Windows Sysmon, this rule correlates detailed telemetry concerning process interactions to flag potential credential theft or manipulation attempts, aligning with the MITRE ATT&CK framework's detection of credential access under the technique T1003.001. Organizations can benefit from this rule as it acts as an early warning mechanism against malicious activities potentially leading to data breaches or unauthorized access.
  ### Investigation Steps
  - **Verify Process Context:** Check the EDR solution for details about the `svchost.exe` process, including its parent process and any unusual command-line arguments that might suggest malicious activity related to LSASS access.
  - **Analyze Call Traces:** Utilize SIEM tools to examine the call traces of the detected process for any unusual functions or modules that indicate malicious tampering or credential harvesting attempts.
  - **Review Associated Activity:** Investigate related events in Windows Security and Sysmon logs, focusing on authentication attempts or other process creations that occurred around the same time frame as the alert.
  - **Identify Network Communications:** Examine network logs (e.g., from the NGFW or NDR) to see if there were any external communications from the detected host that may indicate data exfiltration or command and control communications following the suspicious access.
  ### Prioritization
  Given the nature of the LSASS process and its critical role in handling sensitive credential information, alerts generated by this rule are considered high severity. Unauthorized access to LSASS can lead to serious security incidents and data breaches, which necessitate swift investigation and response.
  ### Blind Spots and Assumptions
  The effectiveness of this rule may be limited by several factors including:
  - **Obfuscated Access:** Adversaries might utilize alternative access methods or tools that do not trigger this detection, such as using non-standard services that interact with LSASS or employing custom payloads.
  - **Tuning Required:** The rule depends on specific patterns related to access rights and call traces, so environments with legitimate applications that operate similarly may produce false positives, leading to alert fatigue.
  - **Potential Logging Gaps:** If Sysmon or Windows logging is not correctly configured or is turned off on certain endpoints, this detection may not fire, leaving gaps in visibility.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
