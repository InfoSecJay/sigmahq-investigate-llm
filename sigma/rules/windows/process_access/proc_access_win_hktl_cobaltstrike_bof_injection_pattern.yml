title: HackTool - CobaltStrike BOF Injection Pattern
id: 09706624-b7f6-455d-9d02-adee024cee1d
status: test
description: Detects a typical pattern of a CobaltStrike BOF which inject into other
  processes
references:
- https://github.com/boku7/injectAmsiBypass
- https://github.com/boku7/spawn
author: Christian Burkard (Nextron Systems)
date: 2021-08-04
modified: 2023-11-28
tags:
- attack.execution
- attack.t1106
- attack.defense-evasion
- attack.t1562.001
logsource:
  category: process_access
  product: windows
detection:
  selection:
    CallTrace|re: '^C:\\Windows\\SYSTEM32\\ntdll\.dll\+[a-z0-9]{4,6}\|C:\\Windows\\System32\\KERNELBASE\.dll\+[a-z0-9]{4,6}\|UNKNOWN\([A-Z0-9]{16}\)$'
    GrantedAccess:
    - '0x1028'
    - '0x1fffff'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies patterns typically associated with the Cobalt Strike framework, specifically its Beacon Object File (BOF) injection technique. By monitoring process access events, the rule looks for specific patterns in call traces where the `ntdll.dll` or `KERNELBASE.dll` libraries are involved in process access attempts. These patterns indicate potential injections into other processes, a common tactic used by adversaries to maintain persistence and evade detection. The rule leverages data from Windows Event Logs, focusing particularly on `process_access` events to catch these suspicious activities. The detection aligns with multiple MITRE ATT&CK techniques, specifically T1106 (Native API), T1562.001 (Impair Defenses: Disable or Modify Tools), and falls under the Execution tactic related to malicious command execution within a system.
  ### Investigation Steps
  - **Verify the Source Process**: Check the EDR tool for the source process involved in the detected activity. Analyze its command line parameters and associated user context to assess legitimacy. 
  - **Review Parent-Child Process Relationships**: Investigate the process hierarchy in the EDR logs. This may reveal any unusual parent-child relationships indicative of injection techniques, such as a benign process spawning a suspicious child.
  - **Analyze Call Trace Details**: Extract and evaluate call trace data, looking specifically for the identified patterns in `ntdll.dll` and `KERNELBASE.dll`. This information can help confirm whether the behavior matches known malicious techniques.
  - **Examine Network Activity**: Inspect network logs through the firewall or proxy systems to identify any unusual external communications corresponding to the time of the event. This may indicate potential Command and Control (C2) communication.
  ### Prioritization
  The alert is deemed high severity due to the critical risk posed by Cobalt Strike's capabilities for evasion and lateral movement within an enterprise environment. Successful exploitation could lead to more profound compromises or data breaches.
  ### Blind Spots and Assumptions
  This rule may not trigger in environments where certain processes are whitelisted, or where call trace logging is disabled or insufficiently detailed. Additionally, legitimate applications that use similar techniques for valid reasons might inadvertently trigger false positives. An adversary could also employ techniques to obfuscate their process access patterns, potentially evading detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
