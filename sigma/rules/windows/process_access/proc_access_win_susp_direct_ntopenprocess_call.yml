title: Potential Direct Syscall of NtOpenProcess
id: 3f3f3506-1895-401b-9cc3-e86b16e630d0
status: test
description: Detects potential calls to NtOpenProcess directly from NTDLL.
references:
- https://medium.com/falconforce/falconfriday-direct-system-calls-and-cobalt-strike-bofs-0xff14-741fa8e1bdd6
author: Christian Burkard (Nextron Systems), Tim Shelton (FP)
date: 2021-07-28
modified: 2023-12-13
tags:
- attack.execution
- attack.t1106
logsource:
  category: process_access
  product: windows
detection:
  selection:
    CallTrace|startswith: 'UNKNOWN'
  filter_main_vcredist:
    TargetImage|endswith: 'vcredist_x64.exe'
    SourceImage|endswith: 'vcredist_x64.exe'
  filter_main_generic:
        # Examples include "systeminfo", "backgroundTaskHost", "AUDIODG"
    SourceImage|contains:
    - ':\Program Files (x86)\'
    - ':\Program Files\'
    - ':\Windows\System32\'
    - ':\Windows\SysWOW64\'
    - ':\Windows\WinSxS\'
    TargetImage|contains:
    - ':\Program Files (x86)\'
    - ':\Program Files\'
    - ':\Windows\System32\'
    - ':\Windows\SysWOW64\'
    - ':\Windows\WinSxS\'
  filter_main_kerneltrace_edge:
        # Cases in which the CallTrace is just e.g. 'UNKNOWN(19290435374)' from Microsoft-Windows-Kernel-Audit-API-Calls provider
    Provider_Name: 'Microsoft-Windows-Kernel-Audit-API-Calls'
  filter_optional_vmware:
    TargetImage|endswith: ':\Windows\system32\systeminfo.exe'
    SourceImage|endswith: 'setup64.exe'     # vmware
  filter_optional_cylance:
    SourceImage|endswith: ':\Windows\Explorer.EXE'
    TargetImage|endswith: ':\Program Files\Cylance\Desktop\CylanceUI.exe'
  filter_optional_amazon:
    SourceImage|endswith: 'AmazonSSMAgentSetup.exe'
    TargetImage|endswith: 'AmazonSSMAgentSetup.exe'
  filter_optional_vscode:   # VsCode
    SourceImage|endswith: '\AppData\Local\Programs\Microsoft VS Code\Code.exe'
    TargetImage|endswith: '\AppData\Local\Programs\Microsoft VS Code\Code.exe'
  filter_optional_teams:   # MS Teams
    TargetImage|endswith: '\AppData\Local\Microsoft\Teams\current\Teams.exe'
    SourceImage|endswith: '\AppData\Local\Microsoft\Teams\current\Teams.exe'
  filter_optional_discord:   # Discord
    TargetImage|contains: '\AppData\Local\Discord\'
    TargetImage|endswith: '\Discord.exe'
  filter_optional_yammer:
    SourceImage|contains: '\AppData\Local\yammerdesktop\app-'
    SourceImage|endswith: '\Yammer.exe'
    TargetImage|contains: '\AppData\Local\yammerdesktop\app-'
    TargetImage|endswith: '\Yammer.exe'
    GrantedAccess: '0x1000'
  filter_optional_evernote:
    TargetImage|endswith: '\Evernote\Evernote.exe'
  filter_optional_adobe_acrobat:
    SourceImage|contains: ':\Program Files\Adobe\Acrobat DC\Acrobat\'
    SourceImage|endswith: '\AcroCEF.exe'
    TargetImage|contains: ':\Program Files\Adobe\Acrobat DC\Acrobat\'
    TargetImage|endswith: '\AcroCEF.exe'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential direct system calls to the `NtOpenProcess` function from the NTDLL. This function is crucial for accessing a process's handle and is often used in legitimate applications. However, its use in conjunction with suspicious behavior may indicate malicious intent, particularly when it is invoked by process images typically associated with benign operations. The primary data sources leveraged by this rule are process access logs, which capture details about process handle requests, including the calling context of these requests. The rule is associated with the MITRE ATT&CK technique T1106 (Execution through API). The detection logic specifically looks for call traces marked as "UNKNOWN," suggesting that the source of the call cannot be easily determined, thus necessitating further investigation.
  ### Investigation Steps
  - **Review Process Access Logs:** Analyze the process access logs through your EDR solution to identify occurrences of `NtOpenProcess` invoked by suspicious or unexpected source images.
    
  - **Cross-reference Source and Target Images:** Use Windows Event Logs to verify the legitimacy of the source and target images involved. Look for matches with known software paths and evaluate if any images show unusual or unexpected behavior.
    
  - **Correlate with Other Security Tools:** Check alerts from AV, NGFW, and NDR tools to see if similar activities were flagged, potentially pointing to a broader attack pattern or additional context for the alert.
    
  - **Examine Call Trace Context:** Investigate the call trace context further using Sysmon logs or similar logging tools to ascertain if this event fits within known malicious patterns or behaviors.
  ### Prioritization
  The alert is set to a medium severity level because direct syscall interactions may signify underlying malicious activities, but they can also stem from legitimate software operations. This requires contextual investigation to determine the appropriate response.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where legitimate applications utilize the `NtOpenProcess` function benignly, leading to potential false negatives. Additionally, if an adversary takes steps to obfuscate such calls or utilizes custom applications that bypass standard logging practices, the detection may fail. The reliance on specific source and target images could also result in missed detections if the attacking software does not match these known patterns.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
