title: CMSTP Execution Process Access
id: 3b4b232a-af90-427c-a22f-30b0c0837b95
status: stable
description: Detects various indicators of Microsoft Connection Manager Profile Installer
  execution
references:
- https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/
author: Nik Seetharaman
date: 2018-07-16
modified: 2021-06-27
tags:
- attack.defense-evasion
- attack.t1218.003
- attack.execution
- attack.t1559.001
- attack.g0069
- attack.g0080
- car.2019-04-001
logsource:
  product: windows
  category: process_access
detection:
    # Process Access Call Trace
  selection:
    CallTrace|contains: 'cmlua.dll'
  condition: selection
falsepositives:
- Legitimate CMSTP use (unlikely in modern enterprise environments)
level: high
notes: |
  ### Technical Context
  The "CMSTP Execution Process Access" detection rule is designed to identify suspicious activities associated with the Microsoft Connection Manager Profile Installer (CMSTP). CMSTP is often abused by attackers to execute code and bypass User Account Control (UAC) by exploiting its functionality as a legitimate component in Windows environments. This rule specifically monitors for process access events associated with the loading of the `cmlua.dll` library, which is known to facilitate these attacks. The primary data sources involved in this detection are Windows Security and System event logs, specifically those focused on process access calls. The rule correlates these access events with known attack patterns associated with the MITRE ATT&CK techniques T1218.003 (Signed Binary Proxy Execution) and T1559.001 (Command and Scripting Interpreter: Windows Command Shell).
  ### Investigation Steps
  - **Review EDR Alerts:** Examine alerts generated by the EDR solution for any processes that are exhibiting unauthorized access to `cmlua.dll`. Focus on timestamps and related parent-child process relationships.
  - **Check Process Creation Logs:** Utilize Windows Event Logs to identify related process creation logs around the same time as the detected access. This can provide context on what initiated the CMSTP execution.
  - **Analyze Network Connections:** Use your Network Detection and Response (NDR) tools to look at any unusual outbound network connections made by the processes involved. Malicious activities often result in communications to command-and-control servers.
  - **Inspect Logs for False Positives:** Cross-reference the findings with documented legitimate CMSTP use cases within the environment to rule out false positives. This may include settings related to network configurations specific to user departments.
  ### Prioritization
  Alerts triggered by this rule should be treated with high severity due to the potential for a serious security breach involving code execution and privilege escalation within the environment.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where the legitimate use of CMSTP is prevalent, as the capability may mask malicious behavior. Additionally, it assumes that the threat actor has not implemented custom mechanisms to obfuscate their actions or utilize different DLLs. Be aware that environments with strict access control around CMSTP usage may reduce legitimate alerts, and attackers may employ other non-detectable methods that do not involve `cmlua.dll`.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
