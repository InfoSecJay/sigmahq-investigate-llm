title: LSASS Memory Access by Tool With Dump Keyword In Name
id: 9bd012ee-0dff-44d7-84a0-aa698cfd87a3
status: test
description: Detects LSASS process access requests from a source process with the
  "dump" keyword in its image name.
references:
- https://twitter.com/_xpn_/status/1491557187168178176
- https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz
author: Florian Roth (Nextron Systems)
date: 2022-02-10
modified: 2023-11-29
tags:
- attack.credential-access
- attack.t1003.001
- attack.s0002
logsource:
  category: process_access
  product: windows
detection:
  selection:
    TargetImage|endswith: '\lsass.exe'
    SourceImage|contains: 'dump'
    GrantedAccess|endswith:
    - '10'
    - '30'
    - '50'
    - '70'
    - '90'
    - 'B0'
    - 'D0'
    - 'F0'
    - '18'
    - '38'
    - '58'
    - '78'
    - '98'
    - 'B8'
    - 'D8'
    - 'F8'
    - '1A'
    - '3A'
    - '5A'
    - '7A'
    - '9A'
    - 'BA'
    - 'DA'
    - 'FA'
    - '0x14C2'          # https://github.com/b4rtik/ATPMiniDump/blob/76304f93b390af3bb66e4f451ca16562a479bdc9/ATPMiniDump/ATPMiniDump.c
    - 'FF'
  condition: selection
falsepositives:
- Rare programs that contain the word dump in their name and access lsass
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect suspicious access requests to the LSASS process (Local Security Authority Subsystem Service), which is vital for managing user credentials and security policies in Windows environments. The rule specifically targets processes that contain the keyword "dump" in their image name, indicating potential malicious intent to extract credentials from LSASS. The detection leverages process access logs where it looks for access rights typically associated with memory read operations, such as `PROCESS_VM_READ`, `PROCESS_QUERY_INFORMATION`, and `PROCESS_QUERY_LIMITED_INFORMATION`. This aligns with the MITRE ATT&CK framework's Tactic of Credential Access and Technique T1003.001, which focuses on credential dumping from LSASS.
  To effectively identify unauthorized access attempts, the rule monitors various granted access rights codes that correspond to memory reading capabilities. These access rights are crucial indicators that alert analysts to potentially malicious behavior, enabling timely investigations to mitigate credential theft risks.
  ### Investigation Steps
  - **Review Process Access Logs**: Investigate the specific access attempts to the LSASS process. Check the event logs for the process initiating the access and note the timestamp and user context.
    
  - **Analyze Source Process**: Determine the origin of the source process containing "dump" in its name by checking file path and application legitimacy in the EDR tool. Assess whether the process is a known legitimate tool or indicative of adversary behavior.
    
  - **Correlate with Other Security Tools**: Use the SIEM and threat intelligence feeds to see if the source process matches any known malicious indicators or techniques used for credential dumping.
    
  - **Check for Additional Indicators**: Look for other related indicators such as unusual network connections or active sessions during the same timeframe to assess the broader impact of the detected event.
  ### Prioritization
  Given the high-level severity of the alert, this rule indicates a significant risk to enterprise security, as unauthorized access to LSASS could lead to credential theft and lateral movement within the environment. Immediate investigation is warranted to prevent unauthorized access to sensitive data.
  ### Blind Spots and Assumptions
  This rule may not trigger in scenarios where legitimate applications misused or poorly named processes have "dump" in their names, leading to false positives. There is an assumption that all relevant access events are being recorded correctly, and environmental configurations are compliant with the logging requirements. Additionally, advanced adversaries may employ tactics to obfuscate malicious activity, potentially bypassing this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
