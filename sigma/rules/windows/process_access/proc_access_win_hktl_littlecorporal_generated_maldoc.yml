title: HackTool - LittleCorporal Generated Maldoc Injection
id: 7bdde3bf-2a42-4c39-aa31-a92b3e17afac
status: test
description: Detects the process injection of a LittleCorporal generated Maldoc.
references:
- https://github.com/connormcgarr/LittleCorporal
author: Christian Burkard (Nextron Systems)
date: 2021-08-09
modified: 2023-11-28
tags:
- attack.execution
- attack.t1204.002
- attack.t1055.003
logsource:
  category: process_access
  product: windows
detection:
  selection:
    SourceImage|endswith: '\winword.exe'
    CallTrace|contains|all:
    - ':\Windows\Microsoft.NET\Framework64\v2.'
    - 'UNKNOWN'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The rule titled "HackTool 
  - LittleCorporal Generated Maldoc Injection" is designed to detect malicious process injection activities associated with documents generated by the LittleCorporal tool, specifically targeting instances of Microsoft Word (winword.exe). The rule primarily examines process access logs, focusing on particular characteristics in the call trace of the winword.exe process. It looks for an unusual sequence in the call trace that includes references to the .NET Framework and unknown values, which may suggest the exploitation of vulnerabilities through injection techniques. 
  This detection falls under the MITRE ATT&CK framework, correlating to the execution tactic (TA0002) and specific techniques such as opcode execution (T1204.002) and process injection (T1055.003). The rule aims to identify potentially malicious behaviors that can lead to unauthorized system access, particularly within enterprise environments, where such tactics pose significant risks to data integrity and confidentiality.
  ### Investigation Steps
  - **Validate Initial Alert:** Check EDR logs to confirm the presence and state of the winword.exe process when the alert was triggered. Verify if it is running under a user with appropriate permissions and check for any unusual process parent relationships.
  - **Review Call Trace Details:** Analyze the call trace captured in Sysmon logs for the winword.exe process to identify any suspicious methods or signatures consistent with known malicious behavior. Pay special attention to the presence of 'UNKNOWN' and .NET Framework references.
  - **Cross-Reference Indicators:** Utilize the SIEM to correlate network connections logged at the time of the alert with known malicious IPs or domains. This may reveal any additional communication with external threat actors or hosts.
  - **Inspect Payloads in Documents:** Examine the document file referenced in the alert for embedded macros or suspicious content that may exploit vulnerabilities in Office applications. Check for behaviors such as script execution through PowerShell embedded in the document.
  ### Prioritization
  The alert is categorized as high severity due to the potential for significant impact stemming from successful process injection attacks, which can lead to further exploitation of the system and compromise of sensitive data.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious actor uses alternative methods to launch their payloads that do not involve the winword.exe process or if they employ techniques to obfuscate the call trace completely. Additionally, the rule assumes that logging is configured correctly and is capturing all relevant process access events. Adversaries could bypass detection by using non-standard paths or processes to execute their malware.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
