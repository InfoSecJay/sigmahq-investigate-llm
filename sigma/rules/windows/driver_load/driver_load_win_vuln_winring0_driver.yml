title: Vulnerable WinRing0 Driver Load
id: 1a42dfa6-6cb2-4df9-9b48-295be477e835
status: test
description: Detects the load of a signed WinRing0 driver often used by threat actors,
  crypto miners (XMRIG) or malware for privilege escalation
references:
- https://github.com/xmrig/xmrig/tree/master/bin/WinRing0
- https://www.rapid7.com/blog/post/2021/12/13/driver-based-attacks-past-and-present/
author: Florian Roth (Nextron Systems)
date: 2022-07-26
modified: 2024-11-23
tags:
- attack.privilege-escalation
- attack.t1543.003
logsource:
  product: windows
  category: driver_load
detection:
  selection:
  - Hashes|contains: 'IMPHASH=D41FA95D4642DC981F10DE36F4DC8CD7'
  - ImageLoaded|endswith:
    - '\WinRing0x64.sys'
    - '\WinRing0.sys'
    - '\WinRing0.dll'
    - '\WinRing0x64.dll'
    - '\winring00x64.sys'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the loading of the WinRing0 driver, which has been associated with various malicious activities, including privilege escalation and the operation of cryptomining software like XMRIG. The rule specifically looks for the presence of a specific hash ("D41FA95D4642DC981F10DE36F4DC8CD7") that signifies a known variant of the WinRing0 driver, and it also checks if certain file names traditionally associated with this driver are being loaded into the system, such as `WinRing0x64.sys`, `WinRing0.dll`, and their variants. The primary data sources involved in this detection include Windows Security and System logs (specifically focusing on driver load events), which allow monitoring of drivers that are being dynamically loaded onto the operating system. This detection aligns with the MITRE ATT&CK tactic of privilege escalation (T1543.003), highlighting its relevance in reacting to potential security threats.
  ### Investigation Steps
  - **Verify Driver Load:**
    Check Windows Event Logs under the System category for the driver load events that correspond to the identified WinRing0 driver filenames. Look for anomalies in timestamps and any associated processes.
  - **Cross-Reference SHA256 Hash:**
    Utilize EDR solutions to verify the hash of the loaded driver against known malware signatures and threat intelligence databases. This can help confirm whether the execution is legitimate or potentially malicious.
  - **Analyze Parent Processes:**
    Investigate the parent processes that initiated the loading of the driver. Pay attention to any obscured or unexpected execution paths that could indicate malicious activities.
  - **Check for Subsequent Activity:**
    Review recent network connections, file system activity, or other logs from the EDR and SIEM to identify any follow-up actions taken after the driver load, which may indicate compromise or intended misuse.
  ### Prioritization
  The alert has been assigned a high severity level due to the association of the WinRing0 driver with known threats and its capability to enable privilege escalation, allowing unauthorized access and increased risk to the organization's information assets.
  ### Blind Spots and Assumptions
  This detection assumes that the monitoring of driver load events is fully operational and that the hash databases are up-to-date. There may be situations where an adversary modifies the driver in ways that evade detection or where legitimate applications use similar file names, possibly leading to false positives. Additionally, if the system does not generate driver load events in line with expected behavior or if there's a lack of visibility into the relevant logs, this rule may fail to trigger.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
