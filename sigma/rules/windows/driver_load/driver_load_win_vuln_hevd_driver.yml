title: Vulnerable HackSys Extreme Vulnerable Driver Load
id: 295c9289-acee-4503-a571-8eacaef36b28
status: test
description: Detects the load of HackSys Extreme Vulnerable Driver which is an intentionally
  vulnerable Windows driver developed for security enthusiasts to learn and polish
  their exploitation skills at Kernel level and often abused by threat actors
references:
- https://github.com/hacksysteam/HackSysExtremeVulnerableDriver
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-18
modified: 2024-11-23
tags:
- attack.privilege-escalation
- attack.t1543.003
logsource:
  product: windows
  category: driver_load
detection:
  selection:
  - ImageLoaded|endswith: '\HEVD.sys'
  - Hashes|contains:
    - 'IMPHASH=f26d0b110873a1c7d8c4f08fbeab89c5'           # Version 3.0
    - 'IMPHASH=c46ea2e651fd5f7f716c8867c6d13594'           # Version 3.0
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Vulnerable HackSys Extreme Vulnerable Driver Load" aims to detect when the HackSys Extreme Vulnerable Driver (HEVD), known for its intentional vulnerabilities, is loaded into the Windows kernel. This driver is often misused by threat actors to exploit weaknesses in system security, making its detection critical for preventing privilege escalation attacks. The rule identifies potential instances of the driver being loaded by monitoring the driver load events via the driver_load category in Windows operating systems. It specifically checks for the image being loaded with a filename ending in "HEVD.sys" and verifies its integrity using known hash values associated with this vulnerable driver. This detection aligns with the MITRE ATT&CK framework under the Privilege Escalation tactic (T1543.003).
  ### Investigation Steps
  - **Check Driver Load Events:** Start by examining the driver load events in the Windows Event Logs. Filter for any instances of the HEVD.sys driver being loaded to verify if there are legitimate applications or malicious activities involved.
  - **Analyze the Source:** Utilize EDR solutions to inspect the source processes that initiated the loading of the HEVD. Determine if these processes are recognized applications or potentially malicious entities.
  - **Review Related Event Logs:** Investigate other security logs, such as Process Creation and Network Connections, to identify any anomalous behavior or additional threats that may have occurred around the same time as the driver loading.
  - **Verify Hash Integrity:** Cross-reference the hashes detailed in the Sigma rule against the loaded driver binaries on the system. Ensure that the hashes match the known vulnerable versions to confirm the integrity of the driver in question.
  ### Prioritization
  The severity level for this alert is categorized as high due to the potential impact of loading a vulnerable driver, which can facilitate privilege escalation attacks. The presence of this driver in an environment indicates a significant risk to system integrity and security protocols.
  ### Blind Spots and Assumptions
  It is important to recognize that the rule may not fire if the HackSys Vulnerable Driver is renamed or modified slightly to evade detection. Additionally, this rule assumes that the standard Windows logging and auditing mechanisms are enabled and functioning correctly. A potential blind spot exists if an adversary loads the driver in a non-standard way that bypasses typical kernel load events. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
