title: PUA - System Informer Driver Load
id: 10cb6535-b31d-4512-9962-513dcbc42cc1
related:
- id: 67add051-9ee7-4ad3-93ba-42935615ae8d
  type: similar
status: test
description: Detects driver load of the System Informer tool
references:
- https://systeminformer.sourceforge.io/
- https://github.com/winsiderss/systeminformer
author: Florian Roth (Nextron Systems)
date: 2023-05-08
modified: 2024-11-23
tags:
- attack.privilege-escalation
- attack.t1543
logsource:
  category: driver_load
  product: windows
detection:
  selection:
  - ImageLoaded|endswith: '\SystemInformer.sys'
  - Hashes|contains:
    - 'SHA256=8B9AD98944AC9886EA4CB07700E71B78BE4A2740934BB7E46CA3B56A7C59AD24'
    - 'SHA256=A41348BEC147CA4D9EA2869817527EB5CEA2E20202AF599D2B30625433BCF454'
    - 'SHA256=38EE0A88AF8535A11EFE8D8DA9C6812AA07067B75A64D99705A742589BDD846D'
    - 'SHA256=A773891ACF203A7EB0C0D30942FB1347648F1CD918AE2BFD9A4857B4DCF5081B'
    - 'SHA256=4C3B81AC88A987BBDF7D41FA0AECC2CEDF5B9BD2F45E7A21F376D05345FC211D'
    - 'SHA256=3241BC14BEC51CE6A691B9A3562E5C1D52E9D057D27A3D67FD0B245C350B6D34'
    - 'SHA256=047C42E9BBA28366868847C7DAFC1E043FB038C796422D37220493517D68EE89'
    - 'SHA256=18931DC81E95D0020466FA091E16869DBE824E543A4C2C8FE644FA71A0F44FEB'
    - 'SHA256=B4C2EF76C204273132FDE38F0DED641C2C5EE767652E64E4C4071A4A973B6C1B'
    - 'SHA256=640954AFC268565F7DAA6E6F81A8EE05311E33E34332B501A3C3FE5B22ADEA97'
    - 'SHA256=251BE949F662C838718F8AA0A5F8211FB90346D02BD63FF91E6B224E0E01B656'
    - 'SHA256=E2606F272F7BA054DF16BE464FDA57211EF0D14A0D959F9C8DCB0575DF1186E4'
    - 'SHA256=3A9E1D17BEEB514F1B9B3BACAEE7420285DE5CBDCE89C5319A992C6CBD1DE138'
  condition: selection
falsepositives:
- System Informer is regularly used legitimately by system administrators or developers.
  Apply additional filters accordingly
level: medium
notes: |
  n
  ### Technical Context
  The Sigma rule titled "PUA 
  - System Informer Driver Load" is designed to detect the loading of the System Informer driver, a tool often exploited by attackers for privilege escalation activities. This detection is primarily based on the identification of specific file paths and hash values associated with the driver, specifically monitoring events from Windows Driver Load logs. The rule utilizes the Windows Sysmon logging capability, focusing on the event when a driver image, particularly one named `SystemInformer.sys`, is loaded into memory. Given its association with the MITRE ATT&CK technique T1543 (Create or Modify System Processes), this rule is crucial for identifying potentially malicious activities where the driver is leveraged for unauthorized access or system manipulation.
  ### Investigation Steps
  - **Check the Event Logs:** Use Windows Event Logs, specifically the Sysmon logs, to review the captured event related to the loading of `SystemInformer.sys`. Look for additional context around the event, including timestamps and associated process information.
  - **Analyze Process and Parent Process:** Utilize EDR tools to investigate the process tree starting from the process that loaded the System Informer driver. Determine whether the parent process exhibits suspicious behavior or if it correlates with known malicious indicators.
  - **Review Hash Values:** Compare the SHA256 hashes of the loaded driver against threat intelligence databases. Verify if the loaded file matches any known malicious signatures or is associated with non-malicious use cases.
  - **Monitor for False Positives:** Be aware that legitimate use exists for the System Informer driver among system administrators. Validate the environment's usage of this tool and determine if additional filters can minimize alert noise.
  ### Prioritization
  This alert is classified as medium severity due to the potential impact of the System Informer driver being used in an attack scenario, particularly for privilege escalation. However, because it may also be legitimately used by system administrators, further context is necessary for accurate prioritization.
  ### Blind Spots and Assumptions
  There are several considerations that may affect the efficacy of this detection rule. First, the rule may not fire if the Sysmon logging is not properly enabled or configured on monitored endpoints, leading to gaps in visibility. Additionally, legitimate use of the System Informer might lead to false positives; hence, understanding the specific operational context within an enterprise is crucial. Furthermore, an adversary could attempt to mask their actions by renaming the driver or modifying the hash values, which could enable stealthy behavior that this rule would not detect.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
