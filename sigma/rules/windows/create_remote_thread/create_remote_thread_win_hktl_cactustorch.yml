title: HackTool - CACTUSTORCH Remote Thread Creation
id: 2e4e488a-6164-4811-9ea1-f960c7359c40
status: test
description: Detects remote thread creation from CACTUSTORCH as described in references.
references:
- https://twitter.com/SBousseaden/status/1090588499517079552     # Deleted
- https://github.com/mdsecactivebreach/CACTUSTORCH
author: '@SBousseaden (detection), Thomas Patzke (rule)'
date: 2019-02-01
modified: 2023-05-05
tags:
- attack.defense-evasion
- attack.execution
- attack.t1055.012
- attack.t1059.005
- attack.t1059.007
- attack.t1218.005
logsource:
  product: windows
  category: create_remote_thread
detection:
  selection:
    SourceImage|endswith:
    - '\System32\cscript.exe'
    - '\System32\wscript.exe'
    - '\System32\mshta.exe'
    - '\winword.exe'
    - '\excel.exe'
    TargetImage|contains: '\SysWOW64\'
    StartModule:
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule for detecting remote thread creation associated with the CACTUSTORCH tool leverages specific behaviors recognized as indicators of malicious activity. CACTUSTORCH is a hack tool that uses COM objects to execute scripts in a stealthy manner, often evading traditional detection mechanisms. This alert focuses on identifying process behaviors where known legitimate Windows executables (cscript.exe, wscript.exe, mshta.exe, and office products like winword.exe and excel.exe) create remote threads in a 32-bit subsystem (SysWOW64). The rule particularly notices when these applications attempt to execute malicious payloads or scripts from unexpected locations, which is a common technique utilized in attacks to obfuscate true intentions.
  It maps to several MITRE ATT&CK tactics including Defense Evasion (T1203) and Execution (T1059), highlighting its potential use in scenarios where attackers leverage well-known tools to bypass security measures. The crucial data sources for this rule include Windows Sysmon logs, particularly focusing on the events surrounding remote thread creation, which can provide significant insight into potentially harmful activities occurring within the environment.
  ### Investigation Steps
  - **Verify Process Origins:** Check the execution path of the processes identified in the alert using EDR tools to confirm they were initiated from expected locations and not from suspicious or unknown directories.
  - **Analyze Parent-Child Relationships:** Utilize EDR or Sysmon logs to examine parent-child process relationships and determine if legitimate processes spawned multiple suspicious remote threads.
  - **Perform Incident Correlation:** Review additional log sources such as network connections or DNS queries to see if there are corresponding malicious activities (e.g., connections to known bad IP addresses) that could indicate an exploitation attempt.
  - **Review Script Activity:** Use logs from PowerShell and command-line events to inspect any executed scripts or commands that may have been initiated by the identified processes, focusing on parameters that indicate malicious functionality.
  ### Prioritization
  The alert is classified as high severity due to the potential for significant impact on the environment; remote thread creation can signal advanced attacks in progress, possibly leading to data exfiltration or lateral movement within the network.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious processes utilize alternative execution methods or if they do not involve remote thread creation using the specified legitimate executables. Additionally, the detection is contingent upon the proper configuration and logging of Windows Sysmon, and it may be circumvented by adversaries using different tools or techniques that do not trigger the mentioned conditions. It's also important to recognize that legitimate administrative actions could unintentionally generate alerts if they match the specified criteria, highlighting the importance of context in responding to the alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
