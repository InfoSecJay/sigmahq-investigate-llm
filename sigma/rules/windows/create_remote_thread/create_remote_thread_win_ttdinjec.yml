title: Remote Thread Creation Ttdinject.exe Proxy
id: c15e99a3-c474-48ab-b9a7-84549a7a9d16
status: test
description: Detects a remote thread creation of Ttdinject.exe used as proxy
references:
- https://lolbas-project.github.io/lolbas/Binaries/Ttdinject/
author: frack113
date: 2022-05-16
modified: 2022-06-02
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  product: windows
  category: create_remote_thread
detection:
  selection:
    SourceImage|endswith: '\ttdinject.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule aims to identify instances of remote thread creation involving the executable `Ttdinject.exe`, which is often utilized by adversaries as a proxy for executing further malicious actions on compromised systems. The rule analyzes logs from Windows Sysmon, particularly focusing on the `create_remote_thread` event, which captures details about the initiation of a remote thread by one process in the address space of another. By specifically looking for processes that end with `ttdinject.exe`, the rule detects potential defense evasion techniques where attackers manipulate existing processes to execute malicious commands or payloads without directly appearing as standalone executables. This behavior aligns with the MITRE ATT&CK tactic of **Defense Evasion** and technique **T1127: Trusted Developer Utilities**.
  ### Investigation Steps
  - **Review Sysmon Logs:** Utilize Windows Sysmon logs to pinpoint instances of thread creation involving `ttdinject.exe`, paying close attention to the `create_remote_thread` events found in the logs.
  - **Analyze Process Tree:** Examine the process tree around the event to determine the parent process that initiated `ttdinject.exe`, checking for any unusual behavior or known malicious processes.
  - **Correlate with EDR Data:** Use your Endpoint Detection and Response (EDR) tools to assess if any alerts or anomalies correspond to the identified `ttdinject.exe` activities, correlating with the timeline of the alert.
  - **Check Network Activity:** Investigate network connection logs to see if any communication is occurring with known malicious domains or IP addresses during the time of the alert, particularly after the thread creation event.
  ### Prioritization
  This alert is considered high severity because the use of `Ttdinject.exe` typically indicates advanced techniques employed by attackers aiming to evade detection, potentially allowing the execution of further malicious payloads or maneuvers on the affected system.
  ### Blind Spots and Assumptions
  It is essential to recognize that this rule may not detect all instances of `ttdinject.exe` due to variations in how an adversary might execute threads or conduct their operations. The rule is dependent on the presence of Sysmon logging within the environment; if Sysmon is improperly configured or not deployed, the necessary logs will be absent. Additionally, legitimate applications that utilize `Ttdinject.exe` may trigger false positives, so thorough investigation and context analysis are necessary.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and reliability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
