title: Rare Remote Thread Creation By Uncommon Source Image
id: 02d1d718-dd13-41af-989d-ea85c7fab93f
related:
- id: 66d31e5f-52d6-40a4-9615-002d3789a119
  type: derived
status: experimental
description: Detects uncommon processes creating remote threads.
references:
- Personal research, statistical analysis
- https://lolbas-project.github.io
author: Perez Diego (@darkquassar), oscd.community
date: 2019-10-27
modified: 2024-07-15
tags:
- attack.privilege-escalation
- attack.defense-evasion
- attack.t1055
logsource:
  product: windows
  category: create_remote_thread
detection:
  selection:
    SourceImage|endswith:
    - '\bash.exe'
    - '\cscript.exe'
    - '\cvtres.exe'
    - '\defrag.exe'
    - '\dialer.exe'
    - '\dnx.exe'
    - '\esentutl.exe'
    - '\excel.exe'
    - '\expand.exe'
    - '\find.exe'
    - '\findstr.exe'
    - '\forfiles.exe'
    - '\gpupdate.exe'
    - '\hh.exe'
    - '\installutil.exe'
    - '\lync.exe'
    - '\makecab.exe'
    - '\mDNSResponder.exe'
    - '\monitoringhost.exe'         # Loads .NET CLR by default and thus a favorite for process injection for .NET in-memory offensive tools.
    - '\msbuild.exe'
    - '\mshta.exe'
    - '\mspaint.exe'
    - '\outlook.exe'
    - '\ping.exe'
    - '\provtool.exe'
    - '\python.exe'
    - '\regsvr32.exe'
    - '\robocopy.exe'
    - '\runonce.exe'
    - '\sapcimc.exe'
    - '\smartscreen.exe'
    - '\spoolsv.exe'
    - '\tstheme.exe'
    - '\userinit.exe'
    - '\vssadmin.exe'
    - '\vssvc.exe'
    - '\w3wp.exe'
    - '\winscp.exe'
    - '\winword.exe'
    - '\wmic.exe'
    - '\wscript.exe'
  condition: selection
falsepositives:
- This rule is best put in testing first in order to create a baseline that reflects
  the data in your environment.
level: high
notes: |
  n
  ### Technical Context
  The "Rare Remote Thread Creation By Uncommon Source Image" detection rule is designed to identify suspicious activity on Windows systems, specifically focusing on instances where uncommon processes are responsible for creating remote threads. Remote thread creation can be a tactic employed by attackers to manipulate or control running processes, often as a method of privilege escalation or to evade detection. The rule analyzes `create_remote_thread` events generated by Windows Sysmon, which include information about the source image (the executable initiating the thread creation). By filtering for specific well-known processes such as `bash.exe`, `powershell.exe`, and `excel.exe`, the rule can catch less typical patterns that deviate from standard behavior, which could indicate malicious exploitation attempts. This aligns with the MITRE ATT&CK tactic of **Privilege Escalation** (ATT&CK ID: T1055) and may also intersect with **Defense Evasion** efforts.
  ### Investigation Steps
  - **Review Process Parentage:** Use EDR to examine the parent processes of any alerts triggered by this rule; analyze the process lineage to verify if the source image has legitimate use cases or if the context surrounding its execution is suspicious.
  - **Examine Command-Line Arguments:** Check the command-line parameters associated with flagged processes within the EDR logs. Irregular or malicious command-line arguments can further indicate the intention behind the remote thread creation.
  - **Correlate with Other Logs:** Cross-reference alerts with logs from network devices, application proxies, or security appliances to determine if there are additional indicators of compromise or lateral movement.
  - **Conduct a Threat Hunt:** Utilize a variety of log sources (Sysmon, Windows Event Logs) to conduct a broader threat hunt for other occurrences of unusual thread creation patterns related to the same source images over time.
  ### Prioritization
  Given the nature of remote thread creation as a common method for attackers to gain unauthorized control over processes, alerts from this rule should be prioritized as high severity. The potential for a successful exploit can pose significant risks to the integrity and confidentiality of enterprise environments.
  ### Blind Spots and Assumptions
  This rule may not fire if the uncommon processes have been whitelisted or if legitimate applications are misidentified as part of typical operations. Additionally, there may be instances where threat actors use legitimate processes in an expected manner, thus evading detection. Metrics and baseline behaviors specific to an organization's environment are crucial in the effectiveness of this rule, and analysts should be aware that statisticians and false-positives may arise during the tuning phase.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
