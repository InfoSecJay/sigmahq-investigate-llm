title: Remote Thread Created In Shell Application
id: a9d4d3fa-8fc0-41bc-80b1-30b9fda79d6f
status: experimental
description: |
  Detects remote thread creation in command shell applications, such as "Cmd.EXE" and "PowerShell.EXE".
  It is a common technique used by malware, such as IcedID, to inject malicious code and execute it within legitimate processes.
references:
- https://research.splunk.com/endpoint/10399c1e-f51e-11eb-b920-acde48001122/
- https://www.binarydefense.com/resources/blog/icedid-gziploader-analysis/
author: Splunk Research Team
date: 2024-07-29
tags:
- attack.defense-evasion
- attack.t1055
logsource:
  product: windows
  category: create_remote_thread
detection:
  selection:
    TargetImage|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The detection rule "Remote Thread Created In Shell Application" is designed to identify anomalous behavior where a remote thread is created within common command shell applications such as `cmd.exe` and `powershell.exe`. These applications are often utilized legitimately for administrative tasks but are also exploited by malware to execute code in a trusted context, which can help adversaries evade detection. This technique falls under the MITRE ATT&CK framework's defense evasion tactic (T1055), particularly focused on the technique of "Process Injection." The rule looks for the creation of remote threads, which is a common method utilized by malware, such as IcedID, to inject and execute malicious payloads without alerting security systems. To implement this detection, the rule primarily leverages events from Windows Sysmon, specifically monitoring the `create_remote_thread` event.
  ### Investigation Steps
  - **Check Sysmon Logs**: Review the Sysmon logs for any instances of `create_remote_thread` for processes like `cmd.exe`, `powershell.exe`, or `pwsh.exe` to confirm the remote thread creation event.
    
  - **Analyze Command-Line Arguments**: Investigate the command-line parameters of the parent process involved in the remote thread creation to identify any suspicious or unexpected behavior indicative of exploitation.
  - **Correlate with EDR Alerts**: Utilize EDR tools to analyze the activity of the parent process, including its behavior and any related alerts that may provide additional context or evidence of malicious intent.
  - **Investigate Network Activity**: Utilize Network Detection and Response (NDR) tools to inspect outbound connections made by the involved processes to determine if there are any suspicious communications that could indicate command and control interactions.
  ### Prioritization
  This alert is categorized as medium severity because remote thread creation within legitimate processes is often associated with sophisticated techniques employed by malware authors. Immediate investigation is warranted to determine whether the activity is benign or the precursor to a more significant security incident.
  ### Blind Spots and Assumptions
  This rule may not fire if the remote thread creation occurs in a process not listed (e.g., other shell applications or scripts running outside of traditional command-line interfaces). Additionally, if attackers use whitelisted applications to carry out these actions, this detection may be bypassed. It's essential to assume that while this rule aims to detect potential threats, sophisticated adversaries may employ techniques to evade detection altogether by using custom or lesser-known shell environments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
