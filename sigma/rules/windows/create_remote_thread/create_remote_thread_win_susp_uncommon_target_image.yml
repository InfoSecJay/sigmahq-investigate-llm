title: Remote Thread Creation In Uncommon Target Image
id: a1a144b7-5c9b-4853-a559-2172be8d4a03
related:
- id: f016c716-754a-467f-a39e-63c06f773987
  type: obsolete
status: experimental
description: Detects uncommon target processes for remote thread creation
references:
- https://web.archive.org/web/20220319032520/https://blog.redbluepurple.io/offensive-research/bypassing-injection-detection
author: Florian Roth (Nextron Systems)
date: 2022-03-16
modified: 2024-07-15
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1055.003
logsource:
  product: windows
  category: create_remote_thread
detection:
  selection:
    TargetImage|endswith:
    - '\calc.exe'
    - '\calculator.exe'
    - '\mspaint.exe'
    - '\notepad.exe'
    - '\ping.exe'
    - '\sethc.exe'
    - '\spoolsv.exe'
    - '\wordpad.exe'
    - '\write.exe'
  filter_main_csrss:
    SourceImage: 'C:\Windows\System32\csrss.exe'
  filter_optional_aurora_1:
    StartFunction: 'EtwpNotificationThread'
  filter_optional_aurora_2:
    SourceImage|contains: 'unknown process'
  filter_optional_vmtoolsd:
    SourceImage: 'C:\Program Files\VMware\VMware Tools\vmtoolsd.exe'
    StartFunction: 'GetCommandLineW'
    TargetImage:
    - 'C:\Windows\System32\notepad.exe'
    - 'C:\Windows\System32\spoolsv.exe'
  filter_optional_xerox_pjems:
    SourceImage: 'C:\Program Files\Xerox\XeroxPrintExperience\CommonFiles\XeroxPrintJobEventManagerService.exe'
    StartFunction: 'LoadLibraryW'
    TargetImage: 'C:\Windows\System32\spoolsv.exe'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Remote Thread Creation In Uncommon Target Image" is designed to detect potentially malicious behavior associated with remote thread creation in Windows environment processes that are not typically expected to receive such an operation. The rule specifically looks for remote thread creation in a set of uncommon target images, such as `calc.exe`, `notepad.exe`, and `mspaint.exe`, which are benign applications. The detection relies heavily on telemetry from the `create_remote_thread` category in Windows Sysmon logs. 
  This type of activity may indicate an attempt by an attacker to inject code into a legitimate process, a technique often used to evade detection and escalate privileges. The rule invokes key MITRE ATT&CK techniques including `T1055.003` (Process Injection: Dynamic-link Library Injection), under the tactics of defense evasion and privilege escalation. Upon triggering, this alert serves as a cue for security analysts to scrutinize any unusual or undesired accesses to these processes, which could signal malicious intent.
  ### Investigation Steps
  - **Verify the Alert Context:** Check the `create_remote_thread` entries in Sysmon logs to view the details surrounding the remote thread creation event, paying particular attention to the `TargetImage`, `SourceImage`, and `StartFunction` fields.
  - **Cross-reference with EDR:** Use the Endpoint Detection and Response (EDR) tool to identify any suspicious processes that correlate with the timestamp of the alert and evaluate their behavior for signs of compromise.
  - **Examine Process Anomalies:** Review process creation logs to identify processes that may have spawned the suspicious target process. Check for unusual command-line parameters that could indicate malicious activity.
  - **Consult Network Activity:** Look at network connection logs to determine if the involved processes are communicating externally or with internal resources unexpectedly, which might suggest data exfiltration or command and control communications.
  ### Prioritization
  This alert is given a medium severity level as it indicates potentially unauthorized modifications to commonly used applications which could indicate an ongoing compromise. However, the detection of remote thread creation in benign processes alone does not definitively imply malicious behavior, warranting further investigation.
  ### Blind Spots and Assumptions
  - **False Positives:** The rule may generate false positives from legitimate third-party applications, particularly those that interact with common user applications. Awareness of such potentialities is essential for analysts in distinguishing between benign and malicious events.
  - **Execution Environment:** The detection may fail to trigger if the execution environment does not log specific events. Environments with restricted or customized Sysmon configurations may result in missed detections of such activities.
  - **Evasion Techniques:** Adversaries may utilize other less common or whitelisted processes, avoiding detection. Understanding how attackers modify their techniques to suit the environment is crucial for continually enhancing detection capabilities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
