title: PowerShell Get Clipboard
id: 4cbd4f12-2e22-43e3-882f-bff3247ffb78
status: test
description: A General detection for the Get-Clipboard commands in PowerShell logs.
  This could be an adversary capturing clipboard contents.
references:
- https://github.com/OTRF/detection-hackathon-apt29/issues/16
- https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/7.A.2_F4609F7E-C4DB-4327-91D4-59A58C962A02.md
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-05-02
modified: 2023-01-04
tags:
- attack.collection
- attack.t1115
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection:
    Payload|contains: 'Get-Clipboard'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule aims to detect the usage of the PowerShell command `Get-Clipboard`, which can be indicative of adversary activity, specifically clipboard data exfiltration. When executed, this command retrieves the current contents of the system clipboard, allowing an attacker to capture sensitive information that may be stored temporarily by users. The rule focuses on PowerShell module logs, specifically monitoring for instances where `Get-Clipboard` is invoked, indicating potential malicious behavior as related to the MITRE ATT&CK technique T1115 (Clipboard Data). By analyzing the command execution along with relevant metadata, responders can ascertain whether this action is warranted or if it signifies an intrusion.
  ### Investigation Steps
  - **Review PowerShell Execution Logs:** Examine PowerShell logs for the command invocation details, including user context and execution time, to determine the legitimacy of the call.
  - **Analyze Process Behavior:** Utilize EDR tools to trace back the parent and child processes associated with the PowerShell command to identify any suspicious processes or activity that led to its execution.
  - **Inspect Clipboard Contents (if applicable):** Investigate what data was stored in the clipboard prior to the command execution, if available, which could provide insights into the potential exfiltration of sensitive information.
  - **Cross-reference User Activity:** Correlate the timing of the `Get-Clipboard` execution with user activity logs from the proxy and VPN solutions to identify any discrepancies that could suggest unauthorized actions.
  ### Prioritization
  This alert carries a medium severity level due to its potential to expose sensitive information through clipboard access. The risk increases if the command is executed by unexpected or unauthorized users, suggesting a possible compromise.
  ### Blind Spots and Assumptions
  The detection rule may not fire if the PowerShell logging level is not adequately configured, thereby missing the context needed to capture the command execution. Additionally, adversaries may impersonate legitimate users or utilize obfuscation techniques to mask the command, leading to false negatives in detection. It's assumed that all relevant telemetry from PowerShell is being captured, which may not always be the case in all environments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
