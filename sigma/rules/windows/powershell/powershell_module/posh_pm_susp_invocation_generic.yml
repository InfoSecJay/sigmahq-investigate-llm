title: Suspicious PowerShell Invocations - Generic - PowerShell Module
id: bbb80e91-5746-4fbe-8898-122e2cafdbf4
related:
- id: 3d304fda-78aa-43ed-975c-d740798a49c1
  type: derived
- id: ed965133-513f-41d9-a441-e38076a0798f
  type: similar
status: test
description: Detects suspicious PowerShell invocation command parameters
references:
- Internal Research
author: Florian Roth (Nextron Systems)
date: 2017-03-12
modified: 2023-01-03
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection_encoded:
    ContextInfo|contains:
    - ' -enc '
    - ' -EncodedCommand '
    - ' -ec '
  selection_hidden:
    ContextInfo|contains:
    - ' -w hidden '
    - ' -window hidden '
    - ' -windowstyle hidden '
    - ' -w 1 '
  selection_noninteractive:
    ContextInfo|contains:
    - ' -noni '
    - ' -noninteractive '
  condition: all of selection*
falsepositives:
- Very special / sneaky PowerShell scripts
level: high
notes: |
  ### Technical Context
  The Sigma rule "Suspicious PowerShell Invocations 
  - Generic 
  - PowerShell Module" is designed to identify potentially malicious activities associated with PowerShell usage on Windows systems. It focuses on specific command parameters that are often leveraged by threat actors to execute obfuscated or covert operations. This detection mechanism looks for indicators such as encoded command flags 
  - `-enc`, `-EncodedCommand`, and variations that involve hidden or non-interactive execution modes, which are commonly used to bypass traditional security measures. The relevant technical data sources for this rule include PowerShell command-line invocation logs, primarily captured through Windows Event Logs (specifically the logs related to PowerShell modules).
  This rule aligns with the MITRE ATT&CK framework under the tactic of Execution and specifically targets the technique T1059.001 (Command and Scripting Interpreter: PowerShell). By monitoring for these specific command parameters, security teams can gain insights into potentially unauthorized or harmful PowerShell activities, enabling swift investigative responses.
  ### Investigation Steps
  - **Check EDR Alerts**: Review Endpoint Detection and Response (EDR) alerts for any flagged PowerShell activities that correlate with the identified malicious command parameters.
    
  - **Review PowerShell Logs**: Examine Windows PowerShell logs to identify the complete command executions associated with the alerts, particularly looking for encoded commands or hidden execution parameters.
  - **Analyze Process Tree**: Investigate the process tree of the detected PowerShell processes to understand their parent processes and associated command execution flow to identify the origin of potential intrusions.
  - **Network Connection Review**: Inspect any related network connections made during the time of the suspicious PowerShell invocation to check for outbound connections to known malicious sites or IPs.
  ### Prioritization
  Given the high severity level of this alert, instances of suspicious PowerShell invocations suggest potential unauthorized or malicious activities that could lead to larger compromises within the enterprise environment. Rapid investigation is crucial to mitigate potential threats.
  ### Blind Spots and Assumptions
  There are key areas where this rule may not operate effectively due to specific conditions. For instance, scripts that do not utilize the detected command-line parameters or use legitimate PowerShell functionalities without suspicious flags may evade detection. Additionally, if logs related to PowerShell execution are not enabled, this rule will fail to fire altogether. It's also possible for adversaries to refine their obfuscation techniques to bypass detection, leading to missed alerts. Understanding the limitations of this rule aids in enhancing overall monitoring strategies.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and usefulness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
