title: Invoke-Obfuscation Via Use MSHTA - PowerShell Module
id: 07ad2ea8-6a55-4ac6-bf3e-91b8e59676eb
related:
- id: e55a5195-4724-480e-a77e-3ebe64bd3759
  type: derived
status: test
description: Detects Obfuscated Powershell via use MSHTA in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task31)
author: Nikita Nazarov, oscd.community
date: 2020-10-08
modified: 2023-01-04
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection:
    Payload|contains|all:
    - 'set'
    - '&&'
    - 'mshta'
    - 'vbscript:createobject'
    - '.run'
    - '(window.close)'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Invoke-Obfuscation Via Use MSHTA 
  - PowerShell Module" is designed to detect obfuscated PowerShell scripts that employ MSHTA (Microsoft HTML Application Host) as a method of execution. This technique is often utilized by attackers to bypass security defenses by executing code indirectly through HTML applications. The rule looks for specific keywords and patterns in PowerShell command payloads, including 'set', '&&', 'mshta', 'vbscript:createobject', '.run', and '(window.close)'. The detection leverages data sources such as PowerShell command logs and Sysmon logs to identify malicious or suspicious behavior. This tactic aligns with MITRE ATT&CK's defense evasion techniques (T1027) and execution techniques (T1059.001).
  ### Investigation Steps
  - **Review EDR Alerts:** Check the EDR system for any recent alerts related to PowerShell processes that match the criteria outlined in this rule. Pay attention to the timestamp and source of the alerts.
  - **Analyze PowerShell Command History:** Access the PowerShell command logs to find instances of the suspicious commands listed in the detection, including context about how and when they were executed.
  - **Examine Sysmon Logs:** Query Sysmon logs for process creation events related to 'mshta.exe' and track the parent-child process relationships to understand potential attack chains.
  - **Inspect Network Traffic:** Utilize the NDR tool to analyze outbound connections made by the MSHTA process to identify any communication with known malicious domains or IP addresses.
  ### Prioritization
  This alert is classified as high severity due to the potential for significant impact from obfuscated PowerShell execution via MSHTA, which can enable various malicious activities, including data exfiltration or lateral movement within an environment.
  ### Blind Spots and Assumptions
  A key assumption is that the logs being monitored are adequately capturing PowerShell activities and that the environments do not have specific configurations that suppress legitimate logging. Additionally, obfuscation techniques are constantly evolving, which means that some variants may evade detection. The rule may fail to fire in scenarios where the command structure is altered or where the usage of harmless scripts coincidentally includes some of the monitored keywords without malicious intent.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
