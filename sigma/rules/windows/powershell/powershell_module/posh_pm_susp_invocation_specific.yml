title: Suspicious PowerShell Invocations - Specific - PowerShell Module
id: 8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090
related:
- id: fce5f582-cc00-41e1-941a-c6fabf0fdb8c
  type: obsolete
- id: ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71
  type: similar
- id: 536e2947-3729-478c-9903-745aaffe60d2
  type: similar
status: test
description: Detects suspicious PowerShell invocation command parameters
references:
- Internal Research
author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro
date: 2017-03-05
modified: 2023-01-05
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection_convert_b64:
    ContextInfo|contains|all:
    - '-nop'
    - ' -w '
    - 'hidden'
    - ' -c '
    - '[Convert]::FromBase64String'
  selection_iex:
    ContextInfo|contains|all:
    - ' -w '
    - 'hidden'
    - '-noni'
    - '-nop'
    - ' -c '
    - 'iex'
    - 'New-Object'
  selection_enc:
    ContextInfo|contains|all:
    - ' -w '
    - 'hidden'
    - '-ep'
    - 'bypass'
    - '-Enc'
  selection_reg:
    ContextInfo|contains|all:
    - 'powershell'
    - 'reg'
    - 'add'
    - 'HKCU\software\microsoft\windows\currentversion\run'
  selection_webclient:
    ContextInfo|contains|all:
    - 'bypass'
    - '-noprofile'
    - '-windowstyle'
    - 'hidden'
    - 'new-object'
    - 'system.net.webclient'
    - '.download'
  selection_iex_webclient:
    ContextInfo|contains|all:
    - 'iex'
    - 'New-Object'
    - 'Net.WebClient'
    - '.Download'
  filter_chocolatey:
    ContextInfo|contains:
    - "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1"
    - 'Write-ChocolateyWarning'
  condition: 1 of selection_* and not 1 of filter_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects suspicious invocations of PowerShell that could indicate an attempt to execute malicious code using command-line parameters typically associated with obfuscation and evasion techniques. It monitors various commands that contain potentially harmful options, such as `-nop` (no profile), `-w` (window style), `-c` (command), and `-Enc` (encoded command), as well as usages of the `.DownloadString` method, which is often exploited to pull remote scripts. The rule leverages Windows Sysmon logs, focusing on the `ps_module` category to identify these specific command triggers. The relevant MITRE ATT&CK tactic associated with this detection is **Execution**, specifically technique **T1059.001** (PowerShell).
  ### Investigation Steps
  - **Review PowerShell Command Logs:** Use Sysmon and PowerShell logs to examine the history of PowerShell commands executed on the system for any associated suspicious parameters or patterns.
  - **Correlate with EDR Alerts:** Check the EDR solution for any alerts correlated with the detected PowerShell execution to identify potential malicious behavior or related activities on the endpoint.
  - **Analyze Parent Process Activity:** Investigate the parent and child process relationships in the execution chain to discern whether the PowerShell invocation originated from a legitimate application or was spawned by a process that raises suspicion.
  - **Examine Network Connections:** Utilize firewall or IDS logs to look for outgoing connections to suspicious IP addresses or domains, particularly those that may correlate with the PowerShell commands indicating remote script execution.
  ### Prioritization
  This alert is categorized as high severity due to the potential for PowerShell being used in an attack vector, especially if combined with evasive techniques. The presence of these suspicious command parameters may indicate an ongoing attack or a breach that requires immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if an adversary employs uncommon obfuscation techniques or if PowerShell's execution policy is set to allow scripts without raising alerts. Additionally, the rule assumes that all execution of PowerShell modules is logged, which may not be the case in all environments. There may also be legitimate processes that use similar command arguments for benign purposes, leading to potential false positives if not correctly understood.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
