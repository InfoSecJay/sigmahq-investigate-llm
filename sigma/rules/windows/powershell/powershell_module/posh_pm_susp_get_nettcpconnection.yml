title: Use Get-NetTCPConnection - PowerShell Module
id: aff815cc-e400-4bf0-a47a-5d8a2407d4e1
status: test
description: Adversaries may attempt to get a listing of network connections to or
  from the compromised system they are currently accessing or from remote systems
  by querying for information over the network.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-2---system-network-connections-discovery-with-powershell
author: frack113
date: 2021-12-10
modified: 2022-12-02
tags:
- attack.discovery
- attack.t1049
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection:
    ContextInfo|contains: 'Get-NetTCPConnection'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  The Sigma rule titled "Use Get-NetTCPConnection 
  - PowerShell Module" targets the misuse of the PowerShell cmdlet `Get-NetTCPConnection`, which enables attackers to retrieve detailed network connection information from a compromised system. This technique falls under the MITRE ATT&CK framework, specifically categorized as Discovery (Tactic) and System Network Connections Discovery (Technique T1049). The rule monitors Windows PowerShell execution logs, particularly focusing on commands that include “Get-NetTCPConnection.” 
  When an adversary employs this cmdlet, they can gather valuable data such as the status of current TCP connections, which could potentially facilitate lateral movement or data exfiltration from the host. By analyzing the context information in the PowerShell logs, the detection rule flags instances where this command is used, allowing security teams to investigate further for signs of malicious activity.
  ### Investigation Steps
  - **Check PowerShell Event Logs:** Investigate Windows Event Logs, specifically focusing on the PowerShell Command Line logs, to identify when and where the `Get-NetTCPConnection` command was executed and by which user.
  - **Review EDR Alerts:** Utilize your Endpoint Detection and Response (EDR) tools to look for any abnormal activities or behaviors associated with the user or system that ran the command, particularly processes initiated around the same time.
  - **Analyze Network Traffic:** Examine network connection logs and flows to identify any unusual outbound or inbound connections that coincide with the execution of the cmdlet, indicating potential data exfiltration or lateral movement.
  - **Cross-Reference User Activity:** Verify the legitimacy of the user account that executed the command by checking authentication logs and other user activity logs within the environment to ascertain if the account was compromised or used maliciously.
  ### Prioritization
  This alert is assigned a low severity due to the common use of PowerShell for legitimate administrative functions; however, it should still be prioritized for investigation due to its potential association with malicious discovery activities.
  ### Blind Spots and Assumptions
  One assumption is that not all instances of `Get-NetTCPConnection` are malicious, leading to potential false positives from legitimate administrative activities. Blind spots may include environments where PowerShell logging is not enabled, which would prevent detection of this activity. Additionally, sophisticated adversaries may deploy obfuscation techniques to disguise their commands, thereby evading this detection rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and effectiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
