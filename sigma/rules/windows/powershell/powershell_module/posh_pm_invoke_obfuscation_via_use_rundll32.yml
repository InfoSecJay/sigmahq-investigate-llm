title: Invoke-Obfuscation Via Use Rundll32 - PowerShell Module
id: 88a22f69-62f9-4b8a-aa00-6b0212f2f05a
related:
- id: a5a30a6e-75ca-4233-8b8c-42e0f2037d3b
  type: derived
status: test
description: Detects Obfuscated Powershell via use Rundll32 in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009
author: Nikita Nazarov, oscd.community
date: 2019-10-08
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection_4103:
    Payload|contains|all:
    - '&&'
    - 'rundll32'
    - 'shell32.dll'
    - 'shellexec_rundll'
    Payload|contains:
    - 'value'
    - 'invoke'
    - 'comspec'
    - 'iex'
  condition: selection_4103
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Invoke-Obfuscation Via Use Rundll32 
  - PowerShell Module" is designed to detect obfuscated PowerShell scripts that utilize the `rundll32` command for executing malicious payloads. This technique can be indicative of an attacker attempting to evade detection by encoding their scripts and leveraging legitimate Windows functionalities to execute harmful commands. The rule specifically looks for script payloads that contain multiple indicators, such as '`&&`', '`rundll32`', and '`shell32.dll`', which are commonly employed in obfuscation tactics to hide malicious activities. The primary technical data sources engaged in this rule are PowerShell module logs that record the execution and parameters of PowerShell commands, making it crucial for threat detection across Windows environments.
  This detection falls under the MITRE ATT&CK tactics of "Defense Evasion" (ID: T1027) and "Execution" (ID: T1059.001), as it highlights how attackers can misuse legitimate system tools to cover their tracks and execute attacks stealthily. By monitoring PowerShell command invocations and filtering logs for specific patterns indicative of obfuscation, this rule helps SOC analysts identify potentially harmful activities in early stages.
  ### Investigation Steps
  - **Review EDR Alerts:** Begin by examining EDR alerts for processes associated with `rundll32.exe`. Look for any unusual parent-child relationships that may indicate the execution of obfuscated PowerShell scripts.
  - **Analyze PowerShell Logs:** Investigate the PowerShell command logs for entries that contain the keywords specified in the rule (e.g., '`&&`', '`rundll32`'). Check for any accompanying command line arguments to evaluate the intent of the execution.
  - **Correlate Network Connections:** Use the NDR tool to correlate any suspicious network connections back to endpoints flagged by the rule. Investigate both outbound and inbound connections to identify communications with known malicious servers.
  - **Check System Logs:** Review Windows Security and Application logs for any related events that coincide with the timestamps of flagged PowerShell execution. Look for events that could suggest privilege escalation or further exploitation in your system.
  ### Prioritization
  The alert generated by this rule is considered high severity due to the significant risk associated with obfuscated PowerShell executions, which can signal an intention to utilize malicious scripts for unauthorized access or data exfiltration in enterprise environments.
  ### Blind Spots and Assumptions
  This rule may not fire if obfuscated PowerShell commands avoid using keywords like '`rundll32`' or if a varying obfuscation technique is employed that does not conform to the patterns monitored. Additionally, if PowerShell logging settings are misconfigured or disabled, relevant telemetry may not be captured, preventing detection. Analysts should also consider that advanced adversaries might tweak their techniques to bypass standard logging, leading to potential blind spots in detection capabilities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
