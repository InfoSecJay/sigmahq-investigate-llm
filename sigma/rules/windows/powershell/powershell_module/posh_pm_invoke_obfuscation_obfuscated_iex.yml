title: Invoke-Obfuscation Obfuscated IEX Invocation - PowerShell Module
id: 2f211361-7dce-442d-b78a-c04039677378
related:
- id: 1b9dc62e-6e9e-42a3-8990-94d7a10007f7
  type: derived
status: test
description: Detects all variations of obfuscated powershell IEX invocation code generated
  by Invoke-Obfuscation framework from the code block cited in the reference section
  below
references:
- https://github.com/danielbohannon/Invoke-Obfuscation/blob/f20e7f843edd0a3a7716736e9eddfa423395dd26/Out-ObfuscatedStringCommand.ps1#L873-L888
author: Daniel Bohannon (@Mandiant/@FireEye), oscd.community
date: 2019-11-08
modified: 2022-12-31
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection_payload:
  - Payload|re: '\$PSHome\[\s*\d{1,3}\s*\]\s*\+\s*\$PSHome\['
  - Payload|re: '\$ShellId\[\s*\d{1,3}\s*\]\s*\+\s*\$ShellId\['
  - Payload|re: '\$env:Public\[\s*\d{1,3}\s*\]\s*\+\s*\$env:Public\['
  - Payload|re: '\$env:ComSpec\[(\s*\d{1,3}\s*,){2}'
  - Payload|re: '\*mdr\*\W\s*\)\.Name'
  - Payload|re: '\$VerbosePreference\.ToString\('
  - Payload|re: '\[String\]\s*\$VerbosePreference'
  condition: selection_payload
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect instances of obfuscated PowerShell commands generated by the Invoke-Obfuscation framework. The rule specifically captures variations of IEX (Invoke-Expression) command invocations, which are commonly used by threat actors to execute potentially malicious scripts while evading detection mechanisms. By employing regular expressions, the rule identifies characteristic patterns associated with obfuscated payloads in the PowerShell logs. The primary data source leveraged in this detection is the PowerShell module logs (Sysmon), which provide visibility into executed commands, including parameters, script blocks, and any environmental variables that may have been manipulated to disguise the true intent of the executed code.
  The alert relates to the MITRE ATT&CK tactics and techniques under "Defense Evasion" (T1027) and "Execution" (T1059.001), which signifies the adversarial focus on concealing their activities and ensuring successful code execution in a potentially hostile environment. Responders should be vigilant as the usage of obfuscation often signifies malicious intent and may precede further stages of an attack.
  ### Investigation Steps
  - **Review PowerShell Logs:** Analyze the PowerShell module logs in Sysmon to pinpoint the specific time of the detected invocation and observe the executed command's details, including obfuscation techniques used. 
  - **Check Process Tree:** Utilize EDR tools to inspect the process tree surrounding the PowerShell invocation, identifying any parent processes or subsequent actions that may indicate further compromise or lateral movement within the environment.
  - **Assess Network Connections:** Examine any associated network activity via NDR or firewall logs to determine if the obfuscated command attempted to communicate with external or suspicious IP addresses, which could hint at data exfiltration or command and control activities.
  - **Investigate User Context:** Review the context under which the command was executed by checking logs for user accounts, session information, and any anomalies in user behavior that may point to credential misuse or account compromise.
  ### Prioritization
  The alert is classified as high severity due to the inherent risk presented by obfuscated command executions. Such activities often indicate attempts by malicious actors to evade detection and execute unauthorized code, which can lead to significant breaches and compromise of sensitive data in an enterprise environment.
  ### Blind Spots and Assumptions
  This detection rule may not fire if the PowerShell logging has been disabled or if the Invoke-Obfuscation module is modified to produce output that does not match the established patterns. Additionally, users with legitimate access can perform obfuscated command executions without raising alarms, suggesting a potential blind spot in identifying insider threats. Furthermore, the rule relies on effective logging within the Sysmon framework; if the configurations are incorrect or incomplete, the detection capabilities may be compromised.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
