title: Bad Opsec Powershell Code Artifacts
id: 8d31a8ce-46b5-4dd6-bdc3-680931f1db86
related:
- id: 73e733cc-1ace-3212-a107-ff2523cc9fc3
  type: derived
status: test
description: |
  focuses on trivial artifacts observed in variants of prevalent offensive ps1 payloads, including
  Cobalt Strike Beacon, PoshC2, Powerview, Letmein, Empire, Powersploit, and other attack payloads
  that often undergo minimal changes by attackers due to bad opsec.
references:
- https://newtonpaul.com/analysing-fileless-malware-cobalt-strike-beacon/
- https://labs.sentinelone.com/top-tier-russian-organized-cybercrime-group-unveils-fileless-stealthy-powertrick-backdoor-for-high-value-targets/
- https://www.mdeditor.tw/pl/pgRt
author: 'ok @securonix invrep_de, oscd.community'
date: 2020-10-09
modified: 2022-12-25
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection_4103:
    Payload|contains:
    - '$DoIt'
    - 'harmj0y'
    - 'mattifestation'
    - '_RastaMouse'
    - 'tifkin_'
    - '0xdeadbeef'
  condition: selection_4103
falsepositives:
- 'Moderate-to-low; Despite the shorter length/lower entropy for some of these, because
  of high specificity, fp appears to be fairly limited in many environments.'
level: critical
notes: |
  ### Technical Context
  The Sigma rule titled "Bad Opsec Powershell Code Artifacts" focuses on identifying telltale artifacts commonly found in PowerShell payloads associated with various threat actors, including the notorious Cobalt Strike Beacon and other hacking frameworks such as PoshC2, Empire, and PowerSploit. Specifically, this rule inspects the contents of PowerShell modules for specific strings that are characteristic of poorly obfuscated code used by attackers who exhibit weak operational security (opsec). By leveraging telemetry from PowerShell modules on Windows environments, the rule can flag potential malicious activity based on recognizable patterns in the command line or script contents. This detection aligns with the MITRE ATT&CK tactic of Execution (T1059.001), which focuses on command and scripting interpreter use.
  ### Investigation Steps
  - **Check EDR Alerts:** Investigate any corresponding EDR alerts that coincide with the time the PowerShell module was loaded, paying close attention to suspicious activity and associated process trees.
  - **Review PowerShell Logs:** Utilize PowerShell logging to review the specific execution context of the flagged code, looking for signs of lateral movement or unauthorized access attempts.
  - **Examine Network Connections:** Analyze any outbound network connections occurring around the same time, particularly those involving uncommon destinations or protocols which may indicate data exfiltration or command and control communications.
  - **Investigate Historical Context:** Research the behavior of previously flagged scripts or modules in the environment to see if similar patterns are recurring, which might indicate a more significant persistent threat.
  ### Prioritization
  This alert is categorized as critical severity due to the potential for widespread impact associated with the execution of known malicious PowerShell scripts, which may facilitate lateral movement, data exfiltration, or deployment of additional malware.
  ### Blind Spots and Assumptions
  The detection rule may not fire if attackers use heavily obfuscated scripts that do not contain any of the specified keywords, or if variations of the payload have altered recognizable traits. Additionally, environments with strict PowerShell execution policies may prevent these scripts from running. It's also important to note that benign administrative scripts may inadvertently trigger the rule if they contain similar artifacts due to the common usage of terms across legitimate PowerShell operations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
