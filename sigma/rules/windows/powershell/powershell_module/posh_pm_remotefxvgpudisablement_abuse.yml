title: Potential RemoteFXvGPUDisablement.EXE Abuse - PowerShell Module
id: 38a7625e-b2cb-485d-b83d-aff137d859f4
related:
- id: a6fc3c46-23b8-4996-9ea2-573f4c4d88c5     # ProcCreation
  type: similar
- id: f65e22f9-819e-4f96-9c7b-498364ae7a25     # PS Classic
  type: similar
- id: cacef8fc-9d3d-41f7-956d-455c6e881bc5     # PS ScriptBlock
  type: similar
status: test
description: Detects PowerShell module creation where the module Contents are set
  to "function Get-VMRemoteFXPhysicalVideoAdapter". This could be a sign of potential
  abuse of the "RemoteFXvGPUDisablement.exe" binary which is known to be vulnerable
  to module load-order hijacking.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md
- https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1
author: Nasreddine Bencherchali (Nextron Systems), frack113
date: 2021-07-13
modified: 2023-05-09
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  product: windows
  category: ps_module
  definition: 0ad03ef1-f21b-4a79-8ce8-e6900c54b65b
detection:
  selection:
    Payload|contains: 'ModuleContents=function Get-VMRemoteFXPhysicalVideoAdapter
      {'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule targets specific PowerShell module actions that could indicate potential abuse of the "RemoteFXvGPUDisablement.exe" binary, which can be exploited through module load-order hijacking. The rule specifically looks for PowerShell modules that include a function definition titled `Get-VMRemoteFXPhysicalVideoAdapter`. Such signatures can reveal malicious attempts to manipulate GPU configurations or bypass security mechanisms. The technical data sources involved are primarily from PowerShell module creation logs, where the content and structure of the module are analyzed to confirm the presence of the suspicious function. 
  By monitoring for this specific payload in PowerShell activity, the rule enhances visibility into potentially malicious behaviors that could undermine system defenses or escalate privileges.
  ### Investigation Steps
  - Utilize EDR tools to examine the details of the PowerShell process that generated the alert, focusing on command-line parameters and the execution context to determine the legitimacy of the module's creation.
  - Review historical PowerShell logs to identify any preceding commands or scripts that may have led to the creation of the suspicious module, assessing for patterns of abuse or unusual activity.
  - Correlate findings with endpoint antivirus (AV) logs to identify whether the system has any known vulnerable binaries or executed commands associated with the RemoteFX configuration.
  - Investigate network activity via the proxy and firewall logs to observe any outbound connections or data exfiltration attempts made from the affected endpoint during or after the module's creation.
