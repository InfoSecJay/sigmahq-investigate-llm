title: Powershell Suspicious Win32_PnPEntity
id: b26647de-4feb-4283-af6b-6117661283c5
status: test
description: Adversaries may attempt to gather information about attached peripheral
  devices and components connected to a computer system.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1120/T1120.md
author: frack113
date: 2021-08-23
modified: 2022-12-25
tags:
- attack.discovery
- attack.t1120
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains: Win32_PnPEntity
  condition: selection
falsepositives:
- Admin script
level: low
notes: |
  ### Technical Context
  The Sigma rule titled "Powershell Suspicious Win32_PnPEntity" focuses on detecting potential reconnaissance activities by adversaries targeting the information of peripheral devices connected to a Windows system. Specifically, it looks for instances where PowerShell scripts, via Script Block Logging, contain references to "Win32_PnPEntity", a Windows Management Instrumentation (WMI) class that provides information about Plug and Play (PnP) devices. When an attacker aims to enumerate installed peripherals, they may execute PowerShell commands that leverage this class to extract valuable device configurations and capabilities, thus enabling further exploitation. This rule connects with the MITRE ATT&CK framework under the Discovery tactic (T1120), highlighting the exploration aspect used by adversaries to gather information about the environment.
  The primary data sources involved in triggering this detection include Windows PowerShell logs where Script Block Logging is activated. Successful detection relies on the presence of relevant text strings within the logged PowerShell script blocks, effectively pinpointing instances that are atypical or unauthorized when compared to standard operational procedures.
  ### Investigation Steps
  - **Review PowerShell Logs:** Check Windows PowerShell logs for the specific script block containing "Win32_PnPEntity"; analyze related commands run before and after this logging for context.
    
  - **Correlate with EDR:** Use your Endpoint Detection and Response (EDR) tool to assess any abnormal process activity on the endpoint that executed the script, including parent-child process relationships and execution context.
    
  - **Examine Connectivity Logs:** Investigate network logs for any unusual outbound connections from the affected host that might indicate data exfiltration or command and control (C2) communications after the execution of the suspicious PowerShell command.
  - **Engage with User Context:** Review the user account that executed the script; analyze their privileges, previous activities, and any possible compromise indicators or deviations from typical behavior.
  ### Prioritization
  The alert generated by this rule is deemed low priority, reflecting that while the detection of such PowerShell activity warrants further examination, it does not immediately signify malicious intent, especially in contexts like administrative scripting or legitimate IT operations.
  ### Blind Spots and Assumptions
  There are certain assumptions made with this rule. First, it presupposes that Script Block Logging is enabled on all target endpoints; if it isn’t, the rule will not fire. Additionally, legitimate administrative PowerShell usage could lead to false positives, as scripts executed by system administrators might also invoke the "Win32_PnPEntity" class for valid purposes. Furthermore, an adversary may obfuscate their scripts or use alternative methods to evade detection, such as PowerShell execution with command-line arguments that don’t match the rule's text search. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
