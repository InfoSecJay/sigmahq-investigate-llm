title: Abuse of Service Permissions to Hide Services Via Set-Service - PS
id: 953945c5-22fe-4a92-9f8a-a9edc1e522da
related:
- id: 514e4c3a-c77d-4cde-a00f-046425e2301e
  type: similar
status: test
description: Detects usage of the "Set-Service" powershell cmdlet to configure a new
  SecurityDescriptor that allows a service to be hidden from other utilities such
  as "sc.exe", "Get-Service"...etc. (Works only in powershell 7)
references:
- https://twitter.com/Alh4zr3d/status/1580925761996828672
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-17
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.011
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Set-Service '
    - 'DCLCWPDTSD'
    ScriptBlockText|contains:
    - '-SecurityDescriptorSddl '
    - '-sd '
  condition: selection
falsepositives:
- Rare intended use of hidden services
- Rare FP could occur due to the non linearity of the ScriptBlockText log
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the abuse of service permissions via the "Set-Service" PowerShell cmdlet. By leveraging specific parameters, the cmdlet can be used to modify a service's Security Descriptor, effectively allowing that service to be hidden from discovery tools such as "sc.exe" and "Get-Service." This type of manipulation is often indicative of attempts to evade detection and maintain persistence within a compromised environment. The detection leverages PowerShell Script Block Logging, which provides insight into executed PowerShell commands including their parameters and text content.
  The rule focuses on identifying script blocks that contain the keywords associated with the "Set-Service" cmdlet and specific strings that, when combined, indicate a malicious attempt to obscure service activities. This aligns with the MITRE ATT&CK framework under the tactics of "Persistence," "Defense Evasion," and "Privilege Escalation," specifically referencing technique T1574.011, which focuses on modifying security permissions to achieve malicious goals.
  ### Investigation Steps
  - **Check PowerShell Execution Logs**: Investigate PowerShell logs to identify the context of the command execution, including the user who executed it and any related commands in the same session.
  - **Review Service Configurations**: Use "Get-Service" and "sc.exe" commands to check the status and configurations of services that are suspected to have been altered or hidden.
  - **Analyze Security Events**: Review Windows Security Event Logs for any abnormal service creations or modifications that coincide with the timing of the detected command execution.
  - **Correlate with Other Logs**: Cross-reference network connections and EDR alerts to identify any unusual behavior or lateral movement attempts that could indicate further compromise following the service modification.
  ### Prioritization
  This alert is classified as high-severity due to the potential implications of a service being hidden, which can indicate an advanced level of adversarial activity aimed at maintaining persistence and evading detection within an enterprise environment.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where Script Block Logging has not been enabled, as the detection heavily relies on the availability of detailed PowerShell command data. Additionally, legitimate use cases for modifying service states (e.g., system maintenance) could lead to false positives. Adversaries may also employ obfuscation techniques or use alternative command methods that do not invoke "Set-Service," further complicating detection efforts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
