title: Suspicious Connection to Remote Account
id: 1883444f-084b-419b-ac62-e0d0c5b3693f
status: test
description: |
  Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts.
  Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1110.001/T1110.001.md#atomic-test-2---brute-force-credentials-of-single-active-directory-domain-user-via-ldap-against-domain-controller-ntlm-or-kerberos
author: frack113
date: 2021-12-27
tags:
- attack.credential-access
- attack.t1110.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'System.DirectoryServices.Protocols.LdapDirectoryIdentifier'
    - 'System.Net.NetworkCredential'
    - 'System.DirectoryServices.Protocols.LdapConnection'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  This Sigma rule detects potentially malicious activity related to unauthorized attempts to access remote accounts through brute-force password guessing. It focuses on PowerShell scripts that employ specific classes and methods related to LDAP directory services, such as `LdapDirectoryIdentifier`, `NetworkCredential`, and `LdapConnection`. These methods are commonly used for establishing connections and authenticating to directory services in a Windows environment. By monitoring for these elements within script block logs, the rule aims to identify when an adversary may be systematically trying to guess passwords for user accounts within an Active Directory domain. It assumes that Script Block Logging is enabled, which allows the capture of detailed information about PowerShell script executions, leading to timely identifications of any suspicious or unauthorized activities.
  ### Investigation Steps
  - Review recent PowerShell script execution logs in your EDR to identify any instances of the specified classes and methods, paying attention to the frequency and source of the scripts.
  - Correlate script executions with user account activity in the Active Directory logs to determine if the accounts targeted were legitimate or if there were any suspicious login attempts.
  - Analyze network logs from your firewall or proxy to track any outbound connections made to user accounts during the time frame of the potential brute-force attempts.
  - Check your authentication logs and SIEM for signs of failed login attempts associated with the accounts that the scripts were targeting, as well as any associated IP addresses.
