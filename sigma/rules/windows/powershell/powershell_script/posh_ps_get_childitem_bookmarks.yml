title: Automated Collection Bookmarks Using Get-ChildItem PowerShell
id: e0565f5d-d420-4e02-8a68-ac00d864f9cf
status: test
description: |
  Adversaries may enumerate browser bookmarks to learn more about compromised hosts.
  Browser bookmarks may reveal personal information about users (ex: banking sites, interests, social media, etc.) as well as details about
  internal network resources such as servers, tools/dashboards, or other related infrastructure.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1217/T1217.md
author: frack113
date: 2021-12-13
modified: 2022-12-25
tags:
- attack.discovery
- attack.t1217
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Get-ChildItem'
    - ' -Recurse '
    - ' -Path '
    - ' -Filter Bookmarks'
    - ' -ErrorAction SilentlyContinue'
    - ' -Force'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  This Sigma rule detects potential malicious activity by identifying suspicious use of the PowerShell command `Get-ChildItem`, specifically targeting the enumeration of browser bookmarks. Adversaries leverage this command to recursively search for files or directories that match the "Bookmarks" filter, which can expose sensitive personal information and details about internal resources or tools within an organization. The detection relies on monitoring PowerShell script block logging in Windows, which captures the commands executed within PowerShell, providing granular visibility into potentially malicious scripts. The rule aligns with the MITRE ATT&CK framework under the tactic of Discovery (Tactic: Discovery; Technique: T1217), highlighting adversaries' potential intent to gather information about compromised hosts through browser bookmarks.
  ### Investigation Steps
  - **Review PowerShell Logs:** Examine recent PowerShell Activity logs in your EDR solution for the specific execution of `Get-ChildItem` and look for accompanying command-line arguments that may indicate an attempt to search for bookmarks.
  - **Correlate User Activity:** Check the Windows Security event logs for unusual logon patterns by the user account that executed the PowerShell command to assess any potential compromise.
  - **Inspect Network Traffic:** Analyze the outbound network connections in your NDR tools to identify if the compromised host is communicating with suspicious external IPs or domains after the command execution.
  - **Audit Browser Settings:** Investigate the browser settings or configurations on the concerned endpoints to ensure that any unauthorized modifications have not occurred due to malware or unauthorized access.
  ### Prioritization
  This alert is classified as low severity due to its potential for information gathering rather than immediate harm. However, it could indicate an adversary's reconnaissance efforts that may lead to more serious actions.
  ### Blind Spots and Assumptions
  This rule may not fire if Script Block Logging is not enabled on the target systems, as it is a prerequisite for capturing PowerShell executions. Additionally, adversaries could obfuscate their commands or utilize encoded command line arguments that bypass this detection. The rule also assumes that the environment has standardized browser configurations where bookmarks are stored in recognizable directories.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
