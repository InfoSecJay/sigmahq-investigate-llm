title: Remove Account From Domain Admin Group
id: 48a45d45-8112-416b-8a67-46e03a4b2107
status: test
description: |
  Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users.
  Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1531/T1531.md#atomic-test-3---remove-account-from-domain-admin-group
author: frack113
date: 2021-12-26
tags:
- attack.impact
- attack.t1531
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Remove-ADGroupMember'
    - '-Identity '
    - '-Members '
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious behaviors where an adversary may attempt to remove accounts from the Domain Admin group within a Windows environment. This type of action can significantly disrupt organizational operations by denying legitimate users access to essential resources. The rule specifically looks for command-line activities through PowerShell scripts that contain the PowerShell command `Remove-ADGroupMember` along with the parameters `-Identity` and `-Members`, which indicate the targeted user accounts and the group from which they are being removed. The primary technical data sources involved in this detection include PowerShell script logs, specifically Script Block Logging, which must be enabled for the telemetry to capture and analyze such activities efficiently. This behavior is associated with the MITRE ATT&CK tactic of "Impact" (T1531, "Account Access Removal"), where adversaries aim to manipulate access controls and inhibit critical user functionalities.
  ### Investigation Steps
  - **Check PowerShell Logs:** Examine PowerShell logs for related activities and confirm the presence of `Remove-ADGroupMember` commands and their respective parameters.
  - **Review Event Logs:** Investigate the Windows Security logs for any corresponding events that show the changes made to group memberships, focusing on the Domain Admin group.
  - **Analyze User Access:** Assess the account and group membership of the affected users to determine the impact of the removal and if any unauthorized changes were made.
  - **Cross-Reference with EDR:** Utilize EDR tools to monitor endpoint behavior for any unusual activities or processes that coincide with the time of the suspected malicious PowerShell command execution.
  ### Prioritization
  Given the potential impact of an account being removed from the Domain Admin group, this alert is prioritized as medium severity. Rapid response is essential to mitigate unauthorized access and restore rightful administrative privileges, as the ramifications can lead to significant operational disruptions.
  ### Blind Spots and Assumptions
  This rule assumes that Script Block Logging is enabled and adequately configured to capture the relevant PowerShell activities. There may be blind spots if attackers use obfuscation techniques in PowerShell commands or if they execute the command remotely without clear logs, potentially bypassing detection. Additionally, legitimate administrative activities from trusted personnel may inadvertently trigger alerts if proper context is not considered, underscoring the importance of corroborating alerts with additional logs and user behavior.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
