title: PSAsyncShell - Asynchronous TCP Reverse Shell
id: afd3df04-948d-46f6-ae44-25966c44b97f
status: test
description: Detects the use of PSAsyncShell an Asynchronous TCP Reverse Shell written
  in powershell
references:
- https://github.com/JoelGMSec/PSAsyncShell
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-04
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains: 'PSAsyncShell'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify the execution of the PSAsyncShell, an asynchronous TCP reverse shell tool implemented in PowerShell. The rule analyzes PowerShell script logs, specifically looking for script blocks containing the term "PSAsyncShell." By leveraging these logs, the rule is able to detect potential malicious activity where an attacker attempts to establish a reverse shell connection to a remote server. To effectively detect this behavior, it is critical that Script Block Logging is enabled on the target Windows systems, as this feature captures detailed information about executed PowerShell commands and scripts.
  In essence, the detection relies on monitoring PowerShell operations for suspicious code patterns that may indicate an attempt to bypass security measures and gain unauthorized access to enterprise networks. Organizations using this rule can enhance their security posture by proactively identifying and investigating such potentially harmful activities.
  ### Investigation Steps
  - Review the PowerShell script logs in your EDR tool for any instances of the term "PSAsyncShell" to confirm the execution of the suspicious reverse shell command.
  - Check the network traffic logs on your NGFW or NDR solution for any unusual outbound connections that may suggest a reverse shell is attempting to communicate with external servers.
  - Inspect the affected system's process tree in the EDR to determine if any unknown or anomalous processes were spawned in conjunction with the detected script execution.
  - Correlate the event with user activity logs in your SIEM to identify any abnormal patterns of behavior or user accounts that could help to ascertain the legitimacy of the activity.
