title: Delete Volume Shadow Copies via WMI with PowerShell - PS Script
id: e17121b4-ef2a-4418-8a59-12fb1631fa9e
status: test
description: Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject.
  This technique is used by numerous ransomware families such as Sodinokibi/REvil
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell
author: frack113
date: 2021-12-26
modified: 2022-12-02
tags:
- attack.impact
- attack.t1490
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Get-WmiObject'
    - 'Win32_ShadowCopy'
    - '.Delete()'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect malicious PowerShell scripts that attempt to delete Windows Volume Shadow Copies through the Windows Management Instrumentation (WMI) framework. Specifically, the detection looks for script executions that utilize the `Get-WmiObject` cmdlet to access the `Win32_ShadowCopy` class and subsequently invoke the `.Delete()` method on these snapshots. Volume Shadow Copies are often targeted by ransomware, as they can contain backups of files that the malware seeks to encrypt or delete to prevent recovery. The relevant data sources involved in this detection include Windows Event Logs for PowerShell script block logging, which must be enabled for accurate detection of these commands. This method is associated with the MITRE ATT&CK technique T1490, which encompasses methods that adversaries use to manipulate shadow copies in order to deny data access.
  ### Investigation Steps
  - **Check PowerShell Logs**: Review the PowerShell script block logs within your EDR system for instances of the detected script, confirming the presence of the specific commands utilized in the attack.
  - **Correlate with Security Events**: Cross-reference the time of the PowerShell execution with Windows Security event logs to look for any authentication or access anomalies during the same time frame.
  - **Examine Process Activity**: Use your EDR or Sysmon logs to identify any related process creations or parent-child process relationships that could indicate the broader context of the PowerShell execution.
  - **Investigate WMI Activity**: Look into WMI activity logs to extract more details about the context in which the `Get-WmiObject` command was executed, including the user account involved and other WMI queries made around that time.
  ### Prioritization
  The severity level of this alert is classified as high due to the significant risk associated with the deletion of Volume Shadow Copies. This action may indicate a ransomware attack or other malicious activity aimed at compromising data availability, necessitating immediate investigation.
  ### Blind Spots and Assumptions
  A potential blind spot for this rule is the requirement for script block logging to be enabled; without it, the rule may not capture relevant events. Additionally, if an adversary modifies execution policies or employs obfuscation techniques, the rule may fail to trigger. It is assumed that there are no legitimate administrative activities that would invoke this command for purpose of cleanup; any execution in normal operations should be scrutinized. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
