title: Invoke-Obfuscation Via Use Clip - Powershell
id: db92dd33-a3ad-49cf-8c2c-608c3e30ace0
status: test
description: Detects Obfuscated Powershell via use Clip.exe in Scripts
references:
- https://github.com/SigmaHQ/sigma/issues/1009      # (Task29)
author: Nikita Nazarov, oscd.community
date: 2020-10-09
modified: 2024-04-15
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_4104:
    ScriptBlockText|re: '(?i)echo.*clip.*&&.*(Clipboard|i`?n`?v`?o`?k`?e`?)'
  condition: selection_4104
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule detects obfuscated PowerShell commands that utilize the `clip.exe` utility in scripts. The rule is designed to identify script blocks where the command includes the term "clip" in conjunction with "echo," often used in conjunction for copying data to the clipboard, and is indicative of potential malicious activities such as data exfiltration or command obfuscation. The primary data source for this detection is Windows PowerShell script block logging, which captures execution details of scripts. The rule aligns with the MITRE ATT&CK framework, specifically the tactics of **Defense Evasion** (Tactic: ATT&CK Tactic ID: T1070) and **Execution** (Tactic: ATT&CK Tactic ID: T1059.001).
  ### Investigation Steps
  - **Review PowerShell Event Logs:** Examine PowerShell script block logs to identify instances of the detected command, focusing on the capturing of related execution context details, such as user account and timestamp.
  - **Correlate with Network Traffic:** Investigate related network connections in the EDR and NDR systems to detect any unusual outbound traffic that might indicate data exfiltration following the PowerShell execution.
  - **Check for Anomalies in Clipboard Usage:** Analyze user activities around the time of the incident to see if there are any abnormal patterns involving clipboard usage, especially for sensitive data.
  - **Assess Endpoint Security Alerts:** Review alerts from endpoint detection and response (EDR) solutions to check for any associated suspicious activities that coincide with the detected script execution.
  ### Prioritization
  This alert is classified as high severity because it may indicate an attempt to evade detection while executing potentially malicious PowerShell commands, which could lead to data theft or malware installation if not addressed promptly.
  ### Blind Spots and Assumptions
  The rule assumes that PowerShell script block logging is enabled and properly configured on the monitored systems; if it is not, the rule will fail to trigger. Additionally, the detection may miss obfuscated commands that do not conform to the expected patterns or employ different means of execution. Adversaries may also employ alternate methods to manipulate the clipboard without triggering this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
