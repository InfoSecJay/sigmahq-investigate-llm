title: PowerShell Hotfix Enumeration
id: f5d1def8-1de0-4a0e-9794-1f6f27dd605c
status: test
description: Detects call to "Win32_QuickFixEngineering" in order to enumerate installed
  hotfixes often used in "enum" scripts by attackers
references:
- https://github.com/411Hall/JAWS/blob/233f142fcb1488172aa74228a666f6b3c5c48f1d/jaws-enum.ps1
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-06-21
tags:
- attack.discovery
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Win32_QuickFixEngineering'
    - 'HotFixID'
  condition: selection
falsepositives:
- Legitimate administration scripts
level: medium
notes: |
  ### Technical Context
  The "PowerShell Hotfix Enumeration" detection rule aims to identify the usage of the `Win32_QuickFixEngineering` WMI class in PowerShell scripts, which is often leveraged by attackers to enumerate installed hotfixes on Windows systems. This information can be valuable for adversaries as they assess the target's security posture and potential vulnerabilities that could be exploited. The rule triggers when a user executes a script that contains both `Win32_QuickFixEngineering` and `HotFixID` within its content. The primary data source involved is Windows PowerShell script block logs, which must be enabled for detection to function correctly. This rule ties into the MITRE ATT&CK framework under the Discovery tactic, specifically addressing the technique for system enumeration.
  ### Investigation Steps
  - **Review PowerShell Logs:** Examine script block logs in the relevant PowerShell log locations to gather details regarding the execution context of the script that triggered the alert.
  - **Analyze Process Creation Events:** Use EDR tools to investigate the process creation events associated with the PowerShell instance, checking for any parent-child relationships that may indicate a suspicious execution chain.
  - **Check Network Activity:** Evaluate any outbound network connections or DNS queries that occurred around the same time to identify potential exfiltration or follow-up attacks.
  - **Verify the User's Intent:** Investigate the user's previous activities and whether they regularly perform administrative tasks requiring hotfix checks to determine if this execution was legitimate or malicious.
  ### Prioritization
  Given that this detection pertains to the enumeration of system vulnerabilities, it carries a medium severity level in an enterprise environment. Organizations should prioritize further investigation as it may indicate reconnaissance activity, which can precede more malicious actions.
  ### Blind Spots and Assumptions
  This rule assumes that PowerShell script block logging is enabled, which may not be the case in all environments. If this logging is disabled or if attackers use alternative scripting methods that do not invoke PowerShell, the rule may fail to fire. Additionally, legitimate administrative scripts that utilize this enumeration method could lead to false positives, necessitating careful contextual analysis to differentiate between benign and malicious activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
