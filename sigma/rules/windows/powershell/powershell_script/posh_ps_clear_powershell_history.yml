title: Clear PowerShell History - PowerShell
id: 26b692dc-1722-49b2-b496-a8258aa6371d
related:
- id: dfba4ce1-e0ea-495f-986e-97140f31af2d
  type: derived
status: test
description: Detects keywords that could indicate clearing PowerShell history
references:
- https://gist.github.com/hook-s3c/7363a856c3cdbadeb71085147f042c1a
author: Ilyas Ochkov, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community
date: 2022-01-25
modified: 2022-12-02
tags:
- attack.defense-evasion
- attack.t1070.003
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection1a:
    ScriptBlockText|contains:
    - 'del'
    - 'Remove-Item'
    - 'rm'
  selection1b:
    ScriptBlockText|contains: '(Get-PSReadlineOption).HistorySavePath'
  selection_2:
    ScriptBlockText|contains|all:
    - 'Set-PSReadlineOption'
    - '–HistorySaveStyle'          # not sure if the homoglyph –/- is intended, just checking for both
    - 'SaveNothing'
  selection_3:
    ScriptBlockText|contains|all:
    - 'Set-PSReadlineOption'
    - '-HistorySaveStyle'
    - 'SaveNothing'
  condition: 1 of selection_* or all of selection1*
falsepositives:
- Legitimate PowerShell scripts
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious activity related to the clearing of PowerShell command history, which is a tactic often employed by attackers to obfuscate their actions and avoid detection. The rule looks for specific PowerShell command syntax, including keystrokes that reference clearing or modifying historical command data, such as the use of `Remove-Item` (alias `rm`), and settings adjustments via `Set-PSReadlineOption`. For detection, the rule relies on telemetry data from PowerShell Script Block Logging, which records the commands executed in PowerShell sessions. 
  The alert falls under MITRE ATT&CK technique T1070.003, "Clear Command History," which highlights the importance of recognizing how adversaries may attempt to hide their tracks during an attack. By monitoring for these specific patterns in script blocks, security teams can gain insight into potential malicious activity that aims to remove traces of executed commands.
  ### Investigation Steps
  - **Review the PowerShell Script Logs**: Utilize the SIEM to filter PowerShell logs that capture script block execution and search for occurrences of the keywords identified in the rule, paying close attention to timestamps and involved users.
    
  - **Cross-Reference User Activity**: Check the EDR for user activity around the time of the alert to determine if there are any other suspicious behaviors or anomalies associated with the user account.
  - **Analyze System Changes**: Inspect Windows Security logs to ascertain if any changes were made to security settings, particularly those associated with Script Block Logging.
  - **Consult Additional Logs**: Examine proxy and VPN logs for any external connections made by the user, as this may provide context on whether the behavior was related to an external command or threat actor. 
  ### Prioritization
  The alert is categorized as medium severity since clearing PowerShell history can indicate an attempt to cover malicious activities. It is critical for incident responders to evaluate the context, as legitimate administrative actions can also trigger similar alerts.
  ### Blind Spots and Assumptions
  This rule may not fire under several conditions: 
  - If Script Block Logging is not enabled on affected systems, the key activities will not be recorded. 
  - Legitimate scripts employed by system administrators to manage PowerShell history may falsely trigger the rule, leading to potential false positives. 
  - Adversaries could employ obfuscation techniques to bypass detection, such as using encoded commands or altering standard PowerShell workflows, thus evading the scrutiny of these specific keywords.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
