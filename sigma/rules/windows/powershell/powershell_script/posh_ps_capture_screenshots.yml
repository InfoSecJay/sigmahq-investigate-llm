title: Windows Screen Capture with CopyFromScreen
id: d4a11f63-2390-411c-9adf-d791fd152830
status: test
description: |
  Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation.
  Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1113/T1113.md#atomic-test-6---windows-screen-capture-copyfromscreen
author: frack113
date: 2021-12-28
modified: 2022-07-07
tags:
- attack.collection
- attack.t1113
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains: '.CopyFromScreen'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule identifies the use of the PowerShell method `.CopyFromScreen`, which can enable adversaries to take screenshots of the desktop, potentially harvesting sensitive information. The rule specifically targets command execution evidenced by PowerShell script block logging, which must be enabled in Windows environments for this rule to function correctly. The detection leverages Sysmon and Windows Security logs to monitor for script block text that contains the string `.CopyFromScreen`, indicating a potential screen capture operation consistent with MITRE ATT&CK technique T1113 (Screen Capture) under the collection tactic. By monitoring for this string, Security Operations Center (SOC) teams can pinpoint unauthorized attempts to gather visual data from compromised systems.
  ### Investigation Steps
  - **Check EDR for Process Creation:** Review EDR alerts for any unusual PowerShell process activities around the time the alert was triggered, including parent-child process relationships that may indicate malicious context.
  - **Review Windows Security Logs:** Investigate relevant Windows Security event logs to look for suspicious logins or other account activities that coincide with the detected script execution to better understand potential adversarial behavior.
  - **Analyze Script Block Logging:** Investigate the full script block logged by PowerShell to identify the context and parameters used in the command execution, as this may provide further insights into the adversary’s actions.
  - **Correlate with Other Data Sources:** Cross-reference the alert with network connections or proxy logs to determine if any exfiltration attempts were made following the screen capture, providing a broader view of potential data compromise.
  ### Prioritization
  The alert severity is categorized as medium due to the potential for sensitive data capture through unauthorized screen captures, which could indicate a higher-level compromise or the activity of an adversary already in the environment.
  ### Blind Spots and Assumptions
  This rule may not fire if PowerShell script block logging is not enabled or if the attacker is using obfuscation techniques that don’t include the string `.CopyFromScreen`. It assumes that adversaries are using standard methodologies for capturing screens rather than proprietary techniques. There might also be legitimate applications that employ this method for benign purposes, which could generate false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
