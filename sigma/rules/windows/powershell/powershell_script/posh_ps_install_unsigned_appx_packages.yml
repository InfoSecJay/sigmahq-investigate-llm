title: Unsigned AppX Installation Attempt Using Add-AppxPackage - PsScript
id: 975b2262-9a49-439d-92a6-0709cccdf0b2
related:
- id: 37651c2a-42cd-4a69-ae0d-22a4349aa04a
  type: similar
status: test
description: Detects usage of the "Add-AppxPackage" or it's alias "Add-AppPackage"
  to install unsigned AppX packages
references:
- https://learn.microsoft.com/en-us/windows/msix/package/unsigned-package
- https://twitter.com/WindowsDocs/status/1620078135080325122
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-31
tags:
- attack.persistence
- attack.defense-evasion
logsource:
  product: windows
  category: ps_script
  definition: Script Block Logging must be enable
detection:
  selection_cmdlet:
    ScriptBlockText|contains:
    - 'Add-AppPackage '
    - 'Add-AppxPackage '
  selection_flag:
    ScriptBlockText|contains: ' -AllowUnsigned'
  condition: all of selection_*
falsepositives:
- Installation of unsigned packages for testing purposes
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Unsigned AppX Installation Attempt Using Add-AppxPackage 
  - PsScript" is designed to detect the use of PowerShell commands associated with the installation of unsigned AppX packages. Specifically, it looks for occurrences of the `Add-AppxPackage` and its alias `Add-AppPackage` commands in PowerShell script logs, especially when these commands include the `-AllowUnsigned` flag, which allows the installation of packages that are not digitally signed. 
  This detection leverages PowerShell script block logging, which must be enabled on the monitored systems, to capture relevant script execution details. The command text is examined for specific keywords that indicate an attempt to bypass normal security checks often implemented to mitigate the installation of potentially malicious or unverified software. The rule aligns with the MITRE ATT&CK tactics of persistence (T1547) and defense evasion (T1203) since adversaries may leverage unsigned AppX installations to maintain access or disguise malicious software in enterprise environments.
  ### Investigation Steps
  - **Review PowerShell Logs:** Analyze the PowerShell script block logs to identify instances of the `Add-AppxPackage` or `Add-AppPackage` commands, particularly those executed with the `-AllowUnsigned` flag.
  - **Cross-reference EDR Alerts:** Use your Endpoint Detection and Response (EDR) tools to correlate the detected PowerShell events with any alerts for potentially associated malicious behavior.
  - **Inspect File Integrity:** Check for newly installed AppX packages and verify their authenticity and source, ensuring that no unauthorized software has been introduced onto the system.
  - **Monitor System Changes:** Observe system environment changes post-execution, using Windows Event Logs to track any alterations in application or security settings that may suggest a larger breach.
  ### Prioritization
  This alert is classified as medium severity because the installation of unsigned AppX packages could indicate attempts to introduce potentially harmful software, and thus necessitates quick validation and examination to ensure that no malware is inadvertently deployed within the environment.
  ### Blind Spots and Assumptions
  The detection rule assumes that PowerShell script block logging is enabled, which may not be the case in all environments, potentially leading to missed detection of these activities. Additionally, it may fail to trigger if adversaries use alternative methods for package installation or obfuscate their commands to evade detection. Itâ€™s also possible that legitimate use of unsigned packages for testing or development purposes could generate false positives if not adequately contextualized.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
