title: PowerShell Script With File Hostname Resolving Capabilities
id: fbc5e92f-3044-4e73-a5c6-1c4359b539de
status: test
description: Detects PowerShell scripts that have capabilities to read files, loop
  through them and resolve DNS host entries.
references:
- https://www.fortypoundhead.com/showcontent.asp?artid=24022
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-05
tags:
- attack.exfiltration
- attack.t1020
logsource:
  product: windows
  category: ps_script
  definition: bade5735-5ab0-4aa7-a642-a11be0e40872
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Get-content '
    - 'foreach'
    - '[System.Net.Dns]::GetHostEntry'
    - 'Out-File'
  condition: selection
falsepositives:
- The same functionality can be implemented by admin scripts, correlate with name
  and creator
level: medium
notes: |
  ### Technical Context
  This detection rule targets the malicious use of PowerShell scripts that are designed to read files from the system, iterate through them, and resolve possibly malicious DNS host entries. The key elements this rule looks for include the use of the `Get-Content` command to read file contents, the `foreach` looping construct, the `[System.Net.Dns]::GetHostEntry` method to resolve DNS names, and the `Out-File` command for outputting data. The rule utilizes telemetry from Windows PowerShell scripts, specifically detecting these patterns within script block text, indicating potential misuse aimed at exfiltration of sensitive data, in line with the MITRE ATT&CK technique T1020 (Automated Exfiltration).
  When a PowerShell script exhibits these behaviors, it raises the alarm for potential data exfiltration or other nefarious activities that could compromise an organizationâ€™s sensitive information. The telemetry examined includes various execution traces from PowerShell, granting incident responders insight into potentially harmful scripts and their operational details.
  ### Investigation Steps
  - **Review PowerShell Execution Logs:** Use EDR tools to analyze PowerShell execution logs for the timestamps and origins of the detected scripts, focusing on the context in which they were run.
  - **Correlate with DNS Logs:** Examine DNS query logs to identify any suspicious resolved hostnames related to the PowerShell script activities, providing insight into the destination resources targeted.
  - **Analyze Affected Systems:** Investigate the system where the alert was generated to check for other indicators of compromise (IoCs), such as suspicious files or processes that may be linked to the script.
  - **Assess User Context:** Cross-reference the user account that executed the PowerShell script with known behaviors and legitimate administrative activities; determine if the execution was authorized or if it deviates from normal usage patterns.
  ### Prioritization
  The severity level for this alert is set to medium as it indicates an automated process that may lead to data exfiltration or further malicious activities if not addressed promptly. The organization should treat such alerts with appropriate urgency, considering the potential for sensitive information to be compromised.
  ### Blind Spots and Assumptions
  This rule may not fire in case PowerShell obfuscation techniques are used, where malicious actors modify their scripts to avoid detection by altering common commands. Additionally, false positives could arise from legitimate administrative scripts sharing similar functionality, thus necessitating careful correlation with the script's name, creator, and context of execution. Adversaries could circumvent the detection by executing scripts not logged or by using alternative scripting languages.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
