title: Suspicious Mount-DiskImage
id: 29e1c216-6408-489d-8a06-ee9d151ef819
status: test
description: Adversaries may abuse container files such as disk image (.iso, .vhd)
  file formats to deliver malicious payloads that may not be tagged with MOTW.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image
- https://learn.microsoft.com/en-us/powershell/module/storage/mount-diskimage?view=windowsserver2022-ps
author: frack113
date: 2022-02-01
tags:
- attack.defense-evasion
- attack.t1553.005
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Mount-DiskImage '
    - '-ImagePath '
  condition: selection
falsepositives:
- Legitimate PowerShell scripts
level: low
notes: |
  n
  ### Technical Context
  The "Suspicious Mount-DiskImage" rule is designed to detect potentially malicious use of the PowerShell command `Mount-DiskImage`, which can be employed by adversaries to mount disk image files (such as .iso or .vhd) that may contain payloads not flagged with the Mark of the Web (MOTW). This command's application could indicate an attempt to bypass security controls by loading malicious content directly into a system's environment. The detection primarily monitors PowerShell script block logs, specifically focusing on the presence of `Mount-DiskImage` and its associated parameters, particularly `-ImagePath`. This aligns with the MITRE ATT&CK tactics of Defense Evasion, specifically the technique T1553.005 which highlights the use of disk images to deliver payloads.
  ### Investigation Steps
  - **Review Script Block Logging:** Check the Script Block Logging on the affected system to analyze the context in which `Mount-DiskImage` was executed, including the full command-line arguments and any associated scripts.
  - **Analyze Process Creation Logs:** Utilize EDR tools to review all related process creation logs around the time of the alert, focusing on parent-child relationships that would indicate unexpected processes initiated by legitimate scripts.
  - **Examine File Activities:** Verify any file artifacts associated with mounted disk images using file access logs or EDR tools, particularly looking for unknown or unexpected file types that may signal malicious activity.
  - **Correlate with Network Logs:** Investigate network logs for unusual outbound connections that may correlate with the timing of the PowerShell command, which could indicate communication with a command and control (C2) server.
  ### Prioritization
  Given the potential for this activity to bypass traditional security measures, the alert is rated as low severity in an enterprise environment but warrants further exploration due to the risk of delivering untagged malicious payloads.
  ### Blind Spots and Assumptions
  This rule may not trigger if Script Block Logging is not enabled on the target systems, leading to a lack of visibility into PowerShell commands being executed. It also assumes the adversary does not obfuscate their commands or utilizes legitimate scripts that may include the same command without malicious intent. Additionally, the presence of benign applications using `Mount-DiskImage` could result in false positives if the context is not thoroughly understood.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
