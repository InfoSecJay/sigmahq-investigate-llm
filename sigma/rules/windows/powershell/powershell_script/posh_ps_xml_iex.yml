title: Powershell XML Execute Command
id: 6c6c6282-7671-4fe9-a0ce-a2dcebdc342b
status: test
description: |
  Adversaries may abuse PowerShell commands and scripts for execution.
  PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)
  Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-8---powershell-xml-requests
author: frack113
date: 2022-01-19
modified: 2023-01-19
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_xml:
    ScriptBlockText|contains|all:
    - 'New-Object'
    - 'System.Xml.XmlDocument'
    - '.Load'
  selection_exec:
    ScriptBlockText|contains:
    - 'IEX '
    - 'Invoke-Expression '
    - 'Invoke-Command '
    - 'ICM -'
  condition: all of selection_*
falsepositives:
- Legitimate administrative script
level: medium
notes: |
  n
  ### Technical Context
  The "Powershell XML Execute Command" detection rule targets potential abuses of PowerShell scripts to execute unintended commands through XML loading mechanisms. This rule focuses on identifying PowerShell script blocks that contain specific keywords and commands associated with XML document handling, such as ‘New-Object' and 'System.Xml.XmlDocument’ which could indicate malicious activity. Additionally, it looks for script blocks that utilize the "Invoke-Expression" or "Invoke-Command" functions to execute potentially dangerous commands, facilitating further attacks. The primary data sources involved include PowerShell script block logging, which must be enabled to capture relevant information. This rule is associated with the MITRE ATT&CK technique T1059.001 (PowerShell) under the execution tactic.
  ### Investigation Steps
  - **Review PowerShell Execution Logs:** Use the EDR to analyze PowerShell logs for the identified script block that triggered the alert, focusing on the exact commands and context of their execution.
  - **Inspect Related Process Creation Events:** Check for the process creation logs around the time of the alert to identify any suspicious parent-child relationships indicating how the PowerShell script was initiated.
  - **Analyze Network Connections:** Utilize network connection logs to establish if any external communications were made by the PowerShell script, which may indicate data exfiltration or command and control traffic.
  - **Validate Against Known Legitimate Use:** Cross-reference the command with known benign administrative scripts to determine if the alert stems from a legitimate use case, thus avoiding unnecessary escalation.
  ### Prioritization
  Given that this alert indicates potential execution of malicious commands within a PowerShell context, it is considered a medium severity alert, as it may suggest an active compromise or attempt to gain unauthorized access to the environment.
  ### Blind Spots and Assumptions
  This rule assumes that PowerShell script block logging is enabled in the environment, without which the detection may fail to capture relevant activities. Additionally, legitimate administrative scripts may frequently cause false positives due to the overlapping nature of commands used in both legitimate and malicious contexts. Adversaries may also employ obfuscation techniques to avoid detection, making it necessary to complement this rule with other detection measures for comprehensive security.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
