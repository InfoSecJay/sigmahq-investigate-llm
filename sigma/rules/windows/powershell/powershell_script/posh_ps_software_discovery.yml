title: Detected Windows Software Discovery - PowerShell
id: 2650dd1a-eb2a-412d-ac36-83f06c4f2282
status: test
description: Adversaries may attempt to enumerate software for a variety of reasons,
  such as figuring out what security measures are present or if the compromised system
  has a version of software that is vulnerable.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518/T1518.md
- https://github.com/harleyQu1nn/AggressorScripts     # AVQuery.cna
author: Nikita Nazarov, oscd.community
date: 2020-10-16
modified: 2022-12-02
tags:
- attack.discovery
- attack.t1518
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
            # Example: Get-ItemProperty HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize
    - 'get-itemProperty'
    - '\software\'
    - 'select-object'
    - 'format-table'
  condition: selection
falsepositives:
- Legitimate administration activities
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify potentially malicious activities associated with software discovery via PowerShell. Adversaries may execute PowerShell commands to enumerate installed software on a Windows system to assess the presence of vulnerabilities or security measures. The rule specifically looks for script block logs that contain certain keywords indicating an inquiry into the software installation details, such as `get-itemProperty`, `\software\`, `select-object`, and `format-table`. 
  The technical data sources involved in this detection include Windows PowerShell Script Block Logging, which provides a record of the commands executed in PowerShell, including the parameters used and the output formatting. The MITRE ATT&CK tactic associated with this activity is Discovery (Tactic: discovery, Technique: T1518), focusing on software enumeration processes that might signal preparatory steps before an attack or further exploitation.
  ### Investigation Steps
  - **Review EDR Alerts**: Investigate related EDR alerts for any suspicious PowerShell execution aligned with the detected command patterns, looking closely at the process tree to identify potential malicious behavior.
  - **Analyze PowerShell Logs**: Examine Windows Event Logs for PowerShell script block logging entries to understand the context of the commands executed and to correlate with potential indicators of compromise.
  - **Check Installed Software**: Cross-reference the software identified through the command with enterprise-approved applications to determine if any installed software may be exposed or unauthorized.
  - **Engage with Threat Intelligence**: Use threat intelligence to assess whether the software enumerated includes known vulnerabilities or threats, determining if the machine was used for reconnaissance purposes.
  ### Prioritization
  The severity of this alert is classified as medium, indicating that while legitimate administrative activities may trigger this rule, the presence of PowerShell commands for software discovery raises concerns about potential reconnaissance or pre-attack behavioral indicators that warrant deeper investigation.
  ### Blind spots and Assumptions
  This rule assumes that Script Block Logging is enabled and functioning correctly on the monitored Windows systems; if not, potential malicious activities may go undetected. Additionally, it may fail to trigger in environments where PowerShell is disabled or heavily restricted. Adversaries may also employ obfuscation techniques or alternate scripting languages to evade detection, and legitimate administrative tasks may create false positives, complicating incident response.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
