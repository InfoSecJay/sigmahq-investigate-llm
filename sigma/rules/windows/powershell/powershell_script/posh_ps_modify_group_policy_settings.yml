title: Modify Group Policy Settings - ScriptBlockLogging
id: b7216a7d-687e-4c8d-82b1-3080b2ad961f
related:
- id: ada4b0c4-758b-46ac-9033-9004613a150d
  type: similar
status: test
description: Detect malicious GPO modifications can be used to implement many other
  malicious behaviors.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1484.001/T1484.001.md
author: frack113
date: 2022-08-19
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1484.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_path:
    ScriptBlockText|contains: \SOFTWARE\Policies\Microsoft\Windows\System
  selection_key:
    ScriptBlockText|contains:
    - GroupPolicyRefreshTimeDC
    - GroupPolicyRefreshTimeOffsetDC
    - GroupPolicyRefreshTime
    - GroupPolicyRefreshTimeOffset
    - EnableSmartScreen
    - ShellSmartScreenLevel
  condition: all of selection_*
falsepositives:
- Legitimate use
level: medium
notes: |
  ### Technical Context
  This detection rule monitors for malicious modifications to Group Policy settings via PowerShell script block logging. Specifically, it looks for certain keywords and registry paths that indicate attempts to alter Group Policy configurations, such as `GroupPolicyRefreshTimeDC`, `EnableSmartScreen`, and other related entries. If an adversary gains access to modify Group Policies, they can implement various harmful actions, including privilege escalation and evasion tactics, making this a critical area for threat detection. The primary data source for this rule is Windows PowerShell logs, with script block logging enabled, which captures the contents of executed scripts to provide insight into potentially malicious activities. This behavior aligns with the MITRE ATT&CK tactics of Defense Evasion (T1584) and Privilege Escalation (T1484.001).
  ### Investigation Steps
  - **Verify PowerShell Script Block Logging:** Check that script block logging is enabled in the PowerShell configuration to ensure the effectiveness of this rule.
  - **Review EDR Process Activity:** Examine the processes associated with the alert using your EDR tool to identify any suspicious PowerShell activity or system-level changes.
  - **Examine Windows Event Logs:** Analyze relevant Windows Event Logs (Security, System) for any unusual group policy modifications or related activity that coincides with the alert timeframe.
  - **Correlate with Other Security Products:** Utilize data from AV, NGFW, or VPN logs to gather context on the potential threat actor's environment and any preceding suspicious behavior.
  ### Prioritization
  The alert is categorized as medium severity due to the potential for significant impacts on system integrity and security if an attacker successfully modifies Group Policy Settings. These modifications can facilitate further exploitation or lateral movement within the network.
  ### Blind Spots and Assumptions
  This rule relies on the assumption that script block logging is enabled; if not, it will not trigger. Additionally, legitimate administrative actions may generate false positives, complicating investigations. If adversaries employ avoidance tactics—such as using different PowerShell configurations or executing scripts from non-obvious locations—the detection may fail to capture these activities. It is also crucial to consider the policies and configurations unique to the organization, which may lead to variations in logged PowerShell activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
