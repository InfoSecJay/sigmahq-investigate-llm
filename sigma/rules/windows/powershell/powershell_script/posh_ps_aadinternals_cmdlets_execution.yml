title: AADInternals PowerShell Cmdlets Execution - PsScript
id: 91e69562-2426-42ce-a647-711b8152ced6
related:
- id: c86500e9-a645-4680-98d7-f882c70c1ea3
  type: similar
status: test
description: Detects ADDInternals Cmdlet execution. A tool for administering Azure
  AD and Office 365. Which can be abused by threat actors to attack Azure AD or Office
  365.
references:
- https://o365blog.com/aadinternals/
- https://github.com/Gerenios/AADInternals
author: Austin Songer (@austinsonger), Nasreddine Bencherchali (Nextron Systems),
  Swachchhanda Shrawan Poudel (Nextron Systems)
date: 2022-12-23
modified: 2025-02-06
tags:
- attack.execution
- attack.reconnaissance
- attack.discovery
- attack.credential-access
- attack.impact
logsource:
  product: windows
  category: ps_script
  definition: Script Block Logging must be enable
detection:
  selection:
    ScriptBlockText|contains:
            # Since most of the cmdlets use a unique enough string which is "-AADInt" we only used that portion. For a complete list please check the references linked above
    - 'Add-AADInt'
    - 'ConvertTo-AADInt'
    - 'Disable-AADInt'
    - 'Enable-AADInt'
    - 'Export-AADInt'
    - 'Find-AADInt'
    - 'Get-AADInt'
    - 'Grant-AADInt'
    - 'Initialize-AADInt'
    - 'Install-AADInt'
    - 'Invoke-AADInt'
    - 'Join-AADInt'
    - 'New-AADInt'
    - 'Open-AADInt'
    - 'Read-AADInt'
    - 'Register-AADInt'
    - 'Remove-AADInt'
    - 'Reset-AADInt'
    - 'Resolve-AADInt'
    - 'Restore-AADInt'
    - 'Save-AADInt'
    - 'Search-AADInt'
    - 'Send-AADInt'
    - 'Set-AADInt'
    - 'Start-AADInt'
    - 'Unprotect-AADInt'
    - 'Update-AADInt'
  condition: selection
falsepositives:
- Legitimate use of the library for administrative activity
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of PowerShell cmdlets associated with AADInternals, a tool used for administrative tasks related to Azure Active Directory (AD) and Office 365. The rule focuses on identifying specific command strings within PowerShell script blocks, indicating potential unauthorized access or misuse of these administrative tools. By monitoring PowerShell activity, specifically through Script Block Logging, the rule helps security teams identify malevolent actors who may be trying to exploit the capabilities of AADInternals for reconnaissance, credential access, or impactful actions within cloud environments. This detection aligns with the MITRE ATT&CK framework, particularly under the tactics of Execution, Reconnaissance, Discovery, Credential Access, and Impact.
  ### Investigation Steps
  - **Examine EDR Alerts:** Check for any EDR alerts corresponding to unusual PowerShell activity around the time the detection was triggered. Pay special attention to the processes that executed the cmdlets and their parent processes.
    
  - **Analyze PowerShell Logs:** Retrieve PowerShell script block logs across affected hosts to view the complete command context and potential parameters that were used when executing the AADInternals cmdlets.
  - **Correlate with Azure Logs:** Review Azure Active Directory logs for any unusual sign-ins or changes made to AD permissions that may align with the cmdlets detected. Look for anomalies in user behavior or unauthorized modifications.
  - **Review User Activity:** Investigate the actions associated with the user account that executed the cmdlets, ensuring they align with expected administrative behavior. Validate if the user was under duress or perhaps had their credentials compromised.
  ### Prioritization
  The alert is categorized as high severity due to its association with tools that can facilitate significant unauthorized access or manipulation of Azure AD identities and resources, potentially leading to substantial data exposure or service disruptions if exploited.
  ### Blind Spots and Assumptions
  This rule assumes that Script Block Logging is enabled, which is critical for detecting the specific cmdlet executions. If logging is disabled or misconfigured, the rule may fail to fire, leaving administrators unaware of potential illicit activities. Additionally, legitimate administrative usage of AADInternals might generate false positives, so it's important to correlate findings with user behavior and privilege levels. The rule may also miss detections if threat actors obfuscate their commands or use alternative methods to execute similarly malicious activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
