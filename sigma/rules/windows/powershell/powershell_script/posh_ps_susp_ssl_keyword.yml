title: Suspicious SSL Connection
id: 195626f3-5f1b-4403-93b7-e6cfd4d6a078
status: test
description: Adversaries may employ a known encryption algorithm to conceal command
  and control traffic rather than relying on any inherent protections provided by
  a communication protocol.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1573/T1573.md#atomic-test-1---openssl-c2
- https://medium.com/walmartglobaltech/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926
author: frack113
date: 2022-01-23
tags:
- attack.command-and-control
- attack.t1573
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - System.Net.Security.SslStream
    - Net.Security.RemoteCertificateValidationCallback
    - '.AuthenticateAsClient'
  condition: selection
falsepositives:
- Legitimate administrative script
level: low
notes: |
  ### Technical Context
  The "Suspicious SSL Connection" Sigma rule is designed to detect potential command and control (C2) traffic over SSL that employs known encryption algorithms to obscure data transmission. This behavior is characteristic of adversarial tactics, particularly in the way they aim to evade detection by utilizing legitimate encryption libraries, such as those found in .NET's `System.Net.Security.SslStream`. The rule specifically looks for instances in PowerShell scripts where the presence of certain key components—such as `Net.Security.RemoteCertificateValidationCallback` and the method `.AuthenticateAsClient`—indicate a possible attempt to establish encrypted connections to remote servers in a suspicious manner. This correlates with the MITRE ATT&CK technique T1573, which addresses methods of encrypted C2 communication utilized by threat actors.
  The rule relies on the Windows event logs, specifically PowerShell script block logging, to capture and analyze the executed scripts for these specific strings. When a script is executed that utilizes the SslStream for establishing an SSL connection, it could potentially indicate malicious intent, triggering an alert for further investigation.
  ### Investigation Steps
  - **Review PowerShell Logs:** Investigate the PowerShell session logs to locate the script that triggered the alert, noting any unusual or unauthorized commands that preceded the SSL connection attempt.
    
  - **Check Network Traffic:** Utilize your EDR or NDR tools to analyze outbound network connections, focusing on those associated with the timestamp of the alert to identify any known malicious IP addresses or unusual domains.
    
  - **Examine Related Processes:** Review running processes and their command-line arguments at the time of the alert to determine whether there are any anomalous processes that may indicate a wider compromise or malicious activity.
    
  - **Validate SSL Certificates:** Investigate the SSL certificates used during the connection attempt for legitimacy, checking for any indicators of misuse or association with known bad actors.
  ### Prioritization
  Given that this rule is set at a low severity level, it suggests that while the behavior is potentially suspicious and warrants investigation, it may also reflect legitimate administrative activity. However, context is essential; thorough analysis is necessary to rule out false positives involving legitimate scripts.
  ### Blind Spots and Assumptions
  This rule assumes that script block logging is enabled on all Windows systems in the monitored environment. If script block logging is not enabled or properly configured, legitimate PowerShell commands may go undetected. Additionally, well-crafted scripts that appear benign but employ obfuscation or conventional coding practices could evade detection. Adversaries might also adapt their techniques or utilize alternative programming environments that do not invoke the expected patterns, leading to undetected C2 communications.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
