title: Powershell Timestomp
id: c6438007-e081-42ce-9483-b067fbef33c3
status: test
description: |
  Adversaries may modify file time attributes to hide new or changes to existing files.
  Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.006/T1070.006.md
- https://www.offensive-security.com/metasploit-unleashed/timestomp/
author: frack113
date: 2021-08-03
modified: 2022-12-25
tags:
- attack.defense-evasion
- attack.t1070.006
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_ioc:
    ScriptBlockText|contains:
    - '.CreationTime ='
    - '.LastWriteTime ='
    - '.LastAccessTime ='
    - '[IO.File]::SetCreationTime'
    - '[IO.File]::SetLastAccessTime'
    - '[IO.File]::SetLastWriteTime'
  condition: selection_ioc
falsepositives:
- Legitimate admin script
level: medium
notes: |
  n
  ### Technical Context
  The "Powershell Timestomp" Sigma rule aims to detect the use of PowerShell scripts that modify file timestamps, a common technique used by adversaries for evasion and obfuscation. By altering a file's creation, last access, and last write times, attackers can conceal their actions, making files seem like they were created or modified at an earlier time, thus evading detection mechanisms. This rule looks for specific PowerShell commands and script block text that include properties related to file timestamps, such as `.CreationTime`, `.LastWriteTime`, and `.LastAccessTime`, or utilize the methods `[IO.File]::SetCreationTime`, `[IO.File]::SetLastAccessTime`, and `[IO.File]::SetLastWriteTime`. The technical data sources involved in this detection include Windows Security Event Logs, specifically focusing on PowerShell script activities; it is essential that Script Block Logging is enabled for successful detection. This ties into the MITRE ATT&CK framework, specifically the tactic of "Defense Evasion" and technique T1070.006, which deals with file and log distortion.
  ### Investigation Steps
  - **Check PowerShell Logs**: Investigate recent PowerShell logs in Windows Security Event Logs, focusing on the activity surrounding the time the alert was generated. Pay special attention to script block logs that may contain suspicious commands related to file timestamp manipulation.
    
  - **Review File Attributes**: Use PowerShell or Sysinternals tools to analyze the attributes of the affected files, confirming if timestamps have been altered to match that of other files in the directory, which may indicate malicious intent.
  - **Correlate with Network Activity**: Utilize EDR and network logs to review any suspicious network connections or actions linked to the identified process that executed the timestomping actions. Look for unusual outbound connections that may indicate data exfiltration or command-and-control activity.
  - **Assess User Context**: Analyze the context in which the PowerShell script was executed, including the user account involved. Determine if the account has legitimate administrative roles or if it has been compromised to facilitate the timestomping operation.
  ### Prioritization
  The alert is assigned a medium severity level because while timestomping can indicate malevolent behavior, it may also result from legitimate administrative actions. Contextual investigation is necessary to differentiate between benign and harmful activities within the environment. 
  ### Blind Spots and Assumptions
  This rule may fail to detect timestomping activities if the Script Block Logging is not enabled or if obfuscation techniques (such as encoding or misleading script content) are employed in the PowerShell execution. Additionally, legitimate administrative scripts may trigger false positives, necessitating a thorough assessment of user activities and contextual relevance to the environment.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
