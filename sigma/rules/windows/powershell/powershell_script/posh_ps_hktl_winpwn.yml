title: HackTool - WinPwn Execution - ScriptBlock
id: 851fd622-b675-4d26-b803-14bc7baa517a
related:
- id: d557dc06-62e8-4468-a8e8-7984124908ce
  type: similar
status: test
description: |
  Detects scriptblock text keywords indicative of potential usge of the tool WinPwn. A tool for Windows and Active Directory reconnaissance and exploitation.
author: Swachchhanda Shrawan Poudel
date: 2023-12-04
references:
- https://github.com/S3cur3Th1sSh1t/WinPwn
- https://www.publicnow.com/view/EB87DB49C654D9B63995FAD4C9DE3D3CC4F6C3ED?1671634841
- https://reconshell.com/winpwn-tool-for-internal-windows-pentesting-and-ad-security/
- https://github.com/redcanaryco/atomic-red-team/blob/4d6c4e8e23d465af7a2388620cfe3f8c76e16cf0/atomics/T1082/T1082.md
- https://grep.app/search?q=winpwn&filter[repo][0]=redcanaryco/atomic-red-team
tags:
- attack.credential-access
- attack.defense-evasion
- attack.discovery
- attack.execution
- attack.privilege-escalation
- attack.t1046
- attack.t1082
- attack.t1106
- attack.t1518
- attack.t1548.002
- attack.t1552.001
- attack.t1555
- attack.t1555.003
logsource:
  category: ps_script
  product: windows
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'Offline_Winpwn'
    - 'WinPwn '
    - 'WinPwn.exe'
    - 'WinPwn.ps1'
  condition: selection
falsepositives:
- As the script block is a blob of text. False positive may occur with scripts that
  contain the keyword as a reference or simply use it for detection.
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect the execution of script blocks that include specific keywords associated with the tool "WinPwn", which is used for Windows and Active Directory reconnaissance and exploitation. The rule monitors PowerShell script block logs, specifically looking for text strings such as 'Offline_Winpwn', 'WinPwn', 'WinPwn.exe', and 'WinPwn.ps1'. For this detection to be effective, Script Block Logging must be enabled on Windows systems. The alerting mechanism is grounded in multiple MITRE ATT&CK techniques related to credential access (T1552.001), execution (T1106), discovery (T1082), and privilege escalation (T1548.002), among others. By identifying any occurrences of these keywords within PowerShell scripts, the SOC can detect potential misuse of this tool in real-time.
  ### Investigation Steps
  - **Confirm Script Block Logging Status:** Check if Script Block Logging is enabled in the environment, as this is a pre-requisite for detecting relevant execution attempts. Without this logging, the rule may not capture useful data.
    
  - **Review EDR Logs:** Investigate the EDR logs to trace the execution of PowerShell commands that triggered this alert. Look for unusual patterns of execution or execution originating from unexpected locations.
  - **Examine PowerShell Command History:** Utilize PowerShell's command logging to review any executed commands leading up to the alert. Pay special attention to scripts that invoke malicious or suspicious binaries associated with WinPwn.
  - **Evaluate Network and System Activity:** Check for network connections that may correlate with the timeline of the alerts, especially outbound connections to known malicious domains or IPs related to the tool. Additionally, assess user context and machine details for potential indicators of compromise.
  ### Prioritization
  Given that this alert pertains to a high-risk tool associated with credential access, privilege escalation, and other malicious activities, it should be treated with a high severity level in an enterprise environment. Prompt investigation is necessary to determine the legitimacy of the action and whether further malicious intent is present.
  ### Blind Spots and Assumptions
  This detection rule may not fire if Script Block Logging is not enabled or if the relevant keywords are not included in any executed scripts. False positives can occur when scripts reference these keywords without malicious intent, as legitimate administrative tasks may involve PowerShell scripts containing such terms. Additionally, adversaries might employ obfuscation techniques to disguise their activities, potentially evading detection by altering or omitting these keywords from their scripts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
