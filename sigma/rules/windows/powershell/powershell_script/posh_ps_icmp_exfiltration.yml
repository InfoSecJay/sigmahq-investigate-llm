title: PowerShell ICMP Exfiltration
id: 4c4af3cd-2115-479c-8193-6b8bfce9001c
status: test
description: Detects Exfiltration Over Alternative Protocol - ICMP. Adversaries may
  steal data by exfiltrating it over an un-encrypted network protocol other than that
  of the existing command and control channel.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1048.003/T1048.003.md#atomic-test-2---exfiltration-over-alternative-protocol---icmp
author: 'Bartlomiej Czyz @bczyz1, oscd.community'
date: 2020-10-10
modified: 2022-12-25
tags:
- attack.exfiltration
- attack.t1048.003
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'New-Object'
    - 'System.Net.NetworkInformation.Ping'
    - '.Send('
  condition: selection
falsepositives:
- Legitimate usage of System.Net.NetworkInformation.Ping class
level: medium
notes: |
  ### Technical Context
  The “PowerShell ICMP Exfiltration” rule is designed to detect potential data exfiltration attempts over the Internet Control Message Protocol (ICMP) using PowerShell scripts. Adversaries may leverage ICMP to send data covertly outside a network, evading traditional security controls. This rule specifically looks for the usage of the `System.Net.NetworkInformation.Ping` class in PowerShell scripts, focusing on script blocks containing calls to create new objects and send pings. The detection relies on Windows PowerShell Script Block Logging, ensuring that relevant command executions are recorded in the event logs. When triggered, this alert suggests a possibility of unusual data movement that aligns with MITRE ATT&CK tactic "Exfiltration" and technique "Exfiltration over Alternative Protocol" (T1048.003).
  ### Investigation Steps
  - **Review PowerShell Events:** Check Windows PowerShell logs for the execution of scripts that contain suspicious ping commands to determine if legitimate administrative tasks are being falsely flagged.
  - **Analyze the Script Context:** Investigate the context and origin of the PowerShell script to identify whether it’s a sanctioned operation within your environment or an unauthorized execution.
  - **Correlate Network Activity:** Use EDR or network logs to analyze any associated outbound ICMP traffic that aligns with flagged script activity, as this can reveal unauthorized data transmissions.
  - **Evaluate Historical Data:** Check for prior incidents or patterns of similar alerts to establish if this behavior is part of a broader trend or an isolated incident.
  ### Prioritization
  The severity of this alert is classified as medium due to the potential implications of data exfiltration via ICMP, which may bypass conventional monitoring mechanisms, warranting a timely response to ensure network security.
  ### Blind spots and Assumptions
  This rule assumes that Script Block Logging is enabled within the environment; if it is disabled, the detection mechanism will not fire, and adversaries could execute similar malicious activities without being detected. Additionally, legitimate uses of the Ping command for network diagnostics may lead to false positives, necessitating careful assessment of each alert. Further, if adversaries employ alternative methods or obfuscate their commands, the rule may fail to capture such activities, leaving gaps in detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
