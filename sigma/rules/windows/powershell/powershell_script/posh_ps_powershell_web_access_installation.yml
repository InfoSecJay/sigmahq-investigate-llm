title: PowerShell Web Access Installation - PsScript
id: 5f9c7f1a-7c21-4c39-b2f3-8d8006e0e51f
status: test
description: Detects the installation and configuration of PowerShell Web Access,
  which could be used for remote access and potential abuse
references:
- https://docs.microsoft.com/en-us/powershell/module/powershellwebaccess/install-pswawebapplication
- https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-241a
- https://gist.github.com/MHaggis/7e67b659af9148fa593cf2402edebb41
author: Michael Haag
date: 2024-09-03
tags:
- attack.persistence
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_install:
    ScriptBlockText|contains: 'Install-WindowsFeature WindowsPowerShellWebAccess'
  selection_config:
    ScriptBlockText|contains: 'Install-PswaWebApplication'
  selection_auth:
    ScriptBlockText|contains|all:
    - 'Add-PswaAuthorizationRule'
    - '-UserName *'
    - '-ComputerName *'
  condition: 1 of selection_*
falsepositives:
- Legitimate PowerShell Web Access installations by administrators
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying the installation and configuration of PowerShell Web Access (PsWA), a feature that allows remote management of Windows systems through a web interface. The rule is triggered by the presence of specific PowerShell commands in script block logs, such as `Install-WindowsFeature WindowsPowerShellWebAccess`, `Install-PswaWebApplication`, and `Add-PswaAuthorizationRule`. These commands indicate not only the installation of the PsWA but also its configuration for user access and permissions. To effectively use this rule, Script Block Logging must be enabled on the monitored Windows hosts to capture these commands, which fall under the MITRE ATT&CK tactics of "Persistence" (T1059.001 
  - PowerShell).
  ### Investigation Steps
  - **Review EDR Alerts:** Examine alerts in the Endpoint Detection and Response (EDR) tool for any suspicious use of PowerShell, focusing on the specific commands that triggered the detection rule.
  - **Analyze Process Creation Logs:** Look for any parent-child process relationships involving PowerShell.exe that indicate how the script was initiated, checking timestamps and user account activity for anomalies.
  - **Check Windows Event Logs:** Inspect the Security logs to identify logon events (Event ID 4624) and any corresponding PowerShell executions that match the detected commands, confirming user legitimacy.
  - **Assess Network Activity:** Utilize network detection and response (NDR) tools to review outbound connections made by PowerShell, particularly those targeting unusual locations or involving remote management services.
  ### Prioritization
  The alert is classified as high severity because the installation and configuration of PowerShell Web Access could provide adversaries with unauthorized remote access to systems, posing significant risk to the enterprise environment.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where Script Block Logging is disabled, or if legitimate administrative actions are conducted without triggering the monitored PowerShell commands. Additionally, adversaries might attempt to evade detection by using alternative obfuscation techniques that do not trigger these specific script block patterns. It is assumed that all environments will consistently apply security configurations, including logging and monitoring.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
