title: Suspicious Hyper-V Cmdlets
id: 42d36aa1-3240-4db0-8257-e0118dcdd9cd
status: test
description: Adversaries may carry out malicious operations using a virtual instance
  to avoid detection
references:
- https://learn.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.006/T1564.006.md#atomic-test-3---create-and-start-hyper-v-virtual-machine
author: frack113
date: 2022-04-09
tags:
- attack.defense-evasion
- attack.t1564.006
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - New-VM
    - Set-VMFirmware
    - Start-VM
  condition: selection
falsepositives:
- Legitimate PowerShell scripts
level: medium
notes: |
  ### Technical Context
  The "Suspicious Hyper-V Cmdlets" detection rule aims to identify potentially malicious activities involving Hyper-V virtualization technologies on Windows systems. Adversaries may exploit Hyper-V cmdlets such as `New-VM`, `Set-VMFirmware`, and `Start-VM` to create or manipulate virtual machines to conduct operations that evade detection by security measures. This rule operates by monitoring PowerShell script block logs, which capture commands and parameters executed within PowerShell. It triggers alerts when it detects the presence of specific cmdlet invocations associated with creating and starting virtual machines in the environment, signaling a possible evasion tactic used by attackers.
  To effectively utilize this detection, it is crucial that Script Block Logging is enabled on the target systems, ensuring detailed logging of PowerShell execution. Security analysts must then analyze the alerts generated by this rule to discern between legitimate usage of Hyper-V cmdlets and possible malicious activity executed under the guise of benign operations.
  ### Investigation Steps
  - Review the related PowerShell logs in the EDR tool to obtain context around the execution of the captured cmdlets and identify the user or process that invoked them.
  - Cross-reference the timestamps of the PowerShell activity with any other suspicious network or system events captured in the SIEM for a comprehensive view of potential malicious behavior.
  - Investigate if any virtual machines were created or modified during the same time frame using Hyper-V manager logs or through Azure/AWS cloud service logs, depending on your infrastructure.
  - Check the legitimacy of the PowerShell scripts executed by comparing the scripts and their processes against your known safe scripts repository or existing threat intelligence feeds.
