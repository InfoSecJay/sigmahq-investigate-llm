title: Active Directory Group Enumeration With Get-AdGroup
id: 8c3a6607-b7dc-4f0d-a646-ef38c00b76ee
status: test
description: Detects usage of the "Get-AdGroup" cmdlet to enumerate Groups within
  Active Directory
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md
author: frack113
date: 2022-03-17
modified: 2022-11-17
tags:
- attack.discovery
- attack.t1069.002
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Get-AdGroup '
    - '-Filter'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  The detection rule for "Active Directory Group Enumeration With Get-AdGroup" focuses on uncovering the use of the PowerShell cmdlet `Get-AdGroup`, which is commonly employed for enumerating groups within an Active Directory environment. This enumeration tactic can be crucial for an adversary as they seek to identify potential targets for further attacks. The rule specifically detects when this cmdlet is invoked, especially when combined with the `-Filter` parameter, indicating that the user is not merely retrieving the full list of groups but may be looking for specific groups based on certain criteria. The essential data source for this rule is PowerShell script block logging, which must be enabled for the detection to function effectively. The rule aligns with the MITRE ATT&CK tactic of "Discovery" and technique "T1069.002 
  - Permissions Groups Enumeration."
  ### Investigation Steps
  - **Check PowerShell Execution Logs:** Query the PowerShell logs in your EDR solution for instances of the `Get-AdGroup` cmdlet to confirm usage and gather context about the executing user and their permissions.
  - **Review User Permissions:** Investigate the user account(s) that executed the command by checking Active Directory roles and group membership to assess if their actions were legitimate.
  - **Inspect Other Related Activity:** Look for additional PowerShell commands executed by the same user or in proximity to the alert. This may reveal a broader pattern of discovery or exploitation.
  - **Correlate with Network Activity:** Review network traffic logs from the proxy or firewall to see if there were any external connections or data exfiltration attempts around the time of the PowerShell execution.
  ### Prioritization
  This alert is categorized as low severity because the act of group enumeration can be a benign administrative action. However, it warrants further investigation to determine whether it is linked to any malicious intent.
  ### Blind Spots and Assumptions
  This rule assumes that script block logging is enabled; if it's not, the detection will fail to trigger. Additionally, the technique may be bypassed by user education and privilege restrictions, as legitimate administration activities could mimic malicious behavior. False positives could arise from legitimate IT staff performing their job functions, making context critical in investigations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
