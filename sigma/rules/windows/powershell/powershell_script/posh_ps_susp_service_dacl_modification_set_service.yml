title: Suspicious Service DACL Modification Via Set-Service Cmdlet - PS
id: 22d80745-6f2c-46da-826b-77adaededd74
related:
- id: a95b9b42-1308-4735-a1af-abb1c5e6f5ac
  type: similar
status: test
description: Detects usage of the "Set-Service" powershell cmdlet to configure a new
  SecurityDescriptor that allows a service to be hidden from other utilities such
  as "sc.exe", "Get-Service"...etc. (Works only in powershell 7)
references:
- https://twitter.com/Alh4zr3d/status/1580925761996828672
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/set-service?view=powershell-7.2
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-24
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.011
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_sddl_flag:
    ScriptBlockText|contains:
    - '-SecurityDescriptorSddl '
    - '-sd '
  selection_set_service:
    ScriptBlockText|contains|all:
    - 'Set-Service '
    - 'D;;'
    ScriptBlockText|contains:
    - ';;;IU'
    - ';;;SU'
    - ';;;BA'
    - ';;;SY'
    - ';;;WD'
  condition: all of selection_*
falsepositives:
- Rare intended use of hidden services
- Rare FP could occur due to the non linearity of the ScriptBlockText log
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies the use of the PowerShell cmdlet `Set-Service` with a specific Security Descriptor that could allow a service to be obscured from standard service management tools such as `sc.exe` and `Get-Service`. By employing the `-SecurityDescriptorSddl` parameter in PowerShell 7, an actor can modify the discretionary access control list (DACL) of a service, rendering it less visible to administrative tools and potentially facilitating malicious actions such as persistence and privilege escalation. This relates to the MITRE ATT&CK tactics of **Persistence** and **Defense Evasion**, targeting the technique **T1574.011 
  - Service Execution**.
  The rule leverages telemetry from Windows Sysmon, specifically monitoring PowerShell Script Block logging. This includes tracking command execution and particular attributes in commands associated with service manipulation, focusing on distinctive flags in the `SecurityDescriptor` to catch suspicious modifications.
  ### Investigation Steps
  - **Review Execution Logs**: Use EDR tools to identify not only the original execution of the PowerShell command but also any subsequent actions performed via that service.
  - **Analyze Service Configuration**: Check the configuration of modified services in the Windows Services management tool or by executing `Get-Service` and review their DACLs for unexpected permissions or security descriptors.
  - **Correlate User Activity**: Examine user activity logs around the time of the service modification to determine whether legitimate administrative actions were taken or if there was anomalous behavior by a potential intruder.
  - **Leverage Sysmon Outputs**: Analyze Sysmon logs for `process_creation` and `pipe_created` events during the timeframe of the PowerShell execution for further indicators of lateral movement or other related malicious activities.
  ### Prioritization
  This alert is classified as high severity as modifications to service DACLs can enable an attacker to persistently execute malicious software in an environment, often with the goal of evading detection. The potential for significant impact requires immediate attention from incident responders.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where PowerShell Script Block Logging is not enabled, making it crucial to confirm this setting. Additionally, legitimate administrative actions, though rare, might generate false positives, especially in complex environments where service behavior may be less predictable. Moreover, sophisticated adversaries could modify their approach to avoid triggering detection, potentially leading to missed alerts if they utilize non-standard methodologies outside of this rule's designed detection scope.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and validity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
