title: PowerShell Deleted Mounted Share
id: 66a4d409-451b-4151-94f4-a55d559c49b0
status: test
description: Detects when when a mounted share is removed. Adversaries may remove
  share connections that are no longer useful in order to clean up traces of their
  operation
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.005/T1070.005.md
author: 'oscd.community, @redcanary, Zach Stanford @svch0st'
date: 2020-10-08
modified: 2022-12-25
tags:
- attack.defense-evasion
- attack.t1070.005
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'Remove-SmbShare'
    - 'Remove-FileShare'
  condition: selection
falsepositives:
- Administrators or Power users may remove their shares via cmd line
level: medium
notes: |
  n
  ### Technical Context
  The "PowerShell Deleted Mounted Share" detection rule identifies instances where mounted shares are programmatically removed using PowerShell commands such as `Remove-SmbShare` and `Remove-FileShare`. This behavior can be indicative of an adversary's attempt to eliminate evidence of their operational footprint within a network. The rule relies on Windows PowerShell script block logging, specifically monitoring for script block text containing the aforementioned commands. By correlating this telemetry from PowerShell logs with the MITRE ATT&CK framework's T1070.005 technique (Indicator Removal on Host), security teams can better understand and respond to potentially malicious activity aimed at obscuring traces of system modifications.
  ### Investigation Steps
  - **Confirm Script Block Logging:** Verify that Script Block Logging is enabled on the affected systems to ensure that the relevant logs contain the necessary details for scrutiny.
  - **Query PowerShell Logs:** Use EDR solutions to extract and review PowerShell logs, searching specifically for instances of the commands `Remove-SmbShare` or `Remove-FileShare` being executed around the time of the alert.
  - **Check for Recent Share Configurations:** Examine system logs for recent modifications to share configurations, especially prior to the removal of shares, to gather context on the actions taken.
  - **Investigate User Activity:** Identify the user account that executed the deletion and assess their recent activity and privileges to determine if the action was aligned with regular administrative tasks or potentially malicious behavior.
  ### Prioritization
  The severity level is categorized as medium due to the potential risks associated with share deletions, although legitimate administrative tasks may also trigger this alert. Analysts should evaluate the context of the activity to determine if it poses a heightened risk of evasion or other malicious intent.
  ### Blind spots and Assumptions
  This rule assumes that Script Block Logging is enabled across all relevant endpoints; if it is not, the detection will fail to trigger. Additionally, legitimate administrative actions, such as those by IT personnel, may result in false positives if the context is not carefully analyzed. An adversary could also employ alternative methods to remove shares, such as manual deletion outside of PowerShell, which would bypass detection entirely.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
