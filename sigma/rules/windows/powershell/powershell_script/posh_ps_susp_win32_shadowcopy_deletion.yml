title: Deletion of Volume Shadow Copies via WMI with PowerShell - PS Script
id: c1337eb8-921a-4b59-855b-4ba188ddcc42
related:
- id: e17121b4-ef2a-4418-8a59-12fb1631fa9e
  type: derived
- id: 21ff4ca9-f13a-41ad-b828-0077b2af2e40
  type: similar
status: test
description: Detects deletion of Windows Volume Shadow Copies with PowerShell code
  and Get-WMIObject. This technique is used by numerous ransomware families such as
  Sodinokibi/REvil
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1490/T1490.md#atomic-test-5---windows---delete-volume-shadow-copies-via-wmi-with-powershell
- https://www.elastic.co/guide/en/security/current/volume-shadow-copy-deletion-via-powershell.html
author: Tim Rauch
date: 2022-09-20
modified: 2022-12-02
tags:
- attack.impact
- attack.t1490
logsource:
  category: ps_script
  product: windows
detection:
  selection_get:
    ScriptBlockText|contains:
    - 'Get-WmiObject'
    - 'gwmi'
    - 'Get-CimInstance'
    - 'gcim'
  selection_shadowcopy:
    ScriptBlockText|contains: 'Win32_ShadowCopy'
  selection_delete:
    ScriptBlockText|contains:
    - '.Delete()'
    - 'Remove-WmiObject'
    - 'rwmi'
    - 'Remove-CimInstance'
    - 'rcim'
  condition: all of selection*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies malicious PowerShell scripts that attempt to delete Windows Volume Shadow Copies, a technique often associated with ransomware attacks like Sodinokibi/REvil. The rule works by monitoring PowerShell script activity to capture specific commands that utilize WMI (Windows Management Instrumentation) for shadow copy deletion. Key indicators include the use of `Get-WmiObject`, `Get-CimInstance`, or references to the `Win32_ShadowCopy` class in conjunction with commands such as `.Delete()`, `Remove-WmiObject`, and `Remove-CimInstance`. By analyzing script block text from process creation logs, this rule effectively highlights potential unauthorized activities aimed at compromising data recovery options.
  ### Investigation Steps
  - Query EDR for recent PowerShell activity and filter for script blocks containing `Get-WmiObject`, `Remove-WmiObject`, or related commands to identify potential malicious actions.
  - Review process creation logs to determine the context and origin of the PowerShell execution, including the user account and the parent process that initiated the commands.
  - Analyze any associated network traffic through NDR or Firewall logs for suspicious connections that may correlate with the timing of the shadow copy deletion attempts.
  - Check for any alerts or logs from AV solutions to identify if they flagged the PowerShell activity as malicious before or after the detection event.
