title: Windows Firewall Profile Disabled
id: 488b44e7-3781-4a71-888d-c95abfacf44d
related:
- id: 12f6b752-042d-483e-bf9c-915a6d06ad75
  type: similar
status: test
description: Detects when a user disables the Windows Firewall via a Profile to help
  evade defense.
references:
- https://learn.microsoft.com/en-us/powershell/module/netsecurity/set-netfirewallprofile?view=windowsserver2022-ps
- https://www.tutorialspoint.com/how-to-get-windows-firewall-profile-settings-using-powershell
- https://web.archive.org/web/20230929023836/http://powershellhelp.space/commands/set-netfirewallrule-psv5.php
- http://woshub.com/manage-windows-firewall-powershell/
- https://www.elastic.co/guide/en/security/current/windows-firewall-disabled-via-powershell.html
author: Austin Songer @austinsonger
date: 2021-10-12
modified: 2022-12-30
tags:
- attack.defense-evasion
- attack.t1562.004
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_args:
    ScriptBlockText|contains|all:
    - 'Set-NetFirewallProfile '
    - ' -Enabled '
    - ' False'
  selection_opt:
    ScriptBlockText|contains:
    - ' -All '
    - 'Public'
    - 'Domain'
    - 'Private'
  condition: all of selection*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule detects instances where a user disables the Windows Firewall via PowerShell commands. Specifically, it tracks the use of the `Set-NetFirewallProfile` cmdlet with the `-Enabled False` parameter, which is indicative of an attempt to evade security measures by turning off the firewall across different profiles: Domain, Private, and Public. For this detection to be effective, Script Block Logging must be enabled on Windows systems, allowing for the capture of PowerShell command execution and arguments in an audit log. This type of behavior can signal malicious intent, as an attacker may try to disable firewall protections to facilitate further actions undetected.
  ### Investigation Steps
  - Review the PowerShell script execution logs within your EDR tool to pinpoint the exact user and session that executed the `Set-NetFirewallProfile` command.
  - Check for any related anomalous activity or alerts in the SIEM that coincides with the time of the firewall profile disabling to identify potential coordination with other malicious actions.
  - Examine logs from the Windows Firewall itself to confirm the disablement of specific profiles and determine any impact this may have had on network security.
  - Conduct a user activity audit to gather context regarding the actions of the user who executed the command, including whether they possess the necessary permissions and if there have been any recent changes to their account.
