title: AD Groups Or Users Enumeration Using PowerShell - ScriptBlock
id: 88f0884b-331d-403d-a3a1-b668cf035603
status: test
description: |
  Adversaries may attempt to find domain-level groups and permission settings.
  The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group.
  Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1069.002/T1069.002.md
author: frack113
date: 2021-12-15
modified: 2022-12-25
tags:
- attack.discovery
- attack.t1069.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  test_2:
    ScriptBlockText|contains: get-ADPrincipalGroupMembership
  test_7:
    ScriptBlockText|contains|all:
    - get-aduser
    - '-f '
    - '-pr '
    - DoesNotRequirePreAuth
  condition: 1 of test_*
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  This detection rule focuses on identifying potential enumeration of Active Directory (AD) groups and users using PowerShell. Adversaries may exploit the `Get-ADPrincipalGroupMembership` and `Get-ADUser` cmdlets to discover domain-level groups and their members, including users with elevated permissions. The rule specifically monitors for PowerShell ScriptBlock logs to capture command usage indicative of this behavior, which is critical for recognizing attempts by threat actors to gather information about domain structures and privileges. To function correctly, it requires that Script Block Logging is enabled on the monitored systems. This behavior maps to the MITRE ATT&CK technique T1069.001, which pertains to an attackerâ€™s discovery of user and group accounts.
  ### Investigation Steps
  - **Check Script Block Logs:** Review the PowerShell script block logs to identify the specific instances where the suspicious cmdlets (`Get-ADPrincipalGroupMembership` or `Get-ADUser`) were executed.
  - **Review User Activity:** Utilize EDR tools to trace the execution context, validating which accounts initiated the PowerShell commands, ensuring that they align with known activity patterns for those users.
  - **Cross-reference Active Directory Groups:** Examine the Active Directory groups being queried and compare them against expected roles and permissions to assess potential unauthorized access.
  - **Monitor for Additional Indicators:** Search for related activities, such as unusual logins or other PowerShell commands run around the same timeframe, to detect further malicious behavior.
  ### Prioritization
  The severity level is rated as low due to the fact that enumeration alone does not constitute a direct threat but could indicate pre-attack reconnaissance. However, this type of activity could signify potential future escalation attempts and should be investigated promptly.
  ### Blind Spots and Assumptions
  The rule assumes that Script Block Logging is consistently enabled across all endpoints within the monitored environment; if it is not enabled, the detection will not generate alerts as intended. Additionally, legitimate administrative activities may generate false positives, requiring careful investigation to differentiate between benign and malicious usage. Finally, adversaries might use obfuscation techniques or custom scripts to evade detection, potentially preventing the rule from firing.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
