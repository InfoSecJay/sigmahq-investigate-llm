title: Powershell Create Scheduled Task
id: 363eccc0-279a-4ccf-a3ab-24c2e63b11fb
status: test
description: Adversaries may abuse the Windows Task Scheduler to perform task scheduling
  for initial or recurring execution of malicious code
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1053.005/T1053.005.md#atomic-test-4---powershell-cmdlet-scheduled-task
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1053.005/T1053.005.md#atomic-test-6---wmi-invoke-cimmethod-scheduled-task
author: frack113
date: 2021-12-28
tags:
- attack.persistence
- attack.t1053.005
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_cmdlet:
    ScriptBlockText|contains:
    - 'New-ScheduledTaskAction'
    - 'New-ScheduledTaskTrigger'
    - 'New-ScheduledTaskPrincipal'
    - 'New-ScheduledTaskSettingsSet'
    - 'New-ScheduledTask'
    - 'Register-ScheduledTask'
  selection_cimmethod:
    ScriptBlockText|contains|all:
    - 'Invoke-CimMethod'
    - '-ClassName'
    - 'PS_ScheduledTask'
    - '-NameSpace'
    - 'Root\Microsoft\Windows\TaskScheduler'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "**Powershell Create Scheduled Task**" detection rule is designed to identify the misuse of Windows Task Scheduler via PowerShell commands, a tactic frequently leveraged by adversaries for establishing persistence on compromised systems (referencing MITRE ATT&CK technique T1053.005). The detection mechanism primarily focuses on identifying script block logging events within Windows environments when specific PowerShell cmdlets related to scheduled tasks are invoked. This includes commands like `New-ScheduledTask`, `Register-ScheduledTask`, as well as the use of the `Invoke-CimMethod` with scheduled task parameters. Monitoring is performed using Windows Sysmon logs, requiring that Script Block Logging is enabled for events to be captured effectively.
  The rule captures various conditions that indicate potentially malicious scheduling of tasks, a common method for adversaries to maintain footholds in an environment. By correlating these cmdlets with user activities, security analysts can identify potential instances of exploitation that warrant further investigation.
  ### Investigation Steps
  - **Review Process Creation Logs:** Investigate process creation logs within your EDR system for the execution of PowerShell commands associated with scheduled tasks around the same time the alert was triggered. Look for unusual user accounts or command parameters.
  - **Analyze Sysmon Events:** Check relevant Sysmon logs for any `Process Creation` records that match the detected cmdlets. Identify the parent processes and correlate them with other activity that may indicate malicious behavior.
  - **Assess Task Scheduler Usage:** Examine the Task Scheduler on the affected system to identify any newly created or altered tasks that align with the PowerShell commands logged. Capture details on the executions including any defined actions.
  - **Review User Activity:** Investigate user activity logs for any alerts related to the account that executed the suspicious PowerShell commands. Look for anomalies, such as inappropriate access times, locations, or patterns that may indicate compromise.
  ### Prioritization
  Given the medium severity level of this alert, it should be treated as a potential indicator of compromise, specifically suggesting that an adversary intends to establish persistence. Rapid investigation is crucial as successful exploitation can lead to long-term access to sensitive systems.
  ### Blind spots and Assumptions
  This detection rule assumes that Script Block Logging is enabled and properly configured in the environment; if not, PowerShell activities may not be captured effectively, leading to missed detections. Additionally, legitimate administrative tasks may trigger false positives; thus, context must be considered during investigations. It's also possible for an adversary to obfuscate their commands or alter execution timings, rendering detection ineffective if their activities don't match the expected patterns outlined in this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
