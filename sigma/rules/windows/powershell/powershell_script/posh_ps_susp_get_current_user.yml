title: Suspicious PowerShell Get Current User
id: 4096a49c-7de4-4da0-a230-c66ccd56ea5a
status: test
description: Detects the use of PowerShell to identify the current logged user.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md#atomic-test-4---user-discovery-with-env-vars-powershell-script
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1033/T1033.md#atomic-test-5---getcurrent-user-with-powershell-script
author: frack113
date: 2022-04-04
tags:
- attack.discovery
- attack.t1033
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - '[System.Environment]::UserName'
    - '$env:UserName'
    - '[System.Security.Principal.WindowsIdentity]::GetCurrent()'
  condition: selection
falsepositives:
- Legitimate PowerShell scripts
level: low
notes: |
  ### Technical Context
  This detection rule identifies suspicious PowerShell commands that are used to obtain the current logged-in user's name. It specifically looks for command strings that utilize methods like `[System.Environment]::UserName`, `$env:UserName`, and `[System.Security.Principal.WindowsIdentity]::GetCurrent()`. Successful detection relies on having PowerShell Script Block Logging enabled, which allows for the capture of scripts executed within PowerShell. By monitoring these specific command patterns, the rule aims to highlight potentially unauthorized user reconnaissance attempts typically associated with discovery tactics employed by attackers. 
  ### Investigation Steps
  - Review the related PowerShell script execution logs in your EDR solution to identify the source of the invocation and the context surrounding the scriptâ€™s execution.
  - Examine event logs in Windows to track any other security-related events that coincide with the timing of the PowerShell commands, paying special attention to user logins or atypical account behavior.
  - Search through your Proxy logs to identify any outgoing web traffic that may correlate with the timestamps of the detected PowerShell execution, particularly focusing on connections to suspicious domains.
  - Utilize your SIEM to correlate this alert with other alerts or events to identify any anomalies or patterns that suggest potentially malicious activity within your network.
