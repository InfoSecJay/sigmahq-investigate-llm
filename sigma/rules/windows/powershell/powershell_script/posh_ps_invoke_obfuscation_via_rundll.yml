title: Invoke-Obfuscation RUNDLL LAUNCHER - PowerShell
id: e6cb92b4-b470-4eb8-8a9d-d63e8583aae0
status: test
description: Detects Obfuscated Powershell via RUNDLL LAUNCHER
references:
- https://github.com/SigmaHQ/sigma/issues/1009     # (Task 23)
author: Timur Zinniatullin, oscd.community
date: 2020-10-18
modified: 2022-11-29
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_4104:
    ScriptBlockText|contains|all:
    - 'rundll32.exe'
    - 'shell32.dll'
    - 'shellexec_rundll'
    - 'powershell'
  condition: selection_4104
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify potentially malicious use of PowerShell that involves invoking Rundll32, often used to obfuscate the execution of scripts. The core logic checks for the presence of specific keywords—'rundll32.exe', 'shell32.dll', 'shellexec_rundll', and 'powershell'—in PowerShell script block logs. When a script that matches these criteria is executed, it may indicate an attempt by an adversary to hide their malicious intentions through obfuscation techniques. The requirement for Script Block Logging to be enabled is crucial, as it allows the system to capture detailed information about executed PowerShell commands, facilitating the rule's effectiveness in detecting defense evasion techniques associated with MITRE ATT&CK tactics and techniques, specifically **T1027 
  - Obfuscated Files or Information** and **T1059.001 
  - PowerShell**.
  ### Investigation Steps
  - **Check PowerShell Logs:** Review PowerShell related logs (preferably through EDR or Sysmon) focusing on recent events, particularly those matching the keywords specified in the rule.
  - **Analyze Script Block Logging:** Extract the relevant script block logs to identify any obfuscated commands and understand their potential impact and intent.
  - **Investigate Process Creation:** Use EDR to correlate the executed PowerShell processes with parent process IDs to determine if Rundll32 was launched as part of a suspicious execution chain.
  - **Leverage Threat Intelligence:** Cross-reference detected obfuscated PowerShell commands with threat intelligence sources to identify known malicious actors or indicators associated with similar behaviors.
  ### Prioritization
  The alert is prioritized as medium severity due to the inherent risks associated with obfuscated PowerShell usage, which is often a precursor to malicious actions like data exfiltration, lateral movement, or payload delivery. It warrants prompt investigation to ascertain whether it indicates malicious activity in the environment.
  ### Blind Spots and Assumptions
  There are several blind spots and assumptions to be aware of in this rule. If Script Block Logging is not enabled in your environment, the rule will not fire, leading to potential detection gaps. Additionally, legitimate use cases of obfuscated PowerShell may result in false positives, therefore thorough investigation and context analysis are required. Adversaries may also employ their own methods to obfuscate actions, avoiding detection by varying keyword structures or using other scripts not captured by this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
