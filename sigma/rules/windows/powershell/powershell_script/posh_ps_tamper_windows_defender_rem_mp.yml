title: Tamper Windows Defender Remove-MpPreference - ScriptBlockLogging
id: ae2bdd58-0681-48ac-be7f-58ab4e593458
related:
- id: 07e3cb2c-0608-410d-be4b-1511cb1a0448
  type: similar
status: test
description: Detects attempts to remove Windows Defender configuration using the 'MpPreference'
  cmdlet
references:
- https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/windows-10-controlled-folder-access-event-search/ba-p/2326088
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-05
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_remove:
    ScriptBlockText|contains: 'Remove-MpPreference'
  selection_tamper:
    ScriptBlockText|contains:
    - '-ControlledFolderAccessProtectedFolders '
    - '-AttackSurfaceReductionRules_Ids '
    - '-AttackSurfaceReductionRules_Actions '
    - '-CheckForSignaturesBeforeRunningScan '
  condition: all of selection_*
falsepositives:
- Legitimate PowerShell scripts
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies attempts to alter Windows Defender configurations using the `Remove-MpPreference` PowerShell cmdlet. Specifically, it looks for specific parameters included in the cmdlet invocation, such as `-ControlledFolderAccessProtectedFolders`, `-AttackSurfaceReductionRules_Ids`, `-AttackSurfaceReductionRules_Actions`, and others. The rule relies on Script Block Logging, a Windows feature that captures PowerShell commands before they are executed, allowing security analysts to retrospectively evaluate script activities. When a user or process attempts to modify Windows Defender settings, it can signify an effort to circumvent security controls as part of an attack strategy. The technique aligns with MITRE ATT&CK T1562.001 â€“ "Disable or Modify Tools," which covers adversaries attempting to impair protective measures like antivirus software.
  ### Investigation Steps
  - **Review PowerShell Logs:** Utilize Windows Security logs and Sysmon's Script Block Logging to examine the context around the execution of `Remove-MpPreference`. Look for unusual users and processes that triggered these commands.
  - **Evaluate User Context:** Cross-reference the user account that executed the command against Active Directory logs to determine if it's a legitimate account or if it shows signs of compromise.
  - **Analyze Related Processes:** Investigate other processes running around the time of the detection to see if they exhibit suspicious behavior or patterns indicating malicious intent.
  - **Check Defender Logs:** Assess Windows Defender logs for any changes made to configurations following the execution of the command, and correlate these with broader security alerts or incidents.
  ### Prioritization
  The alert is classified as high severity due to its potential indication of an attacker trying to disable or manipulate critical security features within the Windows environment. An empowered Windows Defender can significantly mitigate the risk of malware and other threats, making this a noteworthy concern for incident response teams.
  ### Blind Spots and Assumptions
  This rule may not fire if Script Block Logging is disabled on target systems; hence, organizations must ensure this feature is enabled for effective detection. Additionally, legitimate PowerShell scripts may cause false positives, indicating a need for careful contextual analysis. Adversaries could also employ obfuscation techniques or utilize alternative methods to achieve similar results without triggering this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
