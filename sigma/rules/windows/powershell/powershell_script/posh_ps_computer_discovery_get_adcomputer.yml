title: Computer Discovery And Export Via Get-ADComputer Cmdlet - PowerShell
id: db885529-903f-4c5d-9864-28fe199e6370
related:
- id: 435e10e4-992a-4281-96f3-38b11106adde
  type: similar
status: test
description: Detects usage of the Get-ADComputer cmdlet to collect computer information
  and output it to a file
references:
- http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html
- https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/
- https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-11-17
tags:
- attack.discovery
- attack.t1033
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Get-ADComputer '
    - ' -Filter \*'
    ScriptBlockText|contains:
    - ' | Select '
    - 'Out-File'
    - 'Set-Content'
    - 'Add-Content'
  condition: selection
falsepositives:
- Legitimate admin scripts may use the same technique, it's better to exclude specific
  computers or users who execute these commands or scripts often
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify the unauthorized use of the PowerShell cmdlet `Get-ADComputer`, which is employed to retrieve computer information from Active Directory and potentially export that data to a file. The rule focuses on specific command patterns that involve the `Get-ADComputer` cmdlet, its filters, and subsequent piping commands like `Out-File`, `Set-Content`, and `Add-Content`. By monitoring logs generated from PowerShell script block execution, this detection can highlight potentially malicious activity indicative of reconnaissance or data gathering efforts typically associated with cyber threats.
  The primary data sources for this detection include PowerShell script block logging on Windows systems, which must be enabled to capture scripts' details. Security Operations Centers (SOCs) can leverage this rule to spot suspicious behavior that might suggest an adversary's attempt to collect sensitive network information or enumerate resources within Active Directory.
  ### Investigation Steps
  - Review PowerShell execution logs in the EDR system to identify the user context under which the `Get-ADComputer` command was executed.
  - Check the output files created with `Out-File`, `Set-Content`, or `Add-Content` commands for any sensitive data that may have been exfiltrated.
  - Analyze the context of the script execution, including the time of execution and whether the account is associated with legitimate administrative tasks.
  - Correlate alerts with additional logs from the SIEM to determine if there is related activity (e.g., unusual lateral movement, network connections) that raises further concern about potential exploitation.
