title: Code Executed Via Office Add-in XLL File
id: 36fbec91-fa1b-4d5d-8df1-8d8edcb632ad
status: test
description: |
  Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system.
  Office add-ins can be used to add functionality to Office programs
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1137.006/T1137.006.md
author: frack113
date: 2021-12-28
tags:
- attack.persistence
- attack.t1137.006
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'new-object '
    - '-ComObject '
    - '.application'
    - '.RegisterXLL'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies instances where malicious actors exploit Microsoft Office add-ins to achieve persistence on compromised systems via XLL (Excel Add-in) files. The rule detects specific PowerShell script blocks that utilize the `new-object` command in combination with `-ComObject`, specifically looking for `.application` and `.RegisterXLL`. When these commands are executed, it indicates that a script is creating a new object capable of manipulating Excel, potentially launching harmful payloads. The primary data source for this detection comes from Windows PowerShell script block logging, requiring this functionality to be enabled on the monitored systems. This rule relates to the MITRE ATT&CK tactic of persistence (T1137.006), as it encompasses techniques that adversaries may utilize to maintain access to networks or systems.
  ### Investigation Steps
  - **Assess PowerShell Logs:** Review PowerShell script block logs for the identified command patterns in conjunction with execution time and source to determine the context of the execution.
  - **Correlate User Actions:** Check the user activity logs for the associated account to ascertain if there were any anomalous behaviors or unauthorized sessions leading up to the alert.
  - **Evaluate EDR Alerts:** Utilize EDR solutions to examine process activities and determine if other suspicious behaviors (e.g., file creation or network connections) occurred in tandem with the execution of the detected commands.
  - **Inspect Office Add-ins:** Look into the installed Office add-ins on the affected systems to verify their legitimacy and check for any unauthorized modifications or additions.
  ### Prioritization
  This alert is classified as high severity due to the potential for adversaries to maintain prolonged access to a system, facilitating further exploitation or data exfiltration.
  ### Blind spots and Assumptions
  This rule may not trigger if script block logging is not enabled or if the commands are obfuscated in some manner to evade detection. Additionally, it assumes that the environment does not leverage benign Office add-ins that might perform similar actions. Frustratingly, sophisticated adversaries might also employ techniques to avoid signature-based detection, such as using benign PowerShell commands to execute malicious behavior, thereby complicating effective detection of these threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
