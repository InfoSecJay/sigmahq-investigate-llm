title: DirectorySearcher Powershell Exploitation
id: 1f6399cf-2c80-4924-ace1-6fcff3393480
status: test
description: Enumerates Active Directory to determine computers that are joined to
  the domain
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md#atomic-test-15---enumerate-domain-computers-within-active-directory-using-directorysearcher
author: frack113
date: 2022-02-12
tags:
- attack.discovery
- attack.t1018
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'New-Object '
    - 'System.DirectoryServices.DirectorySearcher'
    - '.PropertiesToLoad.Add'
    - '.findall()'
    - 'Properties.name'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "DirectorySearcher Powershell Exploitation" rule is designed to detect the enumeration of Active Directory (AD) resources through PowerShell scripts. Specifically, it focuses on the usage of the `System.DirectoryServices.DirectorySearcher` class to retrieve information about computers that are part of the domain. This exploitation method often occurs in reconnaissance phases of an attack, where adversaries gather details about the environment, which can aid in further malicious activities. The rule inspects PowerShell script block logs for specific terms that are characteristic of this type of inquiry, such as `New-Object`, `System.DirectoryServices.DirectorySearcher`, `.PropertiesToLoad.Add`, and `.findall()`. It is necessary for Script Block Logging to be enabled on the monitored systems for this detection to function properly.
  In the MITRE ATT&CK framework, this detection corresponds to the "Discovery" tactic and maps to the technique T1018, which encompasses methods used by attackers to enumerate domain computers. By closely monitoring these patterns in PowerShell activities, security teams can identify potentially unauthorized attempts to probe the network for sensitive information about the directory structure.
  ### Investigation Steps
  - **Review Related PowerShell Scripts**: Analyze the PowerShell scripts executed around the time of the alert. Look for any unusual commands executed by the same user or processes that may indicate unauthorized access to AD resources.
    
  - **Correlate with User Activity**: Check historical logs of the user account associated with the alert. Look for any recent changes in behavior, such as elevated privileges or access to sensitive resources that might indicate a potential compromise.
  - **Cross-Reference Network Connections**: Investigate outbound network connections initiated by the user’s device around the time of the alert. Ensure there is no unexpected communication with external sources that could indicate exfiltration attempts or command and control communications.
  - **Search for False Positive Patterns**: Since false positives are categorized as "Unknown," identify the context of similar alerts in the past. Review scripting practices within legitimate operational procedures and filter them from the investigation as necessary.
  ### Prioritization
  This alert carries a medium severity level due to the nature of the actions captured—passive reconnaissance can lead to more severe attacks. However, the context and scope of the threat should be analyzed further to determine if it escalates to a higher risk based on other corroborating evidence.
  ### Blind Spots and Assumptions
  This rule may not fire if the monitored systems do not have Script Block Logging enabled, which is critical for capturing the involved PowerShell activities. Additionally, if an adversary uses tactics such as obfuscation or scripted methods that do not utilize the specific patterns defined in this rule, it may bypass detection. Another consideration is that legitimate administrative tasks may inadvertently trigger alerts, creating potential noise in alerting systems. Therefore, understanding the standard operational uses of such queries is essential for differentiating between malicious and benign activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
