title: Malicious PowerShell Keywords
id: f62176f3-8128-4faa-bf6c-83261322e5eb
status: test
description: Detects keywords from well-known PowerShell exploitation frameworks
references:
- https://adsecurity.org/?p=2921
author: Sean Metcalf (source), Florian Roth (Nextron Systems)
date: 2017-03-05
modified: 2023-06-20
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'AdjustTokenPrivileges'
    - 'IMAGE_NT_OPTIONAL_HDR64_MAGIC'
            # - 'LSA_UNICODE_STRING'
    - 'Metasploit'
    - 'Microsoft.Win32.UnsafeNativeMethods'
    - 'Mimikatz'
    - 'MiniDumpWriteDump'
    - 'PAGE_EXECUTE_READ'
    - 'ReadProcessMemory.Invoke'
    - 'SE_PRIVILEGE_ENABLED'
    - 'SECURITY_DELEGATION'
    - 'TOKEN_ADJUST_PRIVILEGES'
    - 'TOKEN_ALL_ACCESS'
    - 'TOKEN_ASSIGN_PRIMARY'
    - 'TOKEN_DUPLICATE'
    - 'TOKEN_ELEVATION'
    - 'TOKEN_IMPERSONATE'
    - 'TOKEN_INFORMATION_CLASS'
    - 'TOKEN_PRIVILEGES'
    - 'TOKEN_QUERY'
  condition: selection
falsepositives:
- Depending on the scripts, this rule might require some initial tuning to fit the
  environment
level: medium
notes: |
  n
  ### Technical Context
  The "Malicious PowerShell Keywords" Sigma rule is designed to detect the usage of specific keywords commonly associated with PowerShell exploitation frameworks. This rule identifies script block logging activity for predefined keywords within PowerShell scripts that indicate potential malicious intent, such as references to tools like Metasploit and Mimikatz, which are frequently employed by attackers to compromise systems and escalate privileges. The main data source leveraged by this rule is Windows PowerShell script block logging, which captures the content of the PowerShell scripts executed in the environment. The relevant MITRE ATT&CK tactic for this detection is **Execution**, and the technique is T1059.001, which focuses specifically on PowerShell command execution. By analyzing the contents of script blocks for these notable keywords, analysts can proactively discover potentially harmful activities that might be occurring in their environments.
  ### Investigation Steps
  - **Review PowerShell Logs:** Verify if Script Block Logging is enabled and review the PowerShell logs for the identified keywords to assess the nature of the executed commands.
  - **Analyze Related Processes:** Utilize your EDR to correlate any suspicious PowerShell activity with other processes that may have been spawned during the same timeframe, to identify potential lateral movement or privilege escalation attempts.
  - **Check File Integrity:** Inspect any related files or scripts that triggered the alert, as they may provide additional insight into whether malicious behavior is occurring or if it is part of a legitimate administrative activity.
  - **Investigate User Context:** Analyze the user account associated with the PowerShell execution, and determine if there are any signs of credential misuse or if the account has been compromised.
  ### Prioritization
  This alert is classified as medium severity because the presence of malicious PowerShell keywords could indicate attempted exploitation or privilege escalation in the network, warranting timely investigation to prevent further compromise.
  ### Blind Spots and Assumptions
  The rule may not trigger if script block logging is not enabled or if the PowerShell scripts in use do not include the specific keywords listed. Additionally, legitimate administrative scripts may inadvertently trigger the alert, leading to potential false positives that require tuning. Adversaries may also obfuscate their commands to avoid detection, making it essential for detection engineers to remain vigilant in updating the rule set based on emerging threat intelligence.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
