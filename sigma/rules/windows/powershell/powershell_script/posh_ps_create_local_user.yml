title: PowerShell Create Local User
id: 243de76f-4725-4f2e-8225-a8a69b15ad61
status: test
description: Detects creation of a local user via PowerShell
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1136.001/T1136.001.md
author: '@ROxPinTeddy'
date: 2020-04-11
modified: 2022-12-25
tags:
- attack.execution
- attack.t1059.001
- attack.persistence
- attack.t1136.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains: 'New-LocalUser'
  condition: selection
falsepositives:
- Legitimate user creation
level: medium
notes: |
  ### Technical Context
  This detection rule identifies the use of PowerShell for creating a local user account on Windows systems. Specifically, it looks for the execution of the command containing `New-LocalUser` within PowerShell script blocks, which must have script block logging enabled to be captured. When a user or a process executes this command, it can indicate a potential malicious attempt to leverage local account creation as a means of persistence or lateral movement, aligning with MITRE ATT&CK tactic "Execution" and technique "PowerShell (T1059.001)" as well as "Account Manipulation (T1136.001)." Monitoring tools such as Sysmon can catch this activity through process creation logs which document PowerShell executions, while event sources that log administrative activities provide additional insights.
  ### Investigation Steps
  - **Check PowerShell Logs:** Review PowerShell script block logging in the Windows Event Logs to confirm the execution of the `New-LocalUser` command along with associated parameters.
  - **Analyze User Creation Time:** Cross-reference the timestamp of the alert with recent modifications in user accounts from Windows Security logs to establish a timeline of account creation activity.
  - **Monitor Access Attempts:** Use Endpoint Detection and Response (EDR) tools to check for any suspicious access attempts to the created account, including logins from unusual locations or devices.
  - **Review User Activity:** Investigate the context of the command by checking the process tree leading to the PowerShell execution for any signs of compromise or related malicious activity.
  ### Prioritization
  The alert is classified as medium severity due to the potential for local user account creation to be used as a foothold for attackers in an enterprise environment, which could lead to unauthorized access or privilege escalation if not properly managed.
  ### Blind Spots and Assumptions
  The rule may not fire if script block logging is not enabled, which is a prerequisite for capturing PowerShell commands in the event logs. Additionally, attackers can bypass detection by using alternative methods to create user accounts, such as directly invoking Win32 API functions, or they may obfuscate their commands to evade rule detection. It's important for engineers to ensure proper logging configurations are in place and remain aware of the evolving tactics used by threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
