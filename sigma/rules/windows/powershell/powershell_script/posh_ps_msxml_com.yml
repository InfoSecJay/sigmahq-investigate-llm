title: Powershell MsXml COM Object
id: 78aa1347-1517-4454-9982-b338d6df8343
status: test
description: |
  Adversaries may abuse PowerShell commands and scripts for execution.
  PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system. (Citation: TechNet PowerShell)
  Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-7---powershell-msxml-com-object---with-prompt
- https://learn.microsoft.com/en-us/previous-versions/windows/desktop/ms766431(v=vs.85)
- https://www.trendmicro.com/en_id/research/22/e/uncovering-a-kingminer-botnet-attack-using-trend-micro-managed-x.html
author: frack113, MatilJ
date: 2022-01-19
modified: 2022-05-19
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'New-Object'
    - '-ComObject'
    - 'MsXml2.'
    - 'XmlHttp'
  condition: selection
falsepositives:
- Legitimate administrative script
level: medium
notes: |
  ### Technical Context
  This detection rule focuses on identifying malicious use of the PowerShell scripting language, specifically the creation of Microsoft XML (MsXml) COM objects for potentially executing unauthorized code or gathering sensitive information. The rule detects signs of adversaries using PowerShell's `New-Object` command to instantiate an MsXml COM object by searching for proscriptive keywords within PowerShell script blocks, namely `MsXml2.` and `XmlHttp`. These strings indicate the possibility of executing commands through the XML HTTP request model, frequently used for web-based attacks or data exfiltration. 
  To trigger this alert, the logging mode for PowerShell Script Block Logging must be enabled, which allows detailed tracking of executed commands and scripts in the environment. This rule aligns with the MITRE ATT&CK Technique T1059.001 (PowerShell) under the Execution tactic, highlighting how attackers can misuse a legitimate tool for harmful purposes.
  ### Investigation Steps
  - **Verify Script Execution:** Check the PowerShell logs to confirm the execution context of the detected command, noting the user account that initiated the PowerShell session and any relevant process IDs.
  - **Conduct System Review:** Use EDR tools to analyze the processes spawned from the detected PowerShell command, assessing any parent-child relationships and identifying unusual behavior that could suggest malicious activity.
  - **Correlate with Network Activity:** Examine network logs for any outbound connections originating from the affected host around the time of the alert, focusing on suspicious domains or unusual data transfers that may indicate exfiltration attempts.
  - **Check Threat Intelligence:** Review threat intelligence feeds for known indicators of compromise related to the exploitation of MsXml COM objects for malicious purposes, cross-referencing these indicators against the environment's assets.
  ### Prioritization
  The severity level for this alert is classified as medium due to the potential for significant security risks arising from the exploitation of PowerShell for malicious purposes; however, the presence of legitimate administrative scripts may lead to false positives.
  ### Blind Spots and Assumptions
  This rule may not fire if script block logging is not enabled in the PowerShell environment, a critical prerequisite for detection. Additionally, the rule assumes that adversaries will not obfuscate their commands, which could bypass detection, as well as the possibility of using alternate methods to invoke PowerShell without this specific COM object pattern. Engineers should be aware that sophisticated actors might employ techniques to hide their activities, making it vital to complement this rule with other detection methods.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
