title: Suspicious Unblock-File
id: 5947497f-1aa4-41dd-9693-c9848d58727d
status: test
description: Remove the Zone.Identifier alternate data stream which identifies the
  file as downloaded from the internet.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1553.005/T1553.005.md#atomic-test-3---remove-the-zoneidentifier-alternate-data-stream
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/unblock-file?view=powershell-7.2
author: frack113
date: 2022-02-01
tags:
- attack.defense-evasion
- attack.t1553.005
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'Unblock-File '
    - '-Path '
  condition: selection
falsepositives:
- Legitimate PowerShell scripts
level: medium
notes: |
  ### Technical Context
  The "Suspicious Unblock-File" detection rule identifies instances where the PowerShell cmdlet `Unblock-File` is utilized to remove the Zone.Identifier alternate data stream from a file. This action is typically used to label a file as safe when it has been downloaded from the Internet, which can be a tactic employed by threat actors to bypass security measures and obfuscate malicious content. The rule works by analyzing PowerShell script block logs for specific keywords indicating the usage of the `Unblock-File` command paired with a `-Path` parameter, signaling that a file is being unblocked. This links directly to the MITRE ATT&CK framework under the **Defense Evasion** tactic, specifically the technique T1553.005, which focuses on circumventing security controls through file manipulation.
  Within a typical enterprise environment, the telemetry responsible for this detection comes from **Windows Event Logs** specifically monitoring PowerShell activities via script block logging. Responders should ensure that script block logging is enabled to obtain complete visibility into the usage of such commands. 
  ### Investigation Steps
  - **Check PowerShell Logs**: Review the PowerShell script block logs in the Windows Event Viewer for additional context around the execution of the `Unblock-File` command, focusing on who executed the command and the associated timestamps.
  - **Analyze Process Creation**: Utilize an EDR solution to search for the process creation events around the time the `Unblock-File` activity was detected, and correlate these with the user and system that executed the action.
  - **Inspect Alternate Data Streams**: Use tools like `Get-Item` or specialized utilities to check for existing alternate data streams on the identified files, verifying whether the Zone.Identifier stream has been removed.
  - **Review Network Connections**: Analyze network connection logs around the time of the event for any suspicious outbound connections, especially looking for connections to known malicious IPs or domains that might indicate data exfiltration or command/control activity.
  ### Prioritization
  The severity level for this alert is considered medium due to the potential for misuse of the `Unblock-File` cmdlet as a precursor to executing malicious scripts or utilizing infected files that would otherwise be flagged by the operating system's security features. Investigators should assess the context of the execution as part of their response strategy.
  ### Blind Spots and Assumptions
  Some potential blind spots include the possibility that legitimate automated scripts could trigger this alert, leading to false positives. Additionally, if script block logging is not enabled across all necessary endpoints, the rule may fail to detect relevant activity. It's also possible that adversaries may utilize alternate methods to achieve similar outcomes without using `Unblock-File`, thereby bypassing detection entirely. Incident responders should always cross-reference such alerts with broader context, such as user behavior, recent changes in file storage practices, or other security incidents.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
