title: Suspicious Get-ADReplAccount
id: 060c3ef1-fd0a-4091-bf46-e7d625f60b73
status: test
description: |
  The DSInternals PowerShell Module exposes several internal features of Active Directory and Azure Active Directory.
  These include FIDO2 and NGC key auditing, offline ntds.dit file manipulation, password auditing, DC recovery from IFM backups and password hash calculation.
references:
- https://www.powershellgallery.com/packages/DSInternals
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.006/T1003.006.md#atomic-test-2---run-dsinternals-get-adreplaccount
author: frack113
date: 2022-02-06
tags:
- attack.credential-access
- attack.t1003.006
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - Get-ADReplAccount
    - '-All '
    - '-Server '
  condition: selection
falsepositives:
- Legitimate PowerShell scripts
level: medium
notes: |
  ### Technical Context
  This detection rule identifies suspicious usage of the `Get-ADReplAccount` cmdlet, which is part of the DSInternals PowerShell module. This cmdlet can expose sensitive information about Active Directory replication accounts. It works by analyzing PowerShell script executions and looks specifically for command invocations that include `Get-ADReplAccount`, along with specific parameters like `-All` and `-Server`. The detection relies on PowerShell script block logging, so this feature must be enabled in the environment for the rule to be effective.
  The MITRE ATT&CK tactic relevant to this detection is credential access under the technique ID T1003.006, indicating that attackers may be trying to gather sensitive data that can be used for unauthorized access or privilege escalation within an enterprise environment.
  ### Investigation Steps
  - **Review PowerShell Logs:** Check the PowerShell script block logs on the affected system for additional context around the invocation of `Get-ADReplAccount`, including user details and the execution time.
  - **Analyze User Context:** Identify the user account that executed the command. Validate if this account has legitimate permissions to query the Active Directory and assess whether this action aligns with typical user behavior.
  - **Correlate with EDR Data:** Look for any other related suspicious activities from the same endpoint within the EDR solution, such as process creation events or network connections that may indicate further malicious intent.
  - **Check for Legitimate Use Cases:** Investigate if the execution of the command correlates with scheduled tasks or authorized administrative operations, ensuring that it is not a false positive due to legitimate use of the DSInternals module.
  ### Prioritization
  This alert is classified with a medium severity level due to the potential risk associated with unauthorized access to sensitive Active Directory information. It is crucial to evaluate the context as this command may indicate an ongoing reconnaissance effort by an adversary.
  ### Blind Spots and Assumptions
  This rule assumes that PowerShell script block logging is properly configured and enabled. If this logging is disabled, the rule will not trigger, making it difficult to detect malicious activity. Additionally, the rule may not fire in situations where legitimate administrative tasks are performed by authorized users, resulting in a higher likelihood of false positives. Attackers may also use obfuscation techniques in their PowerShell scripts to bypass detection, which should be a consideration for ongoing detection effectiveness.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
