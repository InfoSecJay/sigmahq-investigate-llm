title: Automated Collection Command PowerShell
id: c1dda054-d638-4c16-afc8-53e007f3fbc5
status: test
description: Once established within a system or network, an adversary may use automated
  techniques for collecting internal data.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1119/T1119.md
author: frack113
date: 2021-07-28
modified: 2022-12-25
tags:
- attack.collection
- attack.t1119
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_ext:
    ScriptBlockText|contains:
    - '.doc'
    - '.docx'
    - '.xls'
    - '.xlsx'
    - '.ppt'
    - '.pptx'
    - '.rtf'
    - '.pdf'
    - '.txt'
  selection_cmd:
    ScriptBlockText|contains|all:
    - 'Get-ChildItem'
    - ' -Recurse '
    - ' -Include '
  condition: all of selection*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Automated Collection Command PowerShell" rule is designed to detect the use of PowerShell scripts that are commonly employed by adversaries to collect data from targeted systems or networks. This rule specifically focuses on identifying PowerShell commands that utilize the `Get-ChildItem` cmdlet along with specific file types (e.g., document files like .doc, .pdf, .txt, spreadsheets like .xls, etc.). The detection is triggered when the script block text contains these elements. The relevant data source for this rule is Windows PowerShell Script Block Logging, which must be enabled to capture these potentially malicious activities. This detection aligns with the MITRE ATT&CK tactic of Collection (T1119), which highlights behaviors where attackers gather sensitive information from targeted systems.
  ### Investigation Steps
  - **Review PowerShell Logs:** Examine the PowerShell script block logs for the identified commands and timestamps to correlate with any suspicious user activity or known compromised accounts. 
  - **Analyze EDR Alerts:** Use endpoint detection and response tools to assess any related alerts around the same timeframe as the detection to provide additional context on potential lateral movement or compromised devices.
  - **Check for Data Exfiltration:** Investigate the network logs for any unusual outbound connections that may coincide with the timing of the PowerShell execution, particularly looking for large data transfers or unusual destination IPs.
  - **Examine User and Group Changes:** Review user account changes in Windows Security logs to ensure no unauthorized modifications or access has happened, correlating with the automated collection attempts.
  ### Prioritization
  The severity of this alert is set to medium as it indicates potential adversarial behavior within the network. While it may not always signify an active compromise, such activity warrants immediate investigation due to the possibility of data exfiltration or reconnaissance efforts by malicious actors.
  ### Blind Spots and Assumptions
  This rule may not fire if PowerShell script block logging is not enabled, which can hinder detection capabilities. Additionally, if adversaries utilize obfuscation techniques or execute scripts from non-traditional paths or with alternate command constructs, the rule may remain undetected. It's also worth noting that benign administrative scripts developed for legitimate purposes could lead to false positives, requiring careful analysis of context.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
