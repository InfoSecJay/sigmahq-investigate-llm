title: Suspicious PowerShell WindowStyle Option
id: 313fbb0a-a341-4682-848d-6d6f8c4fab7c
status: test
description: |
  Adversaries may use hidden windows to conceal malicious activity from the plain sight of users.
  In some cases, windows that would typically be displayed when an application carries out an operation can be hidden
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1564.003/T1564.003.md
author: frack113, Tim Shelton (fp AWS)
date: 2021-10-20
modified: 2023-01-03
tags:
- attack.defense-evasion
- attack.t1564.003
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - 'powershell'
    - 'WindowStyle'
    - 'Hidden'
  filter:
    ScriptBlockText|contains|all:
    - ':\Program Files\Amazon\WorkSpacesConfig\Scripts\'
    - '$PSScriptRoot\Module\WorkspaceScriptModule\WorkspaceScriptModule'
  condition: selection and not filter
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule targets activities involving PowerShell scripts that utilize the "WindowStyle" option set to "Hidden." Adversaries may employ this technique to obfuscate malicious operations by executing scripts in a manner that prevents visible windows from appearing to users, effectively concealing their actions. The rule looks for specific text patterns in PowerShell scriptsâ€”specifically, it checks for the presence of the terms 'powershell', 'WindowStyle', and 'Hidden' within script blocks. The scanning of logs occurs through Windows Security logs, particularly focusing on Script Block Logging, which must be enabled for the detection to function properly. This detection aligns with the MITRE ATT&CK tactic of Defense Evasion, specifically technique T1564.003, which addresses the use of non-standard window styles to hide the execution of scripts.
  ### Investigation Steps
  - **Check EDR Alerts:** Review alerts from the EDR for processes related to PowerShell that matched the log's criteria. Validate if the process was run with the WindowStyle option set to Hidden.
  - **Examine PowerShell Logs:** Query PowerShell logs in Windows Event Logs, specifically focusing on Script Block Logging to gather additional details regarding the script's execution context and command line parameters used.
  - **Inspect Network Connections:** Use network logs to check for unusual outbound connections initiated by the PowerShell process. This can help determine if any data exfiltration or remote command and control communication occurred.
  - **Review Security Alerts:** Look for any related security events that could indicate further malicious behavior, such as execution of other suspicious binaries or modifications to system files following the execution of the PowerShell script.
  ### Prioritization
  The alert is categorized as medium severity due to the potential for efforts to obfuscate script actions that can lead to data breaches or further exploitation in the environment, highlighting a significant defense evasion tactic in use.
  ### Blind spots and Assumptions
  This rule assumes that Script Block Logging is enabled across the enterprise, which may not be the case in all environments. False negatives can occur if the scripts are obfuscated or if other window styles are utilized that are not captured by this specific detection criteria. Additionally, this rule may not fire for users who run PowerShell scripts within known or trusted contexts, such as those belonging to legitimate cloud applications, hence requiring a thorough investigation of false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
