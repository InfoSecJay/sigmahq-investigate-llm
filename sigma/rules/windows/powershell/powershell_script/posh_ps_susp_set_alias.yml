title: Potential PowerShell Obfuscation Using Alias Cmdlets
id: 96cd126d-f970-49c4-848a-da3a09f55c55
related:
- id: e8314f79-564d-4f79-bc13-fbc0bf2660d8
  type: derived
status: test
description: Detects Set-Alias or New-Alias cmdlet usage. Which can be use as a mean
  to obfuscate PowerShell scripts
references:
- https://github.com/1337Rin/Swag-PSO
author: frack113
date: 2023-01-08
tags:
- attack.defense-evasion
- attack.execution
- attack.t1027
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'Set-Alias '
    - 'New-Alias '
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  This Sigma rule focuses on detecting the use of PowerShell alias cmdlets, specifically `Set-Alias` and `New-Alias`. These cmdlets are often employed by attackers to obfuscate malicious PowerShell scripts, making it difficult for security tools and analysts to discern the true behavior of the command being executed. When these aliases are defined, they can alter the appearance of the commands being run, leading to evasion of traditional security mechanisms.
  The rule relies on the monitoring of PowerShell script block logging within the Windows operating environment. It searches for occurrences of the terms "Set-Alias" and "New-Alias" in the logged script blocks. This detection aligns with MITRE ATT&CK tactics, specifically "Defense Evasion" (T1027) and "Execution" (T1059.001), highlighting methods adversaries may employ to hide their activities or launch their attacks.
  ### Investigation Steps
  - **Review Script Block Logs:** Examine PowerShell script block logs to identify the specific commands that triggered the alert. Assess surrounding context to determine if the usage of these alias cmdlets is legitimate or malicious.
  - **Check Process Tree:** Utilize the EDR tool to review the process tree of the originating PowerShell instance. Dependencies and parent processes can give clues about the intentions of the PowerShell execution.
  - **Analyze Related Network Activity:** Inspect network connection logs for any unusual or suspicious outbound connections that coincide with the alert time. This might indicate further malicious activity associated with the obfuscation.
  - **Conduct a Threat Hunt:** Perform a proactive threat hunt based on the alert by searching for other instances of `Set-Alias` or `New-Alias` usage across the environment. This may uncover additional signs of malicious behavior or tactics.
  ### Prioritization
  The severity level for this alert is categorized as low. While the use of alias cmdlets for obfuscation can indicate potential malicious intent, it often requires additional context to confirm an actual security incident, hence the need for careful investigation.
  ### Blind Spots and Assumptions
  One of the key assumptions of this detection rule is that script block logging must be enabled; if it is not, this rule will not fire and may allow adversaries to execute obfuscated scripts without detection. Additionally, legitimate use cases for alias cmdlets do exist, which can lead to false positives, especially in environments where PowerShell is widely used for administrative tasks. Attackers may try to bypass detection by using non-logged methods or other scripting languages, making it crucial for defenders to maintain vigilance and awareness of their environment.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
