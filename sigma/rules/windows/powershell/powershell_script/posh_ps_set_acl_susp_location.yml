title: PowerShell Set-Acl On Windows Folder - PsScript
id: 3bf1d859-3a7e-44cb-8809-a99e066d3478
related:
- id: cae80281-ef23-44c5-873b-fd48d2666f49     # PsScript Low
  type: derived
- id: 0944e002-e3f6-4eb5-bf69-3a3067b53d73     # ProcCreation Susp
  type: derived
- id: bdeb2cff-af74-4094-8426-724dc937f20a     # ProcCreation Low
  type: derived
status: test
description: Detects PowerShell scripts to set the ACL to a file in the Windows folder
references:
- https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1
author: frack113, Nasreddine Bencherchali (Nextron Systems)
date: 2023-07-18
tags:
- attack.defense-evasion
- attack.t1222
logsource:
  product: windows
  category: ps_script
  definition: bade5735-5ab0-4aa7-a642-a11be0e40872
detection:
  selection_cmdlet:
    ScriptBlockText|contains|all:
    - 'Set-Acl '
    - '-AclObject '
  selection_paths:
        # Note: Add more suspicious paths
    ScriptBlockText|contains:
    - '-Path "C:\Windows'
    - '-Path "C:/Windows'
    - "-Path 'C:\\Windows"
    - "-Path 'C:/Windows"
    - '-Path C:\\Windows'
    - '-Path C:/Windows'
    - '-Path $env:windir'
    - '-Path "$env:windir'
    - "-Path '$env:windir"
  selection_permissions:
        # Note: Add more suspicious permissions
    ScriptBlockText|contains:
    - 'FullControl'
    - 'Allow'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify potentially malicious use of PowerShell scripts that modify access control lists (ACLs) on system folders, specifically the Windows directory. By analyzing the content of executed PowerShell script blocks, the rule looks for commands that use the `Set-Acl` cmdlet along with parameters that specify file paths in the Windows folder. The rule targets commands that manipulate permissions, particularly those that provide 'FullControl' or 'Allow' access. Data sources involved include PowerShell script logs, process creation logs, and relevant command-line parameters that can indicate unusual modification of security settings.
  Because unauthorized changes to ACLs can be a tactic used by attackers to gain persistence or cover their tracks, monitoring these events is crucial for maintaining system integrity. This rule is particularly concerned with script executions that operate within the sensitive directories of Windows, thereby highlighting actions that could lead to escalated privileges or unauthorized access to critical system resources.
  ### Investigation Steps
  - Review the context of the alert by examining the associated PowerShell logs in your EDR to find the execution history related to the flagged command.
  - Check for any other suspicious process activities in the vicinity of the detected PowerShell command, using process creation logs to correlate timings and parent-child relationships.
  - Investigate permissions changes in the ACL for files within the Windows folder by cross-referencing with your system's ACL logs, focusing on actions that grant excessive permissions.
  - Utilize threat intelligence feeds and your SIEM to check for known malicious IPs or domains that could relate to the alert, assessing external communications initiated by commands executed around the same period.
