title: DSInternals Suspicious PowerShell Cmdlets - ScriptBlock
id: 846c7a87-8e14-4569-9d49-ecfd4276a01c
related:
- id: 43d91656-a9b2-4541-b7e2-6a9bd3a13f4e
  type: similar
status: experimental
description: |
  Detects execution and usage of the DSInternals PowerShell module. Which can be used to perform what might be considered as suspicious activity such as dumping DPAPI backup keys or manipulating NTDS.DIT files.
  The DSInternals PowerShell Module exposes several internal features of Active Directory and Azure Active Directory. These include FIDO2 and NGC key auditing, offline ntds.dit file manipulation, password auditing, DC recovery from IFM backups and password hash calculation.
references:
- https://github.com/MichaelGrafnetter/DSInternals/blob/39ee8a69bbdc1cfd12c9afdd7513b4788c4895d4/Src/DSInternals.PowerShell/DSInternals.psd1
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-06-26
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains:
    - 'Add-ADDBSidHistory'
    - 'Add-ADNgcKey'
    - 'Add-ADReplNgcKey'
    - 'ConvertFrom-ADManagedPasswordBlob'
    - 'ConvertFrom-GPPrefPassword'
    - 'ConvertFrom-ManagedPasswordBlob'
    - 'ConvertFrom-UnattendXmlPassword'
    - 'ConvertFrom-UnicodePassword'
    - 'ConvertTo-AADHash'
    - 'ConvertTo-GPPrefPassword'
    - 'ConvertTo-KerberosKey'
    - 'ConvertTo-LMHash'
    - 'ConvertTo-MsoPasswordHash'
    - 'ConvertTo-NTHash'
    - 'ConvertTo-OrgIdHash'
    - 'ConvertTo-UnicodePassword'
    - 'Disable-ADDBAccount'
    - 'Enable-ADDBAccount'
    - 'Get-ADDBAccount'
    - 'Get-ADDBBackupKey'
    - 'Get-ADDBDomainController'
    - 'Get-ADDBGroupManagedServiceAccount'
    - 'Get-ADDBKdsRootKey'
    - 'Get-ADDBSchemaAttribute'
    - 'Get-ADDBServiceAccount'
    - 'Get-ADDefaultPasswordPolicy'
    - 'Get-ADKeyCredential'         # Covers 'Get-ADKeyCredentialLink'
    - 'Get-ADPasswordPolicy'
    - 'Get-ADReplAccount'
    - 'Get-ADReplBackupKey'
    - 'Get-ADReplicationAccount'
    - 'Get-ADSIAccount'
    - 'Get-AzureADUserEx'
    - 'Get-BootKey'
    - 'Get-KeyCredential'
    - 'Get-LsaBackupKey'
    - 'Get-LsaPolicy'         # Covers 'Get-LsaPolicyInformation'
    - 'Get-SamPasswordPolicy'
    - 'Get-SysKey'
    - 'Get-SystemKey'
    - 'New-ADDBRestoreFromMediaScript'
    - 'New-ADKeyCredential'         # Covers 'New-ADKeyCredentialLink'
    - 'New-ADNgcKey'
    - 'New-NTHashSet'
    - 'Remove-ADDBObject'
    - 'Save-DPAPIBlob'
    - 'Set-ADAccountPasswordHash'
    - 'Set-ADDBAccountPassword'         # Covers 'Set-ADDBAccountPasswordHash'
    - 'Set-ADDBBootKey'
    - 'Set-ADDBDomainController'
    - 'Set-ADDBPrimaryGroup'
    - 'Set-ADDBSysKey'
    - 'Set-AzureADUserEx'
    - 'Set-LsaPolicy'         # Covers 'Set-LSAPolicyInformation'
    - 'Set-SamAccountPasswordHash'
    - 'Set-WinUserPasswordHash'
    - 'Test-ADDBPasswordQuality'
    - 'Test-ADPasswordQuality'
    - 'Test-ADReplPasswordQuality'
    - 'Test-PasswordQuality'
    - 'Unlock-ADDBAccount'
    - 'Write-ADNgcKey'
    - 'Write-ADReplNgcKey'
  condition: selection
falsepositives:
- Legitimate usage of DSInternals for administration or audit purpose.
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies the execution of suspicious PowerShell cmdlets associated with the DSInternals PowerShell module. The DSInternals module exposes sensitive features related to Active Directory and Azure Active Directory, enabling potentially harmful activities such as password hash manipulation, DPAPI key dumping, and offline NTDS.DIT file modifications. The rule triggers when specific cmdlets are executed, particularly those that can extract sensitive information or alter directory services configurations. For effective detection, it's essential that Script Block Logging is activated in your environment. This rule aligns with the MITRE ATT&CK framework under the **Execution** tactic and is specifically related to the **T1059.001** technique (PowerShell).
  ### Investigation Steps
  - **Review Execution Context:** Use EDR tools to examine user activity and system context around the time the alert was triggered. Look for any unusual account behaviors or unauthorized access patterns.
  - **Analyze PowerShell Logs:** Search Windows event logs specifically for PowerShell execution details. Correlate the timestamps and command inputs with the executed cmdlets identified in the alert.
  - **Check for Anomalous Network Activity:** Utilize the Network Detection and Response (NDR) tools to assess outbound connections initiated by the affected system. Look for connections to known malicious IP addresses or unusual data exfiltration patterns.
  - **Validate Administrative Intent:** Correlate the detected cmdlet execution with legitimate administrative tasks by reviewing any recent changes made in Active Directory or Azure AD environments. This will help distinguish between benign administrative actions versus potential malicious intent.
  ### Prioritization
  The alert is assigned a **high** severity level due to the potential impact of the detected cmdlets on sensitive data within Active Directory environments and the ease with which an attacker could misuse these capabilities to gain elevated access or exfiltrate sensitive information.
  ### Blind Spots and Assumptions
  There are several potential blind spots with this rule. If Script Block Logging is not enabled, cmdlet executions will not be logged, causing the rule to miss detections. Additionally, legitimate administrative actions may trigger false positives, complicating incident investigations. It's also reasonable to assume that advanced adversaries may obfuscate their power shell commands or employ alternate methods to execute similar functionalities without using the specific cmdlets that this rule monitors. Analysts should be aware that variations in attack techniques may prevent the rule from firing.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
