title: PowerShell PSAttack
id: b7ec41a4-042c-4f31-a5db-d0fcde9fa5c5
status: test
description: Detects the use of PSAttack PowerShell hack tool
references:
- https://adsecurity.org/?p=2921
author: Sean Metcalf (source), Florian Roth (Nextron Systems)
date: 2017-03-05
modified: 2022-12-25
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains: 'PS ATTACK!!!'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "PowerShell PSAttack" detection rule identifies the execution of a PowerShell script that includes the string "PS ATTACK!!!". This string is indicative of the use of the PSAttack tool, a known PowerShell-based exploit framework utilized for various offensive security activities. The rule leverages Windows PowerShell Script Block Logging as the primary data source, which records the execution of PowerShell scripts in detail, including their contents. By looking for specific text within these logs, organizations can establish whether there has been potentially malicious activity, escalating from mere curiosity to actual exploitation attempts. This detection corresponds to the MITRE ATT&CK tactics of Execution and technique T1059.001, which pertains to PowerShell as a command and scripting interpreter.
  ### Investigation Steps
  - **Check Script Block Logging:** Verify if PowerShell Script Block Logging is enabled on the affected systems to gain visibility into any executed PowerShell commands.
  - **Review EDR Alerts:** Utilize the EDR platform to scrutinize any alerts generated around the time of the alert for correlated events, such as anomalous process creation or privileged operations.
  - **Analyze Network Connections:** Examine network logs for unusual outbound connections or communication with suspicious external IP addresses that could indicate data exfiltration or command-and-control presence.
  - **Inspect User Activity:** Look into the user account associated with the alert to determine its typical behavior and any recent changes in activity that could suggest unauthorized access or abusive usage patterns.
  ### Prioritization
  This alert is categorized as high severity due to the inherent risks associated with the execution of known PowerShell hacking tools, which could signify a potential breach or an active exploitation attempt within the enterprise environment.
  ### Blind Spots and Assumptions
  The detection rule relies heavily on Script Block Logging being enabled in the environment. If it is not configured properly, the rule will fail to fire even if the PSAttack script is executed. Additionally, adversaries may obfuscate their use of PowerShell or employ different command strings, making detection challenging. It's important to also consider scenarios where an insider threat may misuse legitimate tools for malicious purposes, which might generate legitimate alerts under normal use cases.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
