title: Disable Powershell Command History
id: 602f5669-6927-4688-84db-0d4b7afb2150
status: test
description: Detects scripts or commands that disabled the Powershell command history
  by removing psreadline module
references:
- https://twitter.com/DissectMalware/status/1062879286749773824
author: Ali Alwashali
date: 2022-08-21
tags:
- attack.defense-evasion
- attack.t1070.003
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection:
    ScriptBlockText|contains|all:
    - Remove-Module
    - psreadline
  condition: selection
falsepositives:
- Legitimate script that disables the command history
level: high
notes: |
  ### Technical Context
  The "Disable Powershell Command History" Sigma rule is designed to detect the use of PowerShell scripts or commands that aim to disable command history by removing the `psreadline` module. Command history is a critical feature in PowerShell that allows users to view and retrieve previously executed commands. Malicious actors may attempt to disable this functionality as part of their defense evasion tactics, specifically under the MITRE ATT&CK technique T1070.003 (Indicator Removal on Host).
  To trigger this alert, the rule inspects PowerShell script blocks for the presence of key terms like `Remove-Module` and `psreadline`. It relies on Windows event logs, specifically focusing on Sysmon and PowerShell script block logging to capture relevant activities. For the rule to function, it is essential that PowerShell script block logging is enabled in the environment, as this allows the capture of command text as it is executed. By monitoring such actions, this rule helps identify potentially malicious attempts to obscure evidence of activity on hosts.
  ### Investigation Steps
  - **Check Process Activity:** Review recent PowerShell process creation events in your EDR solution to identify if `powershell.exe` or `pwsh.exe` was invoked around the time of the alert state. Pay attention to unusual command-line arguments.
  - **Analyze Script Block Logging:** Access the PowerShell script block logs to find the specific scripts that triggered the rule. Look for the context and source of these scripts to determine if they were initiated from a legitimate user or malicious source.
  - **Review User Activity:** Use Windows Security logs to analyze the account activity associated with the detected PowerShell commands. Identify if the user account has a history of anomalous behavior or is known to be compromised.
  - **Inspect Change Log:** Examine the Sysmon logs for related events, including process creation and registry key alterations, particularly those associated with the `psreadline` module. This can provide further insight into any additional evasion techniques being employed.
  ### Prioritization
  Given the severity level labeled as "high," this alert indicates a potentially significant security incident where an adversary may be attempting to evade detection efforts. Immediate investigation is essential, as disabling command history could prevent the tracking of malicious activities.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where PowerShell script block logging is disabled, as the events related to the `Remove-Module psreadline` command will not be captured. Additionally, legitimate scripts may also trigger this alert when they intentionally disable command history for valid operational reasons, thus potentially leading to false positives. Moreover, adversaries could choose alternative methods to evade detection that do not involve `psreadline`, such as using other scripting languages or methodologies.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
