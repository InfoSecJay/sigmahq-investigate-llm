title: Disable-WindowsOptionalFeature Command PowerShell
id: 99c4658d-2c5e-4d87-828d-7c066ca537c3
status: test
description: |
  Detect built in PowerShell cmdlet Disable-WindowsOptionalFeature, Deployment Image Servicing and Management tool.
  Similar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
references:
- https://github.com/redcanaryco/atomic-red-team/blob/5b67c9b141fa3918017f8fa44f2f88f0b1ecb9e1/atomics/T1562.001/T1562.001.md
- https://learn.microsoft.com/en-us/powershell/module/dism/disable-windowsoptionalfeature?view=windowsserver2022-ps
author: frack113
date: 2022-09-10
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  product: windows
  category: ps_script
  definition: 'Requirements: Script Block Logging must be enabled'
detection:
  selection_cmd:
    ScriptBlockText|contains|all:
    - 'Disable-WindowsOptionalFeature'
    - '-Online'
    - '-FeatureName'
  selection_feature:
        # Add any important windows features
    ScriptBlockText|contains:
    - 'Windows-Defender-Gui'
    - 'Windows-Defender-Features'
    - 'Windows-Defender'
    - 'Windows-Defender-ApplicationGuard'
            # - 'Containers-DisposableClientVM' # Windows Sandbox
  condition: all of selection*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Disable-WindowsOptionalFeature Command PowerShell" is designed to detect the execution of the built-in PowerShell cmdlet `Disable-WindowsOptionalFeature`. This cmdlet is often utilized for managing Windows features and packages within images, wielding great potential for modifying critical system functionalities. In particular, adversaries may use this command to disable security features like Windows Defender, therefore creating an opportunity to operate without detection. This rule focuses on detecting the specific command and its associated parameters, such as `-Online` and `-FeatureName`, and looks for common feature names related to Windows Defender like `Windows-Defender-Gui` or `Windows-Defender-ApplicationGuard`. The primary technical data source involved in this detection is PowerShell script block logging, which must be enabled for the rule to function properly. The associated MITRE ATT&CK tactic for this detection is "Defense Evasion" (T1562.001).
  ### Investigation Steps
  - **Review PowerShell Logs:** Investigate PowerShell logs to identify the user context in which `Disable-WindowsOptionalFeature` was executed and assess any potential unauthorized use.
  - **Analyze Process Creation Events:** Utilize EDR tools to monitor any associated processes and their command-line arguments to confirm the legitimacy of the action taken.
  - **Inspect Security Feature Status:** Check the status of Windows Defender and other security features within the environment to determine if any were altered or disabled as a result of the cmdlet execution.
  - **Correlate with Network Activity:** Analyze network logs and proxy data to see if there are any communications with external sources that may correlate with the timing of the command's execution.
  ### Prioritization
  The alert is assigned a high severity level due to the command's ability to disable critical security features. In a large enterprise environment, such actions can significantly increase the risk of successful exploitation and data theft.
  ### Blind Spots and Assumptions
  This rule may not detect every instance of the cmdlet being used if PowerShell script block logging is not enabled or if the commands are obfuscated to bypass detection. Additionally, the rule could fail to trigger if an adversary uses an alternative workaround that doesnâ€™t include the specified keywords or if legitimate administrative actions cause false positives. Analysts should be aware that while this detection may be effective, it is not foolproof and should be supplemented with other investigative methods.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
