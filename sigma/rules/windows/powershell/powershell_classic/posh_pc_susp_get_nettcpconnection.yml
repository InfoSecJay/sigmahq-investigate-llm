title: Use Get-NetTCPConnection
id: b366adb4-d63d-422d-8a2c-186463b5ded0
status: test
description: Adversaries may attempt to get a listing of network connections to or
  from the compromised system they are currently accessing or from remote systems
  by querying for information over the network.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1049/T1049.md#atomic-test-2---system-network-connections-discovery-with-powershell
author: frack113
date: 2021-12-10
modified: 2023-10-27
tags:
- attack.discovery
- attack.t1049
logsource:
  product: windows
  category: ps_classic_start
detection:
  selection:
    Data|contains: 'Get-NetTCPConnection'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the use of the `Get-NetTCPConnection` command within PowerShell, which is often employed by adversaries to enumerate active TCP connections on a compromised system or to gather information about remote systems. By querying the current state of network connections, attackers aim to assess their environment and potentially identify active network services and targets for further exploitation. The technical data sources involved in this detection primarily include process creation logs and command-line parameters associated with PowerShell, specifically monitoring for the execution of commands that invoke `Get-NetTCPConnection`. This detection aligns with the MITRE ATT&CK tactics under "Discovery" (TA0007) and specifically maps to "Network Service Discovery" (T1049).
  ### Investigation Steps
  - **Review PowerShell Activity:** Investigate the PowerShell command execution logs for instances of `Get-NetTCPConnection`. Use your EDR tool to correlate these logs with any other relevant activities around that timeframe.
  - **Correlate with Network Logs:** Analyze network connection logs to identify any unusual outbound connections that occurred simultaneously with the `Get-NetTCPConnection` command execution. This can provide insight into the context of the discovery attempt.
  - **Examine User Activity:** Check the Windows Security logs to identify which user executed the command and under what privileges. Look for any suspicious user accounts or unusual access patterns.
  - **Check for Related Malicious Activity:** Search for evidence of other known malicious behaviors in the vicinity, such as unusual process creations or file manipulations that may indicate a broader compromise or exploitation strategy.
  ### Prioritization
  The alert is classified as low severity because the execution of `Get-NetTCPConnection` alone does not necessarily indicate malicious activity; however, it can serve as a preliminary indicator of intent by an adversary to further enumerate the network environment, warranting further investigation.
  ### Blind Spots and Assumptions
  This rule may fail to trigger if the `Get-NetTCPConnection` command is executed with obfuscation techniques or within a PowerShell session that is not logged. Additionally, if legitimate administrative scripts or operations are using this command, it could lead to false negatives. Engineers should consider that adversaries might also use alternative methods to obtain similar information, such as custom scripts or tools that do not rely on standard PowerShell cmdlets.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
