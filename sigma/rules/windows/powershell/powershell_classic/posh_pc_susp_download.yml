title: Suspicious PowerShell Download
id: 3236fcd0-b7e3-4433-b4f8-86ad61a9af2d
related:
- id: 65531a81-a694-4e31-ae04-f8ba5bc33759
  type: derived
status: test
description: Detects suspicious PowerShell download command
references:
- https://www.trendmicro.com/en_us/research/22/j/lv-ransomware-exploits-proxyshell-in-attack.html
author: Florian Roth (Nextron Systems)
date: 2017-03-05
modified: 2023-10-27
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: ps_classic_start
detection:
  selection_webclient:
    Data|contains: 'Net.WebClient'
  selection_download:
    Data|contains:
    - '.DownloadFile('
    - '.DownloadString('
  condition: all of selection_*
falsepositives:
- PowerShell scripts that download content from the Internet
level: medium
notes: |
  ### Technical Context
  This rule is designed to detect potentially malicious PowerShell commands that initiate downloads from the internet using the WebClient class. Specifically, the rule looks for commands containing the signatures `.DownloadFile(` or `.DownloadString(`, indicating that PowerShell is being used to retrieve files or strings from remote servers. These actions can be commonly associated with downloading malware or executing malicious scripts, making them a significant concern for enterprise security. The logs utilized are primarily PowerShell execution logs that capture command-line activity, focusing on any processes where the `Net.WebClient` class is instantiated. This detection aligns with the MITRE ATT&CK technique T1059.001 (PowerShell), under the Execution tactic.
  ### Investigation Steps
  - **Review PowerShell Command Logs:** Start by analyzing PowerShell command logs in your SIEM for the detected event, focusing on the specific commands that were executed around the time of the alert.
  - **Correlate with EDR Insight:** Utilize EDR tools to investigate the process tree and execution context of PowerShell, identifying parent processes and any additional network connections established during the execution.
  - **Monitor Downloaded Content:** Check for any files subsequently downloaded or executed on affected machines. File system logs may provide insights into suspicious file modifications or creations.
  - **Assess Network Activity:** Examine network traffic through NDR or NGFW for any connections made to known malicious IP addresses or domains corresponding to the alerts, which can help validate the legitimacy of the command.
  ### Prioritization
  The alert is assigned a medium severity level due to the potential for significant risks associated with unauthorized downloads. While it may stem from legitimate administrative tasks, the context surrounding its execution must be thoroughly evaluated to prevent potential exploitation.
  ### Blind Spots and Assumptions
  Detection may not fire if the PowerShell command is obfuscated or executed in a manner that bypasses logging (e.g., using encoded commands). Additionally, administrative use of PowerShell for legitimate purposes can lead to false positives. Keep in mind that threat actors may use alternative scripting or programming languages, which this rule does not cover, and may take measures to avoid detection by manipulating their command syntax.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
