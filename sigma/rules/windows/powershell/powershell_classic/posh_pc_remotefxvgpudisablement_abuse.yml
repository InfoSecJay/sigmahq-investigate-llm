title: Potential RemoteFXvGPUDisablement.EXE Abuse
id: f65e22f9-819e-4f96-9c7b-498364ae7a25
related:
- id: a6fc3c46-23b8-4996-9ea2-573f4c4d88c5     # ProcCreation
  type: similar
- id: 38a7625e-b2cb-485d-b83d-aff137d859f4     # PS Module
  type: similar
- id: cacef8fc-9d3d-41f7-956d-455c6e881bc5     # PS ScriptBlock
  type: similar
status: test
description: Detects PowerShell module creation where the module Contents are set
  to "function Get-VMRemoteFXPhysicalVideoAdapter". This could be a sign of potential
  abuse of  the "RemoteFXvGPUDisablement.exe" binary which is known to be vulnerable
  to module load-order hijacking.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md
- https://github.com/redcanaryco/AtomicTestHarnesses/blob/7e1e4da116801e3d6fcc6bedb207064577e40572/TestHarnesses/T1218_SignedBinaryProxyExecution/InvokeRemoteFXvGPUDisablementCommand.ps1
author: frack113, Nasreddine Bencherchali (Nextron Systems)
date: 2021-07-13
modified: 2023-05-09
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  product: windows
  service: powershell-classic
  definition: fields have to be extract from event
detection:
  selection:
    Data|contains: 'ModuleContents=function Get-VMRemoteFXPhysicalVideoAdapter {'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule focuses on identifying potentially malicious activities associated with the execution of PowerShell modules that may exploit the `RemoteFXvGPUDisablement.exe` binary. Specifically, it looks for instances where the string `ModuleContents=function Get-VMRemoteFXPhysicalVideoAdapter {` appears within PowerShell logs. This behavior is indicative of module load-order hijacking tactics that adversaries may employ to manipulate processes and security mechanisms. The primary data source for this rule is classic Windows PowerShell logging, where we extract relevant fields from event logs to capture the creation activities of modules.
  The rule aligns with the MITRE ATT&CK framework under the tactic of **Defense Evasion** and the technique **T1218: Signed Binary Proxy Execution**, which highlights the need for vigilant monitoring of PowerShell activities, especially when they involve module manipulations. This technique can assist adversaries in bypassing security controls and executing code with elevated privileges.
  ### Investigation Steps
  - **Check PowerShell Execution History:** Review the PowerShell command history on affected systems for any suspicious or unexpected usage of the `RemoteFXvGPUDisablement.exe` binary or related modules.
  - **Analyze Process Creation Logs:** Utilize EDR tools to inspect process creation logs that correlate with the execution of PowerShell scripts or commands related to the detected module to uncover any unauthorized parent-child process relationships.
  - **Examine Network Activity:** Investigate any outbound network connections from systems where the alert was triggered, focusing on connections that could relate to data exfiltration or command-and-control communication.
  - **Cross-reference with Security Events:** Look for any concurrent security alerts or anomalies in Windows Event Logs to see if there are links to broader efforts such as lateral movement or privilege escalation by the same initial actor.
  ### Prioritization
  The severity of this alert is classified as high due to the potential implications of malicious PowerShell activity. Given that it involves module load-order hijacking, it may enable attackers to bypass security measures and execute unauthorized commands on compromised systems, escalating their control.
  ### Blind Spots and Assumptions
  The detection rule assumes that PowerShell command logging is enabled on the monitored systems. If logging is disabled, the rule may fail to capture these activities, allowing malicious behaviors to go unnoticed. Additionally, an adversary could obfuscate their PowerShell commands or use encoded commands to avoid detection, potentially bypassing this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
