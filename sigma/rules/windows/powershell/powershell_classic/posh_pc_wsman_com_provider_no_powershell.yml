title: Suspicious Non PowerShell WSMAN COM Provider
id: df9a0e0e-fedb-4d6c-8668-d765dfc92aa7
status: test
description: Detects suspicious use of the WSMAN provider without PowerShell.exe as
  the host application.
references:
- https://twitter.com/chadtilbury/status/1275851297770610688
- https://bohops.com/2020/05/12/ws-management-com-another-approach-for-winrm-lateral-movement/
- https://github.com/bohops/WSMan-WinRM
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-06-24
modified: 2024-12-27
tags:
- attack.execution
- attack.t1059.001
- attack.lateral-movement
- attack.t1021.003
logsource:
  product: windows
  service: powershell-classic
detection:
  selection:
    Data|contains: 'ProviderName=WSMan'
  filter_main_ps:
    Data|contains:
    - 'HostApplication=powershell'
    - 'HostApplication=C:\Windows\System32\WindowsPowerShell\v1.0\powershell'
    - 'HostApplication=C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell'
            # In some cases powershell was invoked with inverted slashes
    - 'HostApplication=C:/Windows/System32/WindowsPowerShell/v1.0/powershell'
    - 'HostApplication=C:/Windows/SysWOW64/WindowsPowerShell/v1.0/powershell'
  filter_main_host_application_null:
        # Note: Since we're using the raw data field to match. There is no easy way to filter out cases where the "HostApplication" field is null (i.e doesn't exist). We're practically forced to use a regex.
        # If you're already mapping and extracting the field, then obviously use that directly.
    Data|re: 'HostId=[a-zA-Z0-9-]{36}\s+EngineVersion='
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious activity related to the Windows Remote Management (WinRM) infrastructure, specifically focusing on the use of the WSMan COM provider without the legitimate PowerShell host application. The rule targets logs associated with `powershell-classic`, searching for instances where the `Data` field indicates the presence of `ProviderName=WSMan`. It then applies filters to exclude entries where the host application is identified as PowerShell.exe, whether invoked directly or through its various paths. By doing so, the rule aims to identify potential lateral movement attempts by attacker tools or scripts that exploit WinRM while masquerading as legitimate activity, thus raising the alert level for such behaviors.
  ### Investigation Steps
  - Review recent process creation logs using EDR tools to determine if any unusual or unauthorized applications were initiated around the time of the alert.
  - Examine command-line parameters associated with processes that invoked the WSMan provider to identify any irregularities or non-standard usage.
  - Analyze network logs (NDR) for any suspicious outgoing or incoming WinRM traffic that may correlate with the timeframe of the detected activity.
  - Validate the legitimacy of the applications making requests to the WSMan provider by cross-referencing the `HostId` against known system hosts and user activity logs in cloud platforms.
