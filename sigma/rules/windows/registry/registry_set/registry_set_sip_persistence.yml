title: Persistence Via New SIP Provider
id: 5a2b21ee-6aaa-4234-ac9d-59a59edf90a1
status: test
description: Detects when an attacker register a new SIP provider for persistence
  and defense evasion
references:
- https://persistence-info.github.io/Data/codesigning.html
- https://github.com/gtworek/PSBits/tree/master/SIP
- https://specterops.io/assets/resources/SpecterOps_Subverting_Trust_in_Windows.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-08-17
tags:
- attack.persistence
- attack.defense-evasion
- attack.t1553.003
logsource:
  category: registry_set
  product: windows
detection:
  selection_root:
    TargetObject|contains:
    - '\SOFTWARE\Microsoft\Cryptography\Providers\'
    - '\SOFTWARE\Microsoft\Cryptography\OID\EncodingType'
    - '\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\'
    - '\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID\EncodingType'
  selection_dll:
    TargetObject|contains:
    - '\Dll'
    - '\$DLL'
  filter:
    Details:
            # Add more legitimate SIP providers according to your env
    - WINTRUST.DLL
    - mso.dll
  filter_poqexec:
    Image: 'C:\Windows\System32\poqexec.exe'
    TargetObject|contains: '\CryptSIPDll'
    Details: 'C:\Windows\System32\PsfSip.dll'
  condition: all of selection_* and not 1 of filter*
falsepositives:
- Legitimate SIP being registered by the OS or different software.
level: medium
notes: |
  ### Technical Context
  The "Persistence Via New SIP Provider" Sigma rule is designed to identify potential malicious activity involving the registration of new Security Support Provider (SIP) DLLs within the Windows registry. Attackers often leverage SIP providers for persistence and to evade detection by integrating malicious DLLs into the legitimate system components. The rule specifically monitors changes to the Windows registry paths related to SIP providers, particularly within `SOFTWARE\Microsoft\Cryptography\Providers\` and corresponding OID encoding types. Key telemetry sources for this detection include registry modification logs, which are essential for tracing changes made by both authorized and unauthorized processes.
  When a new SIP provider is registered, it typically involves a DLL being added under these paths. The rule incorporates multiple conditions to distinguish between legitimate and suspicious activities, looking for known legitimate DLLs that should not trigger alerts and focusing on events that may be initiated by suspicious processes such as `poqexec.exe`. This activity corresponds to the MITRE ATT&CK technique T1553.003 
  - "SIP Provider".
  ### Investigation Steps
  - **Review Registry Modifications**: Check the Windows registry logs to investigate the newly registered SIP provider entries, focusing on the time and the process that initiated the changes.
  - **Analyze Associated Processes**: Use EDR tools to identify the processes involved in the registration activity, particularly any anomalous executions of `poqexec.exe` or other suspicious binaries.
  - **Cross-Reference with Threat Intelligence**: Verify the DLLs registered against known threat intelligence databases to ascertain if any correspond to identified malware signatures or behaviors.
  - **Monitor for Additional Indicators**: Continue monitoring logs for any subsequent unusual activities that may indicate further exploitation or persistence attempts based on the registered SIP provider.
  ### Prioritization
  This alert is assigned a medium severity level due to the potential for an attacker to establish persistence mechanisms that can lead to long-term access within the environment, making it critical to investigate promptly to prevent further malicious activities.
  ### Blind Spots and Assumptions
  - The rule may not trigger in environments where legitimate SIP registrations occur frequently, potentially leading to many false positives and diminishing the effectiveness of alerting.
  - Assumes that registry logging is properly configured to capture all relevant modifications; any misconfigurations could lead to missed detections.
  - Adversaries may also utilize obfuscation techniques or may attempt to utilize legitimate DLLs to evade detection, potentially resulting in stealthy operations that this rule may not catch.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
