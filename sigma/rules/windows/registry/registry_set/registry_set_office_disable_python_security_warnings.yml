title: Python Function Execution Security Warning Disabled In Excel - Registry
id: 17e53739-a1fc-4a62-b1b9-87711c2d5e44
related:
- id: 023c654f-8f16-44d9-bb2b-00ff36a62af9
  type: similar
status: test
description: |
  Detects changes to the registry value "PythonFunctionWarnings" that would prevent any warnings or alerts from showing when Python functions are about to be executed.
  Threat actors could run malicious code through the new Microsoft Excel feature that allows Python to run within the spreadsheet.
references:
- https://support.microsoft.com/en-us/office/data-security-and-python-in-excel-33cc88a4-4a87-485e-9ff9-f35958278327
author: Nasreddine Bencherchali (Nextron Systems), @Kostastsale
date: 2024-08-23
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\Microsoft\Office\'
    TargetObject|endswith: '\Excel\Security\PythonFunctionWarnings'
    Details: 'DWORD (0x00000001)'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule monitors changes in the Windows registry that affect Microsoft Excel's security configurations, specifically the `PythonFunctionWarnings` registry value. When set to `DWORD (0x00000001)`, it disables warnings for executing Python functions within Excel, a feature that allows users to run Python scripts directly in spreadsheets. This capability, while potentially beneficial, poses significant security risks as it can be exploited by threat actors to execute malicious code without proper alerts, bypassing typical security measures. The rule leverages registry monitoring to detect unauthorized manipulations that align with the MITRE ATT&CK tactic for Defense Evasion (specifically Technique T1562.001).
  ### Investigation Steps
  - **Check Registry Changes:** Use a registry monitoring tool to query recent changes to the `HKEY_CURRENT_USER\Software\Microsoft\Office\<version>\Excel\Security\PythonFunctionWarnings` key and verify the value is set to `0x00000001`.
    
  - **Review User Activity:** Investigate the user accounts that modified the registry key by analyzing Windows Security logs for any unusual activity or behavior leading up to the change.
  - **Analyze Excel Activity:** Utilize EDR tools to examine the execution logs for Microsoft Excel instances around the time of the registry modification, looking for any suspicious Python executions or related processes.
  - **Correlate with Network Traffic:** Cross-reference detected registry changes with network logs to see if there is any suspicious outbound connection initiated by Excel that may indicate the execution of malicious Python code.
  ### Prioritization
  This alert is categorized as high severity due to the potential for bypassing security measures and executing unauthorized code within Excel, which can lead to significant data breaches or system compromises in an enterprise environment.
  ### Blind Spots and Assumptions
  There are potential blind spots if the registry change occurs in a userâ€™s session that is not monitored or if legitimate business processes involve modifying security settings without proper oversight. Additionally, if an adversary has sufficient privileges, they may know how to revert such changes or implement obfuscation techniques that could prevent detection. Understanding the operational context of registry changes will be vital in differentiating between benign and malicious activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
