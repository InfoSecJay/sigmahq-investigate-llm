title: Session Manager Autorun Keys Modification
id: 046218bd-e0d8-4113-a3c3-895a12b2b298
related:
- id: 17f878b8-9968-4578-b814-c4217fc5768c
  type: obsolete
status: test
description: Detects modification of autostart extensibility point (ASEP) in registry.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md
- https://learn.microsoft.com/en-us/sysinternals/downloads/autoruns
- https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d     # a list with registry keys
author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin,
  oscd.community, Tim Shelton, frack113 (split)
date: 2019-10-25
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1547.001
- attack.t1546.009
logsource:
  category: registry_set
  product: windows
detection:
  session_manager_base:
    TargetObject|contains: '\System\CurrentControlSet\Control\Session Manager'
  session_manager:
    TargetObject|contains:
    - '\SetupExecute'
    - '\S0InitialCommand'
    - '\KnownDlls'
    - '\Execute'
    - '\BootExecute'
    - '\AppCertDlls'
  filter:
    Details: '(Empty)'
  condition: session_manager_base and session_manager and not filter
fields:
- SecurityID
- ObjectName
- OldValueType
- NewValueType
falsepositives:
- Legitimate software automatically (mostly, during installation) sets up autorun
  keys for legitimate reason
- Legitimate administrator sets up autorun keys for legitimate reason
level: medium
notes: |
  ### Technical Context
  This detection rule is designed to identify unauthorized modifications to the Autostart Extensibility Points (ASEP) in the Windows registry, specifically targeting the Session Manager. These modifications can indicate attempts at persistence mechanisms by threat actors, aiming to ensure their malicious code runs whenever the system starts. The rule monitors the Windows registry for changes to keys that are critical for system startup processes including, but not limited to, `\BootExecute`, `\AppCertDlls`, and `\KnownDlls`. The logs utilized for detection come from the `registry_set` log source in Windows, which records changes made to registry keys. By focusing on these specific keys, analysts can detect potential malicious behavior aligned with the MITRE ATT&CK technique T1547.001 (Windows Registry Run Keys / Startup Folder) and T1546.009 (Event Triggered Execution: System Boot or Logon).
  ### Investigation Steps
  - **Confirm the Alert:** Utilize your EDR to review the registry modification activity captured in the log that triggered the alert, specifically details regarding who made the change and what new values were applied.
  - **Examine Contextual Information:** Investigate previous and subsequent actions in the Windows Event Logs and Sysmon logs to discern if there are associated events that suggest malicious behavior, such as unusual process creation around the same time.
  - **Check for Known Good Configurations:** Compare the modified registry values against a list of known good configurations for your organization or consult security baselines to establish legitimacy.
  - **Review User and System Activity:** Analyze user behavior using logs from VPN, proxy, or other access logs to see if the user associated with the changes had unusual access patterns or behaviors around the time of the modification.
  ### Prioritization
  Given the potential impact of unauthorized persistence mechanisms on the integrity and security of enterprise systems, this alert is prioritized as medium severity. The risk of allowing malware to persist through registry autostart mechanisms necessitates prompt investigation by the incident response team.
  ### Blind Spots and Assumptions
  There are several inherent blind spots associated with this detection rule. The rule may fail to trigger in scenarios where legitimate software modifies these keys without raising alerts, presenting a challenge in differentiating between benign and malicious activity. Additionally, highly privileged users and automated deployment processes may alter registry settings legitimately, which could obscure malicious behavior. Exclusions for known legitimate software should be clearly defined to avoid false positives, but this creates an assumption that all behavior from these applications is benign. The lack of robust monitoring on all systems might also hinder detection capabilities if changes are made on systems not within the monitoring scope.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
