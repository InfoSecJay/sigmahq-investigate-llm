title: Registry Persistence via Service in Safe Mode
id: 1547e27c-3974-43e2-a7d7-7f484fb928ec
status: test
description: Detects the modification of the registry to allow a driver or service
  to persist in Safe Mode.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-33---windows-add-registry-value-to-load-service-in-safe-mode-without-network
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1112/T1112.md#atomic-test-34---windows-add-registry-value-to-load-service-in-safe-mode-with-network
author: frack113
date: 2022-04-04
modified: 2024-03-25
tags:
- attack.defense-evasion
- attack.t1564.001
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains:
    - '\Control\SafeBoot\Minimal\'
    - '\Control\SafeBoot\Network\'
    TargetObject|endswith: '\(Default)'
    Details: 'Service'
  filter_optional_sophos:
    Image: 'C:\WINDOWS\system32\msiexec.exe'
    TargetObject|endswith:
    - '\Control\SafeBoot\Minimal\SAVService\(Default)'
    - '\Control\SafeBoot\Network\SAVService\(Default)'
  condition: selection and not 1 of filter_optional_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect modifications to the Windows registry that facilitate the persistence of services or drivers specifically within Safe Mode, a minimal state of the operating system. The rule focuses on changes to the registry path `\Control\SafeBoot\Minimal` and `\Control\SafeBoot\Network`, which are used to manage which services can load in Safe Mode. By monitoring registry alterations where the target object indicates a service, the rule aims to identify potential attempts by threat actors to maintain access or control during a critical recovery environment, thus avoiding detection. This behavior falls under the MITRE ATT&CK tactic of "Defense Evasion" and specifically correlates to the technique T1564.001 (Registry Run Keys / Startup Folder).
  To implement this monitoring, the rule relies heavily on registry modification events, ensuring a close watch on critical registry paths. Such alterations are commonly made by malicious programs to ensure their presence, even when the system is running in a restricted state. Detecting these changes can provide early insights into compromised systems and the tactics employed by an adversary.
  ### Investigation Steps
  - **Review the Registry Changes:** Investigate recent registry modifications within the `\Control\SafeBoot\Minimal` and `\Control\SafeBoot\Network` paths using Windows Event Logs to confirm if unauthorized entries were made.
    
  - **Correlate with EDR Data:** Utilize EDR solutions to gather related telemetry such as process creation events and their command-line parameters around the time of the registry changes to determine the origin of the modifications.
    
  - **Examine Related Services:** Check Windows Services via the Services MMC or command line for any unfamiliar or anomalous services listed under `SafeBoot` to ascertain their legitimacy and behavior.
    
  - **Analyze Endpoint Activity:** Leverage AV and behavioral analysis tools to run scans and assess the endpoint's current state and any associated threats or compromises that could link back to the suspicious registry entries.
  ### Prioritization
  Given the high-severity level of this alert, the detection of registry modifications allowing services to persist in Safe Mode indicates a significant potential for evasion and persistence tactics employed by adversaries. Immediate investigation is vital to mitigate risks to system integrity and security.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where the registry modifications happen outside monitored paths or when alterations are made by legitimate applications without raising any flags. Additionally, if the adversary uses stealthy methods to manipulate the registry or utilizes known services that would not typically seem suspicious, the rule might not trigger. Enhanced methods such as rootkits could also bypass detection capabilities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
