title: Bypass UAC Using DelegateExecute
id: 46dd5308-4572-4d12-aa43-8938f0184d4f
status: test
description: Bypasses User Account Control using a fileless method
references:
- https://learn.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-iexecutecommand
- https://devblogs.microsoft.com/oldnewthing/20100312-01/?p=14623
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1548.002/T1548.002.md#atomic-test-7---bypass-uac-using-sdclt-delegateexecute
author: frack113
date: 2022-01-05
modified: 2023-08-17
tags:
- attack.privilege-escalation
- attack.defense-evasion
- attack.t1548.002
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|endswith: '\open\command\DelegateExecute'
    Details: (Empty)
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule targets the bypassing of User Account Control (UAC) utilizing a Windows registry manipulation technique with DelegateExecute. The rule specifically looks for registry keys that indicate a process has been configured to run without UAC prompts by observing alterations in the `DelegateExecute` command paths. When an attacker seeks to escalate privileges, they may exploit this method to execute code with elevated permissions invisibly. The technical data sources involved include Windows Registry logs, specifically focusing on registry modifications related to the command that interacts with UAC. This behavior is associated with the MITRE ATT&CK tactic of privilege escalation (T1548.002) and defense evasion, making it essential for ensuring robust security monitoring in any enterprise environment.
  ### Investigation Steps
  - **Check Registry Logs:** Review Windows Registry logs for the presence of changes to the `\open\command\DelegateExecute` path. Look for unusual values or permissions modifications that could indicate unauthorized access.
  - **Examine Process Creation:** Utilize EDR tools to analyze process creation logs around the time of the alert. Investigate whether any suspicious processes were spawned that correspond with the identified registry changes.
  - **Analyze Network Connections:** Inspect network logs for unusual outgoing connections initiated by processes that leverage the DelegateExecute functionality. This might reveal communication with known malicious endpoints or C2 servers.
  - **Evaluate User Account Permissions:** Investigate whether the user accounts involved at the time of the alert have been granted elevated privileges without proper justification. Check for any recent changes in user roles or group memberships.
  ### Prioritization
  The alert is rated as high severity due to the potential for unauthorized privilege escalation, which could lead to significant security breaches and compromise of sensitive enterprise resources.
  ### Blind Spots and Assumptions
  This rule may not fire if the registry changes occur without appropriate logging enabled or if the monitoring tools are misconfigured. It assumes typical administrative actions do not trigger a false positive; however, legitimate applications could also alter these registry settings without malicious intent. Engineers should be aware that advanced adversaries may employ anti-detection techniques that could obfuscate their activities, such as using steganography or manipulating timestamps.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
