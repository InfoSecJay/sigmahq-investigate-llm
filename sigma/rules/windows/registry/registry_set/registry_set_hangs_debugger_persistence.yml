title: Add Debugger Entry To Hangs Key For Persistence
id: 833ef470-fa01-4631-a79b-6f291c9ac498
status: test
description: Detects when an attacker adds a new "Debugger" value to the "Hangs" key
  in order to achieve persistence which will get invoked when an application crashes
references:
- https://persistence-info.github.io/Data/wer_debugger.html
- https://www.hexacorn.com/blog/2019/09/20/beyond-good-ol-run-key-part-116/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-08-17
tags:
- attack.persistence
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\SOFTWARE\Microsoft\Windows\Windows Error Reporting\Hangs\Debugger'
  condition: selection
falsepositives:
- This value is not set by default but could be rarly used by administrators
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify attempts by attackers to achieve persistence on Windows systems by modifying the Windows Registry. Specifically, it monitors for the addition of a "Debugger" value to the "Hangs" registry key, located at `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\Hangs\Debugger`. This is a technique that can be exploited by malware to execute arbitrary code each time an application crashes, providing an opportunity for the attacker to regain control over the host without direct interaction from the user. The rule leverages Windows Registry modification logs, which are critical data sources in detecting such persistent threats. 
  The associated MITRE ATT&CK Tactic is **Persistence** (TA0002), and the relevant technique is **Registry Run Keys / Startup Folder** (T1547.001). By observing alterations to the registry, security teams can quickly ascertain potential malicious activity indicative of a compromised system.
  ### Investigation Steps
  - **Review the Registry Log:** Utilize Windows Event Logs to examine the creation of the "Debugger" value at the specified registry path. Confirm whether the change is legitimate or indicative of a compromise.
  - **Check Process Execution History:** Investigate recently executed processes in EDR to determine if any unfamiliar or suspicious processes were initiated around the time the registry change was detected.
  - **Analyze Parent Processes:** Monitor the parent-child relationship of processes associated with the registry modification. Use Sysmon logs to understand the context of how the potential malicious process was launched.
  - **Verify Associated Network Activity:** Examine network connections using NDR tools to detect any outbound communications from suspicious processes that may correlate with the registry modification.
  ### Prioritization
  Given the potential for persistent malicious presence on the system, this alert is considered to have a high severity level. The addition of a debugger entry in the registry can facilitate undetected malware execution, necessitating immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the registry logging is not enabled or properly configured on the target systems, making it crucial to ensure registry auditing is active. Additionally, legitimate administrative actions may also set the "Debugger" value, leading to potential false positives. Attackers might employ tactics such as registry tampering to remove their traces or use stealthy methods to modify registry settings without triggering alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
