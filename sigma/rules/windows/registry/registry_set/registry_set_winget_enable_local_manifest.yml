title: Enable Local Manifest Installation With Winget
id: fa277e82-9b78-42dd-b05c-05555c7b6015
status: test
description: Detects changes to the AppInstaller (winget) policy. Specifically the
  activation of the local manifest installation, which allows a user to install new
  packages via custom manifests.
references:
- https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-04-17
modified: 2023-08-17
tags:
- attack.defense-evasion
- attack.persistence
logsource:
  product: windows
  category: registry_set
detection:
  selection:
    TargetObject|endswith: '\AppInstaller\EnableLocalManifestFiles'
    Details: 'DWORD (0x00000001)'
  condition: selection
falsepositives:
- Administrators or developers might enable this for testing purposes or to install
  custom private packages
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect changes in the Windows registry that signify the activation of local manifest installations using the AppInstaller (winget) tool. The rule specifically looks for a registry setting at the path `\AppInstaller\EnableLocalManifestFiles` that has been set to `DWORD (0x00000001)`. Enabling local manifest installation allows users to install software packages via custom manifests, which could pose security risks if maligned users use this feature to bypass standard controls. The primary data source for this detection is Windows registry logs, enabling security teams to monitor modifications that could indicate potentially unauthorized activities linked to Kerberos impersonation and privilege escalation, aligning with the MITRE ATT&CK techniques for defense evasion (T1203) and persistence (T1547).
  ### Investigation Steps
  - **Review Registry Changes:** Check the Windows registry settings for the `EnableLocalManifestFiles` value to confirm if it has been set to `1`. This can be accomplished through registry queries or by reviewing Sysmon logs.
  - **Analyze User Activity:** Utilize EDR solutions to investigate the user account that initiated the registry change, focusing on their recent activity and permissions.
  - **Check for Recent Installations:** Query application logs and Sysmon to see if there were any installations performed using local manifests. This may help understand if the change was used for legitimate purposes or if it was a precursor to malicious activity.
  - **Validate with Other Logs:** Cross-reference changes with security event logs (e.g., Windows Security and event logs) to determine if any unusual access patterns or administrator actions were occurring around the same time.
  ### Prioritization
  This alert is considered medium severity in a corporate environment because while the action may be legitimate in certain scenarios (e.g., developers testing), it could also be a sign of an attempt to misuse elevated privileges or bypass protective software installations.
  ### Blind Spots and Assumptions
  This rule may not fire if the registry change is made through non-standard methods that do not generate the expected logs or if the logging preferences are not properly configured on the monitored systems. Additionally, legitimate administrative actions could lead to false positives, as developers might enable this feature for testing purposes. It is crucial to consider the context of the changes and potential shortcuts adversaries may utilize to evade detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
