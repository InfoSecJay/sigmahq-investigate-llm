title: Office Macros Warning Disabled
id: 91239011-fe3c-4b54-9f24-15c86bb65913
related:
- id: a166f74e-bf44-409d-b9ba-ea4b2dd8b3cd
  type: obsolete
status: test
description: Detects registry changes to Microsoft Office "VBAWarning" to a value
  of "1" which enables the execution of all macros, whether signed or unsigned.
references:
- https://twitter.com/inversecos/status/1494174785621819397
- https://www.mcafee.com/blogs/other-blogs/mcafee-labs/zloader-with-a-new-infection-technique/
- https://securelist.com/scarcruft-surveilling-north-korean-defectors-and-human-rights-activists/105074/
author: Trent Liffick (@tliffick), Nasreddine Bencherchali (Nextron Systems)
date: 2020-05-22
modified: 2024-03-19
tags:
- attack.defense-evasion
- attack.t1112
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|endswith: '\Security\VBAWarnings'
    Details: 'DWORD (0x00000001)'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  The "Office Macros Warning Disabled" detection rule is designed to identify when the Windows Registry setting for Microsoft Office's VBA macro warning is altered to permit the execution of all macros, both signed and unsigned. This change is made by setting the corresponding registry key `\Security\VBAWarnings` to a value of `1`, which indicates that no warnings will be shown. Such modifications can facilitate the execution of potentially malicious macros used in phishing attacks or other avenues of malware distribution. The primary data source used for this rule is the Windows Registry logs, specifically monitoring changes to registry keys. This rule is associated with the MITRE ATT&CK tactic of "Defense Evasion" and the technique T1112, which covers modifications to security settings that can allow adversaries to bypass security controls.
  ### Investigation Steps
  - **Review Registry Changes:** Use registry monitoring tools or Windows Event Logs to confirm the modification to the `\Security\VBAWarnings` key. Verify who initiated the change and from which machine.
  - **Check Recent Office Documents:** Investigate recent Office documents accessed on the system, especially those that contain macros, to assess if any potentially malicious macros were executed prior to the registry change.
  - **Correlate with User Activity Logs:** Utilize endpoint detection and response (EDR) tools to review user activities leading up to the registry modification. Look for unusual or unauthorized access patterns that might indicate malicious actions.
  - **Analyze Network Traffic:** Inspect network connection logs for any outbound traffic from the affected systems indicating communication with command and control (C2) servers or malicious entities post-registry change.
  ### Prioritization
  The alert is marked as high severity due to the potential for significant risk, as the modification of the macro settings opens the door for malicious code execution without user consent, possibly leading to data loss or compromise.
  ### Blind Spots and Assumptions
  This rule assumes that sufficient monitoring is in place to capture registry changes effectively; however, it may not detect changes made in a stealthy manner via techniques that circumvent standard logging. Additionally, if the adversary manipulates the registry via methods that do not trigger standard logs, such as using PowerShell or other scripting languages to alter settings without creating noticeable events, this rule may fail to fire.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
