title: Potential Persistence Via Shim Database In Uncommon Location
id: 6b6976a3-b0e6-4723-ac24-ae38a737af41
status: test
description: Detects the installation of a new shim database where the file is located
  in a non-default location
references:
- https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html
- https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/
- https://www.blackhat.com/docs/asia-14/materials/Erickson/Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-08-01
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1546.011
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains|all:
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB\'
    - '\DatabasePath'
  filter_main_known_locations:
    Details|contains: ':\Windows\AppPatch\Custom'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule aims to detect potentially malicious persistence mechanisms through the creation of shim databases in non-default locations on Windows. Shim databases enable applications to run in environments where they might typically encounter compatibility issues. Attackers can exploit this feature to maintain persistence on a system by installing a shim database in a custom path rather than in the standard directories (e.g., `C:\Windows\AppPatch\Custom`), thus obscuring their activities. The rule specifically monitors registry changes to the path `\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB\`, looking for entries that may indicate such installations. This detection relates to the MITRE ATT&CK tactic of [Persistence](https://attack.mitre.org/tactics/TA0003) and the technique [T1546.011](https://attack.mitre.org/techniques/T1546/011/), which addresses application shimming.
  ### Investigation Steps
  - **Check EDR Alerts:** Investigate endpoint detection alerts for any associated malicious activities around the time the shim database was created, focusing on processes that may have initiated the registry change. Look for unusual process behavior or known indicators of compromise (IoCs).
  - **Analyze Registry Changes:** Utilize Windows Registry monitoring tools to explore changes made to the specified registry paths, noting the context and origin of the modification. Take a closer look at any recently modified keys to assess their legitimacy. 
  - **Monitor for Suspicious Processes:** Review recent process creation logs using Sysmon or EDR to identify any suspicious processes that may correspond with the newly created shim databases. Investigate the parent-child process relationships for any signs of process injection or other malicious activity.
  - **Correlate with Network Activity:** Utilize the Network Detection and Response (NDR) tools to assess outgoing network traffic from the affected host. Check for unusual connections to external IPs that may coincide with the registry modification, indicating potential data exfiltration or command-and-control communications.
  ### Prioritization
  The alert is considered high severity due to the potential for attackers to establish persistence on a system, making it crucial for timely investigation and remediation to prevent further exploitation. The implications of undetected persistence mechanisms can lead to significant security breaches within the enterprise.
  ### Blind spots and Assumptions
  This rule may not fire if attackers utilize recognized shim installation paths in their activities or if the registry monitoring is misconfigured. There could also be legitimate administrative actions that cause modifications to the registry that fall outside the detection criteria. Additionally, if the system is using custom application shimming services that do not match the rule's detection logic, valid activity may be misclassified as malicious, or conversely, malicious actions may go undetected if they adhere to conventional practices.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
