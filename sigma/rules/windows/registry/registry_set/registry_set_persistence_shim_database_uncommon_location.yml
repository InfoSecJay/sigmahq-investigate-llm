title: Potential Persistence Via Shim Database In Uncommon Location
id: 6b6976a3-b0e6-4723-ac24-ae38a737af41
status: test
description: Detects the installation of a new shim database where the file is located
  in a non-default location
references:
- https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html
- https://andreafortuna.org/2018/11/12/process-injection-and-persistence-using-application-shimming/
- https://www.blackhat.com/docs/asia-14/materials/Erickson/Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-08-01
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1546.011
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains|all:
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB\'
    - '\DatabasePath'
  filter_main_known_locations:
    Details|contains: ':\Windows\AppPatch\Custom'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect suspicious activity associated with the installation of a shim database file in unconventional file paths within Windows operating systems. The rule focuses on registry modifications where a new entry in the Windows registry under `\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\InstalledSDB\` is created. It specifically looks for entries that reference a `DatabasePath`, while ensuring that these entries do not reside in commonly known locations like `C:\Windows\AppPatch\Custom`. This is crucial since threat actors may leverage shim databases for persistence, allowing malicious code to run with elevated privileges when legitimate applications are executed. By monitoring these changes in the registry, this rule enables early detection of potential persistence mechanisms employed by attackers.
  ### Investigation Steps
  - Utilize EDR tools to query for recent modifications within the registry paths specified in the rule. Look for any anomalous entries that do not conform to expected patterns.
  - Analyze process creation logs to identify any new processes spawning from applications that could leverage the shim database, noting command-line parameters for suspicious activity.
  - Check the endpoint's AV logs for any detection events related to known malicious files or behaviors that coincide with the timeline of the registry changes.
  - Review proxy logs for external communications initiated by the processes that may indicate command and control activity associated with the detected persistence method.
