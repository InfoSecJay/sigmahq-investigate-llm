title: Persistence Via Disk Cleanup Handler - Autorun
id: d4e2745c-f0c6-4bde-a3ab-b553b3f693cc
status: test
description: |
  Detects when an attacker modifies values of the Disk Cleanup Handler in the registry to achieve persistence via autorun.
  The disk cleanup manager is part of the operating system.
  It displays the dialog box […] The user has the option of enabling or disabling individual handlers by selecting or clearing their check box in the disk cleanup manager's UI.
  Although Windows comes with a number of disk cleanup handlers, they aren't designed to handle files produced by other applications.
  Instead, the disk cleanup manager is designed to be flexible and extensible by enabling any developer to implement and register their own disk cleanup handler.
  Any developer can extend the available disk cleanup services by implementing and registering a disk cleanup handler.
references:
- https://persistence-info.github.io/Data/diskcleanuphandler.html
- https://www.hexacorn.com/blog/2018/09/02/beyond-good-ol-run-key-part-86/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-08-17
tags:
- attack.persistence
logsource:
  category: registry_set
  product: windows
detection:
  root:
    TargetObject|contains: '\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\'
  selection_autorun:
        # Launching PreCleanupString / CleanupString programs w/o gui, i.e. while using e.g. /autoclean
    TargetObject|contains: '\Autorun'
    Details: 'DWORD (0x00000001)'
  selection_pre_after:
    TargetObject|contains:
    - '\CleanupString'
    - '\PreCleanupString'
    Details|contains:
            # Add more as you see fit
    - 'cmd'
    - 'powershell'
    - 'rundll32'
    - 'mshta'
    - 'cscript'
    - 'wscript'
    - 'wsl'
    - '\Users\Public\'
    - '\Windows\TEMP\'
    - '\Microsoft\Windows\Start Menu\Programs\Startup\'
  condition: root and 1 of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify unauthorized modifications made to the Windows registry that relate to the Disk Cleanup Handler, particularly focusing on persistence mechanisms via autorun. The rule looks for changes within the registry path: `\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\`. It targets specific DWORD values related to autorun functionality—indicating the presence of potential malicious entries that could allow an attacker to execute commands automatically through the Disk Cleanup Manager interface. The rule's aim is to catch abnormal alterations that hackers might make to maintain persistence on compromised machines. This detection aligns with the MITRE ATT&CK tactic of persistence (specifically the technique: "Registry Run Keys / Startup Folder").
  ### Investigation Steps
  - **Verify Registry Changes:** Use a Windows registry monitoring tool to confirm changes to `\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\VolumeCaches\` and check for entries related to autorun that match those flagged by the detection rule.
  - **Review Process Execution Logs:** Investigate process creation logs with EDR to identify any associated processes that may have been invoked around the time of the registry modification, particularly those using command strings like `cmd`, `powershell`, or `rundll32`.
  - **Analyze User Activity:** Check user account activity logs to determine if there were any unauthorized actions taken by users, especially concerning Disk Cleanup or registry editing tools that could lead to potential exploitation.
  - **Correlate with Network Logs:** Examine any network activity associated with the identified processes to look for unusual connections or data exfiltration attempts that may suggest an ongoing malicious campaign.
  ### Prioritization
  Alerts from this rule should be treated with medium priority as modifications to the Disk Cleanup Handler registry settings are generally not standard user behavior and can signify an effort to establish long-term persistence by an attacker.
  ### Blind Spots and Assumptions
  This rule may not fire if the attacker uses legitimate administrative privileges or tools without triggering the specific log events in the targeted registry paths. Additionally, if the logs are filtered or if the registry modifications occur in a very short time frame, they may go unnoticed. It is assumed that sufficient logging and monitoring mechanisms are in place; however, if logs are not retained correctly or if an attacker is adept at evading detection, this rule might fail to capture critical persistence attempts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
