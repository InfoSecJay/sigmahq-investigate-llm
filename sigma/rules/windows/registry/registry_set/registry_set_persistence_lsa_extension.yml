title: Potential Persistence Via LSA Extensions
id: 41f6531d-af6e-4c6e-918f-b946f2b85a36
status: test
description: |
  Detects when an attacker modifies the "REG_MULTI_SZ" value named "Extensions" to include a custom DLL to achieve persistence via lsass.
  The "Extensions" list contains filenames of DLLs being automatically loaded by lsass.exe. Each DLL has its InitializeLsaExtension() method called after loading.
references:
- https://persistence-info.github.io/Data/lsaaextension.html
- https://twitter.com/0gtweet/status/1476286368385019906
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-08-17
tags:
- attack.persistence
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\SYSTEM\CurrentControlSet\Control\LsaExtensionConfig\LsaSrv\Extensions'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential persistence mechanisms used by attackers via LSA (Local Security Authority) extensions. Specifically, it monitors modification attempts of the "REG_MULTI_SZ" value named "Extensions" within the Windows registry at the path `\SYSTEM\CurrentControlSet\Control\LsaExtensionConfig\LsaSrv\Extensions`. This registry key is critical because it lists the DLLs to be automatically loaded by `lsass.exe`, and if modified to include malicious DLLs, could allow an attacker to achieve persistence on the system. The rule leverages Windows registry change logs to detect any unexpected alterations to this key, thereby signaling potential unauthorized activity. The technique is associated with the MITRE ATT&CK tactic "Persistence" and the technique "LSASS Extensions" (T1548).
  ### Investigation Steps
  - **Review Registry Activity:** Check the Windows Registry logs for changes to the `Extensions` key, noting any timestamps, user accounts, or processes that initiated the modification.
  - **Analyze Process Behavior:** Use EDR tools to examine the behavior of `lsass.exe`, focusing on its loaded modules. Look for any unexpected DLLs that may correspond with the recent registry modifications.
  - **Examine System Logs:** Investigate related Windows Security and System event logs around the time of the modification. Correlate user logins, process creations, and any security alerts that occurred.
  - **Conduct a File Integrity Check:** Leverage file integrity monitoring solutions to determine if any DLLs included in the `Extensions` registry key were altered, newly created, or suspicious.
  ### Prioritization
  The severity level is set to high because unauthorized modifications to the LSA's extensions can lead to persistent unauthorized access and control over sensitive system operations, posing significant security risks within an enterprise environment.
  ### Blind Spots and Assumptions
  This rule assumes that the registry is configured correctly and that modifications can be logged. Blind spots may include scenarios where legitimate software updates alter this key without proper logging or where an attacker deletes their traces in advanced settings. Additionally, if an insider threat or an authenticated user makes this modification, it might not trigger the alert. The detection may also fail if the adversary uses anti-forensic techniques to hide their tracks, such as modifying registry change logging.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
