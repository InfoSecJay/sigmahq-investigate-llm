title: Disable Macro Runtime Scan Scope
id: ab871450-37dc-4a3a-997f-6662aa8ae0f1
description: Detects tampering with the MacroRuntimeScanScope registry key to disable
  runtime scanning of enabled macros
status: test
date: 2022-10-25
modified: 2023-08-17
author: Nasreddine Bencherchali (Nextron Systems)
references:
- https://www.microsoft.com/en-us/security/blog/2018/09/12/office-vba-amsi-parting-the-veil-on-malicious-macros/
- https://admx.help/?Category=Office2016&Policy=office16.Office.Microsoft.Policies.Windows::L_MacroRuntimeScanScope
- https://github.com/S3cur3Th1sSh1t/OffensiveVBA/blob/28cc6a2802d8176195ac19b3c8e9a749009a82a3/src/AMSIbypasses.vba
tags:
- attack.defense-evasion
logsource:
  product: windows
  category: registry_set
detection:
  selection:
    TargetObject|contains|all:
    - '\SOFTWARE\'
    - '\Microsoft\Office\'
    - '\Common\Security'
    TargetObject|endswith: '\MacroRuntimeScanScope'
    Details: DWORD (0x00000000)
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Disable Macro Runtime Scan Scope" Sigma rule is designed to detect modifications to the Windows Registry that disable real-time scanning of enabled macros in Microsoft Office applications. Specifically, the rule monitors changes to the `MacroRuntimeScanScope` registry key, which, if set to `DWORD (0x00000000)`, disables the Office Application's malicious macro scanning features. This is critical for enterprise environments, as macro viruses remain a common vector for cyberattacks. The detection leverages various Windows telemetry sources, particularly focusing on registry modifications, to ascertain if an unauthorized change has occurred. This aligns with the MITRE ATT&CK tactic of "Defense Evasion" and its technique of registry modification to bypass security measures.
  ### Investigation Steps
  - **Review Recent Registry Changes:** Examine the Windows Registry logs to identify any recent modifications to the `MacroRuntimeScanScope` key and correlate the timing with user activity.
  - **Analyze Related Processes:** Utilize EDR tools to investigate any associated processes that interacted with Microsoft Office applications around the time of the registry change to identify potentially malicious behavior.
  - **Check User Activity Logs:** Look into Windows Event Logs covering user activity during the time frame of the change, focusing on suspicious login events or execution of Office documents.
  - **Identify Threat Indicators:** Deploy AV and other threat intelligence tools to search for indicators of compromise (IoCs) related to macro-based attacks in the specified time window.
  ### Prioritization
  This alert is prioritized as high severity because disabling runtime macro scanning significantly increases the risk of a successful macro-based attack, which can lead to malware infections, data breaches, and system compromise in an enterprise environment. Immediate investigation is essential.
  ### Blind Spots and Assumptions
  This rule may not fire if an adversary utilizes techniques to stealthily manipulate the registry without detection, such as fileless malware or by exploiting legitimate administrative tools with high privileges. Additionally, it assumes that all relevant security controls and logging mechanisms are properly configured to capture registry changes, which may not always be the case, depending on the organization's baseline defense posture.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
