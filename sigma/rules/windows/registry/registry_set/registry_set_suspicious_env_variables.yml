title: Suspicious Environment Variable Has Been Registered
id: 966315ef-c5e1-4767-ba25-fce9c8de3660
status: test
description: Detects the creation of user-specific or system-wide environment variables
  via the registry. Which contains suspicious commands and strings
references:
- https://infosec.exchange/@sbousseaden/109542254124022664
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-12-20
modified: 2023-08-17
tags:
- attack.defense-evasion
- attack.persistence
logsource:
  product: windows
  category: registry_set
detection:
  selection_main:
    TargetObject|contains: '\Environment\'
  selection_details:
  - Details:
    - 'powershell'
    - 'pwsh'
  - Details|contains:
              # Add more suspicious strings in env variables below
    - '\AppData\Local\Temp\'
    - 'C:\Users\Public\'
              # Base64 MZ Header
    - 'TVqQAAMAAAAEAAAA'           # MZ..........
    - 'TVpQAAIAAAAEAA8A'
    - 'TVqAAAEAAAAEABAA'
    - 'TVoAAAAAAAAAAAAA'
    - 'TVpTAQEAAAAEAAAA'
              # Base64 Invoke- (UTF-8)
    - 'SW52b2tlL'
    - 'ludm9rZS'
    - 'JbnZva2Ut'
              # Base64 Invoke- (UTF-16LE)
    - 'SQBuAHYAbwBrAGUALQ'
    - 'kAbgB2AG8AawBlAC0A'
    - 'JAG4AdgBvAGsAZQAtA'
  - Details|startswith:        # https://gist.github.com/Neo23x0/6af876ee72b51676c82a2db8d2cd3639
    - 'SUVY'
    - 'SQBFAF'
    - 'SQBuAH'
    - 'cwBhA'
    - 'aWV4'
    - 'aQBlA'
    - 'R2V0'
    - 'dmFy'
    - 'dgBhA'
    - 'dXNpbm'
    - 'H4sIA'
    - 'Y21k'
    - 'cABhAH'
    - 'Qzpc'
    - 'Yzpc'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious environment variables that are registered on a Windows system via the registry. Specifically, it looks for environment variables either set for the user or system-wide that contain unusual commands or strings often associated with potential malicious activities, such as PowerShell commands or file paths that can indicate pivoting or exploitation attempts. The rule monitors Windows registry events, focusing particularly on entries in the `\Environment\` path. 
  These irregularities are captured using Windows Security logs that track changes in the registry. Additional indicators include the presence of Base64 encoded values and well-known command patterns that could suggest an attempt to persist or evade detection, aligning with the MITRE ATT&CK techniques for defense evasion (T1218) and persistence (T1547). The documented behavior aims to identify paths that adversaries might misuse to maintain access or execute malicious scripts surreptitiously.
  ### Investigation Steps
  - **Review Environment Variables:** Check the created environment variables in the registry, focusing on any that are added recently, particularly those containing suspicious strings such as ‘powershell’ or ‘AppData\Local\Temp’.
  - **Analyze Registry Changes:** Utilize Sysmon logs or Windows Security event logs to trace registry modification events that correlate with the identified suspicious environment variables to establish a context for these changes.
  - **Identify Associated Processes:** Cross-reference the event with process creation logs (Sysmon process creation) to determine if any processes were executed concurrently with the registry changes which might indicate malicious intent.
  - **Inspect Network Activity:** Review network connections (via EDR or NDR systems) that may tie back to processes launched as a result of the suspicious environment variables, noting any unusual outbound connections.
  ### Prioritization
  Given the high severity level assigned to this alert, the automatic registration of suspicious environment variables can indicate an active threat aiming to establish persistence or evade security measures, which could lead to significant security breaches if left unchecked.
  ### Blind Spots and Assumptions
  This rule may not capture cases where environment variables are created using non-standard methods or bypass techniques that do not involve the registry. Adversaries might also create temporary or ephemeral variable settings that could evade detection. Furthermore, benign applications that rely on similar strings may trigger false positives, hence context should be carefully evaluated. Analysts should be aware that malicious actors often attempt to obscure their activity by using legitimate avenues or by maintaining minimal registry changes to avoid detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
