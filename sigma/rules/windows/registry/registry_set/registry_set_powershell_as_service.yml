title: PowerShell as a Service in Registry
id: 4a5f5a5e-ac01-474b-9b4e-d61298c9df1d
status: test
description: Detects that a powershell code is written to the registry as a service.
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse
author: oscd.community, Natalia Shornikova
date: 2020-10-06
modified: 2023-08-17
tags:
- attack.execution
- attack.t1569.002
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\Services\'
    TargetObject|endswith: '\ImagePath'
    Details|contains:
    - 'powershell'
    - 'pwsh'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying suspicious use of PowerShell by monitoring registry modifications that indicate unauthorized persistence mechanisms. Specifically, it looks for key changes where PowerShell-related code is written to registry paths associated with Windows services. The rule targets alterations within the `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\` registry path, particularly focusing on values ending in `ImagePath`, which specify the executable to run as a service. By examining these registry entries, the rule aims to flag potential malicious activities that utilize PowerShell to establish a backdoor or execute code with elevated privileges. Data sources for this detection include Windows registry set logs, providing insight into the commands being executed and their potential implications for system security.
  ### Investigation Steps
  1. Review the relevant registry change logs in the EDR to understand what modifications were made to the service entries, paying close attention to the specific `ImagePath` values that reference PowerShell.
  2. Utilize EDR tools to trace the execution history of the PowerShell processes to identify any parent-child relationships or unusual command-line arguments that could indicate malicious intent.
  3. Check the network activity logs from the NDR and web proxy to see if the identified PowerShell scripts made any external connections, which could suggest data exfiltration or command and control communications.
  4. Investigate related accounts and authentication logs in the SIEM for any anomalous login activities or permission escalations that coincide with the timestamps of the registry changes.
