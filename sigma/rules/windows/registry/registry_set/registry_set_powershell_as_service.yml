title: PowerShell as a Service in Registry
id: 4a5f5a5e-ac01-474b-9b4e-d61298c9df1d
status: test
description: Detects that a powershell code is written to the registry as a service.
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse
author: oscd.community, Natalia Shornikova
date: 2020-10-06
modified: 2023-08-17
tags:
- attack.execution
- attack.t1569.002
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\Services\'
    TargetObject|endswith: '\ImagePath'
    Details|contains:
    - 'powershell'
    - 'pwsh'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies instances where PowerShell scripts are written into the Windows Registry as a service. Specifically, it focuses on the creation or modification of registry keys under the `\Services\` path, particularly those with an `ImagePath` that includes references to PowerShell executables (like 'powershell.exe' or 'pwsh.exe'). Utilizing Windows Registry logging, this rule leverages the `registry_set` log source to monitor for suspicious registry changes indicative of adversarial behaviors like persistence mechanisms or service hijacking. The relevant MITRE ATT&CK tactic is **Execution** with the technique identified as [T1569.002](https://attack.mitre.org/techniques/T1569/002) which details "Service Execution."
  ### Investigation Steps
  - **Verify Registry Change**: Check the Windows Registry for the modified keys under `HKLM\SYSTEM\CurrentControlSet\Services\` to confirm if any services have been altered recently to run PowerShell commands.
    
  - **Correlate User Activity**: Utilize EDR logs to correlate any user activity around the time of the registry change; focus on the use of PowerShell to identify any commands executed that might relate to service manipulation.
  - **Review Related Events**: Inspect the associated Sysmon logs, particularly `process_creation` and `registry` events, to identify if any suspicious PowerShell processes were invoked leading up to the registry changes.
  - **Assess Service Behavior**: Investigate the affected service's behavior and status to determine if it appears abnormal, such as unexpected start types or failures, and ensure it isn't set to automatically restart or create additional network connections.
  ### Prioritization
  This alert is categorized as high severity because the unauthorized use of PowerShell to create or manipulate services can indicate a significant security threat, potentially allowing an attacker to maintain persistence or execute malicious commands within the environment.
  ### Blind Spots and Assumptions
  The detection may not fire in the presence of certain benign software configurations or updates that legitimately modify the registry; these could produce false positives that need careful review. Moreover, an adversary with sufficient privileges may craft their methods to evade detection, such as using obscure or legitimate PowerShell features, obfuscating commands, or using alternative execution methods that do not interact with the registry as expected. Analysts should consider the full context and history of the involved systems to identify genuine threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
