title: Potential Persistence Via CHM Helper DLL
id: 976dd1f2-a484-45ec-aa1d-0e87e882262b
status: test
description: Detects when an attacker modifies the registry key "HtmlHelp Author"
  to achieve persistence
references:
- https://persistence-info.github.io/Data/htmlhelpauthor.html
- https://www.hexacorn.com/blog/2018/04/22/beyond-good-ol-run-key-part-76/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-08-17
tags:
- attack.persistence
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains:
    - '\Software\Microsoft\HtmlHelp Author\Location'
    - '\Software\WOW6432Node\Microsoft\HtmlHelp Author\Location'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify potential persistence mechanisms implemented by adversaries through the manipulation of the Windows registry. Specifically, it focuses on modifications to the `HtmlHelp Author` registry key, located at `HKEY_CURRENT_USER\Software\Microsoft\HtmlHelp Author\Location` and its equivalent under the WOW6432Node. By modifying this key, an attacker can ensure that malicious code executes upon user interaction with HTML Help files, facilitating persistent access to the compromised system. The detection leverages logs from Windows registry modifications, enabling the detection of unauthorized changes that may signify an attempt to establish persistence. This aligns with the MITRE ATT&CK tactic of Persistence (T1547.001), providing a proactive avenue for identifying threats before they can lead to significant compromise.
  ### Investigation Steps
  - **Check Registry Modification Context:** Examine the Windows Security logs for account activity correlating with the time of the registry change to identify the user context and its legitimacy.
  - **Review EDR Alerts:** Investigate the Endpoint Detection and Response (EDR) alerts around the time of the registry modification to search for any additional anomalous activity or behaviors that might indicate compromise.
  - **Analyze Related Process Activity:** Use Process Creation logs to identify any processes spawned by the user or system accounts around the same timestamp as the registry modification; look for suspicious or unexpected processes.
  - **Correlate with Network Activity:** Utilize network logs to identify any unusual outbound connections or communications that may coincide with the identified registry change, especially from the user or device involved.
  ### Prioritization
  Given the high severity level of this alert, it indicates a significant risk of persistent compromise, which could allow an attacker continued access to the system for malicious activities. Rapid investigation is essential to mitigate any potential damage.
  ### Blind Spots and Assumptions
  This rule may not fire if an attacker uses stealthy methods that do not trigger traditional logging, such as setting registry keys via scripting that does not employ the standard interfaces, or if security logging is not enabled. Additionally, there is an assumption that the registry path remains unchanged and observable by logging mechanisms. Understanding these limitations should guide engineers in enhancing detection capabilities and circumventing potential evasion tactics employed by adversaries.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
