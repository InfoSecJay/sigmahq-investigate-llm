title: ETW Logging Disabled In .NET Processes - Sysmon Registry
id: bf4fc428-dcc3-4bbd-99fe-2422aeee2544
related:
- id: a4c90ea1-2634-4ca0-adbb-35eae169b6fc
  type: similar
status: test
description: Potential adversaries stopping ETW providers recording loaded .NET assemblies.
references:
- https://twitter.com/_xpn_/status/1268712093928378368
- https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr
- https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables
- https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38
- https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39
- https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_
- https://bunnyinside.com/?term=f71e8cb9c76a
- http://managed670.rssing.com/chan-5590147/all_p1.html
- https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code
- https://blog.xpnsec.com/hiding-your-dotnet-complus-etwenabled/
- https://i.blackhat.com/EU-21/Wednesday/EU-21-Teodorescu-Veni-No-Vidi-No-Vici-Attacks-On-ETW-Blind-EDRs.pdf
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-06-05
modified: 2023-08-17
tags:
- attack.defense-evasion
- attack.t1112
- attack.t1562
logsource:
  product: windows
  category: registry_set
detection:
  selection_etw_enabled:
    TargetObject|endswith: 'SOFTWARE\Microsoft\.NETFramework\ETWEnabled'
    Details: 'DWORD (0x00000000)'
  selection_complus:
    TargetObject|endswith:
    - '\COMPlus_ETWEnabled'
    - '\COMPlus_ETWFlags'
    Details:
    - 0         # For REG_SZ type
    - 'DWORD (0x00000000)'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule monitors for attempts by potential adversaries to disable Event Tracing for Windows (ETW) logging within .NET applications. ETW is a vital component for monitoring and logging application behavior, and disabling it can hinder incident response efforts by masking malicious activity within .NET processes. The rule specifically looks for changes to the Windows registry keys that control ETW logging, including `ETWEnabled`, `COMPlus_ETWEnabled`, and `COMPlus_ETWFlags`. When any of these keys are set to disable logging (represented by a value of `0`), it raises an alert. The key data sources leveraged include registry change logs, focusing on specific values being modified to ensure visibility into potentially malicious configurations. This correlates with the MITRE ATT&CK technique [T1112: Modify Registry](https://attack.mitre.org/techniques/T1112/) and the defense evasion tactic.
  ### Investigation Steps
  - **Review Registry Changes:** Utilize the Windows Security event logs to confirm registry changes related to the ETW settings, particularly looking for timestamped changes corresponding with the alert.
  - **Cross-reference Process Activity:** Examine EDR logs to identify any running processes within the time frame of the registry modification, particularly those that are .NET applications, to review their behavior.
  - **Check ETW Logging Status:** Utilize Sysinternals tools (such as `ProcMon`) to confirm the current status of ETW logging, and assess if it remains disabled for critical .NET applications.
  - **Analyze Process Creation Logs:** Look at Sysmon's process creation logs to evaluate if any unusual or unexpected .NET process commands were executed during or after the registry modifications.
  ### Prioritization
  This alert is categorized as high severity because disabling ETW logging in .NET processes can significantly impair the ability of SOC teams to detect and respond to malicious activities, creating an increased risk for the organization.
  ### Blind Spots and Assumptions
  One potential blind spot is the possibility that legitimate applications or admin-level processes could alter these registry settings without malicious intent, leading to false positives. Additionally, if an adversary uses sophisticated techniques to manipulate the registry without triggering this rule, such as employing files or scripts that do not interact directly with the observable keys, the alert may not fire. This rule assumes access to the typical registry paths and values, so any custom configurations or less common setups may not be detected.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
