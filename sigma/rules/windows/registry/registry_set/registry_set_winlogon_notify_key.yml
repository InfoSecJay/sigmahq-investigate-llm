title: Winlogon Notify Key Logon Persistence
id: bbf59793-6efb-4fa1-95ca-a7d288e52c88
status: test
description: |
  Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.
  Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.004/T1547.004.md#atomic-test-3---winlogon-notify-key-logon-persistence---powershell
author: frack113
date: 2021-12-30
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1547.004
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|endswith: '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify\logon'
    Details|endswith: '.dll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Winlogon Notify Key Logon Persistence" Sigma rule is designed to detect potential malicious activity associated with persistence mechanisms that utilize the Windows Winlogon component. This rule focuses on monitoring specific registry changes within the registry path `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify\`, particularly looking for entries that commit `.dll` files to be executed on user logon. When an attacker sets a registry key in this location, Winlogon will trigger execution of the specified DLL during the logon process, enabling them to maintain malicious scripts or backdoors in the environment post-infection.
  The rule is associated with the MITRE ATT&CK persistence technique T1547.004, which highlights the misuse of the Winlogon notify key as a means for adversaries to ensure their code runs whenever a user logs in, effectively allowing them to execute arbitrary code under the guise of a legitimate Windows process. Key data sources involved in this detection include Windows Security logs, focusing specifically on registry modifications, which can provide insights into unauthorized changes made to the system.
  ### Investigation Steps
  - **Verify Registry Modifications:** Check the relevant registry path `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\Notify\` for any suspicious entries, particularly those that reference unknown or unexpected DLL files.
  - **Assess File Integrity:** Utilize endpoint detection and response (EDR) tools to scan for the presence of the identified DLLs that triggered the alert. Investigate whether these files are legitimate or associated with known malware signatures.
  - **Review User Logon Activity:** Correlate the timing of the registry change with user logon activities captured in Windows Security logs. Analyze logon types, user accounts involved, and any patterns indicating unusual access.
  - **Inspect Related Processes:** Conduct a review using process monitoring tools for any processes spawned by Winlogon before or after the suspicious DLL execution. This can help identify lateral movement, privilege escalation, or further exploitation attempts.
  ### Prioritization
  Given the potential for persistence through the use of the Winlogon mechanism, alerts generated by this rule should be treated with high severity. Malicious persistence strategies can enable ongoing access and control for adversaries, representing a significant risk to overall enterprise security.
  ### Blind spots and Assumptions
  There are several considerations wherein this rule may not fire or could be evaded by adversaries. Malicious actors may use legitimate applications to perform registry changes without detection, or they may utilize code obfuscation techniques that mask the DLL file names. The detection relies heavily on registry monitoring, so if the registry is modified by non-standard means (such as through drivers or kernel-level code), or if the adversary removes the registry key after execution, then the rule may not trigger effectively. Additionally, the rule may produce false positives if legitimate applications are registered to execute at login, necessitating thorough contextual analysis by the investigation team.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
