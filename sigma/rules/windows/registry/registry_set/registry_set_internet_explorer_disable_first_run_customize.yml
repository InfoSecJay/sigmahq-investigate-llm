title: Internet Explorer DisableFirstRunCustomize Enabled
id: ab567429-1dfb-4674-b6d2-979fd2f9d125
status: test
description: |
  Detects changes to the Internet Explorer "DisableFirstRunCustomize" value, which prevents Internet Explorer from running the first run wizard the first time a user starts the browser after installing Internet Explorer or Windows.
references:
- https://www.ncsc.gov.uk/static-assets/documents/malware-analysis-reports/devil-bait/NCSC-MAR-Devil-Bait.pdf
- https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/
- https://admx.help/?Category=InternetExplorer&Policy=Microsoft.Policies.InternetExplorer::NoFirstRunCustomise
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-16
modified: 2023-08-17
tags:
- attack.defense-evasion
logsource:
  product: windows
  category: registry_set
detection:
  selection:
    TargetObject|endswith: '\Microsoft\Internet Explorer\Main\DisableFirstRunCustomize'
    Details:
    - 'DWORD (0x00000001)'         # Home Page
    - 'DWORD (0x00000002)'         # Welcome To IE
  filter_main_generic:
    Image:
    - 'C:\Windows\explorer.exe'
    - 'C:\Windows\System32\ie4uinit.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- As this is controlled by group policy as well as user settings. Some false positives
  may occur.
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect changes to the Windows Registry that affect Internet Explorer's "DisableFirstRunCustomize" setting. This setting determines whether Internet Explorer displays its first-run wizard upon initial launch after installation. The rule specifically targets modifications to the Registry key `HKEY_CURRENT_USER\Microsoft\Internet Explorer\Main\DisableFirstRunCustomize`, where a value of `0x00000001` means the wizard is disabled. This rule captures registry changes caused by either legitimate adjustments or potentially malicious behavior aimed at suppressing security prompts or wizards that could uncover malicious activity. The associated MITRE ATT&CK tactic is **Defense Evasion**, specifically the technique of altering system configurations to ensure an undisturbed environment for adversarial activities.
  The detection mechanism utilizes Windows Registry logging, providing visibility into Registry modifications that could signify an attempted evasion of security controls. Alerts triggered by this rule should be investigated using comprehensive enterprise logging solutions such as EDR and SIEM to identify if unauthorized changes correspond with other suspicious activities.
  ### Investigation Steps
  - **Review Registry Changes:** Use a tool like Windows Event Logs or EDR to assess recent modifications to the `DisableFirstRunCustomize` value. Look for timestamps and correlate them with any suspicious user activity.
  - **Check User Context:** Identify the user account that made the registry change. Investigate any unusual behavior associated with the user, such as concurrent logins from different locations or failed access attempts.
  - **Monitor Related Processes:** Analyze logs for the processes associated with the registry modification, particularly `explorer.exe` and `ie4uinit.exe`. Correlate process execution times with network activity or other potentially malicious behaviors.
  - **Evaluate Group Policy Settings:** Verify whether the changes were authorized or necessitated by group policy applications. Check if other users in the same domain have similar registry modifications that fall within normal operational parameters.
  ### Prioritization
  The alert is classified as medium severity because changes to critical browser settings may indicate attempts to bypass user prompts that enhance security awareness, potentially facilitating subsequent malicious actions.
  ### Blind Spots and Assumptions
  The rule may not fire if the modification occurs through methods that do not involve direct registry editing, such as through legitimate group policies or if the registry key has already been altered prior to monitoring. Additionally, if an adversary uses stealthy techniques to modify the registry during a session without logging the change, this could lead to missed detections. Analysts should be cognizant that benign software configurations or enterprise-level changes could trigger false positives and that careful contextual analysis is required to avoid misinterpretation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
