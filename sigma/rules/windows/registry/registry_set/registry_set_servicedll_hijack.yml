title: ServiceDll Hijack
id: 612e47e9-8a59-43a6-b404-f48683f45bd6
status: test
description: |
  Detects changes to the "ServiceDLL" value related to a service in the registry.
  This is often used as a method of persistence.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md#atomic-test-4---tinyturla-backdoor-service-w64time
- https://www.hexacorn.com/blog/2013/09/19/beyond-good-ol-run-key-part-4/
author: frack113
date: 2022-02-04
modified: 2024-04-03
tags:
- attack.persistence
- attack.privilege-escalation
- attack.t1543.003
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains|all:
    - '\System\'
    - 'ControlSet'
    - '\Services\'
    TargetObject|endswith: '\Parameters\ServiceDll'
  filter_main_printextensionmanger:
    Details: 'C:\Windows\system32\spool\drivers\x64\3\PrintConfig.dll'
  filter_main_domain_controller:
    Image: 'C:\Windows\system32\lsass.exe'
    TargetObject|endswith: '\Services\NTDS\Parameters\ServiceDll'
    Details: '%%systemroot%%\system32\ntdsa.dll'
  filter_main_poqexec:
    Image: 'C:\Windows\System32\poqexec.exe'
  filter_optional_safetica:
    Image|endswith: '\regsvr32.exe'
    Details: 'C:\Windows\System32\STAgent.dll'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Administrative scripts
- Installation of a service
level: medium
notes: |
  n
  ### Technical Context
  The "ServiceDll Hijack" detection rule identifies unauthorized modifications to the "ServiceDLL" registry key associated with Windows services. This key specifies which Dynamic Link Libraries (DLLs) should be loaded into the memory of the service when it starts. Attackers often exploit this persistence technique to maintain control over a compromised system by altering the "ServiceDLL" value to point to malicious DLLs. The rule evaluates changes in the registry paths under `\System\`, `ControlSet`, and `\Services\`, specifically targeting the `Parameters\ServiceDll` subkey. It utilizes Windows registry set data, essential for identifying potential privilege escalation and persistence tactics as outlined in MITRE ATT&CK technique T1543.003.
  ### Investigation Steps
  - **Review Registry Changes:** Investigate the relevant registry changes by examining the Windows registry logs, focusing on the `ServiceDll` entries under `\System\ControlSet\Services\<ServiceName>\Parameters`.
  - **Analyze EDR Alerts:** Use the EDR platform to check for alerts related to process creation or execution that may correlate with the timing of the registry changes, particularly looking for known malicious images or behaviors.
  - **Examine System and Application Logs:** Check Windows System and Application Event Logs around the time of the registry modification to identify any unusual service starts, especially any services that may reference the modified DLL.
  - **Check for Alternative Persistence Mechanisms:** Explore other persistence mechanisms on the system that may be linked to the modified services, such as unusual entries in startup folders or scheduled tasks that might indicate a comprehensive attack.
  ### Prioritization
  This alert is categorized with a medium severity level due to the potential for significant impact; modifications to the "ServiceDLL" can lead to persistent malicious code execution. Any such entry should be investigated promptly to rule out malicious intent.
  ### Blind Spots and Assumptions
  This rule may not fire if an adversary uses specific cloaking techniques to avoid detection, such as directly modifying the registry without invoking logging mechanisms. Additionally, legitimate administrative tasks and software installations that alter service configurations may generate false positives, highlighting the importance of contextual investigation. Assumptions include that standard logging is enabled for registry changes and that previous malicious activity has not already remediated the threat.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
