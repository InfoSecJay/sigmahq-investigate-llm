title: Potential Persistence Via Scrobj.dll COM Hijacking
id: fe20dda1-6f37-4379-bbe0-a98d400cae90
status: test
description: Detect use of scrobj.dll as this DLL looks for the ScriptletURL key to
  get the location of the script to execute
references:
- https://github.com/redcanaryco/atomic-red-team/blob/40b77d63808dd4f4eafb83949805636735a1fd15/atomics/T1546.015/T1546.015.md
author: frack113
date: 2022-08-20
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1546.015
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|endswith: 'InprocServer32\(Default)'
    Details: 'C:\WINDOWS\system32\scrobj.dll'
  condition: selection
falsepositives:
- Legitimate use of the dll.
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Persistence Via Scrobj.dll COM Hijacking" is designed to detect potentially malicious activity that leverages the Windows COM (Component Object Model) architecture for persistence through the manipulation of the `scrobj.dll` file. This specific DLL is associated with scripting functions in Windows and can be hijacked to execute arbitrary scripts defined in the registry key `ScriptletURL`. The rule scans for registry changes targeting the `InprocServer32` key that indicate `scrobj.dll` is being used as the handler for a COM object, which could signify an attempt to establish persistent access via arbitrary script execution. 
  The primary data sources for this detection come from the Windows Registry, specifically targeting modifications to the `InprocServer32` key for `scrobj.dll`. An alert generated by this rule indicates suspicious persistence techniques that align with the MITRE ATT&CK framework technique T1546.015, which focuses on leveraging COM Hijacking for malicious purposes.
  ### Investigation Steps
  - **Check Registry Changes:** Use a tool like Sysinternals or PowerShell to review recent changes to the registry, specifically examining entries related to `HKEY_CLASSES_ROOT\CLSID\<GUID>\InprocServer32` for suspicious or uncommon scripts associated with `scrobj.dll`.
    
  - **Audit Process Creation:** Investigate process creation logs in your EDR to determine if there are any processes spawned that invoke `scrobj.dll`, especially during the time of the registry change, which could indicate malicious activity.
  - **Evaluate Command-Line Parameters:** Inspect the command-line arguments for any processes that may have invoked a script using `scrobj.dll`, focusing on parameters that reference unusual or suspicious URLs.
  - **Review Network Connections:** Analyze network logs to check for any outbound connections made by processes that invoked `scrobj.dll`, especially connections to unfamiliar or suspect domains.
  ### Prioritization
  Alerts generated by this rule should be treated as medium severity due to the potential for enabling ongoing unauthorized access and persistence within the environment. Quick and thorough investigation is necessary to mitigate possible exploitation.
  ### Blind Spots and Assumptions
  This rule may not detect cases where adversaries utilize different DLLs or legitimate applications to achieve similar objectives, as it specifically targets `scrobj.dll`. Furthermore, if an organization has robust monitoring and security configurations that prevent writing to this specific registry key, the rule may not trigger. Analysts should also consider that legitimate software updates or user-initiated changes could generate false positives, requiring contextual investigation to differentiate between benign and malicious behavior.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
