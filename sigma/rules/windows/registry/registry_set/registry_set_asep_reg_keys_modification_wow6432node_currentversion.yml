title: Wow6432Node Windows NT CurrentVersion Autorun Keys Modification
id: 480421f9-417f-4d3b-9552-fd2728443ec8
related:
- id: 17f878b8-9968-4578-b814-c4217fc5768c
  type: obsolete
status: test
description: Detects modification of autostart extensibility point (ASEP) in registry.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1547.001/T1547.001.md
- https://learn.microsoft.com/en-us/sysinternals/downloads/autoruns
- https://gist.github.com/GlebSukhodolskiy/0fc5fa5f482903064b448890db1eaf9d     # a list with registry keys
author: Victor Sergeev, Daniil Yugoslavskiy, Gleb Sukhodolskiy, Timur Zinniatullin,
  oscd.community, Tim Shelton, frack113 (split)
date: 2019-10-25
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1547.001
logsource:
  category: registry_set
  product: windows
detection:
  wow_nt_current_version_base:
    TargetObject|contains: '\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion'
  wow_nt_current_version:
    TargetObject|contains:
    - '\Windows\Appinit_Dlls'
    - '\Image File Execution Options'
    - '\Drivers32'
  filter:
    Details:
    - '(Empty)'
    - '\REGISTRY\MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution
      Options'
  condition: wow_nt_current_version_base and wow_nt_current_version and not filter
fields:
- SecurityID
- ObjectName
- OldValueType
- NewValueType
falsepositives:
- Legitimate software automatically (mostly, during installation) sets up autorun
  keys for legitimate reason
- Legitimate administrator sets up autorun keys for legitimate reason
level: medium
notes: |
  ### Technical Context
  This Sigma detection rule focuses on identifying unauthorized modifications to the Windows Registry, specifically targeting the autorun extensibility point associated with the "Wow6432Node" path. The rule looks for changes made to critical registry keys under the path `\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion`, which can be leveraged by adversaries to maintain persistence on compromised systems, as outlined in the MITRE ATT&CK framework under the tactic of "Persistence" (T1547.001). The rule detects any modifications to specific keys, such as `AppInit_DLLs`, `Image File Execution Options`, and `Drivers32`, which are commonly used for malicious purposes, such as executing malicious scripts or loading unwarranted DLLs at system startup.
  To operate effectively, the rule relies on data sources from Windows registry logs that capture changes in registry values (`registry_set`). When executed, the detection mechanism assesses the presence of a specified registry path and checks for the legitimacy of the modification by comparing old and new value types. If suspicious modifications occur without an empty details entry, an alert is triggered, prompting an investigation into potential malicious activity.
  ### Investigation Steps
  - **Review Registry Changes:** Use Windows Security Logs to investigate the modifications to the specified autorun keys, checking timestamps and the associated Security IDs (SIDs) to identify the user or process responsible for the changes.
  - **Analyze Process Activity:** Deploy EDR to monitor processes running at the time of registry modification, looking out for unusual or unauthorized applications that may be linking to the newly modified keys.
  - **Check for Related Network Activity:** Utilize NDR data to identify any outbound network connections made by processes that correspond with the timing of registry modifications, indicating potential exfiltration or command-and-control activities.
  - **Correlate with Application Logs:** Leverage Application Logs, particularly from the Windows Event Viewer, to find relevant logs that illustrate the behavior of processes engaging with the modified registry keys, collecting insights into their legitimacy.
  ### Prioritization
  The severity of this alert is considered medium due to the potential for unauthorized persistence mechanisms being established by malware. While legitimate applications may modify these keys during installation, any deviations should be scrutinized for signs of compromise.
  ### Blind Spots and Assumptions
  This rule may not fire in cases where legitimate administrative tasks or software installations occur, as they can automatically modify autorun keys without raising alerts. Additionally, if an adversary clears logs, uses steganography, or makes modifications that evade typical detection techniques (e.g., quick changes made by malware that do not persist), the rule may fail to activate. It is also assumed that the necessary telemetry configurations capturing registry changes are adequately deployed across all endpoints.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
