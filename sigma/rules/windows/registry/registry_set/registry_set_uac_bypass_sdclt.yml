title: UAC Bypass via Sdclt
id: 5b872a46-3b90-45c1-8419-f675db8053aa
status: test
description: Detects the pattern of UAC Bypass using registry key manipulation of
  sdclt.exe (e.g. UACMe 53)
references:
- https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/
- https://github.com/hfiref0x/UACME
author: Omer Yampel, Christian Burkard (Nextron Systems)
date: 2017-03-17
modified: 2023-08-17
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
- car.2019-04-001
logsource:
  category: registry_set
  product: windows
detection:
  selection1:
    TargetObject|endswith: 'Software\Classes\exefile\shell\runas\command\isolatedCommand'
  selection2:
    TargetObject|endswith: 'Software\Classes\Folder\shell\open\command\SymbolicLinkValue'
    Details|re: '-1[0-9]{3}\\Software\\Classes\\'
  condition: 1 of selection*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect potential User Account Control (UAC) bypass techniques via manipulation of the Windows registry, specifically targeting the registry entries associated with `sdclt.exe`. UAC is a critical security feature in Windows that helps prevent unauthorized changes to the operating system by prompting for elevated permissions. Attackers may exploit vulnerabilities in UAC through registry modifications that allow them to execute commands with elevated privileges without triggering a UAC prompt.
  The rule identifies specific patterns of registry key changes, focused primarily on the `Software\Classes\exefile\shell\runas\command\isolatedCommand` and `Software\Classes\Folder\shell\open\command\SymbolicLinkValue` entries. By analyzing changes to these registry paths, the rule can detect potential UAC bypass attempts that fall under the MITRE ATT&CK technique T1548.002 (Abuse Elevation Control Mechanism: Bypass User Account Control).
  ### Investigation Steps
  - **Verify Registry Changes:** Check recent modifications to the registry keys identified in the rule using Windows Event Logs, particularly the Security and System logs, to confirm unauthorized changes.
  - **Analyze Process Creation:** Use EDR tools to investigate the command line arguments of any processes initiated in proximity to the registry changes to identify potential malicious activity.
  - **Examine Network Activities:** Review network connection logs through firewall or proxy data to assess whether any new outbound connections were established by suspicious processes correlating with the UAC bypass attempt.
  - **Cross-reference Alerts:** Verify any corresponding alerts from AV or EDR systems that indicate malware activity or suspicious behaviors linked with the identified registry changes.
  ### Prioritization
  Given the severity of potential privilege escalation through UAC bypass, alerts generated by this rule should be treated as high priority in an enterprise environment, as they can lead to significant security incidents if exploited.
  ### Blind Spots and Assumptions
  This detection rule may not fire if the attacker employs non-observable methods to bypass UAC that do not involve the specified registry keys or if changes occur outside of the monitoring period. Additionally, alerts might be missed if legitimate software updates or configurations affect the registry keys in question, leading to potential false positives. It is also assumed that proper logging configurations are enabled to capture relevant registry changes.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
