title: Potential Persistence Via Excel Add-in - Registry
id: 961e33d1-4f86-4fcf-80ab-930a708b2f82
status: test
description: Detect potential persistence via the creation of an excel add-in (XLL)
  file to make it run automatically when Excel is started.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/4ae9580a1a8772db87a1b6cdb0d03e5af231e966/atomics/T1137.006/T1137.006.md
- https://labs.withsecure.com/publications/add-in-opportunities-for-office-persistence
author: frack113
date: 2023-01-15
modified: 2023-08-17
tags:
- attack.persistence
- attack.t1137.006
logsource:
  product: windows
  category: registry_set
detection:
  selection:
    TargetObject|contains: 'Software\Microsoft\Office\'
    TargetObject|endswith: '\Excel\Options'
    Details|startswith: '/R '
    Details|endswith: '.xll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential persistence mechanisms facilitated by Microsoft Excel through the creation of add-ins (XLL files). When an XLL file is registered in the Windows registry under the path `Software\Microsoft\Office\<version>\Excel\Options`, Excel can be configured to load this file automatically upon startup, which may indicate malicious intent if done without proper authorization. The rule evaluates registry changes that contain specific criteria, such as references to Excelâ€™s options and details that suggest the addition of an Excel add-in through the command flag `/R` followed by the file name ending in `.xll`. By monitoring these registry entries, security teams can identify potential exploitation attempts that leverage Excel as a persistence mechanism.
  ### Investigation Steps
  - Review recent changes to the Windows registry, focusing on entries under `HKEY_CURRENT_USER\Software\Microsoft\Office\Excel\Options` to identify any unauthorized modifications related to XLL files.
  - Use EDR tools to investigate the execution history of Excel processes, specifically looking for instances that leveraged the detected XLL files, including any unusual command-line parameters.
  - Check the endpoint's security logs for alerts from the AV solution to determine if the detected file was flagged as malicious or exhibited any other suspicious behavior.
  - Analyze network traffic logs from proxies or firewalls to identify any connections made by the affected Excel processes that may lead to suspicious remote hosts after the XLL was loaded.
