title: Potential PendingFileRenameOperations Tampering
id: 4eec988f-7bf0-49f1-8675-1e6a510b3a2a
status: test
description: |
  Detect changes to the "PendingFileRenameOperations" registry key from uncommon or suspicious images locations to stage currently used files for rename or deletion after reboot.
references:
- https://any.run/report/3ecd4763ffc944fdc67a9027e459cd4f448b1a8d1b36147977afaf86bbf2a261/64b0ba45-e7ce-423b-9a1d-5b4ea59521e6
- https://devblogs.microsoft.com/scripting/determine-pending-reboot-statuspowershell-style-part-1/
- https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc960241(v=technet.10)?redirectedfrom=MSDN
- https://www.trendmicro.com/en_us/research/21/j/purplefox-adds-new-backdoor-that-uses-websockets.html
- https://www.trendmicro.com/en_us/research/19/i/purple-fox-fileless-malware-with-rookit-component-delivered-by-rig-exploit-kit-now-abuses-powershell.html
author: frack113
date: 2023-01-27
modified: 2024-07-03
tags:
- attack.defense-evasion
- attack.t1036.003
logsource:
  category: registry_set
  product: windows
detection:
  selection_main:
    EventType: 'SetValue'
    TargetObject|contains: '\CurrentControlSet\Control\Session Manager\PendingFileRenameOperations'
  selection_susp_paths:
    Image|contains:
    - '\AppData\Local\Temp\'
    - '\Users\Public\'
  selection_susp_images:
    Image|endswith:
    - '\reg.exe'
    - '\regedit.exe'
  condition: selection_main and 1 of selection_susp_*
falsepositives:
- Installers and updaters may set currently in use files for rename or deletion after
  a reboot.
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential PendingFileRenameOperations Tampering" aims to detect suspicious modifications to the Windows registry related to the "PendingFileRenameOperations" key. This key is primarily used by Windows to track files scheduled for renaming or deletion on the next system reboot. The rule specifically targets events where the registry value is modified by unusual applications or from uncommon directories, such as those found in the Temp folder or the Public users' folders. The potential misuse of this functionality is highlighted in various malware reports, where adversaries stage malicious files for renaming or deletion to evade detection. 
  The detection utilizes Windows Security logs, with a focus on registry modification events specifically tied to the "SetValue" type. It identifies changes originating from either common registry manipulation tools like `reg.exe` or `regedit.exe` or changes made from suspicious directories, thus aligning with the MITRE ATT&CK framework tactic of defense evasion (T1036.003).
  ### Investigation Steps
  - **Check Process Activity:** Use the EDR to investigate which processes were active during the time the registry modification occurred. Look for unusual parent-child process relationships or digital signatures of the executing binaries.
    
  - **Review Registry Changes:** Access Windows Registry logs or utilize tools to extract recent changes to the "PendingFileRenameOperations" key. Ensure to correlate these changes with other event logs for patterns.
    
  - **Analyze Source Directory:** Investigate the files in the directories identified in the suspicious paths (e.g., Temp or Public). Pay particular attention to executable files or scripts that should not be present or were recently modified.
    
  - **Correlate with Network Activity:** Review the Network Connection logs around the time of the event to identify any unexpected or outbound connections which might indicate malicious activity associated with the detected registry change.
  ### Prioritization
  The medium severity level assigned to this alert is warranted due to the potential for file-based malware evasion tactics. As attacker methodologies continue to evolve, immediate investigation is crucial given that such modifications could lead to successful persistence or further compromise.
  ### Blind spots and Assumptions
  This rule may not fire if registry changes are made by legitimate system processes or installers, which could lead to false negatives for malicious activities mimicking those behaviors. Additionally, the rule depends on the ability to collect and analyze registry modifications; if logs are not enabled or properly configured, detections could be missed. It assumes that adversaries will not use more sophisticated means to modify these registry keys without firing alarms, such as direct API calls that go unlogged.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
