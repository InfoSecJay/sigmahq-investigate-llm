title: Potential Persistence Via AppCompat RegisterAppRestart Layer
id: b86852fb-4c77-48f9-8519-eb1b2c308b59
status: test
description: |
  Detects the setting of the REGISTERAPPRESTART compatibility layer on an application.
  This compatibility layer allows an application to register for restart using the "RegisterApplicationRestart" API.
  This can be potentially abused as a persistence mechanism.
references:
- https://github.com/nasbench/Misc-Research/blob/d114d6a5e0a437d3818e492ef9864367152543e7/Other/Persistence-Via-RegisterAppRestart-Shim.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-01-01
tags:
- attack.persistence
- attack.t1546.011
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|contains: '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers\'
    Details|contains: 'REGISTERAPPRESTART'
  condition: selection
falsepositives:
- Legitimate applications making use of this feature for compatibility reasons
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect when the "REGISTERAPPRESTART" compatibility layer is set on a Windows application. The "RegisterApplicationRestart" API can be leveraged by malicious actors to achieve persistence, allowing an application to hijack a system's restart process to ensure it re-executes after a reboot or application failure. The rule monitors Windows registry changes in the AppCompatFlags layers path, specifically looking for entries that contain the term "REGISTERAPPRESTART." By focusing on the registry's modification logs, security teams can identify potential abuse of this feature for unauthorized persistence, distinguishing between legitimate and suspicious alterations.
  ### Investigation Steps
  - Utilize the EDR tool to investigate the registry modifications that triggered the alert, focusing specifically on the details surrounding the applications that were registered for restart.
  - Review process creation logs to track the execution history of the involved applications to determine if any unusual behavior or patterns emerge, such as unexpected or unauthorized executions.
  - Check past and current logs from antivirus (AV) solutions to see if there were any alerts or blocks related to the applications recognized in the alert, as these could provide context into potential malicious intent.
  - Analyze network traffic using the NDR to see if the flagged applications are making unusual outbound connections that could indicate a further compromise or coordination with other malicious activities.
