title: Potential WerFault ReflectDebugger Registry Value Abuse
id: 0cf2e1c6-8d10-4273-8059-738778f981ad
related:
- id: fabfb3a7-3ce1-4445-9c7c-3c27f1051cdd
  type: derived
status: test
description: Detects potential WerFault "ReflectDebugger" registry value abuse for
  persistence.
references:
- https://cocomelonc.github.io/malware/2022/11/02/malware-pers-18.html
- https://www.hexacorn.com/blog/2018/08/31/beyond-good-ol-run-key-part-85/
author: X__Junior
date: 2023-05-18
tags:
- attack.defense-evasion
- attack.t1036.003
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    EventType: 'SetValue'
    TargetObject|endswith: '\Microsoft\Windows\Windows Error Reporting\Hangs\ReflectDebugger'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Potential WerFault ReflectDebugger Registry Value Abuse" is designed to detect potential abuse of the ReflectDebugger registry value, which can be used for persistence by malicious actors. When an attacker modifies this registry key, typically located in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\Windows Error Reporting\Hangs`, it allows for arbitrary code execution when the Windows Error Reporting (WER) service attempts to invoke the debugger. The detection mechanism is focused on Windows registry modification events, specifically looking for instances where the registry value associated with ReflectDebugger is set to an unexpected or malicious value. This rule governs the MITRE ATT&CK tactics related to defense evasion, specifically under technique T1036.003, which focuses on credential dumping and similar persistence techniques.
  ### Investigation Steps
  - **Review Registry Changes:** Check the Windows Registry for recent changes around the ReflectDebugger key. Use tools like regedit or PowerShell to confirm the modification and assess the value set.
  - **Analyze Process Creation Logs:** Use EDR tools to examine process creation logs around the same time the registry change was detected. Look for any unusual processes that may be related to the modified behavior.
  - **Examine Error Reporting Logs:** Access the Windows Event logs related to Application and System categories for any unusual or abnormal entries related to error reporting. Focus on logs that correspond to the targeting of WER services.
  - **Threat Intelligence Check:** Verify if the detected activity correlates with known malicious behaviors or redirection techniques in your threat intelligence database. Correlate findings with historical case data or malware behavior reports.
  ### Prioritization
  The alert is assigned a high severity level due to the potential for persistent malicious code execution that can evade detection mechanisms. Any modification of the ReflectDebugger key is a strong indicator of an attempt to maintain control or exploit vulnerabilities.
  ### Blind Spots and Assumptions
  There are scenarios where this rule may not fire, including but not limited to environments where error reporting is disabled, or if the key has been modified through legitimate software or group policies. Additionally, if the attacker uses persistence mechanisms not involving the registry, this rule may not trigger. It is essential for detection engineers to understand that not all malicious activities will involve the registry or WER specifically, and hostile actors may deploy various techniques to bypass this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and integrity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
