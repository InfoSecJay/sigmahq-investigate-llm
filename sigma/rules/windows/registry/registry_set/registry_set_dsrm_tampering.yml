title: Directory Service Restore Mode(DSRM) Registry Value Tampering
id: b61e87c0-50db-4b2e-8986-6a2be94b33b0
related:
- id: 53ad8e36-f573-46bf-97e4-15ba5bf4bb51
  type: similar
status: experimental
description: |
  Detects changes to "DsrmAdminLogonBehavior" registry value.
  During a Domain Controller (DC) promotion, administrators create a Directory Services Restore Mode (DSRM) local administrator account with a password that rarely changes. The DSRM account is an “Administrator” account that logs in with the DSRM mode when the server is booting up to restore AD backups or recover the server from a failure.
  Attackers could abuse DSRM account to maintain their persistence and access to the organization's Active Directory.
  If the "DsrmAdminLogonBehavior" value is set to "0", the administrator account can only be used if the DC starts in DSRM.
  If the "DsrmAdminLogonBehavior" value is set to "1", the administrator account can only be used if the local AD DS service is stopped.
  If the "DsrmAdminLogonBehavior" value is set to "2", the administrator account can always be used.
references:
- https://adsecurity.org/?p=1785
- https://www.sentinelone.com/blog/detecting-dsrm-account-misconfigurations/
- https://book.hacktricks.xyz/windows-hardening/active-directory-methodology/dsrm-credentials
author: Nischal Khadgi
date: 2024-07-11
tags:
- attack.persistence
- attack.t1556
logsource:
  category: registry_set
  product: windows
detection:
  selection:
    TargetObject|endswith: '\Control\Lsa\DsrmAdminLogonBehavior'
  filter_main_default_value:
    Details: 'DWORD (0x00000000)'     # Default value
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context 
  The "Directory Service Restore Mode (DSRM) Registry Value Tampering" Sigma rule is designed to identify unauthorized modifications to the "DsrmAdminLogonBehavior" registry value within a Windows Domain Controller environment. This registry value controls the access permissions of the DSRM local administrator account, which is critical for maintaining the security and integrity of Active Directory during recovery processes. Changes to this value can significantly affect the security posture of a domain environment; for example, setting this value to "2" allows unrestricted access to the DSRM account, potentially enabling attackers to maintain persistence even after a breach. 
  The technical monitoring focuses on registry set events, particularly those that target the `\Control\Lsa\DsrmAdminLogonBehavior` path. By analyzing such registry modifications, this rule helps SOC analysts detect changes that could indicate malicious activity. The rule aligns with the MITRE ATT&CK Framework under the persistence tactic, specifically technique T1556 (Credentials From Password Manager).
  ### Investigation Steps
  - **Check Registry Value**: Use Windows Event Logs to confirm the current setting of the "DsrmAdminLogonBehavior" registry value and determine if any unusual changes have occurred.
  - **Correlate with User Activity**: Examine process creation logs and user account activity within the EDR to identify any unauthorized access attempts related to the DSRM account.
  - **Assess Security Logs**: Review Windows Security logs for any failed or successful login events associated with the DSRM account, especially around the time of the registry change.
  - **Conduct Network Analysis**: Utilize network logs from the NGFW and EDR to check for unusual outbound connections that may originate from the domain controller following the registry modification.
  ### Prioritization
  This alert is given a high severity level due to the potential risk it poses to Active Directory integrity and security. Unauthorized changes to the DSRM configuration can allow attackers to regain access and escalate privileges within the domain environment.
  ### Blind Spots and Assumptions
  One of the primary blind spots for this rule is the assumption that all registry modifications are appropriately logged in Windows Event Logs. If an attacker obtains administrative privileges, they might disable logging or use other techniques to obscure their activities, leading to potential missed detections. Moreover, environments with stringent administrative policies could have strict access controls, which might limit visibility or result in false negatives if changes are made by legitimate processes during maintenance operations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
