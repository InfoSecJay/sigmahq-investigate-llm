title: Sticky Key Like Backdoor Usage - Registry
id: baca5663-583c-45f9-b5dc-ea96a22ce542
status: test
description: Detects the usage and installation of a backdoor that uses an option
  to register a malicious debugger for built-in tools that are accessible in the login
  screen
references:
- https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/
- https://bazaar.abuse.ch/sample/6f3aa9362d72e806490a8abce245331030d1ab5ac77e400dd475748236a6cc81/
author: Florian Roth (Nextron Systems), @twjackomo, Jonhnathan Ribeiro, oscd.community
date: 2018-03-15
modified: 2022-11-26
tags:
- attack.privilege-escalation
- attack.persistence
- attack.t1546.008
- car.2014-11-003
- car.2014-11-008
logsource:
  category: registry_event
  product: windows
detection:
  selection_registry:
    TargetObject|endswith:
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\utilman.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\osk.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\Magnify.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\Narrator.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\DisplaySwitch.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\atbroker.exe\Debugger'
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\HelpPane.exe\Debugger'
  condition: selection_registry
falsepositives:
- Unlikely
level: critical
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify the usage and installation of a backdoor that registers a malicious debugger for several built-in Windows accessibility tools (e.g., Sticky Keys, Utility Manager). The malicious usage typically involves creating registry keys under `Image File Execution Options` for executables like `sethc.exe`, `utilman.exe`, and other accessibility tools. When these tools are invoked during the Windows logon screen, the debugger specified in the registry key is executed instead, allowing an adversary to maintain persistence and potentially elevate privileges. This behavior aligns with the MITRE ATT&CK tactics of privilege escalation (T1068) and persistence (T1546.008), indicating the presence of abnormal manipulations of system components.
  ### Investigation Steps
  - **Review Registry Events:** Use Windows Event Logs to query for registry changes related to the `Image File Execution Options` path specified in the rule. Look for newly created or altered debugger entries.
  - **Analyze Process Creation Logs:** Check process creation logs via Sysmon or another EDR tool for any instances of the aforementioned executables around the same timestamp as the registry changes. Correlate these processes with any unusual parent-child relationships.
  - **Inspect Network Activity:** Utilize NDR tools to identify any suspicious outbound connections made by the processes involved with the malicious debugger actions. This may indicate command-and-control activity.
  - **Determine User Context:** Review user logins during the time of the registry changes and any corresponding unusual account activity in the account logs. This may help attribute the behavior to a specific user or session.
  ### Prioritization
  The alert for potential sticky key-like backdoor usage is considered critical due to its ability to enable unauthorized access and persistence within the operating system, posing a significant risk to overall enterprise security. Immediate attention is required to prevent potential compromises.
  ### Blind Spots and Assumptions
  This rule may not fire if the adversary uses an alternate method to install backdoors or if the registry keys have already been present before the detection was implemented. Additionally, if admin-level privileges are utilized to modify the registry directly, those actions might evade detection. There is also an assumption that registry monitoring is adequately configured within the environment, as improperly configured logging may result in missed detection events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
