title: UAC Bypass Via Wsreset
id: 6ea3bf32-9680-422d-9f50-e90716b12a66
status: test
description: Unfixed method for UAC bypass from Windows 10. WSReset.exe file associated
  with the Windows Store. It will run a binary file contained in a low-privilege registry.
references:
- https://www.bleepingcomputer.com/news/security/trickbot-uses-a-new-windows-10-uac-bypass-to-launch-quietly
- https://lolbas-project.github.io/lolbas/Binaries/Wsreset
author: oscd.community, Dmitry Uchakin
date: 2020-10-07
modified: 2021-11-27
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: registry_event
  product: windows
detection:
  selection:
    TargetObject|endswith: '\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\Shell\open\command'
  condition: selection
fields:
- ComputerName
- Image
- EventType
- TargetObject
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule identifies a potential UAC (User Account Control) bypass technique utilized by malicious actors on Windows 10 systems through the use of `WSReset.exe`, which is associated with the Windows Store. The detection focuses on registry events where a command line that starts with the path to a low-privilege registry key, specifically targeting the `AppX` folder, is executed. The rule leverages Windows Security Event Log data, capturing registry events, which indicate potential privilege escalation attempts by adversaries attempting to bypass UAC protections. This method falls under the **MITRE ATT&CK** framework in the tactics of `Defense Evasion` and `Privilege Escalation`, specifically referencing technique `T1548.002`.
  ### Investigation Steps
  - **Verify the Event Source:** Check Windows Security logs for `Registry Event` entries that correspond with the specified `TargetObject` relating to `WSReset.exe` invocations to confirm the context of the alert.
  - **Analyze Process Activity:** Utilize EDR tools to investigate the execution context around `WSReset.exe`, looking for parent-child process relationships to identify any potentially malicious origins.
  - **Examine User Context:** Assess the user under which the `WSReset.exe` process was executed, reviewing its legitimacy, especially if the action occurred under a non-admin account.
  - **Review Related Logs:** Cross-reference authentication logs, application logs, and any network traffic involving the Windows Store to look for anomalies or correlating activities that support an attempted UAC bypass.
  ### Prioritization
  This alert is categorized as high severity due to the significant risk associated with UAC bypass techniques, potentially leading to unauthorized access and actions on systems, thereby posing a severe threat to enterprise security.
  ### Blind Spots and Assumptions
  The detection may not trigger if the registry key alterations and command invocations occur at a significantly fast rate, as the logging may not capture every event. Additionally, if an adversary employs methods to hide or obfuscate their usage of `WSReset.exe`, such as running scripts that clear or modify registry logs prior to the alert conditions being met, true malicious use may evade detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
