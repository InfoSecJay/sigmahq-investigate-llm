title: DLL Load via LSASS
id: b3503044-60ce-4bf4-bbcb-e3db98788823
status: test
description: Detects a method to load DLL via LSASS process using an undocumented
  Registry key
references:
- https://blog.xpnsec.com/exploring-mimikatz-part-1/
- https://twitter.com/SBousseaden/status/1183745981189427200
author: Florian Roth (Nextron Systems)
date: 2019-10-16
modified: 2022-04-21
tags:
- attack.execution
- attack.persistence
- attack.t1547.008
logsource:
  category: registry_event
  product: windows
detection:
  selection:
    TargetObject|contains:
    - '\CurrentControlSet\Services\NTDS\DirectoryServiceExtPt'
    - '\CurrentControlSet\Services\NTDS\LsaDbExtPt'
  filter_domain_controller:
    Image: 'C:\Windows\system32\lsass.exe'
    Details:
    - '%%systemroot%%\system32\ntdsa.dll'
    - '%%systemroot%%\system32\lsadb.dll'
  condition: selection and not 1 of filter_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "DLL Load via LSASS" detection rule identifies attempts to load dynamic link libraries (DLLs) into the Local Security Authority Subsystem Service (LSASS) process by leveraging specific undocumented registry keys associated with the NT Directory Service. LSASS is a critical component of Windows that is used for enforcing security policies, including handling authentication and managing user sessions. This rule focuses on monitoring registry events related to the loading of DLLs, particularly under paths like `\CurrentControlSet\Services\NTDS\DirectoryServiceExtPt` and `\CurrentControlSet\Services\NTDS\LsaDbExtPt`, while filtering to ensure that only incidents involving the LSASS executable (`lsass.exe`) are flagged. This is particularly relevant for detecting tactics used by attackers to maintain persistence or execute malicious code in a stealthy manner.
  ### Investigation Steps
  Review EDR logs for any process creation events linked to `lsass.exe` that coincide with the identified registry modifications.
  Examine associated command-line parameters and parent-child process relationships to understand the context of the DLL loading activity.
  Analyze network traffic via NDR or Proxy logs to ascertain whether any unusual communication emerged following the suspicious activity.
  Consult Windows event logs, particularly security logs, to identify any authentication or access attempts that align with the timeframe of the alert.
