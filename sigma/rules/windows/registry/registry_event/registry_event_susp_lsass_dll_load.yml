title: DLL Load via LSASS
id: b3503044-60ce-4bf4-bbcb-e3db98788823
status: test
description: Detects a method to load DLL via LSASS process using an undocumented
  Registry key
references:
- https://blog.xpnsec.com/exploring-mimikatz-part-1/
- https://twitter.com/SBousseaden/status/1183745981189427200
author: Florian Roth (Nextron Systems)
date: 2019-10-16
modified: 2022-04-21
tags:
- attack.execution
- attack.persistence
- attack.t1547.008
logsource:
  category: registry_event
  product: windows
detection:
  selection:
    TargetObject|contains:
    - '\CurrentControlSet\Services\NTDS\DirectoryServiceExtPt'
    - '\CurrentControlSet\Services\NTDS\LsaDbExtPt'
  filter_domain_controller:
    Image: 'C:\Windows\system32\lsass.exe'
    Details:
    - '%%systemroot%%\system32\ntdsa.dll'
    - '%%systemroot%%\system32\lsadb.dll'
  condition: selection and not 1 of filter_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies potentially malicious behavior involving the loading of Dynamic Link Libraries (DLLs) into the Local Security Authority Subsystem Service (LSASS) process. LSASS is a crucial Windows system process responsible for enforcing the system's security policy, and any unauthorized DLL loading can indicate an attempt to compromise sensitive credentials or escalate privileges. Specifically, the rule looks for the use of undocumented registry keys related to the NTDS (Active Directory Domain Services) that can manipulate the LSASS process. By monitoring registry events, this rule captures the potential use of DLLs like `ntdsa.dll` and `lsadb.dll` which are not normally associated with legitimate operations in LSASS. The rule relates to the MITRE ATT&CK technique T1547.008 (Steal Application Credentials), emphasizing the importance of detection in the context of credential theft and persistence tactics.
  ### Investigation Steps
  - **Check Process Activity:** Investigate the LSASS process using your EDR solution to identify any unusual or unauthorized process activity associated with the identified DLLs. Pay close attention to the parent processes and execution paths.
  - **Review Registry Changes:** Utilize Windows Event Logs to assess any recent changes made to the registry keys mentioned in the detection rule. Check for patterns indicating abnormal activity or modification by unauthorized users.
  - **Analyze Network Connections:** Inspect network logs from EDR or NDR solutions for anomalous outbound connections made by LSASS or associated processes, which could point to data exfiltration or communication with known bad actors.
  - **Confirm File Integrity:** Evaluate the integrity of the DLL files (`ntdsa.dll` and `lsadb.dll`) using your antivirus or endpoint protection tools to determine if they have been modified or replaced with malicious versions.
  ### Prioritization
  This alert should be treated with high severity due to the critical nature of the LSASS process and the associated risks of credential theft and system compromise. Immediate investigation is warranted as detection may indicate an ongoing attack.
  ### Blind Spots and Assumptions
  This detection rule may not fire if an adversary uses alternate methods to load DLLs or avoids the monitored registry keys, such as through in-memory techniques or utilizing other processes altogether. Furthermore, if legitimate administrative tools modify the keys for valid purposes, false positives may occur. Engineers should be cautious of scenarios where advanced threat actors employ rootkits or other obfuscation tactics to evade detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
