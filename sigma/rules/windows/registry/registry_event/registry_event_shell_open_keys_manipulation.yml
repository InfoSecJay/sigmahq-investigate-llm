title: Shell Open Registry Keys Manipulation
id: 152f3630-77c1-4284-bcc0-4cc68ab2f6e7
status: test
description: Detects the shell open key manipulation (exefile and ms-settings) used
  for persistence and the pattern of UAC Bypass using fodhelper.exe, computerdefaults.exe,
  slui.exe via registry keys (e.g. UACMe 33 or 62)
references:
- https://github.com/hfiref0x/UACME
- https://winscripting.blog/2017/05/12/first-entry-welcome-and-uac-bypass/
- https://github.com/RhinoSecurityLabs/Aggressor-Scripts/tree/master/UACBypass
- https://tria.ge/211119-gs7rtshcfr/behavioral2 [Lokibot sample from Nov 2021]
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2022-01-13
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
- attack.t1546.001
logsource:
  category: registry_event
  product: windows
detection:
  selection1:
    EventType: SetValue
    TargetObject|endswith: 'Classes\ms-settings\shell\open\command\SymbolicLinkValue'
    Details|contains: '\Software\Classes\{'
  selection2:
    TargetObject|endswith: 'Classes\ms-settings\shell\open\command\DelegateExecute'
  selection3:
    EventType: SetValue
    TargetObject|endswith:
    - 'Classes\ms-settings\shell\open\command\(Default)'
    - 'Classes\exefile\shell\open\command\(Default)'
  filter_sel3:
    Details: '(Empty)'
  condition: selection1 or selection2 or (selection3 and not filter_sel3)
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Shell Open Registry Keys Manipulation" detection rule aims to identify potential manipulation of Windows registry keys associated with shell commands that can be abused for persistence and User Account Control (UAC) bypass. Specifically, it monitors registry events indicating changes to certain entries under `Classes\ms-settings\shell\open\command`, particularly for the executables `fodhelper.exe`, `computerdefaults.exe`, and `slui.exe`. These registry manipulations are commonly associated with both privilege escalation and defense evasion tactics, as adversaries may modify these keys to execute commands with elevated permissions and to evade detection. This rule leverages Windows registry event logs as its primary data source, particularly focused on events of type `SetValue`, which are indicative of changes to registry settings.
  The detection aligns with the MITRE ATT&CK framework, specifically targeting the **Defense Evasion** tactic (T1548.002) and **Privilege Escalation** tactic (T1546.001). By identifying modifications to these sensitive settings, security teams can catch adversaries attempting to exploit registry keys either to maintain persistence on compromised systems or to bypass security mechanisms like UAC.
  ### Investigation Steps
  - **Inspect Registry Logs**: Utilize Windows Event Logs to review `SetValue` events in the registry, focusing on changes to the specified shell command keys, particularly those linked to `ms-settings` and `exefile`.
  - **Analyze Process Creation**: Use EDR tools to look for suspicious processes that may have been launched as a result of registry modifications, paying close attention to the execution of `fodhelper.exe`, `computerdefaults.exe`, and `slui.exe`.
  - **Correlate with Other Events**: Investigate surrounding events in the SIEM for related activity, such as unusual PowerShell commands or network connections that correspond to registry changes.
  - **Review Endpoint Activity**: Check for any alerts or logs from antivirus or endpoint protection solutions for known malicious indicators associated with the UAC bypass techniques referenced in the documentation.
  ### Prioritization
  Given that registry manipulation for UAC bypass is a significant indicator of sophisticated adversarial tactics, this alert is prioritized as **high severity**. The modification of shell command entries can lead to potential privilege escalation and persistence, which poses a serious risk to the integrity of the system and the greater organizational environment.
  ### Blind Spots and Assumptions
  This detection rule may not fire if the attacker's method of manipulation does not utilize the specific registry keys being monitored, such as if the adversary employs different techniques that do not involve `SetValue` events or targets other classes or command paths. Additionally, if the system has been improperly configured or if necessary logging is disabled, relevant events may not be recorded. It is also assumed that normal administrative activities are not producing false positives; thus, a comprehensive understanding of legitimate registry change patterns is essential for accurate detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
