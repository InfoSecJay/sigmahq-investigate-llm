title: Removal of Potential COM Hijacking Registry Keys
id: 96f697b0-b499-4e5d-9908-a67bec11cdb6
status: test
description: |
  Detects any deletion of entries in ".*\shell\open\command" registry keys.
  These registry keys might have been used for COM hijacking activities by a threat actor or an attacker and the deletion could indicate steps to remove its tracks.
references:
- https://github.com/OTRF/detection-hackathon-apt29/issues/7
- https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/3.C.1_22A46621-7A92-48C1-81BF-B3937EB4FDC3.md
- https://learn.microsoft.com/en-us/windows/win32/shell/launch
- https://learn.microsoft.com/en-us/windows/win32/api/shobjidl_core/nn-shobjidl_core-iexecutecommand
- https://learn.microsoft.com/en-us/windows/win32/shell/shell-and-managed-code
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-05-02
modified: 2023-01-19
tags:
- attack.defense-evasion
- attack.t1112
logsource:
  product: windows
  category: registry_delete
detection:
  selection:
    EventType: 'DeleteKey'
    TargetObject|endswith: '\shell\open\command'
  filter_svchost:
    Image: 'C:\Windows\system32\svchost.exe'
  filter_office:
    Image|startswith:
    - 'C:\Program Files\Common Files\Microsoft Shared\ClickToRun\'
    - 'C:\Program Files\Common Files\Microsoft Shared\ClickToRun\Updates\'
    Image|endswith: '\OfficeClickToRun.exe'
  filter_integrator:
    Image: 'C:\Program Files (x86)\Microsoft Office\root\integration\integrator.exe'
  filter_dropbox:
    Image|endswith: '\Dropbox.exe'
        # We don't use the HKCR anchor as it could be logged as a different variation (HKEY_CLASSES_ROOT)
    TargetObject|contains: '\Dropbox.'
  filter_wireshark:
    Image|endswith: '\AppData\Local\Temp\Wireshark_uninstaller.exe'
        # We don't use the HKCR anchor as it could be logged as a different variation (HKEY_CLASSES_ROOT)
    TargetObject|contains: '\wireshark-capture-file\'
  filter_opera:
    Image|startswith:
    - 'C:\Program Files\Opera\'
    - 'C:\Program Files (x86)\Opera\'
    Image|endswith: '\installer.exe'
  filter_peazip:
    Image|contains: 'peazip'
        # We don't use the HKCR anchor as it could be logged as a different variation (HKEY_CLASSES_ROOT)
    TargetObject|contains: '\PeaZip.'
  filter_everything:
    Image|endswith: '\Everything.exe'
        # We don't use the HKCR anchor as it could be logged as a different variation (HKEY_CLASSES_ROOT)
    TargetObject|contains: '\Everything.'
  filter_uninstallers:
        # This image path is linked with different uninstallers when running as admin unfortunately
    Image|startswith: 'C:\Windows\Installer\MSI'
  filter_java:
    Image|startswith: 'C:\Program Files (x86)\Java\'
    Image|endswith: '\installer.exe'
    TargetObject|contains: '\Classes\WOW6432Node\CLSID\{4299124F-F2C3-41b4-9C73-9236B2AD0E8F}'
  condition: selection and not 1 of filter_*
falsepositives:
- Legitimate software (un)installations are known to cause some false positives. Please
  add them as a filter when encountered
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect deletions of registry keys that may point to COM hijacking activities, specifically targeting keys located at `.*\shell\open\command`. These registry values could be manipulated by malicious actors to execute their own code when a legitimate action is performed (such as opening a file). By monitoring for deletion events in these registry paths, the rule aims to identify potential attempts by threat actors to cover their tracks after a successful compromise. The data sources impacted by this rule primarily include Windows Registry delete logs, captured through security event logging mechanisms such as Sysmon or built-in Windows Security logs. The rule is related to the MITRE ATT&CK tactic of Defense Evasion, specifically technique T1112: Modify Registry.
  ### Investigation Steps
  - **Review Registry Events:** Check for the recent deletion event in the registry logs to confirm the specific command key that was deleted and assess if it aligns with known legitimate software uninstallations.
    
  - **Analyze Process Activity:** Correlate the deletion event with related process creation logs to identify any unusual processes that may have initiated the deletion. Tools like an EDR can help track these processes.
  - **Examine Network Traffic:** Inspect outbound connections around the time of the deletion event using NDR to determine if there was any suspicious command and control communication established.
  - **Validate Installation Sources:** Confirm if the deleted registry key correlates with known legitimate applications. If a legitimate application is involved, document it as a false positive and consider adjusting detection thresholds.
  ### Prioritization
  This alert carries a medium severity level due to the potential implications of COM hijacking which can disrupt operations or lead to further exploits if not addressed. Investigating these alerts promptly is crucial to prevent malicious activity from escalating.
  ### Blind spots and Assumptions
  The rule may not fire if legitimate administrative activities, such as software uninstallation, occur frequently in the environment, which means some benign actions could be misclassified as threats. Furthermore, if an adversary employs sophisticated techniques to camouflage their actions or delete registry keys without triggering the monitored events, this could lead to a lack of detection. Additionally, if EDR or SIEM tools are not capturing all relevant events due to configuration issues, this could lead to missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
