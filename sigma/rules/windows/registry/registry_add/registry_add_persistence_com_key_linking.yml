title: Potential COM Object Hijacking Via TreatAs Subkey - Registry
id: 9b0f8a61-91b2-464f-aceb-0527e0a45020
status: test
description: Detects COM object hijacking via TreatAs subkey
references:
- https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/
author: Kutepov Anton, oscd.community
date: 2019-10-23
modified: 2023-02-07
tags:
- attack.persistence
- attack.t1546.015
logsource:
  category: registry_add
  product: windows
detection:
  selection:
    EventType: 'CreateKey'      # Don't want DeleteKey events
    TargetObject|contains|all:
    - 'HKU\'
    - 'Classes\CLSID\'
    - '\TreatAs'
  filter_svchost:
        # Example of target object by svchost
        # TargetObject: HKU\S-1-5-21-1098798288-3663759343-897484398-1001_Classes\CLSID\{0003000A-0000-0000-C000-000000000046}\TreatAs
    Image: 'C:\WINDOWS\system32\svchost.exe'
  condition: selection and not 1 of filter_*
falsepositives:
- Maybe some system utilities in rare cases use linking keys for backward compatibility
level: medium
notes: |
  ### Technical Context
  This Sigma rule aims to detect potential COM object hijacking attempts via the `TreatAs` subkey in the Windows Registry. The rule focuses on registry creation events where an attacker may modify the `TreatAs` subkey under a specific Class ID (CLSID) to redirect COM object instantiation to a malicious payload. This could give the adversary the capability to execute arbitrary code with the same privileges as the legitimate COM object. The primary data source for this detection is the Windows Registry, specifically monitoring the creation of keys related to user-specific registry hives (HKU) and CLSIDs. This detection aligns with the MITRE ATT&CK technique T1546.015 (Event Triggered Execution: COM Hijacking), which highlights that adversaries can exploit COM objects to achieve persistence and execute customized, crafted code.
  ### Investigation Steps
  - **Verify Registry Changes:** Check the registry keys targeted by the alert in Windows Security logs to confirm unauthorized modifications. Utilize tools such as Regedit or PowerShell commands to investigate the specific CLSID and its associated `TreatAs` subkey.
  - **Analyze Process Activity:** Review recent process creation events in Sysmon logs for associated processes, especially those running from `svchost.exe`, that might indicate suspicious behavior following the registry change.
  - **Inspect Real-time Network Activity:** Use EDR tools to assess outgoing network connections correlated with the registry change to identify any attempts of data exfiltration or communication with known malicious IPs.
  - **Review Related Security Events:** Consult Security, System, and Application logs to look for abnormal user or service account activity that may indicate exploitation, such as unusual login times or account lockouts.
  ### Prioritization
  This alert is categorized as medium severity due to the potential for an attacker to gain persistent access to the system through COM object hijacking, enabling them to execute malicious code hidden in ostensibly legitimate processes.
  ### Blind Spots and Assumptions
  The detection rule assumes that registry key creation events are logged consistently without loss. However, it may not trigger if an attacker utilizes advanced techniques to remove or rename the `TreatAs` subkey to avoid detection. There is also a possibility of false positives due to legitimate applications that may use similar registry keys for compatibility purposes. Engineers should be aware that if system utilities manipulate the registry in a rare context, it might lead to unnecessary alert noise, and thorough validation is necessary during investigations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
