title: Potential Persistence Via New AMSI Providers - Registry
id: 33efc23c-6ea2-4503-8cfe-bdf82ce8f705
status: test
description: Detects when an attacker registers a new AMSI provider in order to achieve
  persistence
references:
- https://persistence-info.github.io/Data/amsi.html
- https://github.com/gtworek/PSBits/blob/8d767892f3b17eefa4d0668f5d2df78e844f01d8/FakeAMSI/FakeAMSI.c
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-21
modified: 2023-02-07
tags:
- attack.persistence
logsource:
  category: registry_add
  product: windows
detection:
  selection:
    EventType: CreateKey
    TargetObject|contains:
    - '\SOFTWARE\Microsoft\AMSI\Providers\'
    - '\SOFTWARE\WOW6432Node\Microsoft\AMSI\Providers\'
  filter:
    Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Program Files\'
    - 'C:\Program Files (x86)\'
  condition: selection and not filter
falsepositives:
- Legitimate security products adding their own AMSI providers. Filter these according
  to your environment
level: high
notes: |
  ### Technical Context
  The detection rule "Potential Persistence Via New AMSI Providers 
  - Registry" is designed to identify suspicious modifications to the Windows registry, specifically the addition of new Anti-Malware Scan Interface (AMSI) providers. By monitoring the Windows registry for the creation of keys under `\SOFTWARE\Microsoft\AMSI\Providers\` and its WOW6432Node equivalent, the rule aims to capture attempts by an attacker to introduce their own AMSI providers as a method of persistence. This technique can allow malicious scripts to bypass security controls, as the attacker can use a custom AMSI provider to mask their activities from antivirus software and other security mechanisms. The relevant MITRE ATT&CK tactic here is "Persistence", and the technique is directly linked to methods adversaries might employ to maintain a foothold within an environment (T1547.001).
  To facilitate this detection, this rule utilizes logs generated by Windows registry changes, particularly focusing on events where new keys are created that might signal unwanted alterations. The condition for alerting is triggered when a registry key is created for AMSI providers, provided the corresponding image path does not match certain common security software directories, thereby filtering out legitimate entries.
  ### Investigation Steps
  - **Verify the Source of the Registry Change:** Use EDR tools to correlate the timing of the alert with any recent process creation events that may have invoked the registry change. Focus on finding any unexpected or unusual parent-child process relationships.
  - **Examine the Created AMSI Provider:** Investigate the specific registry key that was added and gather details on associated image paths. Review the binary files that may have been registered to understand their origin and purpose.
  - **Check Related Security Events:** Review Windows Security, Application, and System event logs for any related activities, such as unusual logins or process executions around the same time as the registry modification event.
  - **Assess for Compromised Systems:** Utilize network analysis tools to check for suspicious inbound or outbound traffic related to the affected systems to determine if there are any indicators of compromise present.
  ### Prioritization
  When this alert is triggered in an enterprise environment, it should be treated with a high severity level due to the potential of adversaries gaining persistent access to systems through stealthy means. Given that AMSI is a critical component of defenses against malware, tampering with or adding providers can pose significant risks.
  ### Blind spots and Assumptions
  The rule may not fire in instances where legitimate security products operate within the environment and add their own AMSI providers, as they typically fall within the expected paths that are filtered out. Additionally, the rule assumes that potentially malicious changes will occur outside typical security product directories and may not account for sophisticated adversaries who compromise registered applications. Engineers should consider that some techniques could employ alternate execution paths or leverage other persistence methods that don't modify the AMSI registry keys.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
