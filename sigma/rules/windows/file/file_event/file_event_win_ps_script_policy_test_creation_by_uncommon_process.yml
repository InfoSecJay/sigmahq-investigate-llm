title: PSScriptPolicyTest Creation By Uncommon Process
id: 1027d292-dd87-4a1a-8701-2abe04d7783c
status: test
description: Detects the creation of the "PSScriptPolicyTest" PowerShell script by
  an uncommon process. This file is usually generated by Microsoft Powershell to test
  against Applocker.
references:
- https://www.paloaltonetworks.com/blog/security-operations/stopping-powershell-without-powershell/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-06-01
modified: 2023-12-11
tags:
- attack.defense-evasion
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename|contains: '__PSScriptPolicyTest_'
  filter_main_generic:
    Image|endswith:
    - ':\Program Files\PowerShell\7-preview\pwsh.exe'
    - ':\Program Files\PowerShell\7\pwsh.exe'
    - ':\Windows\System32\dsac.exe'
    - ':\Windows\System32\sdiagnhost.exe'
    - ':\Windows\System32\ServerManager.exe'
    - ':\Windows\System32\WindowsPowerShell\v1.0\powershell_ise.exe'
    - ':\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
    - ':\Windows\System32\wsmprovhost.exe'
    - ':\Windows\SysWOW64\sdiagnhost.exe'
    - ':\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell_ise.exe'
    - ':\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule "PSScriptPolicyTest Creation By Uncommon Process" is designed to detect the creation of a specific PowerShell script, identified by the filename pattern `__PSScriptPolicyTest_`. This script is typically generated by Microsoft PowerShell to conduct testing against Applocker policies, thus its creation can indicate a potential threat, particularly when generated by processes that are not commonly associated with this operation. The rule utilizes file event logs from Windows systems to monitor file creation events and examines the `TargetFilename` for the specified pattern. It also filters out common legitimate processes associated with PowerShell execution, specifically targeting those that are less likely to be used for benign purposes, such as various system binaries and PowerShell executables. The detection aims to minimize false positives by narrowing the focus to uncommon process sources.
  ### Investigation Steps
  - Review EDR logs to identify the specific process that created the `__PSScriptPolicyTest_` file, including details such as process lineage and execution context.
  - Analyze command-line parameters associated with the process to determine whether the execution context was unusual or potentially malicious.
  - Correlate findings with real-time threat intelligence to assess whether the detected process is known for distributing malware or engaging in suspicious behavior.
  - Check network logs for outgoing connections made by the process during the time frame of the alert, focusing on connections to known malicious IP addresses or domains.
