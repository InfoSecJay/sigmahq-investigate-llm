title: Windows Shell/Scripting Application File Write to Suspicious Folder
id: 1277f594-a7d1-4f28-a2d3-73af5cbeab43
status: test
description: Detects Windows shells and scripting applications that write files to
  suspicious folders
references:
- Internal Research
author: Florian Roth (Nextron Systems)
date: 2021-11-20
modified: 2023-03-29
tags:
- attack.execution
- attack.t1059
logsource:
  category: file_event
  product: windows
detection:
  selection_1:
    Image|endswith:
    - '\bash.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\msbuild.exe'          # https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/defense_evasion_execution_msbuild_started_by_office_app.toml
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\sh.exe'
    - '\wscript.exe'
    TargetFilename|startswith:
    - 'C:\PerfLogs\'
    - 'C:\Users\Public\'
  selection_2:
    Image|endswith:
    - '\certutil.exe'
    - '\forfiles.exe'
    - '\mshta.exe'
            # - '\rundll32.exe' # Potential FP
    - '\schtasks.exe'
    - '\scriptrunner.exe'
    - '\wmic.exe'          # https://app.any.run/tasks/c903e9c8-0350-440c-8688-3881b556b8e0/
    TargetFilename|contains:
    - 'C:\PerfLogs\'
    - 'C:\Users\Public\'
    - 'C:\Windows\Temp\'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The rule titled "Windows Shell/Scripting Application File Write to Suspicious Folder" is designed to identify potentially malicious behavior involving common Windows shell and scripting applications. It specifically monitors file write operations to predefined suspicious folders, such as `C:\PerfLogs\`, `C:\Users\Public\`, and `C:\Windows\Temp\`. The detection utilizes a combination of process execution logs and file event logs, looking for instances where executables like `cmd.exe`, `powershell.exe`, and `mshta.exe` attempt to write files to these locations. By flagging these activities, the rule aims to detect techniques categorized under the MITRE ATT&CK framework, specifically the "Execution" tactic (T1059), highlighting possible command execution used in malicious processes.
  The detection mechanism relies on the log types from the Windows environment to assess the legitimacy of file operations initiated by the aforementioned executables, identifying anomalies that may signify an attempt to evade security measures or carry out unauthorized actions.
  ### Investigation Steps
  - **Check EDR for Process Execution:** Review your EDR solution for the execution history of the flagged processes to determine the context in which they were launched.
  - **Analyze File Creation Attempts:** Inspect the Windows Security or Sysmon logs for specific file creation events in the suspicious folders to gather details about the written files and their timestamps.
  - **Review Network Connections:** Use network detection tools to analyze any outbound connections made by these processes around the same time, looking for unusual or unauthorized activities that correlate with the file writes.
  - **Cross-Reference User Activity:** Examine recent user activity logs to establish whether any authorized user actions coincide with the suspicious behavior, and verify whether it was anticipated or out of the ordinary.
  ### Prioritization
  Alerts generated by this rule should be prioritized as high severity due to the potential for malicious file writes, which could indicate unauthorized data manipulation or exfiltration attempts. Prompt investigation is crucial to mitigate risk to enterprise systems and data integrity.
  ### Blind Spots and Assumptions
  This rule may not fire if the monitored executables utilize alternate paths or methods for file writing that evade detection, such as file-less execution techniques. It assumes that logging is adequately configured, and the suspicious directories are defined in the rule. Additionally, if adversaries delete or obfuscate logs post-execution, it could hinder detection efforts, thus creating blind spots in monitoring.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
