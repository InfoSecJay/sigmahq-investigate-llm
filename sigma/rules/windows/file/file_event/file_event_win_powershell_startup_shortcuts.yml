title: Potential Startup Shortcut Persistence Via PowerShell.EXE
id: 92fa78e7-4d39-45f1-91a3-8b23f3f1088d
status: test
description: |
  Detects PowerShell writing startup shortcuts.
  This procedure was highlighted in Red Canary Intel Insights Oct. 2021, "We frequently observe adversaries using PowerShell to write malicious .lnk files into the startup directory to establish persistence.
  Accordingly, this detection opportunity is likely to identify persistence mechanisms in multiple threats.
  In the context of Yellow Cockatoo, this persistence mechanism eventually launches the command-line script that leads to the installation of a malicious DLL"
references:
- https://redcanary.com/blog/intelligence-insights-october-2021/
- https://github.com/redcanaryco/atomic-red-team/blob/36d49de4c8b00bf36054294b4a1fcbab3917d7c5/atomics/T1547.001/T1547.001.md#atomic-test-7---add-executable-shortcut-link-to-user-startup-folder
author: Christopher Peacock '@securepeacock', SCYTHE
date: 2021-10-24
modified: 2023-02-23
tags:
- attack.persistence
- attack.t1547.001
logsource:
  product: windows
  category: file_event
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    TargetFilename|contains: '\start menu\programs\startup\'
    TargetFilename|endswith: '.lnk'
  condition: selection
falsepositives:
- Depending on your environment accepted applications may leverage this at times.
  It is recommended to search for anomalies inidicative of malware.
level: high
notes: |
  ### Technical Context
  This Sigma rule focuses on detecting potentially malicious activities involving PowerShell, specifically in relation to creating startup shortcuts for persistence. Adversaries may use PowerShell scripts to write malicious `.lnk` files into the Windows startup directory, which can be executed whenever a user logs into the system. By monitoring the creation of `.lnk` files in the startup folder by PowerShell, the rule aims to identify suspicious behavior consistent with the MITRE ATT&CK technique T1547.001 (Boot or Logon Autostart Execution: Shortcut). Data sources utilized in this detection include Sysmon logs, specifically focusing on file events associated with PowerShell executable processes, which provide detailed information on file creation activities, including the files targeted by the commands and the context of their creation.
  ### Investigation Steps
  - **Verify the PowerShell Execution:** Check the EDR for recent PowerShell execution logs that align with the timing of the detected .lnk file creation. Investigate the command-line arguments used to confirm if any malicious intent is present.
    
  - **Inspect Startup Folder:** Navigate to the startup folder (typically located at `C:\Users\<User>\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup`) to evaluate the contents for any unauthorized or unexpected `.lnk` files that may have been created.
  - **Analyze Process Tree:** Use the EDR to examine the parent and child relationships of the PowerShell process detected, checking for other suspicious processes that may indicate a wider compromise or coordinated attack.
  - **Check for Anomalous Behavior:** Review proxy, VPN, and network logs to identify any unusual outbound connections that could indicate that the initial PowerShell script is communicating with a command and control (C2) server or downloading additional malicious payloads.
  ### Prioritization
  This alert is prioritized as high due to the significant risk posed by persistence mechanisms employed by attackers. Malicious shortcuts enable adversaries to maintain access and control over compromised systems, potentially leading to further exploitation or data exfiltration.
  ### Blind Spots and Assumptions
  One major blind spot is the potential for false positives in environments where legitimate applications utilize PowerShell to create startup shortcuts. Additionally, the rule may miss detections if adversaries employ obfuscation techniques or alternate methods to establish persistence without being captured in the monitored logs. It is assumed that the logging level for Sysmon is adequately configured to capture file creation events, and that the PowerShell script execution policy allows such scripts to run.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
