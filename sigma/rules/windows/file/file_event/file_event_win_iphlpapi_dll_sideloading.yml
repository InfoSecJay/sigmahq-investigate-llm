title: Malicious DLL File Dropped in the Teams or OneDrive Folder
id: 1908fcc1-1b92-4272-8214-0fbaf2fa5163
status: test
description: |
  Detects creation of a malicious DLL file in the location where the OneDrive or Team applications
  Upon execution of the Teams or OneDrive application, the dropped malicious DLL file ("iphlpapi.dll") is sideloaded
references:
- https://blog.cyble.com/2022/07/27/targeted-attacks-being-carried-out-via-dll-sideloading/
author: frack113
date: 2022-08-12
tags:
- attack.persistence
- attack.privilege-escalation
- attack.defense-evasion
- attack.t1574.002
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|contains|all:
    - 'iphlpapi.dll'
    - '\AppData\Local\Microsoft'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies the potential malicious dropping of a DLL file named "iphlpapi.dll" within the OneDrive or Microsoft Teams application folders. The rule focuses on specific path patterns, particularly those that include “\AppData\Local\Microsoft,” where targeted attacks may execute DLL sideloading, a technique often used to compromise applications. When these applications are run, if the malicious DLL is present, it may be executed by the application rather than the legitimate version, allowing attackers to gain persistence on the infected system. This behavior falls under the MITRE ATT&CK framework’s "Persistence" tactic and specifically targets technique T1574.002 (DLL Side-Loading).
  The technical data sources that support this rule include Windows file event logs, which capture file creations and modifications. By leveraging these logs, the SOC team can pinpoint the locations and activities that suggest a compromise, highlighting potentially unauthorized software being executed via trusted applications.
  ### Investigation Steps
  - **Check Recent File Activity:** Investigate recent file creation events in the specified directory paths (e.g., `\AppData\Local\Microsoft`) to identify if the "iphlpapi.dll" file indeed exists and assess its creation timestamp.
  - **Validate File Integrity:** Use the organization's EDR tool to determine the origin and hash of the detected DLL file, checking it against known malicious signatures or previously established baselines.
  - **Assess Application Execution:** Look into application logs for Microsoft Teams or OneDrive during the timeframe the suspicious file was created to confirm if those applications were executing and potentially sideloading the DLL.
  - **Evaluate User Behavior:** Review the user account activity associated with the file creation, considering whether there were any abnormal login patterns or suspicious access that could indicate a compromise.
  ### Prioritization
  The alert is marked as high severity because the presence of a malicious DLL in commonly used applications like Microsoft Teams or OneDrive can indicate a serious compromise and facilitate further malicious activities, making rapid response crucial to mitigate potential damage.
  ### Blind Spots and Assumptions
  This rule may not trigger if the malicious DLL has been renamed or if the file creation is performed in locations not specifically monitored by the detection mechanisms. Additionally, if the threat actors deploy more sophisticated evasion techniques to disguise their actions or if the behavior occurs in a context that doesn’t utilize Microsoft Teams or OneDrive, such actions could evade detection. Moreover, false positives may occur from benign applications or legitimate users mistakenly interacting with similar filenames.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
