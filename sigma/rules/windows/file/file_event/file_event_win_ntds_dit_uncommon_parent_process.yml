title: NTDS.DIT Creation By Uncommon Parent Process
id: 4e7050dd-e548-483f-b7d6-527ab4fa784d
related:
- id: 11b1ed55-154d-4e82-8ad7-83739298f720
  type: similar
status: test
description: Detects creation of a file named "ntds.dit" (Active Directory Database)
  by an uncommon parent process or directory
references:
- https://www.ired.team/offensive-security/credential-access-and-credential-dumping/ntds.dit-enumeration
- https://www.n00py.io/2022/03/manipulating-user-passwords-without-mimikatz/
- https://pentestlab.blog/tag/ntds-dit/
- https://github.com/samratashok/nishang/blob/414ee1104526d7057f9adaeee196d91ae447283e/Gather/Copy-VSS.ps1
author: Florian Roth (Nextron Systems)
date: 2022-03-11
modified: 2023-01-05
tags:
- attack.credential-access
- attack.t1003.003
logsource:
  product: windows
  category: file_event
  definition: 'Requirements: The "ParentImage" field is not available by default on
    EID 11 of Sysmon logs. To be able to use this rule to the full extent you need
    to enrich the log with additional ParentImage data'
detection:
  selection_file:
    TargetFilename|endswith: '\ntds.dit'
  selection_process_parent:
        # Note: ParentImage is a custom field and is not available by default on Sysmon EID 11
    ParentImage|endswith:
    - '\cscript.exe'
    - '\httpd.exe'
    - '\nginx.exe'
    - '\php-cgi.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\w3wp.exe'
    - '\wscript.exe'
  selection_process_parent_path:
        # Note: ParentImage is a custom field and is not available by default on Sysmon EID 11
    ParentImage|contains:
    - '\apache'
    - '\tomcat'
    - '\AppData\'
    - '\Temp\'
    - '\Public\'
    - '\PerfLogs\'
  condition: selection_file and 1 of selection_process_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "NTDS.DIT Creation By Uncommon Parent Process" detects instances where a file named "ntds.dit," related to the Active Directory database, is created by processes that are not typically associated with such activity. This detection leverages Windows Event Logging, specifically monitoring for `file_event` log sources that capture file creation activities. The rule identifies the parent process that initiated the creation of the "ntds.dit" file, checking against an array of uncommon or potentially malicious parent processes, such as scripting engines and web server executables. It specifically looks for processes like `cscript.exe`, `powershell.exe`, and others that could signal an unauthorized activity in a corporate environment. The associated MITRE ATT&CK tactics include "Credential Access" (TA0006) and the specific technique "Credential Dumping from Active Directory" (T1003.003).
  ### Investigation Steps
  - **Review EDR Alerts:** Cross-reference the parent process identified in the alert with the endpoints' activity logs in the EDR to ascertain the legitimacy of the processes involved and any related anomalies.
  - **Analyze File System Activity:** Utilize file integrity monitoring tools or native OS utilities to check for `ntds.dit` file creations and modifications across the affected systems for correlations with the timestamps of the alerts.
  - **Inspect Sysmon Logs:** Retrieve Sysmon log data to investigate the creation event and utilize enhanced logging configurations that capture the `ParentImage` field, which is essential for understanding the process lineage.
  - **Check Network Connections:** Use network detection tools to identify any outbound or suspicious network connections made by the parent process associated with the alert, determining if there's a larger compromise being attempted.
  ### Prioritization
  Given that the creation of the "ntds.dit" file can indicate an advanced attack on the Active Directory and potential credential theft, the alert is treated with high severity in an enterprise environment. Quick response is essential to mitigate the risks associated with credential access and potential lateral movement.
  ### Blind Spots and Assumptions
  This detection may not fire if the `ParentImage` field is not properly configured and enriched in Sysmon logs, limiting the rule's effectiveness against unconventional parent processes. Assumptions include the correctness of process behaviors associated with known good and bad actors. Additionally, sophisticated adversaries may employ means to obfuscate their processes or manipulate the logging mechanisms to avoid detection, such as running processes in steganographic or scheduled tasks that are less monitored.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
