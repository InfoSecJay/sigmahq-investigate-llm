title: UAC Bypass Using EventVwr
id: 63e4f530-65dc-49cc-8f80-ccfa95c69d43
status: test
description: Detects the pattern of a UAC bypass using Windows Event Viewer
references:
- https://twitter.com/orange_8361/status/1518970259868626944?s=20&t=RFXqZjtA7tWM3HxqEH78Aw
- https://twitter.com/splinter_code/status/1519075134296006662?s=12&t=DLUXH86WtcmG_AZ5gY3C6g
- https://lolbas-project.github.io/lolbas/Binaries/Eventvwr/#execute
author: Antonio Cocomazzi (idea), Florian Roth (Nextron Systems)
date: 2022-04-27
modified: 2022-11-22
tags:
- attack.defense-evasion
- attack.privilege-escalation
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|endswith:
            # Removed the start just in case the logging backend doesn't expand ENV variables when they're used
    - '\Microsoft\Event Viewer\RecentViews'
    - '\Microsoft\EventV~1\RecentViews'
  filter:
    Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
  condition: selection and not filter
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify potential User Account Control (UAC) bypass attempts utilizing the Windows Event Viewer. Specifically, it looks for interactions with Event Viewerâ€™s Recent Views, which can be exploited to escalate privileges on a Windows system. The rule tracks file events targeting filenames associated with the Event Viewer that end with `\RecentViews`, while ensuring that these events originate from legitimate Windows system directories, such as `C:\Windows\System32\` and `C:\Windows\SysWOW64\`. By applying this logic, the detection aims to flag activities that are consistent with techniques categorized under the MITRE ATT&CK framework, specifically under the tactics of defense evasion and privilege escalation.
  ### Investigation Steps
  - **Review EDR Alerts:** Examine the alerts raised by the EDR for any process execution involving the Event Viewer and assess the command-line arguments to scrutinize for abnormal patterns indicative of an UAC bypass.
  - **Analyze Security Event Logs:** Look into the Windows Security event logs to identify any related authentication attempts, especially around the time of the detected Event Viewer interaction, which could suggest precursor actions to privilege escalation.
  - **Inspect Process Creation Logs:** Correlate the timestamp of the detection with process creation logs to pinpoint the originating processes and seek any associated suspicious activities that may provide context regarding the UAC bypass.
  - **Check for Known Bad Indicators:** Cross-reference any identified processes or binaries against threat intelligence feeds or your enterprise blocklists to determine if any may be known to facilitate privilege escalation attacks.
  ### Prioritization
  Given the high severity level assigned to this alert, it suggests a strong possibility of a potential privilege escalation attempt, which can lead to significant security breaches, making it crucial for immediate investigation and response.
  ### Blind Spots and Assumptions
  This rule may not fire if the adversary uses obscure or non-standard paths to access the Event Viewer, or if environmental variables are manipulated in such a way that does not align with the expected file paths. Additionally, if the EDR lacks visibility into file events or if Windows Event Viewer logs are heavily curated, detection may be hindered. It is also assumed that appropriate logging levels are enabled and that the system time is synchronized across all endpoints to facilitate accurate correlation of events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
