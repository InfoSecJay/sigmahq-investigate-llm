title: PowerShell Module File Created
id: e36941d0-c0f0-443f-bc6f-cb2952eb69ea
status: test
description: Detects the creation of a new PowerShell module ".psm1", ".psd1", ".dll",
  ".ps1", etc.
references:
- Internal Research
- https://learn.microsoft.com/en-us/powershell/scripting/developer/module/understanding-a-windows-powershell-module?view=powershell-7.3
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-09
tags:
- attack.persistence
logsource:
  category: file_event
  product: windows
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    TargetFilename|contains:
    - '\WindowsPowerShell\Modules\'
    - '\PowerShell\7\Modules\'
  condition: selection
falsepositives:
- Likely
level: low
notes: |
  n
  ### Technical Context
  The "PowerShell Module File Created" Sigma rule detects the creation of PowerShell module files, specifically those with extensions such as `.psm1`, `.psd1`, `.dll`, and `.ps1`. This detection is crucial for identifying potential persistence mechanisms employed by adversaries, as creating malicious PowerShell modules could facilitate ongoing access to a compromised system. The rule operates by monitoring file creation events, specifically focusing on executable images such as `powershell.exe` and `pwsh.exe`, which are used to run PowerShell scripts. The targeted file paths (`\WindowsPowerShell\Modules\` and `\PowerShell\7\Modules\`) suggest that the rule seeks to capture activities within the official PowerShell modules directory. This detection aligns with the MITRE ATT&CK technique for Persistence (TA0002), which highlights the need for awareness of suspicious file creation related to PowerShell, a commonly used scripting language in both administrative and malicious contexts.
  ### Investigation Steps
  - **Check EDR for Process Activity:** Review the EDR logs to verify the process tree for `powershell.exe` or `pwsh.exe` during the time of the alert, looking for any unusual command-line arguments or parent processes.
    
  - **Examine File Creation Logs:** Investigate Windows logs for file creation events that correspond to the reported module file, noting the user accounts involved and associated timestamps.
  - **Review PowerShell Execution Logs:** Analyze PowerShell logs (if enabled) for any suspicious runspaces or commands executed prior to the module file creation, which may provide context to the alert.
  - **Correlate with Network Activity:** Utilize network detection tools to examine any outbound connections initiated at the time of the alert, which may indicate data exfiltration or command and control (C2) interactions.
  ### Prioritization
  Although marked as low severity, this alert should still be prioritized due to the potential risk of malicious persistence methods being employed via newly created PowerShell modules, which could lead to more significant intrusions if not investigated promptly.
  ### Blind Spots and Assumptions
  This rule may not fire for legitimate PowerShell module creation activities performed by system administrators or trusted applications, leading to possible false positives. Additionally, if auditing is not properly configured or PowerShell execution logging is disabled, there may be blind spots concerning pre-existing malicious modules. Additionally, skilled adversaries may utilize alternative methods or tools to create or load modules that evade detection, such as using non-standard directories or obfuscating their process invocation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
