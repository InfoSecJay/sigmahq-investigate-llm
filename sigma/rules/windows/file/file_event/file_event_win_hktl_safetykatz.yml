title: HackTool - SafetyKatz Dump Indicator
id: e074832a-eada-4fd7-94a1-10642b130e16
status: test
description: Detects default lsass dump filename generated by SafetyKatz.
references:
- https://github.com/GhostPack/SafetyKatz
- https://github.com/GhostPack/SafetyKatz/blob/715b311f76eb3a4c8d00a1bd29c6cd1899e450b7/SafetyKatz/Program.cs#L63
author: Markus Neis
date: 2018-07-24
modified: 2024-06-27
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|endswith: '\Temp\debug.bin'
  condition: selection
falsepositives:
- Rare legitimate files with similar filename structure
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify the unauthorized generation of a specific filename, `debug.bin`, in the Windows Temp directory. The filename is associated with SafetyKatz, a credential dumping tool that targets the Local Security Authority Subsystem Service (LSASS) memory to extract sensitive credentials. This is a significant threat as it falls under the MITRE ATT&CK tactic of Credential Access, specifically technique T1003.001, which deals with credential dumping from LSASS. The rule relies on file event log data from Windows to trigger alerts when a file with the suspicious filename is created, enabling security teams to investigate potential malicious activity before it impacts the enterprise environment.
  In practical terms, this detection utilizes Windows file monitoring capabilities to track file creation events, specifically focusing on the Temp directory where such tools often write their outputs. The rule is crucial for identifying a vector that attackers may exploit to gain further access to systems and critical information.
  ### Investigation Steps
  - **Check EDR Alerts:** Investigate any recent alerts from the endpoint detection and response (EDR) systems to assess unusual process creations or file accesses occurring at the same time as the suspicious file generation.
  - **Review Security Logs:** Analyze Windows Security event logs for any logon events leading up to the creation of `debug.bin`, focusing on any suspicious or unknown users who logged in during that time.
  - **Correlate Network Activity:** Utilize network detection and response (NDR) tools to review outbound connections associated with the system where the file was detected, looking for any unexpected communications that could indicate data exfiltration.
  - **Cross-Examine Process Trees:** Examine the process creation logs to investigate the parent and child process relationships around the time of the `debug.bin` creation, so as to identify any potentially malicious parent processes that could indicate a compromise.
  ### Prioritization
  The alert is categorized as high severity due to the association with credential dumping, which poses a significant risk to account integrity and overall system security. In an enterprise environment, reducing exposure to such attacks is imperative to maintain the confidentiality and integrity of critical information.
  ### Blind Spots and Assumptions
  This rule may not trigger in cases where the filename or its generation location is altered by an adversary to evade detection, such as using different paths or naming conventions. Additionally, legitimate applications might occasionally generate files with similar names in rare scenarios, which could lead to false positives. There may also be situations where file creation events are suppressed or not logged due to specific system configurations, affecting rule efficacy.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
