title: ISO File Created Within Temp Folders
id: 2f9356ae-bf43-41b8-b858-4496d83b2acb
status: test
description: Detects the creation of a ISO file in the Outlook temp folder or in the
  Appdata temp folder. Typical of Qakbot TTP from end-July 2022.
references:
- https://twitter.com/Sam0x90/status/1552011547974696960
- https://securityaffairs.co/wordpress/133680/malware/dll-sideloading-spread-qakbot.html
- https://github.com/redcanaryco/atomic-red-team/blob/0f229c0e42bfe7ca736a14023836d65baa941ed2/atomics/T1553.005/T1553.005.md#atomic-test-1---mount-iso-image
author: '@sam0x90'
date: 2022-07-30
tags:
- attack.initial-access
- attack.t1566.001
logsource:
  category: file_event
  product: windows
detection:
  selection_1:
    TargetFilename|contains|all:
    - '\AppData\Local\Temp\'
    - '.zip\'
    TargetFilename|endswith: '.iso'
  selection_2:
    TargetFilename|contains: '\AppData\Local\Microsoft\Windows\INetCache\Content.Outlook\'
    TargetFilename|endswith: '.iso'
  condition: 1 of selection*
fields:
- Image
- ComputerName
- TargetFileName
falsepositives:
- Potential FP by sysadmin opening a zip file containing a legitimate ISO file
level: high
notes: |
  ### Technical Context
  This detection rule aims to identify the creation of ISO files within specific temporary folders associated with Outlook and the AppData directory in Windows environments. ISO files are often used for malicious activities, particularly by threats like Qakbot, which have been linked to their creation in these locations. The rule checks for entries in file event logs, focusing on key paths where these files might be generated, specifically looking for file names that contain 'AppData\Local\Temp\' or 'INetCache\Content.Outlook\' while ensuring the file name ends with '.iso'. By utilizing this method, analysts can effectively pinpoint potentially malicious activity while reducing noise from non-threatening events.
  ### Investigation Steps
  - Query EDR to identify the original process that created the ISO file, focusing on parent-child relationships to understand how the file came into being.
  - Analyze command-line parameters used by processes in the vicinity of the file creation to determine if they exhibit suspicious behavior or known indicators of compromise.
  - Review proxy logs for any unusual outbound connections or downloads that may correlate with the timestamps of the ISO file creation to assess potential data exfiltration or command-and-control communication.
  - Examine Windows event logs, particularly around user activity, to establish whether this file creation aligns with any legitimate user actions or is indicative of unauthorized access.
