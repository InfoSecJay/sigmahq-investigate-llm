title: WerFault LSASS Process Memory Dump
id: c3e76af5-4ce0-4a14-9c9a-25ceb8fda182
status: test
description: Detects WerFault creating a dump file with a name that indicates that
  the dump file could be an LSASS process memory, which contains user credentials
references:
- https://github.com/helpsystems/nanodump
author: Florian Roth (Nextron Systems)
date: 2022-06-27
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  product: windows
  category: file_event
detection:
  selection:
    Image: C:\WINDOWS\system32\WerFault.exe
    TargetFilename|contains:
    - '\lsass'
    - 'lsass.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  # WerFault LSASS Process Memory Dump Detection Rule Documentation
  ### Technical Context
  The "WerFault LSASS Process Memory Dump" detection rule aims to identify potentially malicious activities wherein the Windows Error Reporting (WerFault) process is used to create a memory dump of the LSASS (Local Security Authority Subsystem Service) process. LSASS is a critical Windows process that manages security policy, handles user logins, and stores user credentials in memory. When a dump file is created that includes "lsass" in its filename, it may suggest an attempt to exfiltrate sensitive information, such as usernames and passwords, stored within the LSASS process. This rule relies on file event logs generated by Windows, particularly focusing on events that indicate the creation of files by the WerFault executable. 
  From a cybersecurity perspective, this technique falls under the MITRE ATT&CK framework as a method of credential access (T1003.001: Credential Dumping: LSASS Memory), where adversaries may employ various tools to extract account credentials from system memory. 
  ### Investigation Steps
  - **Verify Event Logs:** Check Windows Event Logs for process creation events related to `WerFault.exe` and look for any file creation events involving filenames that include "lsass" or "lsass.exe".
  - **Analyze File Metadata:** Use EDR tools to analyze the metadata of the generated dump file to identify its creation time, owner, and any abnormal behavior associated with it.
  - **Check for Anomalous Process Behavior:** Review other processes running at the time of the alert to identify suspicious activity or processes that may correlate with the WerFault execution.
  - **Cross-reference Network Activity:** Use network detection tools to correlate any outbound connections with timestamps that align with the time a memory dump was created, helping to identify potential data exfiltration attempts.
  ### Prioritization
  This alert is categorized as high severity due to the critical nature of the LSASS process and the potential risk associated with unauthorized access to sensitive credentials, which could lead to further compromise of accounts and systems within the enterprise.
  ### Blind Spots and Assumptions
  This rule may fail to fire if the WerFault process is executed from a non-standard location or if the attack employs obfuscation to avoid detection by standard file naming conventions. Additionally, if an adversary manages to disable Windows Error Reporting or manipulate process execution, the rule may not trigger as intended. It is assumed that all standard logging mechanisms are functioning correctly and that there are no active logging policy violations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
