title: Suspicious DotNET CLR Usage Log Artifact
id: e0b06658-7d1d-4cd3-bf15-03467507ff7c
related:
- id: 4508a70e-97ef-4300-b62b-ff27992990ea
  type: derived
- id: e4b63079-6198-405c-abd7-3fe8b0ce3263
  type: obsolete
status: test
description: Detects the creation of Usage Log files by the CLR (clr.dll). These files
  are named after the executing process once the assembly is finished executing for
  the first time in the (user) session context.
references:
- https://bohops.com/2021/03/16/investigating-net-clr-usage-log-tampering-techniques-for-edr-evasion/
- https://github.com/olafhartong/sysmon-modular/blob/fa1ae53132403d262be2bbd7f17ceea7e15e8c78/11_file_create/include_dotnet.xml
- https://web.archive.org/web/20221026202428/https://gist.github.com/code-scrap/d7f152ffcdb3e0b02f7f394f5187f008
- https://web.archive.org/web/20230329154538/https://blog.menasec.net/2019/07/interesting-difr-traces-of-net-clr.html
author: frack113, omkar72, oscd.community, Wojciech Lesicki
date: 2022-11-18
modified: 2023-02-23
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: file_event
  product: windows
  definition: 'Requirements: UsageLogs folder must be monitored by the sysmon configuration'
detection:
  selection:
    TargetFilename|endswith:
    - '\UsageLogs\cmstp.exe.log'
    - '\UsageLogs\cscript.exe.log'
    - '\UsageLogs\mshta.exe.log'
    - '\UsageLogs\msxsl.exe.log'
    - '\UsageLogs\regsvr32.exe.log'
    - '\UsageLogs\rundll32.exe.log'
    - '\UsageLogs\svchost.exe.log'
    - '\UsageLogs\wscript.exe.log'
    - '\UsageLogs\wmic.exe.log'
  filter_main_rundll32:
        # This filter requires the event to be enriched by additional information such as ParentImage and CommandLine activity
    ParentImage|endswith: '\MsiExec.exe'
    ParentCommandLine|contains: ' -Embedding'
    Image|endswith: '\rundll32.exe'
    CommandLine|contains|all:
    - 'Temp'
    - 'zzzzInvokeManagedCustomActionOutOfProc'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Rundll32.exe with zzzzInvokeManagedCustomActionOutOfProc in command line and msiexec.exe
  as parent process - https://twitter.com/SBousseaden/status/1388064061087260675
level: high
notes: |
  n
  ### Technical Context
  The "Suspicious DotNET CLR Usage Log Artifact" detection rule identifies instances where .NET Common Language Runtime (CLR) is used to create log files related to specific Windows executables. The rule is particularly focused on log files generated by processes like `cmstp.exe`, `cscript.exe`, `mshta.exe`, and others within the UsageLogs folder, which are indicative of a .NET application executing in a user session. It employs data from Windows Sysmon's file event logs to monitor for this behavior, specifically looking for processes that run with certain command-line parameters and parent command-line conditions. This detection aligns with the MITRE ATT&CK methodology by targeting the tactic of defense evasion, specifically technique T1218 (Signed Binary Proxy Execution), where attackers may exploit legitimate system processes to obfuscate malicious activities.
  ### Investigation Steps
  - **Review Sysmon Logs**: Check Sysmon logs for the creation of the specified `.log` files in the UsageLogs folder. Validate the context of the parent processes and their command-line arguments.
  - **Analyze Parent Process**: Identify the parent process that spawned the suspicious activity, particularly focusing on if it is `MsiExec.exe` with the `-Embedding` parameter, which can indicate potential misuse or hostile activity.
  - **Correlate with EDR Data**: Use Endpoint Detection and Response (EDR) tools to correlate the alert with any other suspicious activities on the endpoints, such as abnormal process behavior or execution patterns.
  - **Investigate Recent Changes**: Review recent software deployments or changes to the system that could correlate with this behavior. Check for any experimental or development tools that may inadvertently generate these logs.
  ### Prioritization
  Given the high severity level of this alert, it indicates significant potential for malicious activity. The creation of these CLR logs, particularly under suspicious conditions, can signify an evasion technique, warranting immediate investigation by SOC analysts.
  ### Blind spots and Assumptions
  This detection rule may fail to fire if proper Sysmon configuration is not in place to monitor the UsageLogs folder or if the process does not execute in a user session context. Additionally, legitimate applications might also generate similar log entries, leading to potential false positives. Analysts should be aware that advanced adversaries may modify or hide the behavior of their attacks, resulting in misleading or missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
