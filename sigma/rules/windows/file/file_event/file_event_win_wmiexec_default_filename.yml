title: Wmiexec Default Output File
id: 8d5aca11-22b3-4f22-b7ba-90e60533e1fb
status: test
description: Detects the creation of the default output filename used by the wmiexec
  tool
references:
- https://www.crowdstrike.com/blog/how-to-detect-and-prevent-impackets-wmiexec/
- https://github.com/fortra/impacket/blob/f4b848fa27654ca95bc0f4c73dbba8b9c2c9f30a/examples/wmiexec.py
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-06-02
modified: 2023-03-08
tags:
- attack.lateral-movement
- attack.t1047
logsource:
  category: file_event
  product: windows
detection:
  selection:
  - TargetFilename|re: '\\Windows\\__1\d{9}\.\d{1,7}$'       # Admin$
  - TargetFilename|re: 'C:\\__1\d{9}\.\d{1,7}$'       # C$
  - TargetFilename|re: 'D:\\__1\d{9}\.\d{1,7}$'       # D$
  condition: selection
falsepositives:
- Unlikely
level: critical
notes: |
  ### Technical Context
  The specified Sigma rule is designed to detect the creation of files that match specific naming patterns used by the WMIExec tool, which can facilitate lateral movement across a network. This behavior is indicative of potential malicious activity, as WMIExec is often exploited by attackers to execute commands on remote systems without the need for interactive sessions. The rule focuses on the creation of files with filenames that contain a timestamp pattern, specifically targeting the default output file generated by WMIExec in various administrative shares (Admin$, C$, and D$). The primary technical data sources for this detection are file event logs generated by Windows, which can be monitored through Sysmon or native Windows logging mechanisms. This detection activity aligns with the MITRE ATT&CK framework under the tactic of Lateral Movement, specifically technique T1047 (Windows Management Instrumentation).
  ### Investigation Steps
  - **Check File Creation Timestamp:** Review the file creation timestamps in the logs to correlate with user activity and determine if they fall within normal operational hours or match known attack patterns.
    
  - **Review Process Creation Logs:** Inspect recent process creation events to identify processes that may have invoked WMIExec, looking for command-line arguments that suggest abnormal usage.
  - **Assess Network Connections:** Utilize EDR or network logs to monitor for unusual outbound connections initiated by the system that may correlate with the use of WMIExec, which could indicate an ongoing attack.
  - **Evaluate User Permissions:** Verify the user accounts involved in the suspicious file creation for any elevated privileges or anomalous access patterns, especially if accounts typically do not engage in remote command executions.
  ### Prioritization
  This alert is classified as critical due to the potential for lateral movement and compromise of internal systems using WMIExec, making it imperative to investigate quickly to prevent further network infiltration.
  ### Blind Spots and Assumptions
  There are several factors that could impact the effectiveness of this rule. It may not fire if the attacker uses custom file naming conventions that do not match the specified regex patterns or if file creation events are disabled within the monitored environment. Additionally, legitimate administrative activities may occasionally generate similar file patterns, leading to false positives. Analysts should be aware that sophisticated adversaries might employ obfuscation or rename files post-creation to evade detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
