title: Potential Privilege Escalation Attempt Via .Exe.Local Technique
id: 07a99744-56ac-40d2-97b7-2095967b0e03
status: test
description: Detects potential privilege escalation attempt via the creation of the
  "*.Exe.Local" folder inside the "System32" directory in order to sideload "comctl32.dll"
references:
- https://github.com/binderlabs/DirCreate2System
- https://github.com/sailay1996/awesome_windows_logical_bugs/blob/60cbb23a801f4c3195deac1cc46df27c225c3d07/dir_create2system.txt
author: Nasreddine Bencherchali (Nextron Systems), Subhash P (@pbssubhash)
date: 2022-12-16
modified: 2022-12-19
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|startswith:
    - 'C:\Windows\System32\logonUI.exe.local'
    - 'C:\Windows\System32\werFault.exe.local'
    - 'C:\Windows\System32\consent.exe.local'
    - 'C:\Windows\System32\narrator.exe.local'
    - 'C:\Windows\System32\wermgr.exe.local'
    TargetFilename|endswith: '\comctl32.dll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential privilege escalation attempts via the manipulation of executable files within the System32 directory. Specifically, it looks for the creation of files with a ".Exe.Local" extension that correspond to legitimate Windows executables like `logonUI.exe`, `werFault.exe`, and others. Adversaries may use this technique to sideload the `comctl32.dll` DLL, thereby compromising system integrity and escalating privileges within the environment. The rule analyzes file event logs, particularly focusing on file creation events captured by the Windows file system. By correlating the creation of these ".Exe.Local" files with the corresponding DLL payload, the rule aims to detect malicious activities. This behavior aligns with the MITRE ATT&CK techniques for defense evasion and privilege escalation.
  ### Investigation Steps
  - **Check the EDR Alerts for Related Processes:** Analyze the event logs from the endpoint detection and response (EDR) solution to identify any malicious processes spawned around the time the ".Exe.Local" files were created. 
  - **Review the File Operations for File Integrity:** Investigate related activity in Sysmon logs, particularly looking for `create_stream_hash` and `process_creation` events that show unauthorized access or manipulation of the created files.
  - **Assess Windows Security Logs:** Inspect Windows Security logs for unusual authentication attempts or privilege escalation events that may coincide with the identified file creation activities.
  - **Correlate with Network Activity:** Utilize network detection and response (NDR) tools to analyze any outgoing connections from the affected systems that could indicate data exfiltration or further compromise.
  ### Prioritization
  The severity level is marked as high due to the potential impact of privilege escalation that can allow adversaries to gain unauthorized access to sensitive information or perform actions with elevated permissions, which could lead to significant breaches in the enterprise.
  ### Blind Spots and Assumptions
  This detection rule may not fire if an adversary uses alternative methods for privilege escalation that do not involve creating ".Exe.Local" files in the System32 directory. Additionally, it assumes that file system auditing is enabled to capture such event logs; if not, the rule will be ineffective. Adversaries may also attempt to create false positives by mimicking legitimate processes or by conducting their actions on systems where the detection is not properly monitored.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
