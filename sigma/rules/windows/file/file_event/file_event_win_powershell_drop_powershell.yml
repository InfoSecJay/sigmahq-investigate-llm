title: PowerShell Script Dropped Via PowerShell.EXE
id: 576426ad-0131-4001-ae01-be175da0c108
status: test
description: Detects PowerShell creating a PowerShell file (.ps1). While often times
  this behavior is benign, sometimes it can be a sign of a dropper script trying to
  achieve persistence.
references:
- https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution
author: frack113
date: 2023-05-09
tags:
- attack.persistence
logsource:
  product: windows
  category: file_event
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    TargetFilename|endswith: '.ps1'
  filter_main_psscriptpolicytest:
    TargetFilename|contains: '__PSScriptPolicyTest_'
  filter_main_appdata:
    TargetFilename|startswith: 'C:\Users\'
    TargetFilename|contains: '\AppData\Local\Temp\'
  filter_main_windows_temp:
    TargetFilename|startswith: 'C:\Windows\Temp\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- False positives will differ depending on the environment and scripts used. Apply
  additional filters accordingly.
level: low
notes: |
  ### Technical Context
  This Sigma rule detects instances where PowerShell (both `powershell.exe` and `pwsh.exe`) creates a PowerShell script file with a `.ps1` extension. The rule aims to identify behavior that, while potentially benign, may also be indicative of a dropper script seeking persistence within a compromised system. It analyzes the process creation event details, particularly focusing on the target filename to identify newly created scripts. Specific conditions are set to filter out standard practices such as `__PSScriptPolicyTest_` usage, as well as temporary file paths commonly associated with benign operations. This detection aligns with the MITRE ATT&CK tactic of persistence and the technique of PowerShell for script execution (ID: T1064).
  ### Investigation Steps
  - **Review EDR Alerts:** Examine alerts triggered by EDR solutions for any associated commands or arguments that were run alongside the PowerShell script creation. Investigate which user initiated the script and if there are any preceding suspicious activities.
  - **Analyze PowerShell Logs:** Check the PowerShell operational logs (if available) for additional context around the execution behavior. Focus on logs that indicate the execution policy and the command that initiated the script creation.
  - **Inspect File System Artifacts:** Utilize filesystem monitoring tools to locate the created `.ps1` file and any related files or registry entries that could indicate persistence mechanisms. Look for properties such as file creation timestamps and modification history.
  - **Evaluate Network Connections:** Investigate any subsequent network connections made by the PowerShell process to identify potential callbacks or command-and-control communications. Correlate this with DNS query logs and proxy logs for further insights.
  ### Prioritization
  The severity level for alerts triggered by this rule is categorized as low due to the wide range of benign scripts that might be executed using PowerShell. However, any occurrence of a PowerShell-created script in user directories, particularly in `Temp` or `AppData`, should be treated with suspicion and warrant further investigation.
  ### Blind Spots and Assumptions
  This rule may fail to detect occurrences where scripts are run from trusted paths or when the script creation is performed using alternative methods (such as direct file manipulation without invoking PowerShell). Additionally, environments utilizing custom PowerShell execution policies or frequently generating `.ps1` files through legitimate means may yield false negatives or positives. Responders should be aware that certain scripts might bypass detection, especially if they are not conforming to the defined patterns or use obfuscation techniques.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
