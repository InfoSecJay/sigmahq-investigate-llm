title: Creation Of Non-Existent System DLL
id: df6ecb8b-7822-4f4b-b412-08f524b4576c
related:
- id: 6b98b92b-4f00-4f62-b4fe-4d1920215771     # ImageLoad rule
  type: similar
status: test
description: |
  Detects the creation of system DLLs that are usually not present on the system (or at least not in system directories).
  Usually this technique is used to achieve DLL hijacking.
references:
- https://decoded.avast.io/martinchlumecky/png-steganography/
- https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992
- https://clement.notin.org/blog/2020/09/12/CVE-2020-7315-McAfee-Agent-DLL-injection/
- https://github.com/Wh04m1001/SysmonEoP
- https://www.hexacorn.com/blog/2013/12/08/beyond-good-ol-run-key-part-5/
- https://github.com/blackarrowsec/redteam-research/tree/26e6fc0c0d30d364758fa11c2922064a9a7fd309/LPE%20via%20StorSvc
author: Nasreddine Bencherchali (Nextron Systems), fornotes
date: 2022-12-01
modified: 2024-01-10
tags:
- attack.defense-evasion
- attack.persistence
- attack.privilege-escalation
- attack.t1574.001
- attack.t1574.002
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename|endswith:
    - ':\Windows\System32\TSMSISrv.dll'
    - ':\Windows\System32\TSVIPSrv.dll'
    - ':\Windows\System32\wbem\wbemcomn.dll'
    - ':\Windows\System32\WLBSCTRL.dll'
    - ':\Windows\System32\wow64log.dll'
    - ':\Windows\System32\WptsExtensions.dll'
    - '\SprintCSP.dll'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule for detecting the **Creation of Non-Existent System DLL** focuses on identifying the illicit creation of DLL files that are either absent from the system or not typically located in standard operating system directories, such as `C:\Windows\System32`. This detection is important because malicious actors often leverage these techniques for DLL hijacking to execute unauthorized code with higher privileges, enabling them to conduct further attacks on the system. The rule specifically monitors for files like `TSMSISrv.dll`, `TSVIPSrv.dll`, and others that could indicate an attempt to exploit vulnerabilities related to DLL manipulation in accordance with the MITRE ATT&CK techniques `T1574.001` (DLL Side-Loading) and `T1574.002` (DLL Hijacking).
  The detection mechanism pulls telemetry from various Windows sources, primarily focused on file events logged by the operating system. By examining the processes creating specific DLLs, the rule effectively flags suspicious activities. Analysts need to pay attention to command-line parameters and process creation events that signify abnormal or unauthorized behavior, helping to minimize the risk of privilege escalation or lateral movement within the network.
  ### Investigation Steps
  - **Review File Creation Logs:** Check file event logs for the creation of the specified DLL files, focusing on unusual parent processes or timings that deviate from normal operational behavior.
  - **Correlate with Process Creation Events:** Utilize EDR tools to review the list of processes running during the DLL creation time; identify any suspicious parent-child relationships that lead to the file creation.
  - **Analyze Command-Line Arguments:** Investigate the command-line parameters of the processes that triggered the alert to see if they exhibit malicious intent, such as executing payloads or accessing unauthorized directories.
  - **Inspect Network Connections:** Utilize network detection and response (NDR) tools to check if any abnormal outbound connections were made by the process in question, which could indicate data exfiltration or callback mechanisms.
  ### Prioritization
  The alert is classified as medium severity as the creation of non-existent system DLLs can signify an attempt to carry out malicious activities, though not every instance guarantees a compromise. Immediate investigation is warranted to determine if it represents an actual security threat or a benign misconfiguration.
  ### Blind Spots and Assumptions
  This detection rule may miss instances where DLLs are created in paths not monitored by the SIEM or when benign applications use non-standard DLLs. Additionally, some advanced adversaries may obfuscate their techniques or use legitimate services to perform these actions, making detection challenging. Assumptions include that the system is in a standard configuration and that monitoring for file events is properly set up across all endpoints.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
