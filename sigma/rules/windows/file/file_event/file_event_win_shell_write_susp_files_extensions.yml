title: Windows Binaries Write Suspicious Extensions
id: b8fd0e93-ff58-4cbd-8f48-1c114e342e62
related:
- id: 1277f594-a7d1-4f28-a2d3-73af5cbeab43
  type: derived
status: test
description: Detects Windows executables that write files with suspicious extensions
references:
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-12
modified: 2024-04-15
tags:
- attack.defense-evasion
- attack.t1036
logsource:
  category: file_event
  product: windows
detection:
  selection_generic:
    Image|endswith:
    - '\csrss.exe'
    - '\lsass.exe'
    - '\RuntimeBroker.exe'
    - '\sihost.exe'
    - '\smss.exe'
    - '\wininit.exe'
    - '\winlogon.exe'
    TargetFilename|endswith:
    - '.bat'
    - '.dll'
    - '.exe'
    - '.hta'
    - '.iso'
    - '.ps1'
    - '.txt'
    - '.vbe'
    - '.vbs'
  selection_special:
    Image|endswith:
    - '\dllhost.exe'
    - '\rundll32.exe'
    - '\svchost.exe'
    TargetFilename|endswith:
    - '.bat'
    - '.hta'
    - '.iso'
    - '.ps1'
    - '.vbe'
    - '.vbs'
  filter_main_AppLockerPolicyTest:
    Image: 'C:\Windows\System32\dllhost.exe'
    TargetFilename|contains|all:
    - ':\Users\'
    - '\AppData\Local\Temp\__PSScriptPolicyTest_'
    TargetFilename|endswith: '.ps1'
  filter_main_script_gpo_machine:
    Image: 'C:\Windows\system32\svchost.exe'
    TargetFilename|contains|all:
    - 'C:\Windows\System32\GroupPolicy\DataStore\'
    - '\sysvol\'
    - '\Policies\'
    - '\Machine\Scripts\Startup\'
    TargetFilename|endswith:
    - '.ps1'
    - '.bat'
  condition: 1 of selection_* and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Windows Binaries Write Suspicious Extensions" aims to detect instances where certain Windows executables (e.g., `csrss.exe`, `lsass.exe`, `dllhost.exe`, and others) write files with potentially malicious extensions like `.bat`, `.dll`, `.exe`, `.ps1`, and others. This behavior is significant as it often indicates attempts at evasion or lateral movement within the environment, aligning with the MITRE ATT&CK tactic of "Defense Evasion" (T1036). The primary data sources involved in this detection include file event logs from Windows, which capture activities related to file creations, modifications, and deletions, focusing on specific executables known for their operational significance and potential for misuse. The rule employs conditional filters to ignore specific legitimate contexts (e.g., files written to `C:\Windows\System32\GroupPolicy\DataStore\`) to reduce false positives and enhance the accuracy of alerts.
  ### Investigation Steps
  - **Review the Alert in EDR:** Use the EDR platform to review the context of the alert, identifying the process that created the suspicious file and any related activities or parent processes.
  - **Examine File Metadata:** Investigate the file properties and metadata of the created files using file analysis tools and logs to identify if they exhibit characteristics typical of malicious files.
  - **Analyze Network Connections:** Check the network logs (NDR) for any suspicious outbound connections initiated by the identified processes, as this may indicate exfiltration attempts or command and control activity.
  - **Review Windows Event Logs:** Look at the Windows Security and Application logs to correlate any user activity with the alerts, focusing on logs that provide insights into the process behavior prior to and after the suspicious file creation.
  ### Prioritization
  Given that the alert is categorized with a high severity level, it indicates potential malicious activity involving well-known Windows processes. This kind of behavior should be treated as a high priority due to its implications for system integrity and the risk it poses for unauthorized access or system compromise.
  ### Blind Spots and Assumptions
  This detection rule assumes that telemetry is properly monitored and that the specified Windows binaries are leveraged by adversaries in conjunction with creating malicious files. A potential blind spot exists if legitimate applications use these processes without triggering the rule, leading to false negatives. Additionally, the detection may be defeated by using benign filenames or extensions that are not included in the rule or by directly writing to disk without leveraging the targeted processes.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
