title: LSASS Process Memory Dump Files
id: a5a2d357-1ab8-4675-a967-ef9990a59391
related:
- id: db2110f3-479d-42a6-94fb-d35bc1e46492
  type: obsolete
- id: 5e3d3601-0662-4af0-b1d2-36a05e90c40a
  type: obsolete
status: test
description: Detects creation of files with names used by different memory dumping
  tools to create a memory dump of the LSASS process memory, which contains user credentials.
references:
- https://www.google.com/search?q=procdump+lsass
- https://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf
- https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/credential_access_lsass_memdump_file_created.toml
- https://www.whiteoaksecurity.com/blog/attacks-defenses-dumping-lsass-no-mimikatz/
- https://github.com/helpsystems/nanodump
- https://github.com/CCob/MirrorDump
- https://github.com/safedv/RustiveDump/blob/1a9b026b477587becfb62df9677cede619d42030/src/main.rs#L35
- https://github.com/ricardojoserf/NativeDump/blob/01d8cd17f31f51f5955a38e85cd3c83a17596175/NativeDump/Program.cs#L258
author: Florian Roth (Nextron Systems)
date: 2021-11-15
modified: 2024-10-08
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  product: windows
  category: file_event
detection:
  selection_1:
    TargetFilename|endswith:
    - '\Andrew.dmp'
    - '\Coredump.dmp'
    - '\lsass.dmp'
    - '\lsass.rar'
    - '\lsass.zip'
    - '\NotLSASS.zip'          # https://github.com/CCob/MirrorDump
    - '\PPLBlade.dmp'          # https://github.com/tastypepperoni/PPLBlade
    - '\rustive.dmp'         # https://github.com/safedv/RustiveDump/blob/main/src/main.rs#L35
  selection_2:
    TargetFilename|contains:
    - '\lsass_2'          # default format of procdump v9.0 is lsass_YYMMDD_HHmmss.dmp
    - '\lsassdmp'
    - '\lsassdump'
  selection_3:
    TargetFilename|contains|all:
    - '\lsass'
    - '.dmp'
  selection_4:
    TargetFilename|contains: 'SQLDmpr'
    TargetFilename|endswith: '.mdmp'
  selection_5:
    TargetFilename|contains:
    - '\nanodump'
    - '\proc_'         # NativeDump pattern https://github.com/ricardojoserf/NativeDump/blob/01d8cd17f31f51f5955a38e85cd3c83a17596175/NativeDump/Program.cs#L258
    TargetFilename|endswith: '.dmp'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious activities involving the LSASS (Local Security Authority Subsystem Service) process on Windows systems. It focuses on the creation of files commonly associated with memory dumping tools—such as Procdump or other similar utilities—that target LSASS memory. LSASS is critical for managing user credentials and authentication, and dumping its memory can lead to unauthorized access to sensitive information. The rule inspects file creation events for specific naming patterns indicative of memory dump files (e.g., "lsass.dmp", "lsass.zip", etc.) using data sourced from file event logs. When such files are detected, it raises alerts to prompt further investigation as they can signify a potential credential theft activity.
  ### Investigation Steps
  - Review recent file creation events in the EDR tool to identify the origin and context of the detected LSASS memory dump files. 
  - Correlate any identified processes with command-line parameters using EDR or process logs to ensure the legitimacy of actions taken around the detected file creations.
  - Check network and proxy logs for any unusual external connection attempts that may correspond to the timeframe of the dump file creation.
  - Analyze Windows event logs for user login events, especially any suspicious user credentials or failed login attempts that may indicate compromised accounts related to the file creation.
