title: Suspicious Interactive PowerShell as SYSTEM
id: 5b40a734-99b6-4b98-a1d0-1cea51a08ab2
status: test
description: Detects the creation of files that indicator an interactive use of PowerShell
  in the SYSTEM user context
references:
- https://jpcertcc.github.io/ToolAnalysisResultSheet/details/PowerSploit_Invoke-Mimikatz.htm
author: Florian Roth (Nextron Systems)
date: 2021-12-07
modified: 2022-08-13
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename:
    - 'C:\Windows\System32\config\systemprofile\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt'
    - 'C:\Windows\System32\config\systemprofile\AppData\Local\Microsoft\Windows\PowerShell\StartupProfileData-Interactive'
  condition: selection
falsepositives:
- Administrative activity
- PowerShell scripts running as SYSTEM user
level: high
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious interactive use of PowerShell executed under the SYSTEM user context. It monitors the creation of specific files that are commonly modified during the execution of interactive PowerShell sessions. The relevant files include the PowerShell ConsoleHost history file and other startup profile data files typically found in the SYSTEM profile directory. By correlating file creation events with the presence of these artifacts, security teams can effectively detect unauthorized or suspicious PowerShell activity. This rule leverages Windows file event logging to capture such activity, falling under the MITRE ATT&CK tactic of Execution and technique T1059.001, which specifically pertains to PowerShell.
  ### Investigation Steps
  - **Verify File Creation:** Check the detected file paths in the logs to confirm the creation of the specific PowerShell history or startup profile data files.
  - **Analyze User Context:** Use EDR tools to investigate the context of the process that created these files, specifically if it was executed by the SYSTEM user.
  - **Review PowerShell Activity:** Utilize PowerShell command logs or Sysmon logs to gather additional context surrounding the commands executed in this session, focusing on any potentially malicious commands.
  - **Correlate with Other Alerts:** Cross-reference this activity with related alerts from SIEM or Endpoint Detection and Response (EDR) systems to identify any correlated indicators of compromise or patterns that indicate compromise.
  ### Prioritization
  This alert is considered high severity due to the potential for malicious actors to leverage interactive PowerShell in a privileged context, which can lead to significant security breaches and system compromise.
  ### Blind Spots and Assumptions
  This rule may not fire if the files are created in a different location or if the adversary deletes or modifies the history files before detection. Additionally, legitimate administrative activities and custom scripts running as SYSTEM could trigger false positives, leading to challenges in distinguishing between benign and malicious activity. Analysts are encouraged to consider the broader context and investigate surrounding events to avoid overlooking true threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
