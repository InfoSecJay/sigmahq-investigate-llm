title: Suspicious Interactive PowerShell as SYSTEM
id: 5b40a734-99b6-4b98-a1d0-1cea51a08ab2
status: test
description: Detects the creation of files that indicator an interactive use of PowerShell
  in the SYSTEM user context
references:
- https://jpcertcc.github.io/ToolAnalysisResultSheet/details/PowerSploit_Invoke-Mimikatz.htm
author: Florian Roth (Nextron Systems)
date: 2021-12-07
modified: 2022-08-13
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename:
    - 'C:\Windows\System32\config\systemprofile\AppData\Roaming\Microsoft\Windows\PowerShell\PSReadLine\ConsoleHost_history.txt'
    - 'C:\Windows\System32\config\systemprofile\AppData\Local\Microsoft\Windows\PowerShell\StartupProfileData-Interactive'
  condition: selection
falsepositives:
- Administrative activity
- PowerShell scripts running as SYSTEM user
level: high
notes: |
  ### Technical Context
  This detection rule identifies suspicious instances of interactive PowerShell activity executed from the SYSTEM user context. Specifically, it monitors file creation events for PowerShell console history and startup profile data files located in specific directories associated with the SYSTEM user profile. The presence of these files can indicate that PowerShell is being interactively used, potentially signifying unauthorized access or lateral movement within the environment. The rule relies on file event logs generated by Windows, focusing on any creation of the specified target filenames indicative of unusual PowerShell operations.
  ### Investigation Steps
  - Utilize the EDR tool to examine the process tree and any PowerShell instances that were running under the SYSTEM user around the time of the file creation. 
  - Review Windows event logs for any unusual or unexpected login events that correspond to SYSTEM user sessions to identify the scope of the activity. 
  - Check the contents of the identified PowerShell history file for any suspicious commands or scripts that were executed, potentially revealing malicious intent.
  - Analyze relevant network logs (e.g., from the NGFW or proxy) to identify any outbound connections made during the time of these PowerShell executions, which could indicate data exfiltration or command and control communication.
