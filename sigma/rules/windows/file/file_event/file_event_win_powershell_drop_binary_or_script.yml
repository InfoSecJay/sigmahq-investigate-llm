title: Potential Binary Or Script Dropper Via PowerShell
id: 7047d730-036f-4f40-b9d8-1c63e36d5e62
status: test
description: Detects PowerShell creating a binary executable or a script file.
references:
- https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution
author: frack113, Nasreddine Bencherchali (Nextron Systems)
date: 2023-03-17
modified: 2023-05-09
tags:
- attack.persistence
logsource:
  product: windows
  category: file_event
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    TargetFilename|endswith:
    - '.bat'
    - '.chm'
    - '.cmd'
    - '.com'
    - '.dll'
    - '.exe'
    - '.hta'
    - '.jar'
    - '.js'
    - '.ocx'
    - '.scr'
    - '.sys'
    - '.vbe'
    - '.vbs'
    - '.wsf'
  filter_main_user_temp:
    TargetFilename|startswith: 'C:\Users\'
    TargetFilename|contains: '\AppData\Local\Temp\'
    TargetFilename|endswith:
    - '.dll'
    - '.exe'
  filter_main_admin_temp:
        # Example: C:\Windows\Temp\0DA9758B-4649-4969-9409-5CBDF193FB53\TransmogProvider.dll
    TargetFilename|startswith: 'C:\Windows\Temp\'
    TargetFilename|endswith:
    - '.dll'
    - '.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- False positives will differ depending on the environment and scripts used. Apply
  additional filters accordingly.
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect potential malicious behavior in the form of PowerShell scripts that create binary executables or script files. The rule monitors for process creation events where the image is PowerShell (either `powershell.exe` or `pwsh.exe`) and checks if the created files match extensions commonly used for scripts or executables (e.g., `.exe`, `.dll`, `.vbs`). It specifically filters for files being created in temporary user or administrator directories, which are typical locations for malware to execute from. The rule effectively leverages Windows file event logs to identify suspicious file creation activities that may indicate an attacker attempting to drop malicious payloads, correlating with the MITRE ATT&CK tactic of Persistence and specific technique associated with binary or script droppers.
  ### Investigation Steps
  - **Check EDR Alerts:** Review the EDR console for any alerts related to PowerShell executions around the same time as the event. Look for unusual command-line arguments that might indicate malicious intent.
  - **Analyze Process Creation Logs:** Examine Windows Event Logs for process creation events involving `powershell.exe` or `pwsh.exe` to confirm how the PowerShell script was executed.
  - **Inspect Target File Properties:** For any detected files created within the specified temporary folders, analyze their properties, hashes, and creation timestamps. Use threat intelligence databases to check for known malicious indicators.
  - **Review Network Activity:** Investigate any associated network connections occurring around the event time to identify potential data exfiltration or callback communications related to the created files.
  ### Prioritization
  This alert is designated as medium severity since it indicates a common technique used by threat actors to establish persistence or execute malware. Although it may sometimes result from benign activities, the context and patterns surrounding the event warrant immediate investigation to prevent potential security incidents.
  ### Blind Spots and Assumptions
  The rule may not fire if the malicious PowerShell execution is obfuscated or uses a different image name not specified in the rule. Additionally, legitimate administrative activities may trigger false positives, such as automated scripts executed for software deployment or system maintenance. An assumption is made that typical PowerShell usage patterns are well understood within the organization so that deviations can be appropriately assessed. Moreover, if adversaries implement measures to mask file creation events or utilize alternate methods for script execution, this rule may fail to detect the activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
