title: Potential Hidden Directory Creation Via NTFS INDEX_ALLOCATION Stream
id: a8f866e1-bdd4-425e-a27a-37619238d9c7
related:
- id: 0900463c-b33b-49a8-be1d-552a3b553dae
  type: similar
status: test
description: |
  Detects the creation of hidden file/folder with the "::$index_allocation" stream. Which can be used as a technique to prevent access to folder and files from tooling such as "explorer.exe" and "powershell.exe"
references:
- https://twitter.com/pfiatde/status/1681977680688738305
- https://soroush.me/blog/2010/12/a-dotty-salty-directory-a-secret-place-in-ntfs-for-secret-files/
- https://sec-consult.com/blog/detail/pentesters-windows-ntfs-tricks-collection/
- https://github.com/redcanaryco/atomic-red-team/blob/5c3b23002d2bbede3c07e7307165fc2a235a427d/atomics/T1564.004/T1564.004.md#atomic-test-5---create-hidden-directory-via-index_allocation
- https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-fscc/c54dec26-1551-4d3a-a0ea-4fa40f848eb3
author: Scoubi (@ScoubiMtl)
date: 2023-10-09
tags:
- attack.defense-evasion
- attack.t1564.004
logsource:
  product: windows
  category: file_event
detection:
  selection:
        # Note: Both Sysmon and ETW are unable to log the presence of such streams in the CommandLine. But EDRs such as Crowdstrike are able to use e.g. CMD console history. Users are advised to test this before usage
    TargetFilename|contains: '::$index_allocation'
  condition: selection
falsepositives:
- Unlikely
level: medium
notes: |
  n
  ### Technical Context
  This rule aims to identify the creation of hidden directories or files on NTFS systems through the use of the "::$index_allocation" stream. This technique allows malicious actors to obscure files and folders from standard file exploration tools like "explorer.exe" and "powershell.exe," making it harder for defenders to detect them. The rule monitors file events in Windows environments, particularly looking for operations that involve the special NTFS stream, which is uniquely formatted to bypass typical system visibility. By leveraging data from EDRs capable of capturing command-line history, such as CrowdStrike, this detection can provide insight into potentially nefarious activities that attempt to hide illicit files or directories.
  ### Investigation Steps
  - Review file event logs through your EDR to identify any instances of file creation that include the "::$index_allocation" stream. This can help pinpoint when and where the hidden items were created.
  - Cross-reference the identified files with known legitimate applications or user activities to determine if the creations could be benign or if they warrant further scrutiny.
  - Use command-line logs to analyze the context in which the hidden directories were accessed or created. Focus on any unusual behavior that lacks typical administrative or user approval.
  - Perform a thorough inspection of the PC or server filesystem where the hidden items are located. Check for other indicators of compromise, such as unrelated hidden files or suspicious process activity.
