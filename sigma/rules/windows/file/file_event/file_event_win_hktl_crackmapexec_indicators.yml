title: HackTool - CrackMapExec File Indicators
id: 736ffa74-5f6f-44ca-94ef-1c0df4f51d2a
related:
- id: 9433ff9c-5d3f-4269-99f8-95fc826ea489
  type: obsolete
status: experimental
description: Detects file creation events with filename patterns used by CrackMapExec.
references:
- https://github.com/byt3bl33d3r/CrackMapExec/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-03-11
modified: 2024-06-27
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  product: windows
  category: file_event
detection:
  selection_path:
    TargetFilename|startswith: 'C:\Windows\Temp\'     # The disk extension is hardcoded in the tool.
  selection_names_str:
    TargetFilename|endswith:
    - '\temp.ps1'         # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/modules/keepass_trigger.py#L42C41-L42C68
    - '\msol.ps1'         # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/modules/msol.py#L48C98-L48C106
  selection_names_re:
  - TargetFilename|re: '\\[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\.txt$'       # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/protocols/wmi/wmiexec.py#L86
  - TargetFilename|re: '\\[a-zA-Z]{8}\.tmp$'       # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/protocols/smb/atexec.py#L145C19-L146
  condition: selection_path and 1 of selection_names_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to identify potential usage of CrackMapExec, a post-exploitation tool frequently used by attackers to automate interactions with Windows devices. The rule specifically monitors file creation events within the `C:\Windows\Temp\` directory for filenames that match certain patterns associated with CrackMapExec's operations. These patterns include specific PowerShell scripts (`temp.ps1` and `msol.ps1`) and other generated files that follow established naming conventions typically linked to malicious activities. By leveraging file event logs, this detection rule helps incident responders spot suspicious behaviors that may indicate credential harvesting attempts or lateral movement within the network.
  ### Investigation Steps
  - Query EDR logs for process creation events that involve `CrackMapExec` or related PowerShell commands originating from any endpoints where file creation events were triggered.
  - Examine antivirus logs to identify if any detection events correlate with the observed file creation, focusing on alerts related to the identified filename patterns.
  - Review proxy logs and cloud access logs to detect any external communications or authentication attempts following the file creation events, which may indicate further exploitation attempts.
  - Conduct a search across active directory logs to identify any unusual user authentications or account activities that coincide with the file creation events, providing context for potential lateral movement.
