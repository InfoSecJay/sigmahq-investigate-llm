title: HackTool - CrackMapExec File Indicators
id: 736ffa74-5f6f-44ca-94ef-1c0df4f51d2a
related:
- id: 9433ff9c-5d3f-4269-99f8-95fc826ea489
  type: obsolete
status: experimental
description: Detects file creation events with filename patterns used by CrackMapExec.
references:
- https://github.com/byt3bl33d3r/CrackMapExec/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-03-11
modified: 2024-06-27
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  product: windows
  category: file_event
detection:
  selection_path:
    TargetFilename|startswith: 'C:\Windows\Temp\'     # The disk extension is hardcoded in the tool.
  selection_names_str:
    TargetFilename|endswith:
    - '\temp.ps1'         # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/modules/keepass_trigger.py#L42C41-L42C68
    - '\msol.ps1'         # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/modules/msol.py#L48C98-L48C106
  selection_names_re:
  - TargetFilename|re: '\\[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\.txt$'       # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/protocols/wmi/wmiexec.py#L86
  - TargetFilename|re: '\\[a-zA-Z]{8}\.tmp$'       # https://github.com/byt3bl33d3r/CrackMapExec/blob/3c3e412193cb6d3237abe90c543e5d995bfa4447/cme/protocols/smb/atexec.py#L145C19-L146
  condition: selection_path and 1 of selection_names_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule aims to identify suspicious file creation events associated with CrackMapExec, a tool commonly used for penetration testing and credential abuse. The rule searches for files created in the `C:\Windows\Temp\` directory that either follow specific naming patterns or consistent extensions, such as `.ps1` or `.tmp`, which are indicative of potential malicious use. Key patterns include filenames ending with predefined scripts like `temp.ps1` or `msol.ps1`, and those adhering to specific regular expressions reflecting autogenerated identifiers or temporary files. All relevant telemetry is derived from file events logged on Windows systems, specifically monitoring the `TargetFilename` to determine if it meets the specified criteria. This detection correlates with the MITRE ATT&CK technique for credential access (T1003.001), highlighting its role in post-exploitation scenarios.
  ### Investigation Steps
  - **Check File Creation Logs**: Investigate the Windows Security or Sysmon logs for file creation events matching the identified suspicious patterns. Verify the timestamp and source process for context.
    
  - **Analyze Related Process Activity**: Utilize the EDR to inspect the process tree at the time of file creation. Look for parent processes that could indicate malicious activity, such as `powershell.exe` or other uncommon executables.
  - **Review Network Connections**: Use the NDR/NFW tools to check for any unusual outbound connections from the host around the time of the file creation events. This can reveal potential exfiltration or communication with Command and Control servers.
  - **Check for Existing Alerts**: Review the SIEM or AV logs for any prior alerts related to the same endpoint or ongoing campaigns known to utilize CrackMapExec. This information can help establish whether the behavior escalates from a known threat.
  ### Prioritization
  The alert is categorized as high severity due to the associated risk of credential theft and potential lateral movement within the enterprise network, representing a significant security threat.
  ### Blind Spots and Assumptions
  This rule relies on the ability to monitor file creation events and may miss instances where such files are deleted shortly after creation or if they are created in less monitored directories. Additionally, if adversaries rename their files to avoid detection or use legitimate processes to create files, the rule may fail. Understanding these limitations is essential for refining detection and gaining better visibility into potential threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
