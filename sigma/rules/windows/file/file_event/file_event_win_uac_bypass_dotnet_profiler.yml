title: UAC Bypass Using .NET Code Profiler on MMC
id: 93a19907-d4f9-4deb-9f91-aac4692776a6
status: test
description: Detects the pattern of UAC Bypass using .NET Code Profiler and mmc.exe
  DLL hijacking (UACMe 39)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2022-10-09
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|startswith: 'C:\Users\'
    TargetFilename|endswith: '\AppData\Local\Temp\pe386.dll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule aims to detect UAC (User Account Control) bypass attempts using a technique that involves a .NET Code Profiler in combination with the Microsoft Management Console (MMC). The specific behavior observed is DLL hijacking related to the loading of a malicious Dynamic Link Library (DLL) named `pe386.dll` from a user's temporary application data directory. The rule focuses on file event logs that capture actions performed on files in specific directories, particularly targeting filenames that start with `C:\Users\` and end with `\AppData\Local\Temp\pe386.dll`. This technique is associated with the MITRE ATT&CK framework under the tactic of Defenses Evading and the technique T1548.002, which outlines methods adversaries use to bypass security controls.
  ### Investigation Steps
  - **Review EDR Logs:** Check endpoint detection and response (EDR) logs on the affected host for any suspicious process execution related to `mmc.exe` or `pe386.dll`, particularly any irregular patterns or unexpected parent-child relationships.
    
  - **Analyze Process Creation Events:** Use Windows Event Logs to review process creation events that show the execution of `mmc.exe` and trace it back to any DLL loading that could indicate an attempted UAC bypass.
  - **Inspect File Activity:** Query file event logs to identify any recent access or modification timestamps pertaining to `pe386.dll`, particularly focusing on the `C:\Users\<username>\AppData\Local\Temp\` directory.
  - **Review User Account Changes:** Verify any changes to user account privileges or access rights on the system, especially if there are indications of attempts to escalate privileges or disable security features.
  ### Prioritization
  This alert is categorized as high severity because the detection of a UAC bypass technique suggests a potential escalation of privileges by an adversary, which can lead to greater access and control over targeted systems.
  ### Blind Spots and Assumptions
  The rule may not fire if the adversary uses alternate techniques for UAC bypass or employs a different naming convention for the DLLs. Furthermore, false negatives can occur if temp files are cleared before detection, or if the attack uses legitimate system files. Analysts should assume that not all DLL hijacking attempts will follow the patterns outlined in this rule, and monitoring should be coupled with threat intelligence or anomaly detection for comprehensive coverage.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
