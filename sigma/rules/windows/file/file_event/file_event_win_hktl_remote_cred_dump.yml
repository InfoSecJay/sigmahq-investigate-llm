title: HackTool - Potential Remote Credential Dumping Activity Via CrackMapExec Or
  Impacket-Secretsdump
id: 6e2a900a-ced9-4e4a-a9c2-13e706f9518a
status: test
description: Detects default filenames output from the execution of CrackMapExec and
  Impacket-secretsdump against an endpoint.
references:
- https://github.com/Porchetta-Industries/CrackMapExec
- https://github.com/SecureAuthCorp/impacket/blob/master/examples/secretsdump.py
author: SecurityAura
date: 2022-11-16
modified: 2024-06-27
tags:
- attack.credential-access
- attack.t1003
logsource:
  product: windows
  category: file_event
detection:
  selection:
    Image|endswith: '\svchost.exe'
        # CommandLine|contains: 'RemoteRegistry' # Uncomment this line if you collect CommandLine data for files events from more accuracy
    TargetFilename|re: '\\Windows\\System32\\[a-zA-Z0-9]{8}\.tmp$'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential credential dumping activity using tools like CrackMapExec and Impacket's SecretsDump, which are commonly leveraged by attackers to extract sensitive information from compromised systems. The rule focuses on detecting specific file events generated by these tools, particularly through the creation of temporary files (ending in `.tmp`) in the Windows System32 directory. This behavior is considered suspicious as it typically indicates an unauthorized attempt to access and extract credentials from the system. The rule employs the MITRE ATT&CK techniques under the `credential-access` tactic, specifically T1003 (Credential Dumping). By monitoring for events associated with the execution of svchost.exe, which is often the host process for various Windows services, the rule can capture these potentially malicious activities.
  ### Investigation Steps
  - **Check File Creation Events**: Query the file events to identify any recent `.tmp` files created under the `C:\Windows\System32` directory. Pay special attention to the filename pattern, which is commonly associated with credential dumping activities.
  - **Examine Process Activity**: Use EDR tools to review the process execution history, specifically focusing on instances of `svchost.exe`. Look for any unusual command-line parameters or associated child processes that might indicate exploitation.
  - **Review Network Connections**: Investigate any outbound network connections from the suspicious processes using your NDR or firewall logs. Determine if there were any connections to known malicious IPs or unusual domains during the timeframe of the alert.
  - **Analyze User Activity**: Check the Windows Security logs for unusual logon patterns or suspicious user actions that coincide with the identified processes. Look for any unauthorized administrative access or account compromises.
  ### Prioritization
  This alert is considered high severity due to the sensitive nature of credential dumping activities, which can lead to broader compromises in the network if not promptly addressed. Immediate investigation is critical to prevent potential lateral movement by adversaries.
  ### Blind Spots and Assumptions
  The detection rule may not fire if the tools are executed with different filenames or if the temporary files are created in non-standard locations. Additionally, if command-line monitoring for file events is not enabled, the rule may lack critical context, leading to false negatives. Analysts should be aware that sophisticated adversaries might evade detection by modifying the execution environment or using less recognizable tools to perform credential dumping. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and consistency, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
