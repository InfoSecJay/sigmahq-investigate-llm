title: Creation Exe for Service with Unquoted Path
id: 8c3c76ca-8f8b-4b1d-aaf3-81aebcd367c9
status: test
description: |
  Adversaries may execute their own malicious payloads by hijacking vulnerable file path references.
  Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1574.009/T1574.009.md
author: frack113
date: 2021-12-30
tags:
- attack.persistence
- attack.t1547.009
logsource:
  product: windows
  category: file_event
detection:
  selection:
        # Feel free to add more
    TargetFilename: 'C:\program.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule aims to detect attempts by adversaries to execute malicious payloads by exploiting unquoted file paths associated with services in the Windows environment. Unquoted service paths may allow attackers to place a malicious executable in a directory higher up the path hierarchy, enabling the system to mistakenly execute the attacker’s file rather than the intended legitimate executable. The detection is based on monitoring file events in Windows, specifically targeting instances where a service path points to a location with possible unquoted paths, notably `C:\program.exe`. The primary telemetry sources involved include Windows event logs for file events, which can provide details about file creation and modifications that may indicate malicious behavior. This detection aligns with the MITRE ATT&CK technique T1547.009 (Windows Service Registry Permissions Weakness) under the tactic of persistence.
  ### Investigation Steps
  - **Examine File Events:** Investigate the Windows file event logs for the specific instance of `C:\program.exe`. Look for any creation or modification events that correlate with the timing of the alert.
  - **Check Service Configuration:** Utilize Windows Service configuration tools (e.g., `sc query`) to review the service associated with the unquoted path and confirm if it has been altered.
  - **Analyze Process Creation Logs:** Review process creation logs in Sysmon or Windows Event Logs to identify processes launched in conjunction with the suspicious file activity and determine if they exhibit anomalous behavior.
  - **Review Security Alerts:** Cross-reference alerts from EDR solutions and antivirus logs to check for any actions taken against the identified executable or any related processes for potential remediation.
  ### Prioritization
  This alert is categorized as high severity due to the potential for severe disruptions and data breaches that can occur if an adversary successfully executes a malicious payload through this vulnerability. Immediate investigation is warranted to thwart potential compromises.
  ### Blind Spots and Assumptions
  The rule may not fire if the unquoted path vulnerability is not leveraged effectively, if the malicious payload is executed through alternative means, or if the necessary file event logging is not enabled or retained. Additionally, if an attacker utilizes a legitimate executable’s name or bypasses access controls effectively, the rule may fail to detect the malicious activity. It is essential for engineers to ensure comprehensive logging practices and to maintain updated rules that adapt to new threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
