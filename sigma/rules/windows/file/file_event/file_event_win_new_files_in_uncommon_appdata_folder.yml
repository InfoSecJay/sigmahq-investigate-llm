title: Suspicious File Creation In Uncommon AppData Folder
id: d7b50671-d1ad-4871-aa60-5aa5b331fe04
status: test
description: Detects the creation of suspicious files and folders inside the user's
  AppData folder but not inside any of the common and well known directories (Local,
  Romaing, LocalLow). This method could be used as a method to bypass detection who
  exclude the AppData folder in fear of FPs
references:
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-05
modified: 2023-02-23
tags:
- attack.defense-evasion
- attack.execution
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename|startswith: 'C:\Users\'
    TargetFilename|contains: '\AppData\'
    TargetFilename|endswith:
            # Add more as needed
    - '.bat'
    - '.cmd'
    - '.cpl'
    - '.dll'
    - '.exe'
    - '.hta'
    - '.iso'
    - '.lnk'
    - '.msi'
    - '.ps1'
    - '.psm1'
    - '.scr'
    - '.vbe'
    - '.vbs'
  filter_main:
    TargetFilename|startswith: 'C:\Users\'
    TargetFilename|contains:
    - '\AppData\Local\'
    - '\AppData\LocalLow\'
    - '\AppData\Roaming\'
  condition: selection and not filter_main
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule identifies the creation of suspicious files or folders within the User's AppData directory, specifically targeting locations that are not among the common subdirectories like Local, Roaming, or LocalLow. By focusing on less commonly monitored paths within AppData, adversaries may attempt to evade traditional detection mechanisms that exclude these areas due to the high likelihood of false positives. The rule inspects file creation events and looks specifically for file types that are often associated with malware or scripting, such as `.exe`, `.dll`, `.vbs`, and others noted in the detection conditions. This rule aligns with the MITRE ATT&CK tactics of "Defense Evasion" and "Execution," as it highlights potential attempts to bypass security mechanisms while executing unauthorized processes.
  The data sources involved primarily include Windows file event logs, which can be collected from various telemetry sources, such as Sysmon, that log file creations. The target filenames specified in the rule, combined with the filtering logic that excludes known safe subdirectories, provide the foundation for accurate detection of suspicious activities. 
  ### Investigation Steps
  - **Review File Creation Logs:** Examine the file creation timestamps and user accounts involved in generating the alert. Verify whether the file creation aligns with legitimate user activity or if it appears anomalous.
    
  - **Correlate with Process Logs:** Utilize EDR tools to inspect any associated process activity around the time of the file creation. Look for commands or processes that might have spawned the file creation event, especially those that involve script execution.
  - **Check for Related Network Activity:** Analyze any outgoing network connections or DNS queries that coincide with the suspicious file creation. This can help identify if the file or the process called external command and control (C2) addresses.
  - **Investigate Event Forwarding and Alerts:** Review security alerts from other sources, such as AV or NDR, for any indications of malicious behavior associated with the file. Investigating across multiple logs can provide a fuller picture of the activity and its legitimacy.
  ### Prioritization
  The high severity level of this alert is justified in an enterprise environment because unauthorized file creation within the user AppData folder can indicate a potential breach. The nature of the detected file types can suggest malicious software intending to execute or exploit other systems or data.
  ### Blind Spots and Assumptions
  This rule may not fire if adversaries create files with uncommon or new extensions that were not included in the detection conditions. Additionally, environmental factors such as misconfigured logging settings or the absence of Sysmon on affected endpoints can lead to missed detections. It's also important to recognize that legitimate applications or scripts using less conventional paths could trigger false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
