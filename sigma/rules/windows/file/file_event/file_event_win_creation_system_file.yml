title: Files With System Process Name In Unsuspected Locations
id: d5866ddf-ce8f-4aea-b28e-d96485a20d3d
status: test
description: |
  Detects the creation of an executable with a system process name in folders other than the system ones (System32, SysWOW64, etc.).
  It is highly recommended to perform an initial baseline before using this rule in production.
references:
- Internal Research
author: Sander Wiebing, Tim Shelton, Nasreddine Bencherchali (Nextron Systems)
date: 2020-05-26
modified: 2024-06-24
tags:
- attack.defense-evasion
- attack.t1036.005
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|endswith:
    - '\AtBroker.exe'
    - '\audiodg.exe'
    - '\backgroundTaskHost.exe'
    - '\bcdedit.exe'
    - '\bitsadmin.exe'
    - '\cmdl32.exe'
    - '\cmstp.exe'
    - '\conhost.exe'
    - '\csrss.exe'
    - '\dasHost.exe'
    - '\dfrgui.exe'
    - '\dllhost.exe'
    - '\dwm.exe'
    - '\eventcreate.exe'
    - '\eventvwr.exe'
    - '\explorer.exe'
    - '\extrac32.exe'
    - '\fontdrvhost.exe'
    - '\ipconfig.exe'
    - '\iscsicli.exe'
    - '\iscsicpl.exe'
    - '\logman.exe'
    - '\LogonUI.exe'
    - '\LsaIso.exe'
    - '\lsass.exe'
    - '\lsm.exe'
    - '\msiexec.exe'
    - '\msinfo32.exe'
    - '\mstsc.exe'
    - '\nbtstat.exe'
    - '\odbcconf.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regini.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\RuntimeBroker.exe'
    - '\schtasks.exe'
    - '\SearchFilterHost.exe'
    - '\SearchIndexer.exe'
    - '\SearchProtocolHost.exe'
    - '\SecurityHealthService.exe'
    - '\SecurityHealthSystray.exe'
    - '\services.exe'
    - '\ShellAppRuntime.exe'
    - '\sihost.exe'
    - '\smartscreen.exe'
    - '\smss.exe'
    - '\spoolsv.exe'
    - '\svchost.exe'
    - '\SystemSettingsBroker.exe'
    - '\taskhost.exe'
    - '\taskhostw.exe'
    - '\Taskmgr.exe'
    - '\TiWorker.exe'
    - '\vssadmin.exe'
    - '\w32tm.exe'
    - '\WerFault.exe'
    - '\WerFaultSecure.exe'
    - '\wermgr.exe'
    - '\wevtutil.exe'
    - '\wininit.exe'
    - '\winlogon.exe'
    - '\winrshost.exe'
    - '\WinRTNetMUAHostServer.exe'
    - '\wlanext.exe'
    - '\wlrmdr.exe'
    - '\WmiPrvSE.exe'
    - '\wslhost.exe'
    - '\WSReset.exe'
    - '\WUDFHost.exe'
    - '\WWAHost.exe'
  filter_main_generic:
        # Note: It is recommended to use a more robust filter instead of this generic one, to avoid false negatives.
    TargetFilename|contains:
            # - '\SystemRoot\System32\'
    - 'C:\$WINDOWS.~BT\'
    - 'C:\$WinREAgent\'
    - 'C:\Windows\SoftwareDistribution\'
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
    - 'C:\Windows\WinSxS\'
    - 'C:\Windows\uus\'
  filter_main_svchost:
    Image|endswith: 'C:\Windows\system32\svchost.exe'
    TargetFilename|contains: 'C:\Program Files\WindowsApps\'
  filter_main_wuauclt:
    Image|endswith: 'C:\Windows\System32\wuauclt.exe'
  filter_main_explorer:
    TargetFilename|endswith: 'C:\Windows\explorer.exe'
  filter_main_msiexec:
        # This filter handles system processes who are updated/installed using misexec.
    Image|endswith: 'C:\WINDOWS\system32\msiexec.exe'
        # Add more processes if you find them or simply filter msiexec on its own. If the list grows big
    TargetFilename|endswith:
    - 'C:\Program Files\PowerShell\7\pwsh.exe'
    - 'C:\Program Files\PowerShell\7-preview\pwsh.exe'
  filter_main_healtray:
    TargetFilename|contains: 'C:\Windows\System32\SecurityHealth\'
    TargetFilename|endswith: '\SecurityHealthSystray.exe'
    Image|endswith: '\SecurityHealthSetup.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- System processes copied outside their default folders for testing purposes
- Third party software naming their software with the same names as the processes
  mentioned here
# Note: Upgrade to high after an initial baseline to your environement.
level: medium
notes: |
  ### Technical Context
  This detection rule identifies the creation of executable files in unexpected locations that share names with standard Windows system processes (e.g., `explorer.exe`, `powershell.exe`). It leverages file event logs to capture file creation activities and assesses whether these occurrences take place outside conventional system directories such as `C:\Windows\System32` or `C:\Windows\SysWOW64`. The rule specifies a selection of target filenames that are typical system processes, and it filters out known safe locations to minimize false positives.
  By monitoring these anomalies, the rule helps in recognizing potential malicious activities where attackers may attempt to disguise their executable files as legitimate system processes, thus evading detection. Responders should be aware that legitimate software installations or testing scenarios may trigger alerts and should conduct thorough investigations in such cases.
  ### Investigation Steps
  - Review EDR logs to examine the file creation events related to the detected alert, focusing specifically on the process that generated the executable.
  - Correlate the timestamp of the alert with user activity logs in your SIEM to identify any unauthorized access or suspicious behavior that coincided with the file creation.
  - Check file hashes and metadata against threat intelligence databases to determine if the executable has known associations with malicious activity.
  - Investigate the network logs via NDR or Proxy for any outbound connections initiated by the newly created executable, which may indicate further compromise or communication with command and control servers.
