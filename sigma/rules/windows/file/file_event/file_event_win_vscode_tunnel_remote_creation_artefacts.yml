title: Visual Studio Code Tunnel Remote File Creation
id: 56e05d41-ce99-4ecd-912d-93f019ee0b71
status: test
description: |
  Detects the creation of file by the "node.exe" process in the ".vscode-server" directory. Could be a sign of remote file creation via VsCode tunnel feature
references:
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-10-25
tags:
- attack.command-and-control
logsource:
  category: file_event
  product: windows
detection:
  selection:
    Image|contains: '\servers\Stable-'
    Image|endswith: '\server\node.exe'
    TargetFilename|contains: '\.vscode-server\data\User\History\'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Visual Studio Code Tunnel Remote File Creation" detection rule is designed to identify potentially malicious activities related to remote file creation within the Visual Studio Code (VSCode) application. Specifically, it monitors the behavior of the `node.exe` process when it creates files in the `.vscode-server` directory, particularly under the path that contains `History`, which is indicative of user editing history in VSCode's remote development environment. This behavior could signify unauthorized file manipulation or data exfiltration attempts via the VSCode tunnel feature, employed by developers to enhance remote coding efficiency. The relevant data sources utilized for this detection rule include file event logs that track process activities, such as the creation of files by processes, alongside any command execution traces linked to the implicated `node.exe` process.
  This rule aligns with the MITRE ATT&CK tactic of Command and Control (T1071), particularly addressing methods that adversaries may use to establish and maintain remote access in a compromised environment. By incorporating this detection into security monitoring practices, SOC teams can better defend against potential threats leveraging remote development tools.
  ### Investigation Steps
  - **Check EDR Alerts:** Investigate alerts related to `node.exe` from the EDR solution to confirm whether it has been used recently on the system and trace any suspicious activities associated with its execution.
  - **Review File Events:** Access Windows file event logs to analyze the creation events, specifically targeting entries related to the `.vscode-server\data\User\History\` directory for any unauthorized or unexpected file modifications.
  - **Examine User Behavior:** Assess user activity logs to determine if the actions of the identified user align with legitimate development practices, including reviewing any recent VSCode tunnel connections.
  - **Network Traffic Analysis:** Utilize network logs to identify anomalous outbound communications that may signal data exfiltration, especially if linked to the IP addresses used for the VSCode tunnel.
  ### Prioritization
  This alert is assigned a medium severity level due to its association with potential data exfiltration or unauthorized file access, which could lead to larger breaches if not investigated promptly.
  ### Blind spots and Assumptions
  This rule may not capture all instances of file creation if the `node.exe` process is obfuscated or if adversaries utilize alternative tools or methods to create files outside the monitored paths. An assumption made here is that the alert is triggered by legitimate development activities, which could generate false positives if legitimate DevOps teams use the VSCode tunneling feature. To enhance the efficacy of this detection, it is crucial to maintain updated knowledge of the normal behavior of users utilizing VSCode in the environment.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
