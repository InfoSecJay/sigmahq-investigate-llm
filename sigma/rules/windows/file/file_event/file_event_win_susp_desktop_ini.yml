title: Suspicious desktop.ini Action
id: 81315b50-6b60-4d8f-9928-3466e1022515
status: test
description: Detects unusual processes accessing desktop.ini, which can be leveraged
  to alter how Explorer displays a folder's content (i.e. renaming files) without
  changing them on disk.
references:
- https://isc.sans.edu/forums/diary/Desktopini+as+a+postexploitation+tool/25912/
author: Maxime Thiebaut (@0xThiebaut), Tim Shelton (HAWK.IO)
date: 2020-03-19
modified: 2022-10-07
tags:
- attack.persistence
- attack.t1547.009
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename|endswith: '\desktop.ini'
  filter_generic:
    Image|startswith:
    - 'C:\Windows\'
    - 'C:\Program Files\'
    - 'C:\Program Files (x86)\'
  filter_jetbrains:
    Image|endswith: '\AppData\Local\JetBrains\Toolbox\bin\7z.exe'
    TargetFilename|contains: '\JetBrains\apps\'
  filter_upgrade:
    TargetFilename|startswith: 'C:\$WINDOWS.~BT\NewOS\'
  condition: selection and not 1 of filter_*
falsepositives:
- Operations performed through Windows SCCM or equivalent
- Read only access list authority
level: medium
notes: |
  ### Technical Context
  The "Suspicious desktop.ini Action" Sigma rule is designed to detect anomalous access to the `desktop.ini` file in Windows environments. This file is commonly used to customize the appearance and organization of Windows Explorer folders. Attackers can exploit it to subtly manipulate folder behaviors, such as renaming files in a deceptive manner without altering the actual file names on disk. This rule captures events in which any process attempts to access `desktop.ini` files, particularly those originating from atypical or unexpected processes, such as executables located outside the usual Windows directories. 
  The detection logic primarily utilizes Windows security event logs focusing on file events where the target file ends with `desktop.ini`. Additional filters are applied to exclude known benign processes, including those from Windows system paths and software installations such as JetBrains tools. This method effectively minimizes false positives while maintaining vigilance for misuse of this specific configuration file. This rule correlates to the MITRE ATT&CK tactic of "Persistence" and technique T1547.009, which highlights how attackers may leverage system configurations to maintain access.
  ### Investigation Steps
  - **Review Process Details:** Check the process details in EDR such as the originating process, parent processes, and command-line arguments to establish the context of the access to `desktop.ini`. Confirm whether the process is known and authorized.
  - **Assess File Access Patterns:** Investigate file access logs from file servers or endpoint security solutions to identify the behavior leading up to the access event. Note any unusual file manipulations or patterns that coincide with the suspicious access.
  - **Correlate with User Activity:** Look at user activity logs, particularly for administrative or elevated privileges, surrounding the time of the alert to determine if the event correlates with legitimate administrative actions or a potential compromise.
  - **Conduct Binary Analysis:** If a potentially malicious process is identified, perform a binary analysis using threat intelligence tools to check against known malware signatures or behaviors associated with the executable in question.
  ### Prioritization
  This alert is categorized with medium severity as it signifies potential persistence techniques being executed within the environment, warranting prompt investigation to ensure that the integrity of the system has not been compromised.
  ### Blind Spots and Assumptions
  This detection rule may fail to trigger in cases where processes that access `desktop.ini` are executed from trusted directories or if an attacker utilizes methods to disguise their activity (like renaming or obfuscating their executable). Furthermore, legitimate activities through systems like SCCM may lead to false positives, and processes that directly access `desktop.ini` without following conventional patterns may not be included in this detection. Analysts should also note that the effectiveness of the rule relies on the proper configuration of logging on Windows endpoints, which may lead to gaps in detection if monitoring is incomplete or misconfigured.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
