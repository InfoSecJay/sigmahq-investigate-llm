title: Potential Suspicious PowerShell Module File Created
id: e8a52bbd-bced-459f-bd93-64db45ce7657
status: test
description: Detects the creation of a new PowerShell module in the first folder of
  the module directory structure "\WindowsPowerShell\Modules\malware\malware.psm1".
  This is somewhat an uncommon practice as legitimate modules often includes a version
  folder.
references:
- Internal Research
- https://learn.microsoft.com/en-us/powershell/scripting/developer/module/understanding-a-windows-powershell-module?view=powershell-7.3
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-09
tags:
- attack.persistence
logsource:
  category: file_event
  product: windows
detection:
  selection:
    TargetFilename|endswith:
            # Note: Don't include PowerShell 7 as it has default modules that don't follow this logic
    - '\\WindowsPowerShell\\Modules\\*\.ps'
    - '\\WindowsPowerShell\\Modules\\*\.dll'
  condition: selection
falsepositives:
- False positive rate will vary depending on the environments. Additional filters
  might be required to make this logic usable in production.
level: medium
notes: |
  ### Technical Context
  This detection rule is designed to identify the creation of a potentially suspicious PowerShell module file in a specific directory structure on Windows systems. The rule explicitly looks for the creation of files named `malware.psm1` or any PowerShell (.ps) or Dynamic Link Library (.dll) files within the `C:\WindowsPowerShell\Modules\malware\` path. This behavior is unusual because legitimate PowerShell modules typically exist within a versioned subfolder under the modules directory, indicating a deviation from normal practices and potentially signaling an attempt at persistence by an adversary. The rule leverages file event logs to capture these activities.
  By identifying unusual file creations in the PowerShell modules directory, the rule aligns with the MITRE ATT&CK framework, specifically targeting the `Persistence` tactic and the `Scheduled Task/Job` technique. The detection is vital for recognizing potentially malicious behavior early and allowing analysts to investigate further.
  ### Investigation Steps
  - **Check EDR Alerts**: Search for any EDR alerts around the time the suspicious module file was created to determine if any related processes were executed that could indicate malicious intent.
  - **Review Process Creation Logs**: Investigate process creation logs for any PowerShell or related process invocations that occurred around the time this file was created, specifically looking for unusual command-line arguments.
  - **Examine PowerShell Logs**: Analyze PowerShell logs for the execution of any commands or scripts that may leverage the created module, which could further indicate malicious activity.
  - **Audit User Activity**: Check user activity logs to identify any unauthorized access that may have occurred prior to the module's creation, focusing on who had access to the machine and when.
  ### Prioritization
  Given the nature of this alert and its association with the creation of potentially malicious files in a critical PowerShell directory, the severity level is categorized as medium. Responders should prioritize investigation, as this behavior could indicate an attempted compromise or persistence mechanism.
  ### Blind Spots and Assumptions
  There are some recognized limitations in this rule. For example, if legitimate software uses similar naming conventions or the creation of modules in this specific path is a known practice within the environment, this rule may generate false positives. Additionally, if adversaries are skilled, they might choose to create modules in more conventional paths or obscure their activities through other means. Therefore, analysts should be aware that while this rule can indicate suspicious actions, it may not capture all malicious activity related to PowerShell.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
