title: Potential Persistence Via Notepad++ Plugins
id: 54127bd4-f541-4ac3-afdb-ea073f63f692
status: test
description: Detects creation of new ".dll" files inside the plugins directory of
  a notepad++ installation by a process other than "gup.exe". Which could indicates
  possible persistence
references:
- https://pentestlab.blog/2022/02/14/persistence-notepad-plugins/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-06-10
modified: 2023-01-05
tags:
- attack.persistence
logsource:
  product: windows
  category: file_event
detection:
  selection:
    TargetFilename|contains: '\Notepad++\plugins\'
    TargetFilename|endswith: '.dll'
  filter_gup:
    Image|endswith: '\Notepad++\updater\gup.exe'
  filter_install:
        # This filter is for Sigma dataset you could remove it or change when using the rule in your own env
    Image|startswith: 'C:\Users\'
    Image|contains: '\AppData\Local\Temp\'
    Image|endswith:
    - '\target.exe'
    - 'Installer.x64.exe'
  condition: selection and not 1 of filter_*
falsepositives:
- Possible FPs during first installation of Notepad++
- Legitimate use of custom plugins by users in order to enhance notepad++ functionalities
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule identifies potential persistence mechanisms by monitoring the creation of `.dll` files within the plugins directory of a Notepad++ installation. Specifically, it looks for instances where these `.dll` files are created by processes other than `gup.exe`, which is the official updater for Notepad++. This could signify that an unauthorized or malicious process is attempting to install a plugin for persistence purposes. The detection is based on file event logs from Windows, particularly focusing on the file paths associated with Notepad++ and the specific file extensions indicative of dynamic-link libraries (DLLs). This alert correlates with the MITRE ATT&CK tactic of persistence, particularly under the technique of "Application Layer Protocol."
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR to identify the parent process that initiated the creation of the suspicious `.dll` files.
  - **Analyze File Properties:** Investigate the properties of the detected `.dll` files, including their size, creation date, and signer information, to determine their legitimacy.
  - **Examine Network Connections:** Utilize network connection logs to identify any unusual outbound connections made by the process that created the DLLs, which may indicate malicious intent.
  - **Review User Activity:** Look into the user activity logs to see if any legitimate users have installed custom plugins, which could help determine if the alert is a false positive.
  ### Prioritization
  The severity level is considered medium as the detection of suspicious `.dll` files in Notepad++ could indicate an attempt to establish persistence; however, legitimate activities, such as authorized plugin installations, may also trigger the alert.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious process sidesteps the Notepad++ plugin directory or uses other methods to establish persistence. Additionally, there may be legitimate reasons for users to add custom DLLs for functionality, potentially leading to false positives. Analysts should be aware of variations in installation paths or configurations of Notepad++ across different user environments, which may affect the effectiveness of this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
