title: Credential Manager Access By Uncommon Applications
id: 407aecb1-e762-4acf-8c7b-d087bcff3bb6
status: experimental
description: |
  Detects suspicious processes based on name and location that access the windows credential manager and vault.
  Which can be a sign of credential stealing. Example case would be usage of mimikatz "dpapi::cred" function
references:
- https://hunter2.gitbook.io/darthsidious/privilege-escalation/mimikatz
- https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-11
modified: 2024-07-29
tags:
- attack.t1003
- attack.credential-access
logsource:
  category: file_access
  product: windows
  definition: 'Requirements: Microsoft-Windows-Kernel-File ETW provider'
detection:
  selection:
    FileName|contains:
    - '\AppData\Local\Microsoft\Credentials\'
    - '\AppData\Roaming\Microsoft\Credentials\'
    - '\AppData\Local\Microsoft\Vault\'
    - '\ProgramData\Microsoft\Vault\'
  filter_system_folders:
    Image|startswith:
    - 'C:\Program Files\'
    - 'C:\Program Files (x86)\'
    - 'C:\Windows\system32\'
    - 'C:\Windows\SysWOW64\'
  condition: selection and not 1 of filter_*
falsepositives:
- Legitimate software installed by the users for example in the "AppData" directory
  may access these files (for any reason).
# Increase level after false positives filters are good enough
level: medium
notes: |
  ### Technical Context
  The Sigma rule "Credential Manager Access By Uncommon Applications" is designed to detect potentially malicious access to the Windows Credential Manager, which stores sensitive information like user credentials. This rule targets processes that attempt to interact with specific locations associated with the Credential Manager and its vaults in the file system, specifically within directories such as `AppData\Local\Microsoft\Credentials` and `ProgramData\Microsoft\Vault`. These file paths are checked against known safe directories; if an uncommon application (not typically found in system locations like `C:\Program Files` or `C:\Windows`) accesses these locations, it may indicate credential theft attempts, such as those performed by tools like Mimikatz's "dpapi::cred" function.
  This rule leverages Windows file access logs and utilizes the Microsoft-Windows-Kernel-File ETW provider to gather the necessary data. It assesses the filename and path of the accessing application to identify potential threats, raising alerts for any suspicious behavior that deviates from normal application patterns. 
  ### Investigation Steps
  - Review the EDR logs to identify the specific process that triggered the alert and examine the path and filename for anomalies.
  - Query the SIEM for historical data relating to the flagged executable to assess its behavior and past interactions with the Credential Manager.
  - Use the AV system to perform a full system scan on the host system for associated malware signatures or challenges relevant to the detected process.
  - Investigate proxy logs to ascertain any outbound connections made by the suspicious application, which could indicate attempts to exfiltrate stolen credentials.
