title: Credential Manager Access By Uncommon Applications
id: 407aecb1-e762-4acf-8c7b-d087bcff3bb6
status: experimental
description: |
  Detects suspicious processes based on name and location that access the windows credential manager and vault.
  Which can be a sign of credential stealing. Example case would be usage of mimikatz "dpapi::cred" function
references:
- https://hunter2.gitbook.io/darthsidious/privilege-escalation/mimikatz
- https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-11
modified: 2024-07-29
tags:
- attack.t1003
- attack.credential-access
logsource:
  category: file_access
  product: windows
  definition: 'Requirements: Microsoft-Windows-Kernel-File ETW provider'
detection:
  selection:
    FileName|contains:
    - '\AppData\Local\Microsoft\Credentials\'
    - '\AppData\Roaming\Microsoft\Credentials\'
    - '\AppData\Local\Microsoft\Vault\'
    - '\ProgramData\Microsoft\Vault\'
  filter_system_folders:
    Image|startswith:
    - 'C:\Program Files\'
    - 'C:\Program Files (x86)\'
    - 'C:\Windows\system32\'
    - 'C:\Windows\SysWOW64\'
  condition: selection and not 1 of filter_*
falsepositives:
- Legitimate software installed by the users for example in the "AppData" directory
  may access these files (for any reason).
# Increase level after false positives filters are good enough
level: medium
notes: |
  ### Technical Context
  This detection rule focuses on identifying suspicious access to the Windows Credential Manager by applications that originate from uncommon locations. When typical processes such as legitimate applications located in `C:\Program Files\`, `C:\Program Files (x86)\`, `C:\Windows\system32\`, or `C:\Windows\SysWOW64\` attempt to read from the Credential Manager directories (specifically under the user's `AppData` and `ProgramData` paths), it raises an alert. This is crucial because unauthorized access to these credentials could indicate activities like credential harvesting or privilege escalation, often seen with tools like Mimikatz using the `dpapi::cred` function. This aligns with the MITRE ATT&CK tactics associated with credential access (TA0006; T1003).
  The detection leverages file access logs on Windows to monitor inappropriate interactions with sensitive credential storage. By establishing a pattern wherein abnormal applications access files in these directories, the rule can effectively raise alerts to potentially malicious behavior that stems from uncommon executables.
  ### Investigation Steps
  - **Check Process Details:** Investigate the process responsible for the credential access by querying EDR data, focusing on its image path, parent process, and command-line parameters.
  - **Review User Activity:** Examine the user's activity logs around the time of the alert using Windows Event Logs, particularly looking for any unusual behavior or applications running that might correlate with the alert.
  - **Correlate with Network Activity:** Use Network Detection and Response (NDR) tools to review any network connections initiated by the suspicious process, assessing for any outbound connections to external hosts.
  - **Conduct File Integrity Checks:** Review the file integrity and any changes in the Credential Manager directories via Security Event Logs to validate if the access was legitimate or potentially part of a wider attack.
  ### Prioritization
  The severity level is marked as medium because while accessing the Windows Credential Manager can have legitimate reasons, the context of unusual applications performing such actions increases the risk of credential theft significantly, warranting immediate investigation.
  ### Blind Spots and Assumptions
  There may be blind spots in this detection, as legitimate user applications installed in user-specific directories may access these files without malicious intent, potentially generating false positives. Furthermore, an adversary could employ legitimate applications as part of their attack strategy, thereby bypassing this filter. The rule may also not fire if the malicious process has been able to reside in one of the standard system folders, as the filtering condition would exclude those actions.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environmental and operational needs. Please communicate any changes to the detection engineering team.
