title: File Creation Date Changed to Another Year
id: 558eebe5-f2ba-4104-b339-36f7902bcc1a
status: test
description: |
  Attackers may change the file creation time of a backdoor to make it look like it was installed with the operating system.
  Note that many processes legitimately change the creation time of a file; it does not necessarily indicate malicious activity.
references:
- https://www.inversecos.com/2022/04/defence-evasion-technique-timestomping.html
author: frack113, Florian Roth (Nextron Systems)
date: 2022-08-12
modified: 2022-10-25
tags:
- attack.t1070.006
- attack.defense-evasion
logsource:
  category: file_change
  product: windows
detection:
  selection1:
    PreviousCreationUtcTime|startswith: '2022'
  filter1:
    CreationUtcTime|startswith: '2022'
  selection2:
    PreviousCreationUtcTime|startswith: '202'
  filter2:
    CreationUtcTime|startswith: '202'
  gen_filter_updates:
  - Image:
    - 'C:\Windows\system32\ProvTool.exe'
    - 'C:\Windows\System32\usocoreworker.exe'
    - 'C:\Windows\ImmersiveControlPanel\SystemSettings.exe'
  - TargetFilename|startswith: 'C:\ProgramData\USOPrivate\UpdateStore\'
  - TargetFilename|endswith:
    - '.tmp'
    - '.temp'
  gen_filter_tiworker:
    Image|startswith: 'C:\WINDOWS\'
    Image|endswith: '\TiWorker.exe'
    TargetFilename|endswith: '.cab'
  condition: (( selection1 and not filter1 ) or ( selection2 and not filter2 )) and
    not 1 of gen_filter*
falsepositives:
- Changes made to or by the local NTP service
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "File Creation Date Changed to Another Year" detects potential attempts by attackers to manipulate the file creation timestamps of files, particularly backdoors, to obscure their true installation date and appear as if they were part of the original operating system setup. This technique, known as timestomping (MITRE ATT&CK technique T1070.006), focuses on identifying changes in file metadata that suggest malicious intent. The rule analyzes Windows file change logs, specifically looking for instances where the creation time of a file has been altered to a specific pattern (e.g., starting with '2022') while also ensuring that the previous creation time does not match this pattern. This method leverages logs from file changes produced by Windows, particularly focusing on the `file_change` category, which reports alterations to file attributes, allowing for the detection of suspicious activities that could indicate an evasion tactic.
  ### Investigation Steps
  - **Review Process Execution:** Check EDR for any processes that executed commands related to the altered file, particularly concentrating on the `ProvTool.exe`, `usocoreworker.exe`, or `SystemSettings.exe` images as they are commonly involved in legitimate timestamp changes.
  - **Analyze File Activity:** Use file monitoring tools to gather detailed information about the suspicious file, focusing on its creation, access, and modification timestamps to establish a timeline of activities.
  - **Evaluate Network Activity:** Investigate network traffic associated with the affected host to identify any unusual communications or downloads occurring with the altered file that could indicate a backdoorâ€™s presence.
  - **Cross-reference with Other Logs:** Consult Windows Security and application logs to correlate user actions and other system changes with the timestamp alteration event, helping to establish the context of potential malicious behavior.
  ### Prioritization
  Alerts generated by this rule should be prioritized as high due to the potential risk that an attacker could manipulate file timestamps to evade detection and create persistence, making this a critical area for immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the file modification occurs without a corresponding event in the file change logs, or if legitimate applications are altering file timestamps under non-malicious circumstances. Additionally, the detection relies on understanding the typical behavior of known processes; however, if attackers utilize custom tools or employ legitimate administrative actions, the rule may fail to trigger. There is an assumption that timestamp manipulations are closely monitored; however, the presence of legitimate use cases, such as NTP service adjustments, can lead to false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
