title: Tomcat WebServer Logs Deleted
id: 270185ff-5f50-4d6d-a27f-24c3b8c9fef8
status: test
description: Detects the deletion of tomcat WebServer logs which may indicate an attempt
  to destroy forensic evidence
references:
- Internal Research
- https://linuxhint.com/view-tomcat-logs-windows/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-02-16
tags:
- attack.defense-evasion
- attack.t1070
logsource:
  category: file_delete
  product: windows
detection:
  selection:
    TargetFilename|contains|all:
    - '\Tomcat'
    - '\logs\'
    TargetFilename|contains:
    - 'catalina.'
    - '_access_log.'
    - 'localhost.'
  condition: selection
falsepositives:
- During uninstallation of the tomcat server
- During log rotation
level: medium
notes: |
  ### Technical Context
  This detection rule identifies potential attempts to delete Tomcat WebServer logs on Windows systems, which may indicate a malicious effort to destroy forensic evidence following a compromise or suspicious activity. The rule looks for file deletion events where the target filename contains specific Tomcat log patterns, such as `catalina`, `_access_log`, and `localhost`, and checks that these are located within directories commonly associated with Tomcat logs. By monitoring these activities, the enterprise SOC can detect evidence tampering that aligns with the MITRE ATT&CK tactic of Defense Evasion (T1070), which encompasses methods adversaries may use to obscure their actions within an environment.
  The rule utilizes Windows event logs related to file deletions to ascertain if critical logs have been removed. These logs contain valuable information about web server activities and request patterns, making their deletion a significant red flag for security analysis and incident response.
  ### Investigation Steps
  - **Review Deletion Events**: Examine the file deletion logs in the SIEM to identify the specifics around the deletion events, such as timestamps, user accounts, and the exact filenames deleted.
  - **Correlate with Other Activities**: Utilize EDR tools to correlate the deletion events with other system activities, such as process creation or network connections that might indicate malicious behavior around the same timeframe.
  - **Check User Activity**: Analyze the activity of the user accounts involved in the deletions. Assess whether they have a history of suspicious behavior or if they possess the necessary privileges to delete critical log files.
  - **Assess Backup and Recovery Procedures**: Confirm if backup copies of the deleted logs exist and assess the effectiveness of existing mitigation strategies like log retention policies or real-time logging to ensure evidence integrity.
  ### Prioritization
  The alert is rated as medium severity because the deletion of critical log files poses a serious risk to forensic investigations, indicating a possible attempt to hide malicious activities. Prompt investigation is crucial to assess the intent behind the deletions and to determine if other security measures were circumvented.
  ### Blind Spots and Assumptions
  This detection rule may not fire in scenarios such as scheduled maintenance activities, where logs are deleted as part of routine operations like uninstallation or log rotation. It also assumes that file deletion events are captured accurately, dependent on proper Windows logging configurations. Moreover, an adversary could potentially evade detection by deleting logs shortly after a successful deletion or performing log manipulation at times of low system activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
