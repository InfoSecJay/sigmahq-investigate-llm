title: Exchange PowerShell Cmdlet History Deleted
id: a55349d8-9588-4c5a-8e3b-1925fe2a4ffe
status: test
description: Detects the deletion of the Exchange PowerShell cmdlet History logs which
  may indicate an attempt to destroy forensic evidence
references:
- https://m365internals.com/2022/10/07/hunting-in-on-premises-exchange-server-logs/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-26
modified: 2022-12-30
tags:
- attack.defense-evasion
- attack.t1070
logsource:
  category: file_delete
  product: windows
detection:
  selection:
    TargetFilename|startswith: '\Logging\CmdletInfra\LocalPowerShell\Cmdlet\'
    TargetFilename|contains: '_Cmdlet_'
  condition: selection
falsepositives:
- Possible FP during log rotation
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the deletion of Exchange PowerShell cmdlet history logs, a critical indicator of potential nefarious activity aimed at obliterating forensic evidence. The underlying premise is that if an attacker compromises an environment and seeks to cover their tracks, they may remove logs related to PowerShell operations, particularly those that are executed through Microsoft's Exchange platform. The detection leverages file deletion logs from Windows systems, specifically targeting files within the directory structure that typically holds cmdlet logs. The rule checks for deletions in paths starting with `\Logging\CmdletInfra\LocalPowerShell\Cmdlet\` and looking for filenames containing `_Cmdlet_`. The MITRE ATT&CK technique associated with this rule is T1070, which pertains to "Indicator Removal on Host," under the "Defense Evasion" tactic.
  ### Investigation Steps
  - **Check EDR for Process Activities:** Investigate any running processes around the time of the alert, particularly focusing on PowerShell and any system processes that might indicate suspicious activities.
  - **Examine Historical Cmdlet Usage:** Review previous cmdlet execution logs in the same directory to identify any unusual behavior or execution patterns preceding the deletion event.
  - **Correlate with Access Logs:** Utilize VPN or Proxy logs to see if external access corresponds to the deletion event, looking particularly for anomalous logins or connectivity to the Exchange server.
  - **Assess System Integrity:** Run integrity checks on system files and configurations to ensure that other security measures have not been compromised, using tools like Windows File Integrity Monitoring.
  ### Prioritization
  The alert is categorized as high severity due to its critical nature in potentially indicating an attempt to erase traces of malicious actions, which can seriously compromise the organization's security posture and incident response capabilities.
  ### Blind Spots and Assumptions
  This rule may not fire if log rotation occurs, as it can lead to legitimate deletions of cmdlet historyâ€”resulting in possible false positives. Additionally, if an adversary utilizes alternative means to manage or access cmdlet history (e.g., direct database manipulation), the rule might not capture those actions. There is also an assumption that all Windows file deletion events are being correctly logged, which can vary based on the system configuration or potential security controls in place.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
