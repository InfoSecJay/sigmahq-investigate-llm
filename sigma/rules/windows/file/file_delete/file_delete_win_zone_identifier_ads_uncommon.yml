title: ADS Zone.Identifier Deleted By Uncommon Application
id: 3109530e-ab47-4cc6-a953-cac5ebcc93ae
related:
- id: 7eac0a16-5832-4e81-865f-0268a6d19e4b
  type: similar
status: test
description: Detects the deletion of the "Zone.Identifier" ADS by an uncommon process.
  Attackers can leverage this in order to bypass security restrictions that make use
  of the ADS such as Microsoft Office apps.
references:
- https://securityliterate.com/how-malware-abuses-the-zone-identifier-to-circumvent-detection-and-analysis/
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-09-04
modified: 2024-04-26
tags:
- attack.defense-evasion
- attack.t1070.004
logsource:
  product: windows
  category: file_delete
detection:
  selection:
    TargetFilename|endswith: ':Zone.Identifier'
  filter_main_generic:
        # Note: in some envs this activity might be performed by other software. Apply additional filters as necessary
    Image:
    - 'C:\Program Files\PowerShell\7-preview\pwsh.exe'
    - 'C:\Program Files\PowerShell\7\pwsh.exe'
    - 'C:\Windows\explorer.exe'
    - 'C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe'
    - 'C:\Windows\SysWOW64\explorer.exe'
    - 'C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe'
  filter_optional_browsers_chrome:
    Image:
    - 'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe'
    - 'C:\Program Files\Google\Chrome\Application\chrome.exe'
  filter_optional_browsers_firefox:
    Image:
    - 'C:\Program Files (x86)\Mozilla Firefox\firefox.exe'
    - 'C:\Program Files\Mozilla Firefox\firefox.exe'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Other third party applications not listed.
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule detects the deletion of the "Zone.Identifier" Alternate Data Stream (ADS) by processes that are considered uncommon. The Zone.Identifier ADS is used by Windows to store metadata about file downloads, such as the security zone from which a file originated. Attackers exploit this feature to delete or modify the Zone.Identifier, effectively bypassing security measures and allowing malicious content to execute without triggering alerts. The rule specifically monitors for delete actions on any file that ends with ':Zone.Identifier' and filters out known legitimate processes such as PowerShell and common web browsers like Chrome and Firefox, which may also interact with these data streams during normal operations. This detection aligns with the MITRE ATT&CK technique for Defense Evasion (T1070.004), which focuses on clearing or altering system logs or indicators that may provide clues about malicious activity.
  ### Investigation Steps
  - **Check Process History:** Review the process tree in your EDR solution for the uncommon application that deleted the Zone.Identifier and determine its origin and purpose.
  - **Examine Network Connections:** Inspect network logs for unusual connections or traffic patterns that may indicate communication with a malicious actor or command and control (C2) server prior to the deletion event.
  - **Analyze File Metadata:** Utilize tools to extract metadata from the affected files to understand their origin and whether they were downloaded from questionable sources.
  - **Review Security Events:** Look into Windows Security and Application logs for any related events around the time the deletion occurred to see if there were any preceding indicators of suspicious activity.
  ### Prioritization
  This alert is classified as medium severity due to the potential indication of a security bypass tactic that could allow malware to execute without raising alarms. While some legitimate applications may cause false positives, the uncommon nature of the process involved necessitates immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not trigger in scenarios where the deletion is carried out by common applications that are not filtered out, leading to possible evasion. Additionally, if malware employs a custom or legitimate process not accounted for in the filters, the action may go undetected. Analysts should also consider scenarios where benign software may inadvertently delete these ADS as part of its functionality, thereby creating potential false positives. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
