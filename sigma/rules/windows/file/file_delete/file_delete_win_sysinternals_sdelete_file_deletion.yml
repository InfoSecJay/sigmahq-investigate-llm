title: File Deleted Via Sysinternals SDelete
id: 6ddab845-b1b8-49c2-bbf7-1a11967f64bc
status: test
description: Detects the deletion of files by the Sysinternals SDelete utility. It
  looks for the common name pattern used to rename files.
references:
- https://github.com/OTRF/detection-hackathon-apt29/issues/9
- https://github.com/OTRF/ThreatHunter-Playbook/blob/2d4257f630f4c9770f78d0c1df059f891ffc3fec/docs/evals/apt29/detections/4.B.4_83D62033-105A-4A02-8B75-DAB52D8D51EC.md
author: Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)
date: 2020-05-02
modified: 2023-02-15
tags:
- attack.defense-evasion
- attack.t1070.004
logsource:
  product: windows
  category: file_delete
detection:
  selection:
    TargetFilename|endswith:
    - '.AAA'
    - '.ZZZ'
  filter_wireshark:
    TargetFilename|endswith: '\Wireshark\radius\dictionary.alcatel-lucent.aaa'
  condition: selection and not 1 of filter_*
falsepositives:
- Legitimate usage
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "File Deleted Via Sysinternals SDelete" is designed to detect unauthorized file deletions using the Sysinternals tool, SDelete. SDelete is commonly used for securely deleting files by overwriting them, thereby making recovery difficult. This rule specifically looks for files that have been deleted with the common naming patterns of '.AAA' and '.ZZZ', which may indicate malicious activity, particularly in the context of defense evasion techniques. The relevant technical data sources include Windows Security logs focusing on file delete events that capture the details of deleted files, enabling the detection of potentially harmful actions in the environment. The related MITRE ATT&CK tactic is "Defense Evasion" with technique ID T1070.004, which focuses on the deletion of logs or other forensic artifacts that could facilitate detection of ongoing malicious activities.
  ### Investigation Steps
  - **Identify the Context of Deletion:** Review the file deletion event in the Windows Security logs to gather information about when the deletion occurred and the specific user or process that initiated the action.
    
  - **Correlate with EDR Data:** Use your EDR solution to examine process activity around the time of the deletion. Look for unusual process behavior, such as instances where SDelete was invoked unexpectedly.
  - **Examine User Activity:** Check the user activity logs for the account that performed the deletion. Verify if the actions align with normal operational behavior or if they suggest potential misuse or a breach.
  - **Assess for Additional Indicators:** Utilize network and application logs to explore if related suspicious activities occurred surrounding the same timeframe, such as unusual network connections or other file manipulations.
  ### Prioritization
  This alert should be considered medium severity due to the potential risks associated with unauthorized file deletions. While legitimate use cases exist, the use of SDelete in contexts outside standard operations can indicate attempts to cover tracks of malicious actions.
  ### Blind Spots and Assumptions
  The rule may not fire in the following scenarios: legitimate usage of SDelete by authorized personnel, deletion of files with extensions other than '.AAA' or '.ZZZ', or scenarios where an adversary obfuscates their actions by invoking different tools or scripts for file deletion. Additionally, SDelete may be executed via scripts or indirect means that bypass direct monitoring. It is assumed that proper monitoring for file creation/deletion events is in place; if not, key actions may go unnoticed.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
