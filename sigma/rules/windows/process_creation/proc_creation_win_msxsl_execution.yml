title: Msxsl.EXE Execution
id: 9e50a8b3-dd05-4eb8-9153-bdb6b79d50b0
status: test
description: |
  Detects the execution of the MSXSL utility. This can be used to execute Extensible Stylesheet Language (XSL) files. These files are commonly used to describe the processing and rendering of data within XML files.
  Adversaries can abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1220/T1220.md
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Msxsl/
author: Timur Zinniatullin, oscd.community
date: 2019-10-21
modified: 2023-11-09
tags:
- attack.defense-evasion
- attack.t1220
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\msxsl.exe'
  condition: selection
falsepositives:
- Msxsl is not installed by default and is deprecated, so unlikely on most systems.
# Note: If you levreage this utility please consider adding additional filters. As this is looking for "any" type of execition
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Msxsl.EXE Execution" identifies instances when the MSXSL utility is executed on Windows systems. MSXSL is a tool that converts XML data into HTML or other formats using XSL stylesheets. While it can be a legitimate tool for processing XML, adversaries may exploit MSXSL to execute arbitrary commands or scripts as part of their attack strategy, particularly to bypass application whitelisting measures. This detection rule focuses on process creation logs to monitor the execution of `msxsl.exe`, with specific attention to the filename ending with `msxsl.exe`. The rule is associated with the MITRE ATT&CK tactic of "Defense Evasion" and specifically targets the technique T1220 
  - "XSL Script Processing," highlighting the potential misuse of XML processing utilities in malicious activities. 
  ### Investigation Steps
  - **Monitor EDR Alerts:** Review the EDR console for alerts related to the execution of `msxsl.exe`, and check the associated process tree to identify any suspicious parent processes or unusual command-line arguments.
  - **Analyze Command-Line Arguments:** Extract and analyze command-line parameters used during the execution of `msxsl.exe` to determine if they correspond to legitimate processes or if they appear to be performing unexpected actions.
  - **Check Event Logs:** Inspect Windows Security and Sysmon event logs, specifically focusing on the process creation events involving `msxsl.exe`, to gather contextual information about the user account involved and other related activities on the system.
  - **Investigate System Changes:** Look into any associated file modifications, network connections, or registry changes initiated by `msxsl.exe` execution to evaluate the broader impact and intent behind the action.
  ### Prioritization
  This rule is categorized with a medium severity level due to the potential for misuse inherent in the execution of `msxsl.exe`. While it may not be common on standard enterprise systems, its presence and execution could indicate an attempt at evading security measures, warranting further scrutiny.
  ### Blind Spots and Assumptions
  This detection rule may not capture all instances of misuse if the adversary employs techniques to obfuscate their actions or if `msxsl.exe` is used in conjunction with other legitimate software that may mask its intentions. Additionally, environments where `msxsl.exe` is installed for legitimate use might experience false positives, particularly if no additional filtering mechanisms are applied. Understanding the baseline usage of this utility within your organization is crucial to minimize alert fatigue and ensure accurate detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
