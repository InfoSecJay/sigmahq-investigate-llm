title: Install New Package Via Winget Local Manifest
id: 313d6012-51a0-4d93-8dfc-de8553239e25
status: test
description: |
  Detects usage of winget to install applications via manifest file. Adversaries can abuse winget to download payloads remotely and execute them.
  The manifest option enables you to install an application by passing in a YAML file directly to the client.
  Winget can be used to download and install exe, msi or msix files later.
references:
- https://learn.microsoft.com/en-us/windows/package-manager/winget/install#local-install
- https://lolbas-project.github.io/lolbas/Binaries/Winget/
- https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget
author: Sreeman, Florian Roth (Nextron Systems), frack113
date: 2020-04-21
modified: 2023-04-17
tags:
- attack.defense-evasion
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\winget.exe'
  - OriginalFileName: 'winget.exe'
  selection_install_flag:
    CommandLine|contains:
    - 'install'
    - ' add '         # https://github.com/microsoft/winget-cli/blob/02d2f93807c9851d73eaacb4d8811a76b64b7b01/src/AppInstallerCLICore/Commands/InstallCommand.h
  selection_manifest_flag:
    CommandLine|contains:
    - '-m '
    - '--manifest'
  condition: all of selection_*
falsepositives:
- Some false positives are expected in some environment that may use this functionality
  to install and test their custom applications
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify the use of the Windows Package Manager (`winget`) to install applications via local manifest files. Adversaries may exploit this functionality to download malicious payloads and execute them, posing a significant risk to enterprise environments. The rule specifically looks for process creation related to `winget.exe`, checking for command-line arguments indicative of an application installation, particularly the presence of `install` alongside the `-m` or `--manifest` flags, which indicate the use of a YAML manifest file. The telemetry data sources required for this rule include process creation logs from Windows operating system and Sysmon logs which provide detailed information about process execution and command line parameters. The rule is related to the MITRE ATT&CK tactics of Execution (T1059) and Defense Evasion.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the Windows process creation logs to identify instances of `winget.exe` and validate its command-line parameters for the `install` and `--manifest` flags.
  - **Gather Context from EDR:** Use Endpoint Detection and Response (EDR) tools to pull detailed information about the associated process, including parent-child process relationships and the user account executing the command.
  - **Check for Malicious Payloads:** Investigate network and file activity for any associated downloads or executed files (e.g., `.exe`, `.msi`, `.msix`) to determine if any malicious software has been installed.
  - **Analyze User Behavior:** Review user and account logs to design a baseline of normal behavior. If winget usage is standard practice in the environment, ensure that the specific instance aligns with legitimate operations.
  ### Prioritization
  The severity level for this alert is categorized as medium due to the potential misuse of the winget tool for deploying unauthorized applications, which can lead to data breaches or system compromise if left unchecked.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where legitimate use of winget for application installation is frequent, leading to false positives. Additionally, its effectiveness could be diminished if adversaries modify their approach by obfuscating command-line parameters or employing alternate tools that do not trigger this rule. Furthermore, environments without standard monitoring for the `winget` tool or where it is disabled may not generate relevant logs, resulting in missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
