title: Use of VisualUiaVerifyNative.exe
id: b30a8bc5-e21b-4ca2-9420-0a94019ac56a
status: test
description: VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass
  and is listed in Microsoft's recommended block rules.
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/VisualUiaVerifyNative/
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/design/applications-that-can-bypass-wdac
- https://bohops.com/2020/10/15/exploring-the-wdac-microsoft-recommended-block-rules-visualuiaverifynative/
- https://github.com/MicrosoftDocs/windows-itpro-docs/commit/937db704b9148e9cee7c7010cad4d00ce9c4fdad
author: 'Christopher Peacock @SecurePeacock, SCYTHE @scythe_io'
date: 2022-06-01
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\VisualUiaVerifyNative.exe'
  - OriginalFileName: 'VisualUiaVerifyNative.exe'
  condition: selection
falsepositives:
- Legitimate testing of Microsoft UI parts.
level: medium
notes: |
  ### Technical Context
  The Sigma rule for detecting the use of `VisualUiaVerifyNative.exe` focuses on identifying instances where this executable, which is part of the Windows SDK, is called on a system. This tool is noted for its potential use in Bypass Anti-Malware solutions, specifically in conjunction with Application Control technologies. By monitoring process creation logs, the rule looks for occurrences of the executable's file name ending in `VisualUiaVerifyNative.exe` and checks the `OriginalFileName` field to confirm its legitimacy. These criteria are based on Microsoftâ€™s guidance that recommends blocking this executable due to its capability to help circumvent security measures. Given its typical association with unauthorized activities, any alert triggered by this rule should prompt an investigation to assess context and potential threats.
  ### Investigation Steps
  - Review process creation logs from the EDR solution to identify the parent process and command-line parameters associated with `VisualUiaVerifyNative.exe`. 
  - Check for any recent changes in application whitelisting policies that may have inadvertently allowed the execution of this executable.
  - Validate the originating system's context by examining AV logs for any relevant alerts or detections related to `VisualUiaVerifyNative.exe` or suspicious activities around the same timeframe.
  - Investigate user and application logs through cloud platform interfaces (AWS/GCP/Azure) to ascertain if the executable was launched as part of a scripting or automation process that could indicate misuse.
