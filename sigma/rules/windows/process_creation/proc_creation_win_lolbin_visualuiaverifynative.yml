title: Use of VisualUiaVerifyNative.exe
id: b30a8bc5-e21b-4ca2-9420-0a94019ac56a
status: test
description: VisualUiaVerifyNative.exe is a Windows SDK that can be used for AWL bypass
  and is listed in Microsoft's recommended block rules.
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/VisualUiaVerifyNative/
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/design/applications-that-can-bypass-wdac
- https://bohops.com/2020/10/15/exploring-the-wdac-microsoft-recommended-block-rules-visualuiaverifynative/
- https://github.com/MicrosoftDocs/windows-itpro-docs/commit/937db704b9148e9cee7c7010cad4d00ce9c4fdad
author: 'Christopher Peacock @SecurePeacock, SCYTHE @scythe_io'
date: 2022-06-01
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\VisualUiaVerifyNative.exe'
  - OriginalFileName: 'VisualUiaVerifyNative.exe'
  condition: selection
falsepositives:
- Legitimate testing of Microsoft UI parts.
level: medium
notes: |
  ### Technical Context
  The Sigma rule "Use of VisualUiaVerifyNative.exe" is designed to detect instances where the executable file "VisualUiaVerifyNative.exe" is invoked within a Windows environment. This executable is part of the Windows SDK and can be utilized to bypass Application Whitelisting (AWL), serving as a potential vector for malicious activity. The rule identifies two key attributes: the image path of the executable, which must end with "VisualUiaVerifyNative.exe," and its original filename. This detection aids in recognizing unauthorized or malicious usage of legitimate tools that are documented as having the capability to evade security measures.
  In terms of the MITRE ATT&CK framework, this detection aligns with the "Defense Evasion" tactic (ID: T1218), where adversaries may employ legitimate system tools for nefarious purposes to avoid detection. By monitoring process creation logs, analysts can identify instances where this tool is used inappropriately, allowing for quick responses to potential threats.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review logs from Sysmon's process creation events to identify when "VisualUiaVerifyNative.exe" was executed, including the user context and parent process details.
  - **Analyze Command-Line Parameters:** Look for any unusual command-line parameters associated with "VisualUiaVerifyNative.exe" that could indicate malicious intent, including arguments that deviate from legitimate use cases.
  - **Monitor for Associated Network Activity:** Utilize EDR tools to check for any follow-on network connections initiated during the same time frame as the execution of "VisualUiaVerifyNative.exe," which may indicate command and control (C2) communications.
  - **Examine Application and Security Logs:** Investigate relevant Windows Security logs for any alerts or events correlated with the usage of the executable, focusing on authentication events or privilege escalation.
  ### Prioritization
  The alert for "Use of VisualUiaVerifyNative.exe" is classified as medium severity due to its potential to indicate a legitimate tool being misused for evasion techniques, which could facilitate further malicious actions within the environment.
  ### Blind Spots and Assumptions
  The rule may not trigger in scenarios where "VisualUiaVerifyNative.exe" is used legitimately, such as during approved testing of Microsoft UI components. Additionally, if the executable is renamed or executed from a different path, the rule would fail to activate. Adversaries might also employ techniques to obscure their use of this tool, such as manipulating its attributes or executing it from a compromised and trusted application context. Consequently, analysts should account for contextual factors and the evolving tactics employed by threat actors to understand the rule's limitations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
