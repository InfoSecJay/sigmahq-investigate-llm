title: Renamed Whoami Execution
id: f1086bf7-a0c4-4a37-9102-01e573caf4a0
status: test
description: Detects the execution of whoami that has been renamed to a different
  name to avoid detection
references:
- https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/
- https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/
author: Florian Roth (Nextron Systems)
date: 2021-08-12
modified: 2022-10-09
tags:
- attack.discovery
- attack.t1033
- car.2016-03-001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    OriginalFileName: 'whoami.exe'
  filter:
    Image|endswith: '\whoami.exe'
  condition: selection and not filter
falsepositives:
- Unknown
level: critical
notes: |
  ### Technical Context
  The "Renamed Whoami Execution" detection rule is designed to identify instances where the standard Windows command-line utility 'whoami', which is commonly used to determine the current userâ€™s identity, is executed under a different name to bypass security mechanisms. By monitoring process creation logs, this rule looks specifically for processes where the original filename matches 'whoami.exe', but the executed image does not match this name, suggesting a potential evasion tactic. The data sources involved primarily include Windows Security Event Logs pertaining to process creation, where details such as the executable name, command-line parameters, and any parent processes can be analyzed. This aligns with the MITRE ATT&CK tactic of "Discovery" and the technique T1033, which focuses on adversaries using system tools to gather information about the target environment.
  ### Investigation Steps
  - **Investigate the Process Creation Logs:** Examine the Windows Event Logs for any unauthorized or unusual process executions related to the renamed 'whoami'. Check the process's parent-child relationships to identify if it was spawned by a known or trusted process.
  - **Analyze Command-Line Parameters:** Look at the command-line parameters used with the executed process to assess what flags or options were utilized. This may provide insight into the actor's intentions and potential objectives.
  - **Correlate with EDR Data:** Utilize EDR solutions to track the behavior of the renamed executable. Determine if it performed any additional suspicious actions, such as network connections or accessing sensitive files.
  - **Check for Other Related Events:** Review other security logs (e.g., Sysmon, AV logs) for related activities around the same timeframe. Look for any signs of lateral movement or other actions that might indicate a larger compromise.
  ### Prioritization
  This alert is classified as critical severity because the execution of a core system utility under a different name can indicate a clear attempt at obfuscation or evasion, which poses a significant risk to the integrity and security of the enterprise environment.
  ### Blind Spots and Assumptions
  The detection rule may not trigger if an adversary uses techniques to further conceal their activities, such as running the renamed 'whoami' from an unusual location or using additional obfuscation methods like sandboxing or virtualization techniques. Additionally, if the execution occurs on systems with restrictive logging configurations or if Sysmon is not properly deployed, the alerts may be missed. It is also assumed that the environments being monitored enforce a standard operational procedure for executable names, which might not be the case in all situations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
