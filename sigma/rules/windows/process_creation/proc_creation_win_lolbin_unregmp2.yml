title: Lolbin Unregmp2.exe Use As Proxy
id: 727454c0-d851-48b0-8b89-385611ab0704
status: test
description: Detect usage of the "unregmp2.exe" binary as a proxy to launch a custom
  version of "wmpnscfg.exe"
references:
- https://lolbas-project.github.io/lolbas/Binaries/Unregmp2/
author: frack113
date: 2022-12-29
modified: 2024-06-04
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\unregmp2.exe'
  - OriginalFileName: 'unregmp2.exe'
  selection_cmd:
    CommandLine|contains|windash: ' /HideWMP'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Lolbin Unregmp2.exe Use As Proxy" is designed to detect the abuse of the `unregmp2.exe` binary, typically utilized for launching applications in a Windows environment, specifically as a means to execute a custom version of `wmpnscfg.exe`. This behavior is associated with the MITRE ATT&CK tactic of Defense Evasion, particularly technique T1218, which involves the use of legitimate binaries to evade detection. The rule identifies specific attributes of process creation events in Windows, focusing on the invocation of `unregmp2.exe` and the conditions in which it operates, such as command-line arguments that typically indicate a covert operation (e.g., including " /HideWMP"). The primary technical data sources relevant to this detection include process creation logs, which capture information about the executed binaries and their command-line parameters, aiding in pinpointing potentially malicious activity disguised within legitimate operations.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine process creation logs in the EDR solution to identify instances of `unregmp2.exe` being executed, taking note of the associated command-line arguments for any signs of malicious intent.
  - **Analyze Command-Line Parameters:** Look for the presence of suspicious command-line parameters, particularly those that could indicate the use of `wmpnscfg.exe` in a non-standard manner, such as the `/HideWMP` argument.
  - **Correlate with Network Logs:** Utilize network traffic logs to identify any connections initiated by `wmpnscfg.exe` or related processes to verify if they are reaching out to known malicious domains or endpoints.
  - **Check for Known Indicators of Compromise (IoCs):** Cross-reference any identified binaries or behaviors with a database of known malicious indicators; this includes reviewing threat intelligence sources for current adversary tactics linked to the use of `unregmp2.exe`.
  ### Prioritization
  This alert is classified as medium severity due to the use of a legitimate Windows binary to conduct potentially malicious activity that may evade initial detection methods. While it indicates suspicious behavior that could represent an active threat, further investigation is required to ascertain its true nature and intent.
  ### Blind Spots and Assumptions
  One significant blind spot is the possibility that the rule may not fire if `unregmp2.exe` is executed without the specified command-line parameter, or if it has been renamed or altered in an attempt to evade detection. Additionally, the rule assumes that adequate logging is enabled for capturing process creation events; if logs are missing or incorrectly configured, the detection may fail. Adversaries could easily defeat this detection by employing alternative techniques or binaries which are not captured by the current rule set.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and effectiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
