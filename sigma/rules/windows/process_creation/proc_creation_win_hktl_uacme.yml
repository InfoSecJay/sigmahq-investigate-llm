title: HackTool - UACMe Akagi Execution
id: d38d2fa4-98e6-4a24-aff1-410b0c9ad177
status: test
description: Detects the execution of UACMe, a tool used for UAC bypasses, via default
  PE metadata
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems), Florian Roth (Nextron Systems)
date: 2021-08-30
modified: 2024-11-23
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_pe:
  - Product: 'UACMe'
  - Company:
    - 'REvol Corp'
    - 'APT 92'
    - 'UG North'
    - 'Hazardous Environments'
    - 'CD Project Rekt'
  - Description:
    - 'UACMe main module'
    - 'Pentesting utility'
  - OriginalFileName:
    - 'Akagi.exe'
    - 'Akagi64.exe'
  selection_img:
    Image|endswith:
    - '\Akagi64.exe'
    - '\Akagi.exe'
  selection_hashes_sysmon:
    Hashes|contains:
    - 'IMPHASH=767637C23BB42CD5D7397CF58B0BE688'
    - 'IMPHASH=14C4E4C72BA075E9069EE67F39188AD8'
    - 'IMPHASH=3C782813D4AFCE07BBFC5A9772ACDBDC'
    - 'IMPHASH=7D010C6BB6A3726F327F7E239166D127'
    - 'IMPHASH=89159BA4DD04E4CE5559F132A9964EB3'
    - 'IMPHASH=6F33F4A5FC42B8CEC7314947BD13F30F'
    - 'IMPHASH=5834ED4291BDEB928270428EBBAF7604'
    - 'IMPHASH=5A8A8A43F25485E7EE1B201EDCBC7A38'
    - 'IMPHASH=DC7D30B90B2D8ABF664FBED2B1B59894'
    - 'IMPHASH=41923EA1F824FE63EA5BEB84DB7A3E74'
    - 'IMPHASH=3DE09703C8E79ED2CA3F01074719906B'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "HackTool 
  - UACMe Akagi Execution" is designed to detect instances where UACMe, a tool commonly used for User Account Control (UAC) bypasses, is executed on Windows systems. This rule focuses on specific indicators including product metadata such as the product name, company information, and file characteristics like the original file name and file description that are typically associated with UACMe. Additionally, it looks for specific import hashes related to the executable files `Akagi.exe` and `Akagi64.exe`, which are characteristic of this software. The primary data sources for this rule are process creation logs, enabling the detection of executable launches that match these attributes. This aligns with the MITRE ATT&CK framework under the tactics of Defense Evasion and Privilege Escalation, specifically the technique T1548.002, which pertains to exploitation of application features to gain elevated privileges.
  ### Investigation Steps
  - **Examine EDR Alerts:** Check the endpoint detection and response tool for alerts related to process creation that involve the UACMe executables (Akagi.exe or Akagi64.exe). Investigate the command line parameters and parent processes to understand the context of execution.
  - **Review Windows Event Logs:** Collect and analyze Windows Security logs associated with the execution time of the detected process. Focus on Event ID 4688 (Process Created) to gather additional context about the user and system that initiated the command.
  - **Validate Threat Intelligence:** Cross-reference the detected file hashes and metadata against threat intelligence databases and your organizationâ€™s known good software list to assess legitimacy and identify potential false positives.
  - **Network Traffic Analysis:** Utilize network detection and response tools to monitor outgoing communications from the host post-execution. Analyze any suspicious connections and ensure they are justified by legitimate business activities.
  ### Prioritization
  Given its high-severity level, the alert should be treated with urgency in an enterprise environment due to its association with tools designed for privilege escalation and evasion tactics. Prompt investigation is crucial to determine if actual malicious activity is occurring.
  ### Blind Spots and Assumptions
  This rule may not fire if UACMe is modified to evade detection or if the binaries do not conform to the specified metadata and import hashes. Additionally, if legitimate processes or applications inadvertently utilize similar naming conventions or hash values, this could lead to false positives. There is an assumption that all relevant logs are being collected and that the adversary does not employ techniques to clear or obfuscate log entries post-activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
