title: PowerShell Web Access Feature Enabled Via DISM
id: 7e8f2d3b-9c1a-4f67-b9e8-8d9006e0e51f
status: test
description: Detects the use of DISM to enable the PowerShell Web Access feature,
  which could be used for remote access and potential abuse
references:
- https://docs.microsoft.com/en-us/powershell/module/dism/enable-windowsoptionalfeature
- https://www.cisa.gov/news-events/cybersecurity-advisories/aa24-241a
- https://gist.github.com/MHaggis/7e67b659af9148fa593cf2402edebb41
author: Michael Haag
date: 2024-09-03
tags:
- attack.persistence
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\dism.exe'
  - OriginalFileName: 'DISM.EXE'
  selection_cli:
    CommandLine|contains|all:
    - 'WindowsPowerShellWebAccess'
    - '/online'
    - '/enable-feature'
  condition: all of selection_*
falsepositives:
- Legitimate PowerShell Web Access installations by administrators
level: high
notes: |
  ### Technical Context
  This Sigma rule detects the enabling of the PowerShell Web Access feature through the Deployment Image Servicing and Management (DISM) tool. The rule specifically looks for process creation logs that indicate the execution of `dism.exe` with command-line parameters that include terms related to PowerShell Web Access, such as "WindowsPowerShellWebAccess", "/online", and "/enable-feature". By monitoring these actions, organizations can identify potential unauthorized attempts to enable remote access features that could be exploited by attackers for malicious purposes. This detection aligns with the MITRE ATT&CK framework, particularly the tactic of Persistence and the technique T1548.002, which is focused on the exploitation of features for maintenance of access.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check the process creation logs in your EDR solution to identify instances of `dism.exe` being executed. Pay particular attention to the command-line arguments associated with these executions.
    
  - **Correlate with User Context:** Identify the user account that initiated the DISM command and assess whether the activity aligns with the user's normal behavior and permissions by reviewing Active Directory logs and user history.
    
  - **Examine Security Events:** Investigate Windows Security logs for any related security events that may indicate suspicious activity or failed attempts to execute similar commands. This can provide context around the potential intent behind enabling PowerShell Web Access.
  - **Analyze Network Connections:** Leverage network traffic logs to monitor for any new connections or unauthorized access attempts that coincide with the time of the DISM execution, which could indicate an active threat actor utilizing the newly enabled remote access feature.
  ### Prioritization
  The alert is considered high priority because the enabling of PowerShell Web Access could create an avenue for unauthorized remote access, posing significant risks to the security and integrity of the organizationâ€™s systems and data.
  ### Blind Spots and Assumptions
  This rule may not fire in certain environments where DISM is legitimately used for administrative tasks, such as by authorized personnel performing maintenance or deployments. Additionally, if attackers use alternative methods or obfuscate their command-line parameters, detection might be evaded. It is also assumed that sufficient logging is enabled for Sysmon and that users execute DISM from standard environments where logging occurs as expected. Lastly, scenarios where PowerShell Web Access was previously enabled may not trigger this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
