title: Sysmon Discovery Via Default Driver Altitude Using Findstr.EXE
id: 37db85d1-b089-490a-a59a-c7b6f984f480
status: test
description: Detects usage of "findstr" with the argument "385201". Which could indicate
  potential discovery of an installed Sysinternals Sysmon service using the default
  driver altitude (even if the name is changed).
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1518.001/T1518.001.md#atomic-test-5---security-software-discovery---sysmon-service
author: frack113
date: 2021-12-16
modified: 2023-11-14
tags:
- attack.discovery
- attack.t1518.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\find.exe'
    - '\findstr.exe'
  - OriginalFileName:
    - 'FIND.EXE'
    - 'FINDSTR.EXE'
  selection_cli:
    CommandLine|contains: ' 385201'     # Sysmon driver default altitude
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the usage of the `findstr.exe` command with a specific argument, "385201," which may indicate an attempt to discover the Sysinternals Sysmon service via its default driver altitude. The rule analyzes process creation logs on Windows systems, specifically looking for instances where `findstr.exe` or `find.exe` is invoked with this argument. By tracking the OriginalFileName attributes along with the command line parameters, the rule can identify potentially malicious behavior associated with reconnaissance efforts targeting Sysmon, a tool commonly used for system monitoring and logging. Since attackers often manipulate tool names or other operational features to avoid detection, this rule is critical for identifying covert system discovery activities.
  ### Investigation Steps
  - Review EDR logs to identify the source of the `findstr.exe` invocation along with the process hierarchy to determine if it was spawned by a legitimate application or script.
  - Search for associated command-line arguments in the process creation logs to identify trends or patterns that suggest malicious intentions beyond the single instance.
  - Correlate findings with existing network traffic data in the NDR to check for any related external communications or lateral movements executed immediately after the discovery command.
  - Check cloud platform logs (e.g., AWS, Azure, GCP) for any related events that occur around the same time, particularly focusing on created or modified resources that might have triggered or leveraged this command.
