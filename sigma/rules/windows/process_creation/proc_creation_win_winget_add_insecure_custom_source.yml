title: Add Insecure Download Source To Winget
id: 81a0ecb5-0a41-4ba1-b2ba-c944eb92bfa2
related:
- id: 05ebafc8-7aa2-4bcd-a269-2aec93f9e842
  type: similar
- id: c15a46a0-07d4-4c87-b4b6-89207835a83b
  type: similar
status: test
description: |
  Detects usage of winget to add a new insecure (http) download source.
  Winget will not allow the addition of insecure sources, hence this could indicate potential suspicious activity (or typos)
references:
- https://learn.microsoft.com/en-us/windows/package-manager/winget/source
- https://github.com/nasbench/Misc-Research/tree/b9596e8109dcdb16ec353f316678927e507a5b8d/LOLBINs/Winget
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-04-17
tags:
- attack.defense-evasion
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\winget.exe'
  - OriginalFileName: 'winget.exe'
  selection_cli:
    CommandLine|contains|all:
    - 'source '
    - 'add '
    - 'http://'
  condition: all of selection_*
falsepositives:
- False positives might occur if the users are unaware of such control checks
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the addition of an insecure download source using Windows Package Manager (`winget`). Specifically, the detection focuses on the command-line parameters that indicate an attempt to add a new source via the `source add` command with an HTTP URL, which is not permitted by `winget`. The logs that are monitored for this activity are based on process creation events, particularly those related to `winget.exe`. When a user or a malicious actor tries to execute this command to add an insecure source, it could signify an attempt to introduce potentially malicious software repositories that bypass normal security controls. The related MITRE ATT&CK techniques relevant here include **Defense Evasion (T1070)** and **Execution (T1059)**, highlighting actions taken by adversaries to circumvent security measures and execute commands.
  ### Investigation Steps
  - **Review Command Line Arguments:** Examine the logs of `winget.exe` for any instances of `source add http://` to identify the exact commands used and correlate them with user activity.
  - **Cross-Reference User Activity:** Utilize EDR tools to cross-reference the user or machine that executed the command against known usage patterns or scheduled tasks that might explain the behavior.
  - **Evaluate Known Good Sources:** Investigate the list of currently configured sources in `winget` to determine if any other sources are insecure or not previously authorized.
  - **Analyze Contextual Information:** Leverage Windows Security event logs to gather context about the user activity surrounding the invocation of `winget`, focusing on related user logons and any anomalous behavior.
  ### Prioritization
  The alert is classified as high severity due to the potential implications of adding insecure download sources, which may lead to the installation of unverified or malicious software within the enterprise environment.
  ### Blind Spots and Assumptions
  This detection rule assumes that users are typically aware of or comply with organizational policies regarding software installation and trusted sources. However, false positives may occur if legitimate activity is misidentified, such as users mistakenly executing commands without fully understanding the implications. Additionally, the rule may not trigger if the command is obfuscated or modified in a way that bypasses the command-line checks, or if an attacker uses a different mechanism to achieve similar outcomes outside of `winget`.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
