title: Verclsid.exe Runs COM Object
id: d06be4b9-8045-428b-a567-740a26d9db25
status: test
description: Detects when verclsid.exe is used to run COM object via GUID
references:
- https://lolbas-project.github.io/lolbas/Binaries/Verclsid/
- https://gist.github.com/NickTyrer/0598b60112eaafe6d07789f7964290d5
- https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/
author: Victor Sergeev, oscd.community
date: 2020-10-09
modified: 2022-07-11
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\verclsid.exe'
  - OriginalFileName: 'verclsid.exe'
  selection_cli:
    CommandLine|contains|all:
    - '/S'
    - '/C'
  condition: all of selection_*
fields:
- CommandLine
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Verclsid.exe Runs COM Object" aims to detect suspicious activity involving `verclsid.exe`, a Windows utility used to run COM objects via their GUID. The detection focuses on identifying command-line executions of `verclsid.exe` that contain specific parameters, specifically `/S` and `/C`. This approach can be exploited by malicious actors to execute arbitrary command sequences through COM objects as a means of evading detectionâ€”an act characterized under the MITRE ATT&CK framework as a defense evasion tactic (T1218). The primary data sources leveraged for this detection rule are process creation logs which capture the command that was used to invoke `verclsid.exe`, alongside fields that provide detailed information about the processes' original file name and command line arguments.
  By analyzing these logs, security teams can identify potential misuse of the utility, especially in situations where it is invoked in a manner typical of attack scenarios. The presence of `verclsid.exe` running with specified command-line arguments can indicate that an adversary may be attempting to evade security measures by leveraging built-in system tools for malicious purposes.
  ### Investigation Steps
  - **Check EDR logs:** Review EDR logs for any recent executions of `verclsid.exe`, paying particular attention to the command-line parameters used in conjunction with it.
  - **Analyze Process History:** Use the Windows Event Logs to track the execution history of processes related to `verclsid.exe` and identify parent-child relationships and any anomalous behavior.
  - **Review Network Connections:** If applicable, examine associated network connections logged by the firewall or EDR, seeking any outbound connections that coincide with the execution timestamps of `verclsid.exe`.
  - **Examine File Creation Events:** Investigate file creation and modification events around the time `verclsid.exe` executed to find any unexpected artifacts that may indicate malicious activity.
  ### Prioritization
  The alert is categorized as medium severity because while the use of `verclsid.exe` isn't inherently malicious, the specific command-line parameters in question suggest an advanced technique that could indicate an ongoing cyber threat.
  ### Blind Spots and Assumptions
  One potential blind spot is false negatives where legitimate usage of `verclsid.exe` for administrative tasks may occur without any malicious intent, which might prevent the rule from firing. Moreover, users with adequate permissions could potentially modify the command-line arguments or manipulate file structures to avoid detection, thereby assuming that improper configurations or unusual contexts could lead to missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
