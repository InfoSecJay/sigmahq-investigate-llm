title: Suspicious Registry Modification From ADS Via Regini.EXE
id: 77946e79-97f1-45a2-84b4-f37b5c0d8682
related:
- id: 5f60740a-f57b-4e76-82a1-15b6ff2cb134
  type: derived
status: test
description: Detects the import of an alternate data stream with regini.exe, regini.exe
  can be used to modify registry keys.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Regini/
- https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/regini
author: Eli Salem, Sander Wiebing, oscd.community
date: 2020-10-12
modified: 2023-02-08
tags:
- attack.t1112
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\regini.exe'
  - OriginalFileName: 'REGINI.EXE'
  selection_re:
    CommandLine|re: ':[^ \\]'
  condition: all of selection_*
fields:
- ParentImage
- CommandLine
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The rule titled "Suspicious Registry Modification From ADS Via Regini.EXE" aims to detect the use of the Regini.exe utility to modify registry keys via alternate data streams (ADS). Regini.exe is a legitimate Windows command-line utility that can manipulate registry settings. However, its capabilities can be exploited by adversaries to perform malicious modifications stealthily. The detection focuses on monitoring process creation events, specifically looking for instances where Regini.exe is executed, accompanied by command-line arguments indicative of alternate data stream usage (e.g., a colon followed by additional parameters). 
  This rule aligns with the MITRE ATT&CK tactic of "Defense Evasion" and the technique T1112, which encompasses methods for adversaries to manipulate the system's registry and evade detection. By leveraging telemetry from Windows process creation logs (particularly via Sysmon), security operations teams can discern potential misuse of this utility in attempts to manipulate system configurations undetected.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check the process creation logs in your EDR solution for any executions of Regini.exe, noting the full command-line used, including parent processes for context.
  - **Analyze Command-Line Parameters:** Focus on the command-line arguments associated with Regini.exe. Look specifically for patterns indicating the use of alternate data streams.
  - **Correlate with Other Activities:** Investigate related actions such as other registry modifications or processes running concurrently to determine if there's a broader malicious campaign.
  - **Assess System Impact:** Evaluate any changes made to the registry from the detected activity and identify any potential impacts on system integrity or security posture.
  ### Prioritization
  When this rule is triggered, it should generally be treated as a high-severity alert. This is due to the potential misuse of Regini.exe for malicious purposes, which could indicate an attempt to gain persistence or evade detection by modifying critical registry settings.
  ### Blind Spots and Assumptions
  This detection rule assumes that Regini.exe will not be named or executed using different names or proxies that do not match the specified criteria. It may not fire if the legitimate execution of Regini.exe occurs without the expected parameters or if alternate methods (e.g., PowerShell scripts or other binary utilities) are used for registry modification. Additionally, environments heavily filtered for process creations or those lacking Sysmon may omit relevant telemetry, leading to missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
