title: Suspicious Script Execution From Temp Folder
id: a6a39bdb-935c-4f0a-ab77-35f4bbf44d33
status: test
description: Detects a suspicious script executions from temporary folder
references:
- https://www.microsoft.com/security/blog/2021/07/13/microsoft-discovers-threat-actor-targeting-solarwinds-serv-u-software-with-0-day-exploit/
author: Florian Roth (Nextron Systems), Max Altgelt (Nextron Systems), Tim Shelton
date: 2021-07-14
modified: 2022-10-05
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\mshta.exe'
    - '\wscript.exe'
    - '\cscript.exe'
    CommandLine|contains:
    - '\Windows\Temp'
    - '\Temporary Internet'
    - '\AppData\Local\Temp'
    - '\AppData\Roaming\Temp'
    - '%TEMP%'
    - '%TMP%'
    - '%LocalAppData%\Temp'
  filter:
    CommandLine|contains:
    - ' >'
    - 'Out-File'
    - 'ConvertTo-Json'
    - '-WindowStyle hidden -Verb runAs'          # VSCode behaviour if file cannot be written as current user
    - '\Windows\system32\config\systemprofile\AppData\Local\Temp\Amazon\EC2-Windows\'         # EC2 AWS
  condition: selection and not filter
falsepositives:
- Administrative scripts
level: high
notes: |
  ### Technical Context
  This SigmaHQ rule is designed to identify potentially malicious script executions from temporary directories on Windows systems. It specifically looks for instances where PowerShell, MSHTA, WScript, or CScript are executed with command-line parameters that reference common temporary folders, such as `C:\Windows\Temp`, `C:\AppData\Local\Temp`, and environment variables like `%TEMP%`. The rule includes a filter to reduce false positives by excluding legitimate administrative script executions that contain specific command-line patterns, such as output redirection or certain commands typical of genuine administrative tasks. This approach helps security teams focus on potentially harmful activity that can be indicative of attacks, such as those leveraging scripts to execute malware or perform other unauthorized actions.
  ### Investigation Steps
  - Verify the source of the script execution by reviewing the associated process creation logs in the EDR tool to confirm if it originated from a known user or a legitimate service.
  - Check the command-line parameters used during the execution for potentially malicious flags or output redirection that may indicate suspicious activity.
  - Analyze the network traffic associated with the process using NDR tools to determine if the executed script attempts to reach out to known malicious URLs or IP addresses.
  - Review the contents of the script (if retrievable) in the temporary directory to ascertain its purpose and any malicious intent, along with any indicators of compromise that might need further investigation.
