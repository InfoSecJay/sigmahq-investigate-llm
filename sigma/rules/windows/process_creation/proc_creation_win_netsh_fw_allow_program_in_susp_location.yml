title: Suspicious Program Location Whitelisted In Firewall Via Netsh.EXE
id: a35f5a72-f347-4e36-8895-9869b0d5fc6d
status: test
description: Detects Netsh command execution that whitelists a program located in
  a suspicious location in the Windows Firewall
references:
- https://www.virusradar.com/en/Win32_Kasidet.AD/description
- https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100
author: Sander Wiebing, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community
date: 2020-05-25
modified: 2023-12-11
tags:
- attack.defense-evasion
- attack.t1562.004
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\netsh.exe'
  - OriginalFileName: 'netsh.exe'
  selection_cli:
  - CommandLine|contains|all:
    - 'firewall'
    - 'add'
    - 'allowedprogram'
  - CommandLine|contains|all:
    - 'advfirewall'
    - 'firewall'
    - 'add'
    - 'rule'
    - 'action=allow'
    - 'program='
  selection_paths:
    CommandLine|contains:
    - ':\$Recycle.bin\'
    - ':\RECYCLER.BIN\'
    - ':\RECYCLERS.BIN\'
    - ':\SystemVolumeInformation\'
    - ':\Temp\'
    - ':\Users\Default\'
    - ':\Users\Desktop\'
    - ':\Users\Public\'
    - ':\Windows\addins\'
    - ':\Windows\cursors\'
    - ':\Windows\debug\'
    - ':\Windows\drivers\'
    - ':\Windows\fonts\'
    - ':\Windows\help\'
    - ':\Windows\system32\tasks\'
    - ':\Windows\Tasks\'
    - ':\Windows\Temp\'
    - '\Downloads\'
    - '\Local Settings\Temporary Internet Files\'
    - '\Temporary Internet Files\Content.Outlook\'
    - '%Public%\'
    - '%TEMP%'
    - '%TMP%'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled **Suspicious Program Location Whitelisted In Firewall Via Netsh.EXE** aims to detect potentially malicious behavior where a program located in a suspicious directory is whitelisted in the Windows Firewall using the Netsh utility. This rule focuses on the execution of `netsh.exe` with command-line parameters indicative of adding a program to the allowed list in the Windows Firewall. It looks specifically for references to directories typically associated with less trustworthy applications, such as the Recycle Bin, temporary files, or default user directories. Key data sources involved include process creation logs, particularly the command-line parameters used, and the original executable filename. The detection is aligned with the MITRE ATT&CK framework under the tactic of **Defense Evasion** and the technique **T1562.004** (Impair Defenses: Windows Firewall).
  ### Investigation Steps
  - **Check EDR alerts**: Utilize your Endpoint Detection and Response (EDR) tool to analyze the context of the `netsh.exe` execution, including related process tree and associated user accounts.
  - **Review Firewall logs**: Examine Windows Firewall logs for details about the rule addition, focusing on the exact timestamp and any previous modifications that coincide with the alert location.
  - **Inspect the program location**: Investigate the file(s) located in the suspicious directories mentioned in the alert to verify their legitimacy and any associated malicious activity or indicators of compromise.
  - **Conduct network analysis**: Use Network Detection and Response (NDR) solutions to monitor outbound network activity from the whitelisted program to detect any suspicious connections or data exfiltration attempts.
  ### Prioritization
  The severity level for this alert is considered high due to the potential for attackers to bypass firewall protections, allowing malicious programs to exploit network access, which could lead to widespread security issues in the enterprise environment.
  ### Blind spots and Assumptions
  This rule may not fire if the adversary uses a different method to whitelist processes or employs stealthier techniques that do not involve `netsh.exe`. Moreover, if an organization uses customized firewall configurations or relies on third-party firewall solutions, the execution of legitimate commands might not register under traditional event logs. Furthermore, if the malicious program is located in a typical or acceptable directory, the rule may not trigger, creating a blind spot in detection capabilities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
