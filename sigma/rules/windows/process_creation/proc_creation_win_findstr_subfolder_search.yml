title: Insensitive Subfolder Search Via Findstr.EXE
id: 04936b66-3915-43ad-a8e5-809eadfd1141
related:
- id: bf6c39fc-e203-45b9-9538-05397c1b4f3f
  type: obsolete
status: test
description: |
  Detects execution of findstr with the "s" and "i" flags for a "subfolder" and "insensitive" search respectively. Attackers sometimes leverage this built-in utility to search the system for interesting files or filter through results of commands.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Findstr/
- https://oddvar.moe/2018/04/11/putting-data-in-alternate-data-streams-and-how-to-execute-it-part-2/
- https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f
author: Furkan CALISKAN, @caliskanfurkan_, @oscd_initiative, Nasreddine Bencherchali
  (Nextron Systems)
date: 2020-10-05
modified: 2024-03-05
tags:
- attack.defense-evasion
- attack.t1218
- attack.t1564.004
- attack.t1552.001
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection_findstr:
  - CommandLine|contains: findstr
  - Image|endswith: 'findstr.exe'
  - OriginalFileName: 'FINDSTR.EXE'
  selection_cli_search_subfolder:
    CommandLine|contains|windash: ' -s '
  selection_cli_search_insensitive:
    CommandLine|contains|windash: ' -i '
  condition: selection_findstr and all of selection_cli_search_*
falsepositives:
- Administrative or software activity
level: low
notes: |
  ### Technical Context
  The Sigma rule titled "Insensitive Subfolder Search Via Findstr.EXE" is designed to detect potentially malicious use of the Windows command-line utility `findstr.exe`. This utility can be utilized by actors to search the file system for sensitive or valuable files without drawing significant attention. Specifically, the rule identifies execution of `findstr.exe` with the `-s` (recursive search through subfolders) and `-i` (case-insensitive search) flags, which are indicative of an attempt to broadly search within directories for interesting files or data. The detection is primarily based on process creation logs, where the command line arguments for executed processes are analyzed. This rule relates to several MITRE ATT&CK techniques, particularly `T1218 
  - Signed Binary Proxy Execution` and `T1564.004 
  - Hide Artifacts: Alternate Data Streams`, as the tool can be leveraged in an offensive capacity to evade detection or access hidden data.
  ### Investigation Steps
  - **Check Process Details:** Investigate the `findstr.exe` process in your EDR solution, focusing on the user context and parent process responsible for invoking the command. Determine if the command was initiated by an authorized user or anomalous process.
  - **Command Line Analysis:** Examine the command line details in the security logs for the execution of `findstr.exe` to confirm the presence of `-s` and `-i` flags. Cross-reference the investigation with timestamps to identify activities correlated to possible data searching or data exfiltration events.
  - **Additional File Activity:** Correlate the `findstr.exe` execution with file access events in Sysmon logs or Windows Security logs. Look for any subsequent file creation or modification activities that could suggest malicious intent after the initial search command.
  - **Historical Context:** Review the user's recent activity and permissions-related logs to ensure that their actions are legitimate and in line with their role in the organization. Investigate previous instances of `findstr.exe` usage for patterns that could suggest abuse.
  ### Prioritization
  Given the potential for data exfiltration and information gathering, alerts triggered by this rule should be treated as moderate to high priority in an enterprise environment, particularly if they occur during off-hours or involve sensitive directories.
  ### Blind Spots and Assumptions
  This rule may not fire if an attacker utilizes alternative utilities or custom scripts for file searches that do not invoke `findstr.exe`. Additionally, legitimate administrative tasks could lead to false positives. It's crucial to consider that attackers may modify command line arguments or employ system management tools that do not trigger this specific rule, thus potentially concealing their activities from detection. Continuous refinement of the detection rule may be necessary to adapt to evolving tactics.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
