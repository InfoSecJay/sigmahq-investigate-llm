title: HackTool - Covenant PowerShell Launcher
id: c260b6db-48ba-4b4a-a76f-2f67644e99d2
status: test
description: Detects suspicious command lines used in Covenant luanchers
references:
- https://posts.specterops.io/covenant-v0-5-eee0507b85ba
author: Florian Roth (Nextron Systems), Jonhnathan Ribeiro, oscd.community
date: 2020-06-04
modified: 2023-02-21
tags:
- attack.execution
- attack.defense-evasion
- attack.t1059.001
- attack.t1564.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_1:
    CommandLine|contains|all:
    - '-Sta'
    - '-Nop'
    - '-Window'
    - 'Hidden'
    CommandLine|contains:
    - '-Command'
    - '-EncodedCommand'
  selection_2:
    CommandLine|contains:
    - 'sv o (New-Object IO.MemorySteam);sv d '
    - 'mshta file.hta'
    - 'GruntHTTP'
    - '-EncodedCommand cwB2ACAAbwAgA'
  condition: 1 of selection_*
level: high
notes: |
  ### Technical Context
  This Sigma rule aims to detect suspicious command lines commonly associated with the execution of Covenant PowerShell launchers on Windows systems. Specifically, it identifies patterns that incorporate parameters such as `-Sta` (Single Threaded Apartment), `-Nop` (No Profile), and commands involving `-EncodedCommand` and `-Command`, often used to obfuscate malicious activity. The detection mechanism relies on process creation logs, which capture command line inputs during the execution of processes. By examining these command lines for specific keywords and patterns, the rule can differentiate legitimate PowerShell use from potential compromise, thereby alerting security personnel to potential threats.
  ### Investigation Steps
  - Examine the process creation logs in your EDR to identify instances where the suspicious PowerShell command lines were executed, paying particular attention to user context and execution time.
  - Utilize the SIEM to correlate any alerts generated by this rule with additional logs from your firewall or proxy to determine if suspicious outbound connections were attempted by the affected host.
  - Review any relevant behavioral alerts from your AV/EDR solution to see if any related malicious activity, such as file modifications or unusual network activity, was triggered around the same time.
  - Investigate the compromised system using remote access tools to collect additional logs and artifacts, such as scheduled tasks or startup entries, to understand the broader impact of the detected PowerShell execution.
