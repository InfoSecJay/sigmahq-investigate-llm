title: Potential Arbitrary Code Execution Via Node.EXE
id: 6640f31c-01ad-49b5-beb5-83498a5cd8bd
status: test
description: Detects the execution node.exe which is shipped with multiple software
  such as VMware, Adobe...etc. In order to execute arbitrary code. For example to
  establish reverse shell as seen in Log4j attacks...etc
references:
- http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html
- https://www.sprocketsecurity.com/resources/crossing-the-log4j-horizon-a-vulnerability-with-no-return
- https://www.rapid7.com/blog/post/2022/01/18/active-exploitation-of-vmware-horizon-servers/
- https://nodejs.org/api/cli.html
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-09-09
modified: 2023-02-03
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  category: process_creation
  product: windows
detection:
  selection_main:
    Image|endswith: '\node.exe'
    CommandLine|contains:
    - ' -e '
    - ' --eval '
    # Add more pattern of abuse as actions
  selection_action_reverse_shell:
    CommandLine|contains|all:
    - '.exec('
    - 'net.socket'
    - '.connect'
    - 'child_process'
  condition: selection_main and 1 of selection_action_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Arbitrary Code Execution Via Node.EXE" is designed to detect potentially malicious uses of the Node.js runtime environment (node.exe) on Windows systems. This rule focuses on process creation logs, specifically looking for executions of node.exe with specific command-line arguments indicative of code execution exploits, such as those seen in attacks leveraging vulnerabilities like Log4j. The rule flags instances of node.exe being run with flags like `-e` or `--eval`, which allow arbitrary code to be executed directly from the command line, and it looks for further signs of suspicious activity, such as attempts to establish reverse shells using methods like `.exec()` or `net.socket`. This behavior is aligned with the MITRE ATT&CK technique T1127, targeting defense evasion strategies.
  ### Investigation Steps
  - **Verify Process Execution:** Examine the EDR for details of the process execution. Identify the parent process that launched node.exe to understand its origin and potential legitimacy.
  - **Analyze Command-Line Arguments:** Review the command-line arguments used to launch node.exe via Security and Sysmon logs. Look for abnormal flags and structures that deviate from typical usage patterns.
  - **Check Network Activity:** Utilize network logs (NDR) to investigate any outbound connections established by the node.exe process. Look for unexpected destinations or unusual traffic patterns that might indicate data exfiltration or command and control (C2) communication.
  - **Review Related Events:** Investigate other related events in the logs surrounding the execution of node.exe. This includes checking file modifications, registry changes, and any corresponding PowerShell or suspicious script activity.
  ### Prioritization
  This alert is categorized as high severity due to the potential implications of arbitrary code execution vulnerabilities, which can lead to significant compromise and data exfiltration within an enterprise environment.
  ### Blind Spots and Assumptions 
  The rule may not fire in scenarios where node.exe is executed with legitimate command-line arguments or when other processes invoke node.exe indirectly without triggering the specific command-line filters defined. Additionally, the accuracy of the detection relies on the comprehensiveness of monitoring configuration; if telemetry sources are incomplete or improperly configured, the rule may fail to detect malicious activity successfully. Adversaries may also employ obfuscation techniques to modify command arguments, thereby evading detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
