title: Ruby Inline Command Execution
id: 20a5ffa1-3848-4584-b6f8-c7c7fd9f69c8
status: test
description: Detects execution of ruby using the "-e" flag. This is could be used
  as a way to launch a reverse shell or execute live ruby code.
references:
- https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
- https://www.revshells.com/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-02
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\ruby.exe'
  - OriginalFileName: 'ruby.exe'
  selection_cli:
    CommandLine|contains: ' -e'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect the execution of Ruby scripts using the command-line flag `-e`, which allows users to run Ruby code snippets directly from the command line. Such command executions can be a tactic employed by adversaries to initiate malicious activities, including the launching of reverse shells or executing live Ruby code without creating a script file. The rule monitors process creation events and looks specifically for instances of `ruby.exe` being executed with the `-e` flag within the command line arguments. The relevant technical data sources include Windows Security event logs for process creation, which provide insights into the execution context of binaries on Windows systems. This detection aligns with the MITRE ATT&CK technique T1059, focusing on execution methods to carry out malicious activities.
  ### Investigation Steps
  - **Check Process Details:** Investigate the process tree linked to the alert using EDR tools to identify parent and child processes associated with the Ruby execution. This can provide context about how the Ruby command was initiated.
  - **Review Command-Line Arguments:** Analyze the command-line parameters associated with the detected `ruby.exe` process to determine if any additional flags or suspicious commands were executed alongside `-e`.
  - **Cross-Reference User Activity:** Utilize Security logs to check user account activity and assess whether the execution of Ruby aligns with expected user behavior, identifying any anomalies that may require further investigation.
  - **Inspect Network Activity:** Examine network logs for any connections made by the Ruby process that may indicate outbound activity associated with reverse shells or unauthorized data exfiltration.
  ### Prioritization
  This alert is classified as medium severity because while not all executions of Ruby with the `-e` flag are malicious, such behavior warrants careful scrutiny, especially in environments where Ruby is not part of regular operations.
  ### Blind Spots and Assumptions
  The rule assumes that any execution of Ruby with the `-e` flag is potentially malicious, which may be an overly broad assumption in environments where Ruby is commonly used for legitimate tasks. Additionally, this detection could be circumvented if an attacker employs obfuscation techniques or uses alternative scripting languages. Furthermore, if Ruby is executed in a manner that does not align with the specified detection patterns—such as through an intermediary application or as part of a larger obscure command—it may not trigger an alert.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
