title: Ruby Inline Command Execution
id: 20a5ffa1-3848-4584-b6f8-c7c7fd9f69c8
status: test
description: Detects execution of ruby using the "-e" flag. This is could be used
  as a way to launch a reverse shell or execute live ruby code.
references:
- https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
- https://www.revshells.com/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-02
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\ruby.exe'
  - OriginalFileName: 'ruby.exe'
  selection_cli:
    CommandLine|contains: ' -e'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Ruby Inline Command Execution" detection rule is designed to identify potentially malicious behavior that involves the execution of Ruby scripts in a Windows environment using the `-e` command-line flag. This flag enables the inline execution of Ruby code, which can be exploited by attackers to run arbitrary scripts directly from the command line. Specifically, the rule monitors process creation logs for instances where the Ruby executable (`ruby.exe`) is invoked with the `-e` option in the command line. Such behavior can suggest that the attacker is using Ruby to initiate reverse shells or execute live code, which are common tactics in post-exploitation scenarios. The rule leverages key technical data sources, including process creation logs and command-line parameters, to effectively detect this suspicious activity.
  ### Investigation Steps
  - Use the EDR solution to investigate the specific process instance of `ruby.exe` that triggered the alert. Review the associated command line parameters for any suspicious activity or unexpected flags used.
  - Check historical process creation logs in the SIEM to identify other instances of `ruby.exe` execution, focusing on those previously seen with the `-e` command-line flag.
  - Examine network activity logs from Next-Generation Firewall (NGFW) or NDR solutions to look for outbound connections that may indicate attempted data exfiltration or reverse shell communication.
  - Analyze related user activity and access logs to determine whether the user had legitimate reasons to run Ruby or if this behavior indicates potential compromise or unauthorized scripting.
