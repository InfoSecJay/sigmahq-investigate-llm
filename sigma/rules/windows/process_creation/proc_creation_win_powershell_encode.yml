title: Suspicious Execution of Powershell with Base64
id: fb843269-508c-4b76-8b8d-88679db22ce7
status: test
description: Commandline to launch powershell with a base64 payload
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1059.001/T1059.001.md#atomic-test-20---powershell-invoke-known-malicious-cmdlets
- https://unit42.paloaltonetworks.com/unit42-pulling-back-the-curtains-on-encodedcommand-powershell-attacks/
- https://mikefrobbins.com/2017/06/15/simple-obfuscation-with-powershell-using-base64-encoding/
author: frack113
date: 2022-01-02
modified: 2023-01-05
tags:
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - \powershell.exe
    - \pwsh.exe
    CommandLine|contains:
    - ' -e '
    - ' -en '
    - ' -enc '
    - ' -enco'
    - ' -ec '
  filter_encoding:
    CommandLine|contains: ' -Encoding '
  filter_azure:
    ParentImage|contains:
    - 'C:\Packages\Plugins\Microsoft.GuestConfiguration.ConfigurationforWindows\'
    - '\gc_worker.exe'
  condition: selection and not 1 of filter_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule focuses on identifying potentially malicious execution of PowerShell commands that use Base64 encoding to obfuscate their operations. Attackers frequently utilize this technique to bypass security mechanisms, as encoded commands can conceal their true intent from analysts and detection systems. The rule monitors process creation logs for PowerShell or PowerShell Core process invocations (i.e., `powershell.exe` or `pwsh.exe`) that include command-line arguments indicative of Base64 encoding, specifically looking for flags like `-e`, `-en`, `-enc`, `-enco`, or `-ec`, which are commonly used for this purpose. Furthermore, the rule applies conditions to disregard command executions that originate from known benign parent processes, such as Azure Agent executables or certain plugins, reducing the chance of false positives. This detection aligns with the MITRE ATT&CK tactic of Execution, particularly technique T1059.001, which focuses on the execution of scripts in PowerShell.
  ### Investigation Steps
  - **Check Process Details:** Use EDR solutions to gather more information about the specific `powershell.exe` or `pwsh.exe` processes identified. Review their process tree to establish the origin of the command and any child processes spawned.
    
  - **Analyze Command Line Execution:** Investigate the full command-line arguments passed to PowerShell from the relevant logs, looking for other parameters that may indicate suspicious activity or known malicious commands.
  - **Review Network Connections:** Correlate any outbound network connections initiated by the PowerShell processes in question using network traffic logs to identify communication with potentially malicious domains or IPs.
  - **Cross-Reference Threat Intelligence:** Utilize threat intelligence feeds in conjunction with AV and proxy logs to check if the command execution corresponds to any known malicious execution patterns or if the encodings reference known malicious payloads.
  ### Prioritization
  Given that this alert pertains to the execution of PowerShell with Base64 encoding—a common tactic employed in successful attacks—the severity level is considered medium due to the potential for unauthorized access and data exfiltration.
  ### Blind Spots and Assumptions
  This rule may not trigger if the PowerShell command does not utilize the specified obfuscation techniques or if it’s executed in a context that the rule does not account for, such as via scheduled tasks, WMI events, or scripts not run through `powershell.exe`. Additionally, benign PowerShell executions which legitimately use base64 encoding but do not involve malicious intent may lead to false positives. It is assumed that all environments may have different baselines; therefore, analysts should adjust investigations based on contextual environment specifics and ongoing activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
