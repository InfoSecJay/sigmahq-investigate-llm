title: HackTool - SharpImpersonation Execution
id: f89b08d0-77ad-4728-817b-9b16c5a69c7a
related:
- id: cf0c254b-22f1-4b2b-8221-e137b3c0af94
  type: similar
status: test
description: Detects execution of the SharpImpersonation tool. Which can be used to
  manipulate tokens on a Windows computers remotely (PsExec/WmiExec) or interactively
references:
- https://s3cur3th1ssh1t.github.io/SharpImpersonation-Introduction/
- https://github.com/S3cur3Th1sSh1t/SharpImpersonation
author: Sai Prashanth Pulisetti @pulisettis, Nasreddine Bencherchali (Nextron Systems)
date: 2022-12-27
modified: 2023-02-13
tags:
- attack.privilege-escalation
- attack.defense-evasion
- attack.t1134.001
- attack.t1134.003
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\SharpImpersonation.exe'
  - OriginalFileName: 'SharpImpersonation.exe'
  selection_cli:
  - CommandLine|contains|all:
    - ' user:'
    - ' binary:'
  - CommandLine|contains|all:
    - ' user:'
    - ' shellcode:'
  - CommandLine|contains:
    - ' technique:CreateProcessAsUserW'
    - ' technique:ImpersonateLoggedOnuser'
  condition: 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule for detecting the execution of the SharpImpersonation tool is designed to identify potentially malicious behavior on Windows systems. SharpImpersonation is typically used for privilege escalation and defense evasion tactics by manipulating user tokens to execute code with elevated permissions, often remotely via tools like PsExec or WmiExec. The rule leverages process creation logs, particularly focusing on the images executed and command-line parameters utilized. Specifically, it looks for processes whose image names end with "SharpImpersonation.exe" or those that include certain key command-line arguments that pertain to user impersonation techniques, such as `CreateProcessAsUserW` and `ImpersonateLoggedOnUser`. This rule maps to the MITRE ATT&CK tactics of privilege escalation (T1134) and defense evasion (T1134.001, T1134.003), highlighting the importance of monitoring for potential misuse of administrative tools in an enterprise environment.
  ### Investigation Steps
  - **Check EDR for Process Execution Details:** Examine the endpoint detection and response (EDR) logs for any related process execution events that capture when and how SharpImpersonation was executed, alongside subsequent child processes.
  - **Analyze Command-Line Parameters:** Inspect the command-line parameters associated with the process. Look for indicators such as the presence of `user:` and `binary:` or `shellcode:`, which may suggest token manipulation.
  - **Review Security Event Logs:** Use Windows Security event logs to identify any anomalous account behaviors or logon events that could correlate with the time of the SharpImpersonation execution.
  - **Evaluate Other System Tools:** Investigate related tools or activities on the system or network, focusing on any other tools used for remote command execution, which could indicate a broader attack strategy beyond SharpImpersonation itself.
  ### Prioritization
  Given the high severity level of this alert, which indicates the execution of a tool known for privilege escalation and evasion tactics, it is crucial for incident responders to prioritize investigations to ascertain the intent and scope of its use, especially in enterprise environments where unauthorized privilege escalation can lead to significant security breaches.
  ### Blind Spots and Assumptions
  It is important to understand that there are potential blind spots where this rule may not fire, such as situations where the tool is executed with renamed binaries or through alternate mechanisms that do not trigger standard process creation logs. Additionally, the rule assumes that logging for process creation is enabled and properly configured on target hosts. This may not be the case in environments where logging is insufficient, thus allowing impersonation techniques to go undetected. Adversaries can also use similar techniques with legitimate tools, potentially complicating the detection process.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
