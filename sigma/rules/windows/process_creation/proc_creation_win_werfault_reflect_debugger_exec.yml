title: Potential ReflectDebugger Content Execution Via WerFault.EXE
id: fabfb3a7-3ce1-4445-9c7c-3c27f1051cdd
related:
- id: 0cf2e1c6-8d10-4273-8059-738778f981ad
  type: derived
status: test
description: Detects execution of "WerFault.exe" with the "-pr" commandline flag that
  is used to run files stored in the ReflectDebugger key which could be used to store
  the path to the malware in order to masquerade the execution flow
references:
- https://cocomelonc.github.io/malware/2022/11/02/malware-pers-18.html
- https://www.hexacorn.com/blog/2018/08/31/beyond-good-ol-run-key-part-85/
author: X__Junior (Nextron Systems)
date: 2023-06-30
tags:
- attack.execution
- attack.defense-evasion
- attack.t1036
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\WerFault.exe'
  - OriginalFileName: 'WerFault.exe'
  selection_cli:
    CommandLine|contains: ' -pr '
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  The "Potential ReflectDebugger Content Execution Via WerFault.EXE" detection rule focuses on identifying suspicious activities involving the execution of `WerFault.exe`, particularly when it is launched with the command-line flag `-pr`. This flag is associated with executing files from the ReflectDebugger registry key, which can potentially harbor malicious payload paths. The rule monitors process creation logs within the Windows environment, specifically targeting the `WerFault.exe` image and its corresponding command-line parameters to determine if there is an attempt to exploit this mechanism for executing malicious content. This behavior aligns with the MITRE ATT&CK tactic of Execution (T1036) and the technique of Masquerading, often used to bypass user awareness and security mechanisms by disguising harmful actions.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR for instances where `WerFault.exe` is executed with the `-pr` argument. Focus on the user accounts associated with this execution.
  - **Analyze Command-Line Context:** Use the Command-Line parameters captured in the logs to correlate the suspicious execution to known malicious hash values or behaviors. This may involve looking up additional context on the files being referenced.
  - **Inspect ReflectDebugger Registry Key:** Investigate the Windows Registry for modifications in the ReflectDebugger key, typically found at `HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\ReflectDebugger`. Note any unexpected entries or paths indicating potential malware.
  - **Review System and Application Logs:** Examine Event Logs (Security, System, Application) for any anomalies or patterns that may correlate with the timing of `WerFault.exe` executions, which could signify a broader attack against the host system.
  ### Prioritization
  This alert is assigned a medium severity level as the execution of `WerFault.exe` with the `-pr` command may indicate an attempt to execute unauthorized content, warranting immediate investigation to prevent potential exploitation.
  ### Blind Spots and Assumptions
  This rule primarily targets the execution of `WerFault.exe` under specific conditions; however, it may not detect all variants of evasion tactics employed by adversaries. For instance, if an adversary writes their malicious content to a different key or executes a different process altogether, the rule may not trigger. Additionally, misconfigurations in process logging or reduced visibility in endpoint protection systems could result in missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
