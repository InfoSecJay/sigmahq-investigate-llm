title: Registry Modification Via Regini.EXE
id: 5f60740a-f57b-4e76-82a1-15b6ff2cb134
related:
- id: 77946e79-97f1-45a2-84b4-f37b5c0d8682
  type: derived
status: test
description: Detects the execution of regini.exe which can be used to modify registry
  keys, the changes are imported from one or more text files.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Regini/
- https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/regini
author: Eli Salem, Sander Wiebing, oscd.community
date: 2020-10-08
modified: 2023-02-08
tags:
- attack.t1112
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\regini.exe'
  - OriginalFileName: 'REGINI.EXE'
  filter:
    CommandLine|re: ':[^ \\]'     # Covered in 77946e79-97f1-45a2-84b4-f37b5c0d8682
  condition: selection and not filter
fields:
- ParentImage
- CommandLine
falsepositives:
- Legitimate modification of keys
level: low
notes: |
  n
  ### Technical Context
  This Sigma rule aims to detect the execution of `regini.exe`, a Windows utility commonly used to modify registry keys through configuration files. The detection focuses on process creation logs generated by Windows, specifically looking for instances where `regini.exe` is invoked without a valid command-line argument. `regini.exe` typically requires well-formed input to apply registry changes, and monitoring this executable can help identify potentially unauthorized or anomalous modifications to the system registry. The MITRE ATT&CK tactics of Defense Evasion (T1112) are referenced, as attackers may leverage this utility to evade detection while making unauthorized changes to the Windows registry.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR to find instances of `regini.exe` execution, paying particular attention to inconsistencies in the command-line arguments.
  - **Correlate with Parent Process:** Investigate the parent process of the `regini.exe` instances to determine its legitimacy and assess any suspicious activities leading up to its execution.
  - **Inspect Registry Changes:** Examine the relevant registry keys that may have been modified by `regini.exe` to establish whether the changes align with normal operational practices or indicate malicious intent.
  - **Cross-Reference with Other Logs:** Utilize Windows Security and Windows Logs to cross-reference user activity around the same timestamp, as well as checking any alerts raised by antivirus solutions regarding unusual registry modifications.
  ### Prioritization
  The alert is classified as low severity because while it indicates a potential registry modification, legitimate administrative activities can lead to the execution of `regini.exe`. It is essential to analyze the context around its use to determine whether the detection indicates an actual threat.
  ### Blind Spots and Assumptions
  This rule may not fire if `regini.exe` is prevented from executing by a security solution or if the command-line arguments used during its execution are formalized and do not match the defined filter. Additionally, attackers could obfuscate their actions by using legitimate administrative tools or modifying registry values through other methods, leading to missed detections. It is also assumed that system administrators may sometimes need to run `regini.exe` for legitimate purposes, which could result in false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
