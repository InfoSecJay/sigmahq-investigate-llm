title: Fsutil Suspicious Invocation
id: add64136-62e5-48ea-807e-88638d02df1e
status: stable
description: |
  Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size, etc).
  Might be used by ransomwares during the attack (seen by NotPetya and others).
references:
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070/T1070.md
- https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html
- https://github.com/albertzsigovits/malware-notes/blob/558898932c1579ff589290092a2c8febefc3a4c9/Ransomware/Lockbit.md
- https://blog.cluster25.duskrise.com/2023/05/22/back-in-black-blackbyte-nt
author: Ecco, E.M. Anhaus, oscd.community
date: 2019-09-26
modified: 2023-09-09
tags:
- attack.defense-evasion
- attack.impact
- attack.t1070
- attack.t1485
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\fsutil.exe'
  - OriginalFileName: 'fsutil.exe'
  selection_cli:
    CommandLine|contains:
    - 'deletejournal'                # usn deletejournal ==> generally ransomware or attacker
    - 'createjournal'                # usn createjournal ==> can modify config to set it to a tiny size
    - 'setZeroData'                  # file setZeroData  ==> empties a file with zeroes
  condition: all of selection_*
falsepositives:
- Admin activity
- Scripts and administrative tools used in the monitored environment
level: high
notes: |
  n
  ### Technical Context
  The "Fsutil Suspicious Invocation" detection rule identifies potentially malicious use of the `fsutil.exe` command-line utility, which is often leveraged by attackers, particularly ransomware, to manipulate the USN (Update Sequence Number) journal. Specifically, the rule captures instances where `fsutil` is invoked with suspicious parameters, such as `deletejournal`, `createjournal`, and `setZeroData`. These parameters can facilitate stealthy data deletion or alteration, actions commonly associated with attempts to evade detection during malicious activities, including ransomware attacks like NotPetya and Lockbit. The key data sources for this rule include process creation logs, which contain information on the invocation of `fsutil.exe`, and the parameters passed during its execution. This rule aligns with the MITRE ATT&CK techniques for defense evasion (T1070) and impact (T1485).
  ### Investigation Steps
  - **Correlate Process Creation Events:** Check Windows Security logs for process creation events associated with `fsutil.exe` to confirm the context and parameters used in the command line.
  - **Review Command-line Execution:** Utilize EDR tools to analyze the command line arguments passed to `fsutil.exe` and ascertain if the parameters align with known malicious patterns.
  - **Examine User Account Activity:** Investigate user accounts executing these commands through logs, focusing on potentially unauthorized or anomalous accounts that may indicate compromised credentials.
  - **Assess File System Changes:** Review relevant file system logs and the USN journal for any changes or deletions made around the time of the suspicious `fsutil` execution to identify potential data loss.
  ### Prioritization
  The alert is classified as high severity because the invocation of `fsutil` with these parameters typically indicates significant malicious activity, such as data destruction or evasion tactics employed by malware, which can have severe ramifications for enterprise data integrity.
  ### Blind Spots and Assumptions
  This rule may not trigger in environments where administrative users regularly execute `fsutil` for legitimate purposes, leading to potential false positives. It assumes the visibility of process creation logs; if these logs are not captured or retained adequately, the detection may fail. The rule may also fail if attackers utilize alternative methods for file manipulation or if they attempt to obfuscate their commands. Understanding these limitations is crucial for refining detection strategies and improving response protocols.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
