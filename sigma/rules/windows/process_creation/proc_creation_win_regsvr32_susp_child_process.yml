title: Potentially Suspicious Child Process Of Regsvr32
id: 6f0947a4-1c5e-4e0d-8ac7-53159b8f23ca
related:
- id: 8e2b24c9-4add-46a0-b4bb-0057b4e6187d
  type: obsolete
status: test
description: Detects potentially suspicious child processes of "regsvr32.exe".
references:
- https://redcanary.com/blog/intelligence-insights-april-2022/
- https://www.echotrail.io/insights/search/regsvr32.exe
- https://www.ired.team/offensive-security/code-execution/t1117-regsvr32-aka-squiblydoo
author: elhoim, Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2022-05-05
modified: 2023-05-26
tags:
- attack.defense-evasion
- attack.t1218.010
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\regsvr32.exe'
    Image|endswith:
    - '\calc.exe'
    - '\cscript.exe'
    - '\explorer.exe'
    - '\mshta.exe'
    - '\net.exe'
    - '\net1.exe'
    - '\nltest.exe'
    - '\notepad.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\reg.exe'
    - '\schtasks.exe'
    - '\werfault.exe'
    - '\wscript.exe'
  filter_main_werfault:
    Image|endswith: '\werfault.exe'
    CommandLine|contains: ' -u -p '
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unlikely, but can rarely occur. Apply additional filters accordingly.
level: high
notes: |
  ### Technical Context
  The Sigma rule "Potentially Suspicious Child Process Of Regsvr32" detects specific instances where certain child processes are spawned by `regsvr32.exe`, a legitimate Windows utility often used for registering DLLs. Attackers may misuse this tool to execute malicious payloads, commonly utilizing abusive techniques such as "Squiblydoo," where `regsvr32.exe` is leveraged to obfuscate script execution through legitimate Windows processes. This detection rule captures instances where `regsvr32.exe` serves as a parent process for several potentially suspicious executable images like `calc.exe`, `powershell.exe`, and `mshta.exe`. 
  By analyzing Windows process creation logs, specifically monitoring the `ParentImage` and `Image` fields, the rule checks for these associations and discards certain exceptions, such as when the child process is `werfault.exe` and involves specific arguments in the command line. This technique falls under the MITRE ATT&CK framework, specifically targeting the "Defense Evasion" tactic (T1218.010), which pertains to process injection, often used by adversaries to avoid detection by utilizing legitimate processes.
  ### Investigation Steps
  - **Review Process Creation Logs**: Utilize EDR tools to retrieve and analyze process creation logs confirming the relationship where `regsvr32.exe` is the parent process of the suspicious child processes captured by the alert.
  - **Examine Command Line Parameters**: Investigate the command line parameters of the flagged child processes to ascertain any obfuscation or malicious flags that may indicate nefarious activity.
  - **Check for Related Network Activity**: Analyze network connection logs from the firewall or EDR for any outbound connections that correspond with the timeline of the suspicious process creation events to identify potential C2 communication.
  - **Correlate with Security Alerts**: Cross-reference the findings with logs from antivirus or threat detection tools to see if any alerts were raised regarding the processes involved, which may provide insights into their legitimacy.
  ### Prioritization
  Alerts triggered by this rule should be treated with high priority due to the association of legitimate system processes being potentially exploited for malicious activity. Early detection of such techniques can prevent larger incursions and data breaches.
  ### Blind Spots and Assumptions
  This detection rule may not trigger under certain circumstances, such as when the malicious child processes are invoked directly without using `regsvr32.exe`, or if file names that do not match the predefined list are used for execution. Additionally, sophisticated attackers may employ methods to obscure command lines or use alternative methods of execution that evade detection. It is assumed that the telemetry from process creation is correctly configured and comprehensive in scope.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
