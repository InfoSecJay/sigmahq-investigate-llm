title: Start Windows Service Via Net.EXE
id: 2a072a96-a086-49fa-bcb5-15cc5a619093
status: test
description: Detects the usage of the "net.exe" command to start a service using the
  "start" flag
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1569.002/T1569.002.md
author: Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community
date: 2019-10-21
modified: 2023-03-05
tags:
- attack.execution
- attack.t1569.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\net.exe'
    - '\net1.exe'
  - OriginalFileName:
    - 'net.exe'
    - 'net1.exe'
  selection_cli:
    CommandLine|contains: ' start '         # space character after the 'start' keyword indicates that a service name follows, in contrast to `net start` discovery expression
  condition: all of selection_*
falsepositives:
- Legitimate administrator or user executes a service for legitimate reasons.
level: low
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of the `net.exe` command-line utility used to start a Windows service. It specifically looks for command-line parameters that include the "start" flag, which indicates a request to start a specific service. The detection leverages process creation logs to capture any instance of `net.exe` or `net1.exe` being executed with the relevant command-line arguments. By monitoring both the image names and their command-line parameters, this rule identifies potential misuse where adversaries may attempt to start a service for malicious purposes, leveraging a commonly available executable on Windows systems.
  The rule aligns with the MITRE ATT&CK technique T1569.002 (Service Execution), which focuses on the execution of services as a means for attackers to maintain persistence or further their actions in a compromised environment. The identification of unusual or unauthorized use of service-related commands is crucial for detecting unauthorized activities indicative of an attack.
  ### Investigation Steps
  - **Check EDR Alerts:** Look for any EDR alerts associated with the execution of `net.exe` around the time of the detection. Pay particular attention to processes executed by non-administrative accounts, as these may signify unauthorized attempts to manipulate services. 
  - **Review Command-Line Arguments:** Collect and analyze the command-line arguments associated with the detected instance of `net.exe`. Verify whether the service being started corresponds to any known malicious activity or if itâ€™s a legitimate administrative action.
  - **Inspect Service Status:** Utilize service management tools to verify the status of the service that was initiated. Investigate whether the service is legitimate, its state (running, stopped), and any related malicious indicators documented in your organization.
  - **Audit User Activity Logs:** Cross-reference user activity logs to determine if the command was executed by an expected user and in the context of their role. Flag any discrepancies such as unexpected users initiating service starts during unusual hours.
  ### Prioritization
  This alert is categorized as low severity because while it indicates the use of a built-in Windows command, it may also result from legitimate administrative actions. It is vital to investigate the context of the alert to differentiate between benign and malicious activity effectively.
  ### Blind spots and Assumptions
  This rule may not fire in scenarios where `net.exe` is executed without the "start" flag, as it solely focuses on that specific command. Additionally, it may miss commands executed through alternative means (e.g., PowerShell or scripting languages) that achieve similar outcomes without calling `net.exe`. Furthermore, if Group Policies or other security measures prevent access to `net.exe`, this detection might not trigger for legitimate administrative actions tried through this executable. Analysts must also consider the possibility that an attacker may use a different executable to start services in an attempt to remain under the radar.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
