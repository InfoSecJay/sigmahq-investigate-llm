title: LSASS Dump Keyword In CommandLine
id: ffa6861c-4461-4f59-8a41-578c39f3f23e
related:
- id: a5a2d357-1ab8-4675-a967-ef9990a59391
  type: derived
status: test
description: |
  Detects the presence of the keywords "lsass" and ".dmp" in the commandline, which could indicate a potential attempt to dump or create a dump of the lsass process.
references:
- https://github.com/Hackndo/lsassy
- https://medium.com/@markmotig/some-ways-to-dump-lsass-exe-c4a75fdc49bf
- https://github.com/elastic/detection-rules/blob/c76a39796972ecde44cb1da6df47f1b6562c9770/rules/windows/credential_access_lsass_memdump_file_created.toml
- https://www.whiteoaksecurity.com/blog/attacks-defenses-dumping-lsass-no-mimikatz/
- https://github.com/helpsystems/nanodump
- https://github.com/CCob/MirrorDump
author: E.M. Anhaus, Tony Lambert, oscd.community, Nasreddine Bencherchali (Nextron
  Systems)
date: 2019-10-24
modified: 2023-08-29
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - CommandLine|contains:
    - 'lsass.dmp'
    - 'lsass.zip'
    - 'lsass.rar'
    - 'Andrew.dmp'
    - 'Coredump.dmp'
    - 'NotLSASS.zip'            # https://github.com/CCob/MirrorDump
    - 'lsass_2'            # default format of procdump v9.0 is lsass_YYMMDD_HHmmss.dmp
    - 'lsassdump'
    - 'lsassdmp'
  - CommandLine|contains|all:
    - 'lsass'
    - '.dmp'
  - CommandLine|contains|all:
    - 'SQLDmpr'
    - '.mdmp'
  - CommandLine|contains|all:
    - 'nanodump'
    - '.dmp'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The detection rule titled "LSASS Dump Keyword In CommandLine" aims to identify potential attempts to dump the Local Security Authority Subsystem Service (LSASS) process, a common target for credential extraction by malicious actors. This rule specifically looks for command-line arguments that contain keywords associated with LSASS memory dumping practices, such as "lsass" and ".dmp". The relevance of these keywords lies in the fact that tools like Mimikatz and NanoDump exploit vulnerabilities in LSASS to extract sensitive information, including password hashes and Kerberos tickets. 
  The data source for this rule is primarily Windows process creation logs, which provide visibility into the command-line execution of processes. When suspicious keywords are detected within command-line parameters, this could indicate an ongoing attack or reconnaissance activity aimed at compromising user credentials. The rule corresponds with the MITRE ATT&CK tactic of Credential Access, specifically technique T1003.001 (Credential Dumping: LSASS Memory). By monitoring these logs, SOC analysts can detect potential malicious activity before sensitive information is exfiltrated.
  ### Investigation Steps
  - **Review Command-Line Arguments**: Use your EDR tool to search for commands associated with any user or process exhibiting the keywords defined in the rule's criteria, noting the time and context of execution.
  - **Analyze Process Tree**: Investigate the parent-child process relationships in your process creation logs to identify the origin of the suspicious command, checking for unusual parent processes that may indicate a malicious spawn. 
  - **Check for Memory Dumping Tools**: Look for known memory dumping tools, like Mimikatz or NanoDump, by analyzing installed software/products in EDR or querying Windows Security logs for related activity.
  - **Correlate Network Activity**: Utilize the NDR to check for any anomalous outbound connections originating from the host that executed the dump commandâ€”particularly connections to known attack infrastructure.
  ### Prioritization
  Given the sensitive nature of LSASS and the potential for credential theft, alerts generated by this rule should be treated with high priority in an enterprise environment. Prompt investigation is critical to mitigate the risk of credential compromise.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where process dumping attempts use alternative command-line formats not captured by the current keyword selection. Additionally, the rule assumes that standard logging practices are in place and that logs are not being tampered with or deleted. Adversaries could also employ obfuscation techniques or use benign-sounding keywords to evade detection, potentially making this rule less effective in certain environments or against more sophisticated attackers.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
