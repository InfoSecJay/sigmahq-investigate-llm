title: Potentially Suspicious Regsvr32 HTTP IP Pattern
id: 2dd2c217-bf68-437a-b57c-fe9fd01d5de8
status: test
description: Detects regsvr32 execution to download and install DLLs located remotely
  where the address is an IP address.
references:
- https://twitter.com/mrd0x/status/1461041276514623491
- https://twitter.com/tccontre18/status/1480950986650832903
- https://lolbas-project.github.io/lolbas/Binaries/Regsvr32/
author: Florian Roth (Nextron Systems)
date: 2022-01-11
modified: 2023-05-24
tags:
- attack.defense-evasion
- attack.t1218.010
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\regsvr32.exe'
  - OriginalFileName: 'REGSVR32.EXE'
  selection_ip:
    CommandLine|contains:
    - ' /i:http://1'
    - ' /i:http://2'
    - ' /i:http://3'
    - ' /i:http://4'
    - ' /i:http://5'
    - ' /i:http://6'
    - ' /i:http://7'
    - ' /i:http://8'
    - ' /i:http://9'
    - ' /i:https://1'
    - ' /i:https://2'
    - ' /i:https://3'
    - ' /i:https://4'
    - ' /i:https://5'
    - ' /i:https://6'
    - ' /i:https://7'
    - ' /i:https://8'
    - ' /i:https://9'
    - ' -i:http://1'
    - ' -i:http://2'
    - ' -i:http://3'
    - ' -i:http://4'
    - ' -i:http://5'
    - ' -i:http://6'
    - ' -i:http://7'
    - ' -i:http://8'
    - ' -i:http://9'
    - ' -i:https://1'
    - ' -i:https://2'
    - ' -i:https://3'
    - ' -i:https://4'
    - ' -i:https://5'
    - ' -i:https://6'
    - ' -i:https://7'
    - ' -i:https://8'
    - ' -i:https://9'
  condition: all of selection_*
falsepositives:
- FQDNs that start with a number such as "7-Zip"
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Potentially Suspicious Regsvr32 HTTP IP Pattern" is designed to detect suspicious use of the `regsvr32.exe` utility, which is commonly used for registering and deregistering DLL files on Windows systems. This rule specifically looks for instances where `regsvr32.exe` is executed with a command-line argument pointing to a remote resource using an IP address. The identified command-line parameters typically include a variety of HTTP and HTTPS URLs formatted to begin with a number, indicating a potential attempt by adversaries to download and deploy malicious DLLs from remote locations. The rule focuses on process creation telemetry from Windows, which captures details regarding the execution of processes, including the specific executable name, its original file name, and the complete command line used to invoke it.
  This detection aligns with the MITRE ATT&CK framework under the tactic of "Defense Evasion," specifically technique T1218.010, which discusses the use of signed binaries, such as `regsvr32`, to evade defenses while executing potentially harmful actions.
  ### Investigation Steps
  - **Review Process Creation Logs:** Investigate Windows Security logs to find `regsvr32.exe` execution events, paying special attention to the command-line parameters associated with these executions. 
  - **Analyze Command Line Arguments:** Assess the command-line arguments from the logs to identify usage patterns and any unexpected IP addresses or URLs that may indicate malicious intent.
  - **Cross-Reference Network Activity:** Use EDR or NDR solutions to correlate the detected `regsvr32.exe` executions with outbound network connections, checking for communication with the reported IP addresses.
  - **Check for Known Threats:** Utilize threat intelligence sources and AV tools to verify if the detected IP addresses or associated DLLs have been flagged for malicious activity in the past.
  ### Prioritization
  The alert is categorized as high severity due to the potential risk associated with remote execution of DLLs using `regsvr32.exe`, which can be a method for attackers to install malware or backdoors on compromised systems.
  ### Blind Spots and Assumptions
  This detection rule may not fire in scenarios where `regsvr32.exe` is invoked through legitimate means, such as updates or maintenance activities that are scheduled within the corporate environment. Additionally, the rule relies on the presence and integrity of Windows process creation logs; if these logs are disabled or compromised, detection failure is likely. Furthermore, adversaries could potentially utilize obfuscation techniques to avoid detection by changing how they invoke `regsvr32.exe` or using encoded command-line arguments that do not match the specified patterns.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
