title: Potential Binary Proxy Execution Via Cdb.EXE
id: b5c7395f-e501-4a08-94d4-57fe7a9da9d2
status: test
description: Detects usage of "cdb.exe" to launch arbitrary processes or commands
  from a debugger script file
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Cdb/
- https://web.archive.org/web/20170715043507/http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html
- https://twitter.com/nas_bench/status/1534957360032120833
author: Beyu Denis, oscd.community, Nasreddine Bencherchali (Nextron Systems)
date: 2019-10-26
modified: 2024-04-22
tags:
- attack.execution
- attack.t1106
- attack.defense-evasion
- attack.t1218
- attack.t1127
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\cdb.exe'
  - OriginalFileName: 'CDB.Exe'
  selection_cli:
    CommandLine|contains:
    - ' -c '         # Using a debugger script
    - ' -cf '
  condition: all of selection*
falsepositives:
- Legitimate use of debugging tools
level: medium
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious use of `cdb.exe`, a Microsoft Windows Console Debugger, to execute arbitrary commands or processes through debugger scripts. Attackers may exploit this tool to evade detection, leveraging its legitimate functionality to run payloads or scripts without straightforward indicators of compromise. The rule looks specifically for instances where `cdb.exe` is invoked with command-line parameters indicative of script execution (e.g., ` -c ` or ` -cf `) and verifies that the process originates from its legitimate binary path. By focusing on these parameters and the executable's original filename, the rule flags suspicious activities consistent with techniques outlined in the MITRE ATT&CK framework, particularly under the execution tactic (TA0002) and the subprocess creation techniques (T1106, T1127) with a nod to defense evasion (T1218).
  ### Investigation Steps
  - **Verify Process Execution:** Check the EDR for the execution history of `cdb.exe` to determine if it was launched by a legitimate application or user; review the context in which it was invoked.
  - **Analyze Command-Line Arguments:** Examine the command line associated with `cdb.exe` to assess any suspicious scripts or commands being executed. Focus on the presence of `-c` or `-cf` flags which indicate the use of debugger scripts.
  - **Review Recent Activity:** Investigate the logs from Sysmon, especially the process creation and command line parameters, to check whether other suspicious processes were initiated around the same timeframe.
  - **Correlate with Network Activity:** Utilize network logs from the NDR and firewall to determine if there were any unexpected connections or data transfers initiated by the process leveraging `cdb.exe`.
  ### Prioritization
  Given the risk of `cdb.exe` being used for malicious purposes, this alert is prioritized as medium severity. Attackers could leverage this debugging tool to execute payloads stealthily, making early detection crucial to prevent potential data breaches or compromised systems.
  ### Blind Spots and Assumptions
  This rule assumes that the legitimate use of `cdb.exe` is minimal in the environment; however, false positives may occur during legitimate debugging activities. Additionally, if an adversary renames or modifies the `cdb.exe` binary or employs other debugging tools, the rule may not trigger as intended. It is important to regularly review and update the rule to incorporate changes in behaviors observed in your environment or to address evolving evasion techniques used by attackers.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
