title: Potential Process Injection Via Msra.EXE
id: 744a188b-0415-4792-896f-11ddb0588dbc
status: test
description: Detects potential process injection via Microsoft Remote Asssistance
  (Msra.exe) by looking at suspicious child processes spawned from the aforementioned
  process. It has been a target used by many threat actors and used for discovery
  and persistence tactics
references:
- https://www.microsoft.com/security/blog/2021/12/09/a-closer-look-at-qakbots-latest-building-blocks-and-how-to-knock-them-down/
- https://www.fortinet.com/content/dam/fortinet/assets/analyst-reports/ar-qakbot.pdf
author: Alexander McDonald
date: 2022-06-24
modified: 2023-02-03
tags:
- attack.defense-evasion
- attack.t1055
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\msra.exe'
    ParentCommandLine|endswith: 'msra.exe'
    Image|endswith:
    - '\arp.exe'
    - '\cmd.exe'
    - '\net.exe'
    - '\netstat.exe'
    - '\nslookup.exe'
    - '\route.exe'
    - '\schtasks.exe'
    - '\whoami.exe'
  condition: selection
falsepositives:
- Legitimate use of Msra.exe
level: high
notes: |
  ### Technical Context
  The Sigma rule "Potential Process Injection Via Msra.EXE" is designed to identify potentially malicious behavior associated with the Microsoft Remote Assistance service (msra.exe). This service can be exploited by threat actors to execute unauthorized commands or malicious scripts in the context of the msra.exe process, facilitating process injection techniques commonly utilized for persistence and discovery tactics. The rule focuses on creating alerts when certain suspicious child processes, such as common command-line tools (e.g., `cmd.exe`, `whoami.exe`, etc.), are spawned from the msra.exe parent process. The primary data sources involved in this detection are process creation logs from Windows, which provide insights into parent-child relationships between processes, as well as command-line parameters that may indicate malicious intent. This detection aligns with the MITRE ATT&CK technique T1055 (Process Injection), highlighting the potential evasion tactics employed by adversaries.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in the EDR or Sysmon to identify the child processes initiated from msra.exe. Pay close attention to the command-line arguments used when these processes were created.
  - **Analyze Parent Process Behavior:** Investigate the activity of msra.exe in the Windows Event Logs to verify its legitimate use versus any anomalous behaviors prior to the alert. This can provide context to the alert and potential indicators of compromise.
  - **Correlate with Network Activity:** Use network data from the NDR or firewall logs to check for any unusual outbound connections made by the suspicious child processes. This step can help determine if data exfiltration or additional malicious commands were initiated.
  - **Review Security Incidents:** Cross-reference any related security incidents or alerts that occurred around the same time as the alert was triggered. This can help in understanding the broader scope of the potential compromise.
  ### Prioritization
  The alert is classified as high severity due to the potential for process injection, which can lead to unauthorized access, data compromise, and lateral movement within the network if left unmitigated.
  ### Blind Spots and Assumptions
  This rule operates under the assumption that msra.exe is not being used legitimately during the analysis period. If legitimate remote assistance is occurring, the rule may generate false positives. Additionally, it's important to note that threat actors often employ various methods to obfuscate their activities, which may result in the rule failing to trigger if they utilize different processes or modify their techniques. Finally, the detection may miss instances where malicious commands are executed without spawning typical child processes associated with msra.exe.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
