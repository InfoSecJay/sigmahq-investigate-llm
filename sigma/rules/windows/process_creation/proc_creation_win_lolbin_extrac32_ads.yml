title: Suspicious Extrac32 Alternate Data Stream Execution
id: 4b13db67-0c45-40f1-aba8-66a1a7198a1e
status: test
description: Extract data from cab file and hide it in an alternate data stream
references:
- https://lolbas-project.github.io/lolbas/Binaries/Extrac32/
author: frack113
date: 2021-11-26
modified: 2022-12-30
tags:
- attack.defense-evasion
- attack.t1564.004
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - extrac32.exe
    - .cab
    CommandLine|re: ':[^\\]'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Suspicious Extrac32 Alternate Data Stream Execution" is designed to detect the execution of the `extrac32.exe` program while it targets `.cab` files. The detection leverages the `process_creation` logs from Windows, specifically analyzing the command-line parameters passed during the execution of a process. It looks for instances where `extrac32.exe` is called along with the presence of a cabinet file (`.cab`) and the creation of alternate data streams (ADS), which provide a stealthy method for concealing data in Windows systems. This technique is linked to the MITRE ATT&CK framework, specifically under the tactic of Defense Evasion and the technique T1564.004, highlighting its relevance in the broader context of threat detection.
  Using command-line parsing, the rule identifies when an unauthorized attempt to extract data and hide it within an alternate data stream might occur, which is often indicative of malicious activity such as data exfiltration or evasion of security measures. Analysts should monitor these events closely, as they could represent a method adversaries use to obfuscate their activities.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check for instances of `extrac32.exe` being executed in the process creation logs for additional context, such as parent processes and command-line arguments.
  - **Examine Alternate Data Streams:** Utilize tools to enumerate alternate data streams on affected files to ascertain if any hidden data is present and trace back to its source.
  - **Correlate with EDR Events:** Look at endpoint detection and response (EDR) logs for any suspicious behavior related to this execution, such as unauthorized access attempts or unusual user activity on the affected endpoints.
  - **Validate File Integrity:** Run checks on the integrity of the `.cab` files or any files created or altered by this process to determine if there has been unauthorized modification or data loss.
  ### Prioritization
  Given the potential for `extrac32.exe` to facilitate data concealment methods used by attackers, this alert carries a medium severity level. Investigating such occurrences is crucial due to the implications they may have for data security and potential data breaches in an enterprise environment.
  ### Blind Spots and Assumptions
  The rule may not fire in environments where `extrac32.exe` is a commonly used legitimate tool without proper logging or command-line monitoring in place. Additionally, if the tool is executed with altered parameters or if alternate data streams are not fully utilized, the detection will be hindered. There is also an assumption that all relevant process creation logs and command-line data have been collected consistently. Threat actors may employ methods to mask or obfuscate their usage of `extrac32.exe`, rendering the rule ineffective.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
