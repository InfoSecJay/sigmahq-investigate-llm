title: Suspicious Recursive Takeown
id: 554601fb-9b71-4bcc-abf4-21a611be4fde
status: test
description: Adversaries can interact with the DACLs using built-in Windows commands
  takeown which can grant adversaries higher permissions on specific files and folders
references:
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/takeown
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1222.001/T1222.001.md#atomic-test-1---take-ownership-using-takeown-utility
author: frack113
date: 2022-01-30
modified: 2022-11-21
tags:
- attack.defense-evasion
- attack.t1222.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\takeown.exe'
    CommandLine|contains|all:
    - '/f '
    - '/r'
  condition: selection
fields:
- CommandLine
- ParentCommandLine
falsepositives:
- Scripts created by developers and admins
- Administrative activity
level: medium
notes: |
  ### Technical Context
  The "Suspicious Recursive Takeown" Sigma rule detects the use of the Windows command-line utility `takeown.exe`, specifically when it is executed with recursive options. This command allows users to take ownership of files or directories and can be used by adversaries to gain elevated permissions on sensitive files. The rule focuses on tracking process creation events that involve `takeown.exe`, looking for command-line arguments that include both `/f` (specifying the target) and `/r` (indicating recursion) to highlight potentially nefarious activities. This is particularly relevant to the MITRE ATT&CK technique for "Abuse Elevation Control Mechanism" (T1222.001), which describes how attackers may manipulate file permissions to escalate privileges undetected.
  The detection is anchored to Windows event logs, particularly focusing on Process Creation logs generated through Sysmon. By monitoring these logs for suspicious instances of `takeown.exe`, security teams can identify unauthorized attempts to alter file access controls, allowing for timely investigation and response.
  ### Investigation Steps
  - **Check Process Details:** Utilize EDR or process logging tools to retrieve detailed information about the `takeown.exe` process instance, including the user context and parent process. This can provide insight into the legitimacy of the command and its origin.
  - **Analyze Command-Line Arguments:** Review the complete command line of the `takeown.exe` invocation to identify the target files or directories. Cross-reference this with user activity logs to determine if the action aligns with normal administrative behavior.
  - **Review Alerts for Related Activities:** Examine correlated logs from AV or NDR sources for any other suspicious activities that may have occurred around the same time. This includes file modifications, new executable launches, or anomalous network connections.
  - **Investigate Affected Object Accessibility:** If specific files or directories were targeted, verify the current permissions and ownership status. This will help assess whether unauthorized changes were made and if additional remediation is required.
  ### Prioritization
  The alert carries a medium severity level as it suggests potential misuse of administrative tools, which can lead to unauthorized access to sensitive data. In an enterprise environment, such actions often require immediate attention to prevent data breaches or compliance violations.
  ### Blind Spots and Assumptions
  This rule may not fire if an adversary uses alternative methods to change file permissions without directly invoking `takeown.exe`, such as using PowerShell cmdlets or other utilities. Additionally, legitimate administrative activities may trigger false positives, particularly in organizations that frequently utilize the `takeown` command for maintenance or operational purposes. Therefore, itâ€™s crucial to have contextual knowledge of regular administrative behavior within the environment to effectively assess these alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
