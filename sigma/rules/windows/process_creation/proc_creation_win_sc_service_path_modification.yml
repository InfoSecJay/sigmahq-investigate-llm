title: Suspicious Service Path Modification
id: 138d3531-8793-4f50-a2cd-f291b2863d78
status: test
description: Detects service path modification via the "sc" binary to a suspicious
  command or path
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md
- https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html
author: Victor Sergeev, oscd.community, Nasreddine Bencherchali (Nextron Systems)
date: 2019-10-21
modified: 2022-11-18
tags:
- attack.persistence
- attack.privilege-escalation
- attack.t1543.003
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\sc.exe'
    CommandLine|contains|all:
    - 'config'
    - 'binPath'
    CommandLine|contains:
            # Add more suspicious commands or binaries
    - 'powershell'
    - 'cmd '
    - 'mshta'
    - 'wscript'
    - 'cscript'
    - 'rundll32'
    - 'svchost'
    - 'dllhost'
    - 'cmd.exe /c'
    - 'cmd.exe /k'
    - 'cmd.exe /r'
    - 'cmd /c'
    - 'cmd /k'
    - 'cmd /r'
            # Add more suspicious paths
    - 'C:\Users\Public'
    - '\Downloads\'
    - '\Desktop\'
    - '\Microsoft\Windows\Start Menu\Programs\Startup\'
    - 'C:\Windows\TEMP\'
    - '\AppData\Local\Temp'
  condition: selection
fields:
- CommandLine
- ParentCommandLine
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The "Suspicious Service Path Modification" detection rule is designed to identify potential unauthorized changes to Windows services through the use of the `sc.exe` command. This command is typically used for managing Windows services, but adversaries may attempt to alter service configurations to execute malicious payloads or persist malware. The rule specifically looks for command-line activities involving `sc.exe` that include "config" and "binPath" to detect whether the service path has been modified to point to a suspicious executable or script. Key telemetry sources for this detection include process creation logs that capture details such as the command line and parent command line of processes. 
  This rule aligns with the MITRE ATT&CK framework under the tactics of **Persistence** and **Privilege Escalation**, specifically technique **T1543.003: Create or Modify a Service**. Such tactics and techniques are crucial for gaining longevity and maintaining control within a compromised environment.
  ### Investigation Steps
  - **Correlate with EDR data:** Check EDR logs for the specific command line execution of `sc.exe`. Investigate if the command was initiated from a legitimate process or if it was spawned by a potentially malicious parent process.
  - **Review Windows Event Logs:** Examine Windows Security and System event logs around the time of the alert for any service-related events. Look for anomalies such as unexpected service start or stop events that correlate with the rule triggering.
  - **Analyze PowerShell and Cmd execution:** If the command line indicates the use of PowerShell or Cmd, analyze the command history and execution logs for any previous suspicious commands that may indicate malicious intent.
  - **Cross-reference changes with known services:** Compare the affected service path against a list of legitimate service configurations. Identify any discrepancies that may suggest unauthorized modifications or the introduction of rogue services.
  ### Prioritization
  Given the high-level severity of this alert, it indicates potential unauthorized service manipulation, which can lead to persistence of malware or privilege escalation in an enterprise environment, thus warranting immediate investigation.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where legitimate administrative activities frequently alter service configurations, thus potentially leading to false negatives or false positives. Additionally, the rule assumes that `sc.exe` will always be used for service creation or modification, while advanced adversaries may employ alternative methods or commands to achieve their objectives. Furthermore, if malicious payloads reside in non-suspicious paths, they may evade detection entirely.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
