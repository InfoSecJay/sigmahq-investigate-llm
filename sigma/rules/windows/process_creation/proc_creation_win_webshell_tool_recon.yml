title: Webshell Tool Reconnaissance Activity
id: f64e5c19-879c-4bae-b471-6d84c8339677
status: test
description: |
  Detects processes spawned from web servers (PHP, Tomcat, IIS, etc.) that perform reconnaissance looking for the existence of popular scripting tools (perl, python, wget) on the system via the help commands
references:
- https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html
author: Cian Heasley, Florian Roth (Nextron Systems)
date: 2020-07-22
modified: 2023-11-09
tags:
- attack.persistence
- attack.t1505.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_webserver_image:
    ParentImage|endswith:
    - '\caddy.exe'
    - '\httpd.exe'
    - '\nginx.exe'
    - '\php-cgi.exe'
    - '\w3wp.exe'
    - '\ws_tomcatservice.exe'
  selection_webserver_characteristics_tomcat1:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    ParentImage|contains:
    - '-tomcat-'
    - '\tomcat'
  selection_webserver_characteristics_tomcat2:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    CommandLine|contains:
    - 'CATALINA_HOME'
    - 'catalina.jar'
  selection_recon:
    CommandLine|contains:
    - 'perl --help'
    - 'perl -h'
    - 'python --help'
    - 'python -h'
    - 'python3 --help'
    - 'python3 -h'
    - 'wget --help'
  condition: 1 of selection_webserver_* and selection_recon
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Webshell Tool Reconnaissance Activity" detection rule is designed to identify potentially malicious reconnaissance activities conducted by processes spawned from web server environments (e.g., Caddy, Apache, Nginx, PHP, Tomcat). This rule specifically focuses on instances where these processes attempt to find popular scripting tools (like Perl, Python, or Wget) on the system by executing common help command-line arguments (e.g., `--help` or `-h`). The detection leverages process creation logs to observe the relationship between a web server process (like `w3wp.exe` for IIS or any Java processes associated with Tomcat) and specific command-line arguments indicative of reconnaissance behavior.
  By correlating the parent process (the web server) with the command-line input (the reconnaissance tools), the rule identifies potential intrusions that could lead to further exploitation, thus aligning with the MITRE ATT&CK tactic of Persistence and the specific technique T1505.003, which discusses the use of web shells for maintaining access.
  ### Investigation Steps
  - **Validate Process Origin:** Check the parent process of the detected command execution using EDR to confirm that it originated from a legitimate web server application and not from an unexpected source.
  - **Examine Command Line Arguments:** Use Windows Event Logs and EDR to review the full command line associated with the process to assess whether it contains attempts to call common tool help commands that might indicate nefarious intent.
  - **Check for Unauthorized Access:** Investigate other recent process creations, especially those within the same time frame and originating from the same web server process, to identify any further suspicious activities or patterns of behavior.
  - **Monitor Network Activity:** Review network connection logs (if available through NDR or firewall logs) linked to the web server during this timeframe to see if there are outgoing requests to unusual or unauthorized external addresses.
  ### Prioritization
  Given the high severity level of the alert, it indicates a significant risk that the environment may be compromised. Alert responses should be prioritized to ensure timely investigationâ€”especially focusing on environments where sensitive data resides.
  ### Blind Spots and Assumptions
  This rule may not fire under various circumstances, such as instances where a compromised web server uses non-standard naming conventions for legitimate processes or when attackers deploy obscure scripting tools that are not covered by the command-line checks. Additionally, if web servers are heavily monitored and restricted from command-line execution, legitimate tools may be missed. Assumptions include that the EDR is configured correctly and monitoring all relevant processes, and command-line information is being logged by Windows, which may not always be the case.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
