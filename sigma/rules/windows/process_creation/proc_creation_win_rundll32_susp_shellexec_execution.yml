title: Suspicious Usage Of ShellExec_RunDLL
id: d87bd452-6da1-456e-8155-7dc988157b7d
related:
- id: 36c5146c-d127-4f85-8e21-01bf62355d5a
  type: obsolete
- id: 8823e85d-31d8-473e-b7f4-92da070f0fc6
  type: similar
status: test
description: Detects suspicious usage of the ShellExec_RunDLL function to launch other
  commands as seen in the the raspberry-robin attack
references:
- https://redcanary.com/blog/raspberry-robin/
- https://www.microsoft.com/en-us/security/blog/2022/10/27/raspberry-robin-worm-part-of-larger-ecosystem-facilitating-pre-ransomware-activity/
- https://github.com/SigmaHQ/sigma/issues/1009
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-09-01
modified: 2022-12-30
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_openasrundll:
    CommandLine|contains: 'ShellExec_RunDLL'
  selection_suspcli:
    CommandLine|contains:
            # Note: The ordinal number may differ depending on the DLL version
    - '\Desktop\'
    - '\Temp\'
    - '\Users\Public\'
    - 'comspec'
    - 'iex'
    - 'Invoke-'
    - 'msiexec'
    - 'odbcconf'
    - 'regsvr32'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Suspicious Usage Of ShellExec_RunDLL" is designed to detect potentially malicious activity stemming from the use of the `ShellExec_RunDLL` function in Windows environments. This function is typically used to execute DLLs in a convenient manner, often through command-line interfaces. Given its functionality, this method can also be exploited by attackers to run various commands or scripts without being directly detected by traditional security measures. 
  In this rule, specific command-line parameters are monitored, including those involving directories commonly used for temporary file executions (`\Desktop\`, `\Temp\`, `\Users\Public\`) and indicative executable commands such as `msiexec`, `regsvr32`, and `odbcconf`. The detection leverages process creation logs, examining the command-line arguments supplied to processes to identify those executing commands possibly linked to the Raspberry Robin attack, a method known for facilitating pre-ransomware activities. This rule maps to the MITRE ATT&CK technique of "Defense Evasion" (TA0005), highlighting the importance of recognizing and mitigating these evasion tactics in a real-time security operations context.
  ### Investigation Steps
  - **Review Process Creation Logs:** Investigate recent process creation logs within the EDR for instances of `ShellExec_RunDLL`. Focus on unusual paths or command-line arguments that deviate from normal behavior.
    
  - **Correlate with EDR Alerts:** Use the EDR tool to correlate this alert with any other suspicious activities or alerts that may indicate a broader attack, such as elevated privileges or execution of known malicious scripts.
    
  - **Analyze Network Activity:** Check network logs for outgoing connections associated with the suspicious commands detected. Evaluate whether any unwanted connections to external IP addresses were initiated from the affected endpoint.
    
  - **Check Endpoint Antivirus Logs:** Review hosted AV logs on the endpoint to see if any detected behaviors or files align with those initiated by `ShellExec_RunDLL`, examining any quarantined files or execution blocks.
  ### Prioritization
  This alert is tagged with a high severity level due to the association with known exploitation techniques linked to pre-ransomware activities, emphasizing the risk of potential system compromise if not addressed swiftly.
  ### Blind Spots and Assumptions
  The rule may not trigger if an adversary executes the same commands via different mechanisms that do not involve `ShellExec_RunDLL`, such as using PowerShell or directly invoking the executable without `ShellExec_RunDLL`. Additionally, typical user behaviors in specific environments might lead to false positives, particularly if legitimate applications rely on similar command-line patterns. Analysts should ensure to contextualize alerts within the specific operational environment to distinguish between benign and malicious usages effectively.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
