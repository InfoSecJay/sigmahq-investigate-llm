title: Suspicious Child Process Of SQL Server
id: 869b9ca7-9ea2-4a5a-8325-e80e62f75445
related:
- id: 344482e4-a477-436c-aa70-7536d18a48c7
  type: obsolete
status: test
description: Detects suspicious child processes of the SQLServer process. This could
  indicate potential RCE or SQL Injection.
references:
- Internal Research
author: FPT.EagleEye Team, wagga
date: 2020-12-11
modified: 2023-05-04
tags:
- attack.t1505.003
- attack.t1190
- attack.initial-access
- attack.persistence
- attack.privilege-escalation
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\sqlservr.exe'
    Image|endswith:
            # You can add other uncommon or suspicious processes
    - '\bash.exe'
    - '\bitsadmin.exe'
    - '\cmd.exe'
    - '\netstat.exe'
    - '\nltest.exe'
    - '\ping.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\sh.exe'
    - '\systeminfo.exe'
    - '\tasklist.exe'
    - '\wsl.exe'
  filter_optional_datev:
    ParentImage|startswith: 'C:\Program Files\Microsoft SQL Server\'
    ParentImage|endswith: 'DATEV_DBENGINE\MSSQL\Binn\sqlservr.exe'
    Image: 'C:\Windows\System32\cmd.exe'
    CommandLine|startswith: '"C:\Windows\system32\cmd.exe" '
  condition: selection and not 1 of filter_optional_*
level: high
notes: |
  ### Technical Context
  The detection rule titled "Suspicious Child Process Of SQL Server" is designed to identify potentially malicious activity within environments running Microsoft SQL Server. This rule focuses on child processes initiated by the SQL Server process (`sqlservr.exe`), as these can be indicative of attempts to exploit SQL vulnerabilities, such as Remote Code Execution (RCE) or SQL Injection. The rule examines the command line and images of any processes spawned by `sqlservr.exe`, looking for certain known suspicious executables like `cmd.exe`, `powershell.exe`, and others that could represent harmful behaviors. The primary data source for this detection is process creation logs gathered via Windows Sysmon, which provides detailed insight into process execution and their parent-child relationships. The technique is mapped to MITRE ATT&CK under T1505.003 (SQL Injection) and reflects the tactics of initial access, persistence, and privilege escalation that attackers may leverage.
  ### Investigation Steps
  - **Verify Process Chain:** Use your EDR tool to examine the process tree for the detected process, ensuring to correlate it with `sqlservr.exe` as the parent. This can help confirm if unusual child processes were legitimately spawned or if they indicate potential malicious activity.
    
  - **Analyze Command Line Arguments:** Review the command line parameters of any suspicious child processes identified by the alert. Pay special attention to parameters that may suggest automation or unauthorized access, particularly those involving scripts or advanced command usages.
  - **Check for Anomalous Activity:** Cross-reference the timestamps of the suspicious process creation with SQL Server logs and other system logs (e.g., Event Viewer) to identify any unusual activities, such as unauthorized database access or abnormal user logins.
  - **Correlate External Events:** Look at the firewall logs and proxy logs around the time the alert was triggered to assess if there are any suspicious external connections or data exfiltration attempts that correlate with the event.
  ### Prioritization
  This alert is categorized as high severity due to the risks associated with child processes spawned from SQL Server, which could indicate that an attacker is attempting to exploit vulnerabilities to escalate privileges or exfiltrate data from sensitive databases.
  ### Blind Spots and Assumptions
  This rule assumes that the system is adequately monitored and that EDR solutions are correctly configured to capture process creation events. There may be situations where the rule does not trigger if an attacker uses less common executable names or legitimate processes aligned with `sqlservr.exe`. Additionally, if SQL Server is configured to launch child processes that are not included in the predefined list, it may bypass detection. Attackers may also use obfuscation or alternative execution methods to avoid triggering this detection rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
