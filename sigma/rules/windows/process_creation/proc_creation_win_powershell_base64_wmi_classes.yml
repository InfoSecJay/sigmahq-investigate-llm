title: PowerShell Base64 Encoded WMI Classes
id: 1816994b-42e1-4fb1-afd2-134d88184f71
related:
- id: 47688f1b-9f51-4656-b013-3cc49a166a36
  type: obsolete
status: test
description: Detects calls to base64 encoded WMI class such as "Win32_ShadowCopy",
  "Win32_ScheduledJob", etc.
references:
- https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar
author: Christian Burkard (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-30
tags:
- attack.execution
- attack.t1059.001
- attack.defense-evasion
- attack.t1027
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli_shadowcopy:
        # Win32_ShadowCopy
    CommandLine|contains:
    - 'VwBpAG4AMwAyAF8AUwBoAGEAZABvAHcAYwBvAHAAeQ'
    - 'cAaQBuADMAMgBfAFMAaABhAGQAbwB3AGMAbwBwAHkA'
    - 'XAGkAbgAzADIAXwBTAGgAYQBkAG8AdwBjAG8AcAB5A'
    - 'V2luMzJfU2hhZG93Y29we'
    - 'dpbjMyX1NoYWRvd2NvcH'
    - 'XaW4zMl9TaGFkb3djb3B5'
  selection_cli_scheduledJob:
        # Win32_ScheduledJob
    CommandLine|contains:
    - 'VwBpAG4AMwAyAF8AUwBjAGgAZQBkAHUAbABlAGQASgBvAGIA'
    - 'cAaQBuADMAMgBfAFMAYwBoAGUAZAB1AGwAZQBkAEoAbwBiA'
    - 'XAGkAbgAzADIAXwBTAGMAaABlAGQAdQBsAGUAZABKAG8AYg'
    - 'V2luMzJfU2NoZWR1bGVkSm9i'
    - 'dpbjMyX1NjaGVkdWxlZEpvY'
    - 'XaW4zMl9TY2hlZHVsZWRKb2'
  selection_cli_process:
        # Win32_Process
    CommandLine|contains:
    - 'VwBpAG4AMwAyAF8AUAByAG8AYwBlAHMAcw'
    - 'cAaQBuADMAMgBfAFAAcgBvAGMAZQBzAHMA'
    - 'XAGkAbgAzADIAXwBQAHIAbwBjAGUAcwBzA'
    - 'V2luMzJfUHJvY2Vzc'
    - 'dpbjMyX1Byb2Nlc3'
    - 'XaW4zMl9Qcm9jZXNz'
  selection_cli_useraccount:
        # Win32_UserAccount
    CommandLine|contains:
    - 'VwBpAG4AMwAyAF8AVQBzAGUAcgBBAGMAYwBvAHUAbgB0A'
    - 'cAaQBuADMAMgBfAFUAcwBlAHIAQQBjAGMAbwB1AG4AdA'
    - 'XAGkAbgAzADIAXwBVAHMAZQByAEEAYwBjAG8AdQBuAHQA'
    - 'V2luMzJfVXNlckFjY291bn'
    - 'dpbjMyX1VzZXJBY2NvdW50'
    - 'XaW4zMl9Vc2VyQWNjb3Vud'
  selection_cli_loggedonuser:
        # Win32_LoggedOnUser
    CommandLine|contains:
    - 'VwBpAG4AMwAyAF8ATABvAGcAZwBlAGQATwBuAFUAcwBlAHIA'
    - 'cAaQBuADMAMgBfAEwAbwBnAGcAZQBkAE8AbgBVAHMAZQByA'
    - 'XAGkAbgAzADIAXwBMAG8AZwBnAGUAZABPAG4AVQBzAGUAcg'
    - 'V2luMzJfTG9nZ2VkT25Vc2Vy'
    - 'dpbjMyX0xvZ2dlZE9uVXNlc'
    - 'XaW4zMl9Mb2dnZWRPblVzZX'
  condition: selection_img and 1 of selection_cli_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "PowerShell Base64 Encoded WMI Classes" is designed to identify potentially malicious use of Windows Management Instrumentation (WMI) classes executed via PowerShell, specifically when the command lines of these executions contain Base64 encoded strings. This technique could indicate an attempt to evade defenses or execute commands that could lead to system compromise. The detection specifically monitors processes initiated by PowerShell (`powershell.exe` and `pwsh.exe`) that utilize Base64 strings commonly associated with WMI classes such as `Win32_ShadowCopy`, `Win32_ScheduledJob`, and others. The primary data sources involved in this detection include process creation logs, which capture details like the command line parameters and the original file names of the executing processes. This rule is associated with the MITRE ATT&CK tactics of execution (T1059.001) and defense evasion (T1027).
  ### Investigation Steps
  - **Verify Process Origin:** Use EDR tools to check the original file path for the PowerShell process identified in the alert. Ensure it originates from a trusted source and review any anomalies in its execution context.
  - **Analyze Command-Line Inputs:** Review the command-line arguments in the alert to decode the Base64 strings. This can provide insight into the intended operation and whether it resembles legitimate administrative tasks.
  - **Conduct a Log Review:** Investigate the Windows Event Logs (Security and Sysmon) surrounding the time frame of the detected alert to identify anomalous user activities or correlated events that may indicate a broader security issue.
  - **Check Network Connections:** Use network detection and response tools to trace any outbound connections made by the PowerShell process. Identify if these connections lead to known malicious hosts or unusual IP addresses.
  ### Prioritization
  The alert is classified as high severity due to the potential use of Base64 encoding as a method for evading detection during the execution of malicious payloads, which can lead to significant security incidents if not addressed promptly.
  ### Blind Spots and Assumptions
  This rule may not fire if an attacker employs obfuscation techniques not recognized by the specified Base64 patterns or utilizes alternative means to execute the WMI commands outside PowerShell. Additionally, if the log sources (like Sysmon or Security logs) are not appropriately configured to capture the relevant events, the detection will be ineffective. It is assumed that all necessary logging levels are enabled and that there are no configuration issues that would prevent this detection from functioning properly.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
