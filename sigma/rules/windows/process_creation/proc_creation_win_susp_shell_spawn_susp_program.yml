title: Windows Shell/Scripting Processes Spawning Suspicious Programs
id: 3a6586ad-127a-4d3b-a677-1e6eacdf8fde
status: test
description: Detects suspicious child processes of a Windows shell and scripting processes
  such as wscript, rundll32, powershell, mshta...etc.
references:
- https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html
author: Florian Roth (Nextron Systems), Tim Shelton
date: 2018-04-06
modified: 2023-05-23
tags:
- attack.execution
- attack.defense-evasion
- attack.t1059.005
- attack.t1059.001
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith:
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
            # - '\cmd.exe'  # too many false positives
    - '\rundll32.exe'
    - '\cscript.exe'
    - '\wscript.exe'
    - '\wmiprvse.exe'
    - '\regsvr32.exe'
    Image|endswith:
    - '\schtasks.exe'
    - '\nslookup.exe'
    - '\certutil.exe'
    - '\bitsadmin.exe'
    - '\mshta.exe'
  filter_ccmcache:
    CurrentDirectory|contains: '\ccmcache\'
  filter_amazon:
    ParentCommandLine|contains:
            # FP - Amazon Workspaces
    - '\Program Files\Amazon\WorkSpacesConfig\Scripts\setup-scheduledtask.ps1'
    - '\Program Files\Amazon\WorkSpacesConfig\Scripts\set-selfhealing.ps1'
    - '\Program Files\Amazon\WorkSpacesConfig\Scripts\check-workspacehealth.ps1'
    - '\nessus_'         # Tenable/Nessus VA Scanner
  filter_nessus:
    CommandLine|contains: '\nessus_'     # Tenable/Nessus VA Scanner
  filter_sccm_install:
    ParentImage|endswith: '\mshta.exe'
    Image|endswith: '\mshta.exe'
    ParentCommandLine|contains|all:
    - 'C:\MEM_Configmgr_'
    - '\splash.hta'
    - '{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}'
    CommandLine|contains|all:
    - 'C:\MEM_Configmgr_'
    - '\SMSSETUP\BIN\'
    - '\autorun.hta'
    - '{1E460BD7-F1C3-4B2E-88BF-4E770A288AF5}'
  condition: selection and not 1 of filter_*
fields:
- CommandLine
- ParentCommandLine
- CurrentDirectory
- Image
- ParentImage
falsepositives:
- Administrative scripts
- Microsoft SCCM
level: high
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious behavior by monitoring the relationships and commands executed by Windows shell and scripting processes. Specifically, it looks for suspicious child processes spawned from common scripting environments, such as `mshta.exe`, `powershell.exe`, `wscript.exe`, and `rundll32.exe`. The rule raises alerts when these parent processes generate child processes that are typically not initiated by legitimate scripts, such as `schtasks.exe`, `certutil.exe`, and `bitsadmin.exe`. 
  Additional logic is applied to filter out false positives from recognized sources, such as administrative scripts or legitimate tools like Microsoft SCCM and Nessus vulnerability scanners. The rule evaluates the execution context through logs originating from process creation events, focusing on command-line arguments, parent process identifiers, and the current execution directory to construct a reliable alerting mechanism.
  ### Investigation Steps
  - Review the alert details in the SIEM to examine the command line and parent command line of the process, identifying any anomalous or unexpected parameters.
  - Utilize EDR tools to track the process tree leading to the suspicious executable, checking for any indicators of compromise or abnormal process relationships.
  - Check the Current Directory associated with the suspicious process in Windows logs to determine if it originates from an unusual or unauthorized location.
  - Conduct a retrospective search using AV or NDR tools to identify any known malicious indicators or behaviors associated with the detected processes.
