title: Gpscript Execution
id: 1e59c230-6670-45bf-83b0-98903780607e
status: test
description: Detects the execution of the LOLBIN gpscript, which executes logon or
  startup scripts configured in Group Policy
references:
- https://oddvar.moe/2018/04/27/gpscript-exe-another-lolbin-to-the-list/
- https://lolbas-project.github.io/lolbas/Binaries/Gpscript/
author: frack113
date: 2022-05-16
modified: 2023-06-14
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\gpscript.exe'
  - OriginalFileName: 'GPSCRIPT.EXE'
  selection_cli:
    CommandLine|contains:
    - ' /logon'
    - ' /startup'
  filter_main_svchost:
    ParentCommandLine: 'C:\windows\system32\svchost.exe -k netsvcs -p -s gpsvc'
  condition: all of selection_* and not 1 of filter_main_*
falsepositives:
- Legitimate uses of logon scripts distributed via group policy
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Gpscript Execution" is designed to detect the execution of the `gpscript.exe` binary, which is often leveraged for executing logon and startup scripts configured through Group Policy on Windows systems. This rule focuses on monitoring process creation events, specifically looking for instances where `gpscript.exe` is invoked with command-line arguments that indicate it is executing logon (`/logon`) or startup (`/startup`) scripts. The filtering condition that checks if `gpscript.exe` is run from its expected parent process (svchost.exe associated with the group policy service) is particularly crucial in determining whether the execution is legitimate or potentially malicious. This detection aligns with the MITRE ATT&CK framework's tactics of Defense Evasion (T1218), as adversaries may attempt to utilize LOLBins (Living Off the Land Binaries) like `gpscript.exe` to bypass traditional security controls.
  ### Investigation Steps
  - **Review Recent Process Activity**: Check the EDR console for any recent instances of `gpscript.exe` being executed, paying close attention to their parent process and command-line arguments.
  - **Analyze Command-Line Arguments**: Investigate the command-line parameters associated with the execution of `gpscript.exe` to confirm if they indeed include `/logon` or `/startup`, which are more indicative of potential abuse.
  - **Cross-Reference Group Policy Logs**: Look at Group Policy logs for any legitimate script deployments that might correspond with the detected instances of `gpscript.exe` to differentiate between valid use and abuse.
  - **Examine Network Activity**: Use network logs (NDR/NGFW) to assess if there are any suspicious connections initiated by the process post-execution, which could indicate further malicious actions.
  ### Prioritization
  The alert severity is set to medium due to the potential for misuse of the `gpscript.exe` binary in executing unauthorized scripts that could facilitate malicious activities while appearing benign, thereby necessitating thorough investigation.
  ### Blind Spots and Assumptions
  One of the key blind spots of this rule is its reliance on the execution trace of `gpscript.exe`, which may not capture instances where an attacker has successfully renamed or modified the binary to evade detection. Additionally, the rule assumes that all legitimate uses of `gpscript.exe` are executed under known controlled conditions, which may not encompass all environments. Adversaries could also exploit other methods to execute scripts without invoking this binary, resulting in false negatives for detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
