title: Node Process Executions
id: df1f26d3-bea7-4700-9ea2-ad3e990cf90e
status: test
description: Detects the execution of other scripts using the Node executable packaged
  with Adobe Creative Cloud
references:
- https://twitter.com/mttaggart/status/1511804863293784064
author: Max Altgelt (Nextron Systems)
date: 2022-04-06
tags:
- attack.defense-evasion
- attack.t1127
- attack.t1059.007
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\Adobe Creative Cloud Experience\libs\node.exe'
  filter:
    CommandLine|contains: 'Adobe Creative Cloud Experience\js'     # Folder where Creative Cloud's JS resources are located
  condition: selection and not filter
fields:
- Image
- CommandLine
- ParentCommandLine
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Node Process Executions" is designed to detect the malicious utilization of the Node.js executable that is bundled with Adobe Creative Cloud. By monitoring Windows process creation logs, the rule focuses on instances where the Node executable (`node.exe`) is initiated, specifically looking for command-line elements that suggest the execution of scripts from the JavaScript resources directory of Adobe Creative Cloud. This is indicative of malicious actors who may be leveraging trusted software to execute potentially harmful scripts in a stealthy manner. This particular behavior falls under the MITRE ATT&CK techniques T1127 (Trusted Developer Utilities) and T1059.007 (JavaScript), which pertain to defense evasion tactics commonly employed in targeted attacks.
  The rule inspects the `Image` and `CommandLine` fields, analyzing them for signatures of suspicious activity while ensuring that the identified process is not part of benign operational tasks. By focusing on the command line for specific patterns, the detection aims to catch instances where Node.js is potentially misused to run unauthorized scripts within a corporate environment.
  ### Investigation Steps
  - **Verify Process Origin:** Use your EDR to confirm the source of the `node.exe` process, ensuring it corresponds with expected installations of Adobe Creative Cloud.
  - **Analyze Command-Line Parameters:** Check the command-line arguments associated with the detected process for unusual JavaScript script paths or parameters that may indicate malicious intent.
  - **Inspect Parent Process:** Examine the parent command line of the process creation event to determine how the Node.js execution was initiated, identifying any unusual or unexpected software interactions.
  - **Correlate with Other Logs:** Look into any other related logs (e.g., Sysmon for process creation) to uncover a broader context around the execution, such as network connections or file modifications that may indicate a coordinated attack.
  ### Prioritization
  The alert is categorized as medium severity due to the potential for legitimate users to inadvertently execute scripts through Adobe Creative Cloud, combined with the risk that malicious actors may exploit this avenue for evasion of traditional security mechanisms in the enterprise environment.
  ### Blind spots and Assumptions
  One potential blind spot is the possibility of the detected process being a legitimate task performed by trusted users, leading to false positives. Furthermore, if the Adobe Creative Cloud installation has been modified or tampered with, the rule may not capture the execution of Node.js. It is also important to note that advanced adversaries may employ obfuscation techniques or rename executables to bypass detection, which could result in missed alerts. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
