title: Suspicious Mshta.EXE Execution Patterns
id: e32f92d1-523e-49c3-9374-bdb13b46a3ba
status: test
description: Detects suspicious mshta process execution patterns
references:
- https://en.wikipedia.org/wiki/HTML_Application
- https://www.echotrail.io/insights/search/mshta.exe
- https://app.any.run/tasks/34221348-072d-4b70-93f3-aa71f6ebecad/
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2021-07-17
modified: 2023-02-21
tags:
- attack.execution
- attack.t1106
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\mshta.exe'
  - OriginalFileName: 'MSHTA.EXE'
  selection_susp:
        # Suspicious parents
    ParentImage|endswith:
    - '\cmd.exe'
    - '\cscript.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\wscript.exe'
        # Suspicious folders
    CommandLine|contains:
    - '\AppData\Local\'
    - 'C:\ProgramData\'
    - 'C:\Users\Public\'
    - 'C:\Windows\Temp\'
  filter_img:
        # Filter legit Locations
  - Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
        # Suspicious extensions
  - CommandLine|contains:
    - '.htm'
    - '.hta'
        # Filter simple execution
  - CommandLine|endswith:
    - 'mshta.exe'
    - 'mshta'
  condition: all of selection_* or (selection_img and not filter_img)
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The rule "Suspicious Mshta.EXE Execution Patterns" is designed to identify potentially malicious activity involving the Mshta.exe process, a Windows tool commonly used to run HTML applications (HTAs). The detection focuses on process creation events within the Windows operating system, specifically targeting instances where Mshta.exe is invoked under suspicious conditions. The primary indicators include the use of suspicious parent processes (such as cmd.exe, powershell.exe, and others), unusual command-line arguments that suggest exploitation attempts (like HTA or HTML file extensions), and the execution from non-standard directories like AppData or Temporary folders. With reference to the MITRE ATT&CK framework, this rule maps to the execution tactic and specifically to technique T1106, which involves running scripts or executables as part of an attack.
  ### Investigation Steps
  - **Examine Process Creation Logs**: Use EDR tools to analyze process creation logs to confirm the invocation of Mshta.exe and its associated command line. Look for suspicious parent processes or execution paths that match the detection rule criteria.
  - **Analyze Command-Line Arguments**: Inspect the command-line arguments passed to Mshta.exe in the logs to determine if they pertain to known malicious patterns, particularly looking for unusual file paths or extensions (e.g., .hta, .htm).
  - **Correlate with Network Activity**: Review network connection logs (NDR) for any related outbound traffic originating from the same process instance. Check for patterns that may indicate data exfiltration or communication with command and control (C2) servers.
  - **Investigate File System Changes**: Assess recent file activity in the directories identified by the alert (such as AppData or Temp) using file monitoring logs. Establish if any other malicious files were created or modified around the same time as the Mshta.exe execution.
  ### Prioritization
  This alert is classified as high severity due to the highly suspicious nature of Mshta.exe being invoked, especially under conditions that indicate potential evasion tactics often employed by threat actors, such as executing script-based malware that could lead to serious system compromise.
  ### Blind Spots and Assumptions
  This detection may not trigger if Mshta.exe is executed with legitimate parent processes or from safe locations, leading to potential blind spots in monitoring. Furthermore, if an attacker employs obfuscation techniques to mask command-line arguments or uses alternative execution methods (e.g., leveraging legitimate applications), the rule may fail to fire. Analysts should consider that any unusual or undocumented use of Mshta.exe could also lack detection coverage and necessitate further investigation beyond this alert.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
