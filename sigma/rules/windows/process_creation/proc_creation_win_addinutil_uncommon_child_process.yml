title: Uncommon Child Process Of AddinUtil.EXE
id: b5746143-59d6-4603-8d06-acbd60e166ee
status: test
description: |
  Detects uncommon child processes of the Add-In deployment cache updating utility (AddInutil.exe) which could be a sign of potential abuse of the binary to proxy execution via a custom Addins.Store payload.
references:
- https://www.blue-prints.blog/content/blog/posts/lolbin/addinutil-lolbas.html
author: Michael McKinley (@McKinleyMike), Tony Latteri (@TheLatteri)
date: 2023-09-18
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\addinutil.exe'
  filter_main_werfault:
    Image|endswith:
    - ':\Windows\System32\conhost.exe'
    - ':\Windows\System32\werfault.exe'
    - ':\Windows\SysWOW64\werfault.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Uncommon Child Process Of AddinUtil.EXE" is designed to identify suspicious activities related to the Windows utility AddInUtil.exe, which is commonly used for managing Microsoft Office add-ins. The rule specifically focuses on processes that are spawned as child processes of AddInUtil.exe and checks for unusual parent-child relationships that could indicate malicious activity. By monitoring process creation logs, the rule detects instances where atypical child processes are launched, excluding known benign processes such as `conhost.exe` and `werfault.exe`. This detection is particularly vital because attackers may exploit legitimate tools like AddInUtil.exe to execute unauthorized code, thereby using it as a vector for executing payloads.
  The primary data source for this rule is Windows process creation logs, which capture the necessary contextual data about process relationships, including parent and child process names. The detection logic filters out well-known and benign child processes to minimize false positives, ensuring that only potentially harmful activities trigger alerts for further investigation.
  ### Investigation Steps
  Investigate the alert by correlating the detected child process with EDR logs to review the process creation timeline and identify any anomalous execution patterns.
  Analyze command-line arguments associated with the child process using the EDR tool to determine if any suspicious or unknown parameters were utilized during execution.
  Check for recent modifications or additions to the AddInUtil.exe binary itself by examining file integrity logs and permissions to rule out any tampering.
  Utilize network logs to track any outbound connections made by the suspicious process, ensuring that it did not attempt to communicate with known malicious IPs or domains.
