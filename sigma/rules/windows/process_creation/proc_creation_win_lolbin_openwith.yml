title: OpenWith.exe Executes Specified Binary
id: cec8e918-30f7-4e2d-9bfa-a59cc97ae60f
status: test
description: The OpenWith.exe executes other binary
references:
- https://github.com/LOLBAS-Project/LOLBAS/blob/4db780e0f0b2e2bb8cb1fa13e09196da9b9f1834/yml/LOLUtilz/OSBinaries/Openwith.yml
- https://twitter.com/harr0ey/status/991670870384021504
author: Beyu Denis, oscd.community (rule), @harr0ey (idea)
date: 2019-10-12
modified: 2021-11-27
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\OpenWith.exe'
    CommandLine|contains: '/c'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "OpenWith.exe Executes Specified Binary" is designed to detect the execution of potentially malicious binaries using a benign Windows utility, `OpenWith.exe`. This executable is commonly associated with the Windows feature that allows users to select an application to open files. In this context, an adversary might leverage `OpenWith.exe` to execute malicious commands hidden behind legitimate processes, thereby evading detection. The rule specifically examines process creation logs for instances where `OpenWith.exe` is being invoked with certain command-line arguments, particularly those containing '/c', which is commonly used in command-line executions to run specified commands in the context of a shell. The technique maps to MITRE ATT&CK's Defense Evasion tactic (T1218), where attackers seek to conceal their activities by utilizing legitimate system tools.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs from your EDR solution for instances where `OpenWith.exe` was launched and detail the command-line parameters used along with the parent process ID.
  - **Correlate with Sysmon Logs:** Use Sysmon to track additional parameters like the process tree, network connections, or other related activities around the time of the alert to assess any suspicious behavior.
  - **Analyze File and Command History:** Investigate recently modified files or associated binaries accessed or executed alongside the alert timeframe, focusing on any known malicious indicators or unusual access patterns.
  - **Review Recent Security Events:** Scan Windows Security logs for any relevant alerts related to file or process integrity, ensuring that there are no coinciding security alerts that may provide further evidence of malicious activity.
  ### Prioritization
  The alert is categorized as high severity due to the potential for significant impact from misuse of `OpenWith.exe`, which may be exploited to execute harmful payloads or commands masquerading as legitimate activity.
  ### Blind Spots and Assumptions
  There are several assumptions and known blind spots with this rule. For instance, this rule may not trigger if `OpenWith.exe` is utilized with benign command-line arguments that do not contain '/c'. Additionally, if an attacker uses alternative legitimate processes to execute their commands, or if the command line is obfuscated (e.g., using encoded or hidden commands), this detection may fail. Similarly, instances where traditional endpoint protection tools are disabled or misconfigured may also impede detection capabilities. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
