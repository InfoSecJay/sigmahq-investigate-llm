title: Potential Privilege Escalation Using Symlink Between Osk and Cmd
id: e9b61244-893f-427c-b287-3e708f321c6b
status: test
description: Detects the creation of a symbolic link between "cmd.exe" and the accessibility
  on-screen keyboard binary (osk.exe) using "mklink". This technique provides an elevated
  command prompt to the user from the login screen without the need to log in.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/5c1e6f1b4fafd01c8d1ece85f510160fc1275fbf/atomics/T1546.008/T1546.008.md
- https://ss64.com/nt/mklink.html
author: frack113
date: 2022-12-11
modified: 2022-12-20
tags:
- attack.privilege-escalation
- attack.persistence
- attack.t1546.008
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\cmd.exe'
  - OriginalFileName: 'Cmd.Exe'
  selection_cli:
    CommandLine|contains|all:
    - 'mklink'
    - '\osk.exe'
    - '\cmd.exe'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect a specific method of privilege escalation by monitoring for the creation of a symbolic link between "cmd.exe" (the Windows Command Prompt) and "osk.exe" (the On-Screen Keyboard). The technique utilizes the `mklink` command to create a symlink that allows users to access a command prompt with elevated privileges from the Windows login screen, circumventing standard authentication measures. This behavior falls under the MITRE ATT&CK tactic of Privilege Escalation, specifically the technique numbered T1546.008 (Impair Defenses: Symbolic Link). The detection leverages process creation logs to identify instances where the `cmd.exe` process is invoked with the `mklink` command involving the On-Screen Keyboard executable, indicating potential misuse.
  ### Investigation Steps
  - **Examine Process Creation Logs:** Review process creation logs in the Windows Security log to identify the specific event where `cmd.exe` was launched using the `mklink` command linking to `osk.exe`.
  - **Analyze Command-Line Arguments:** Validate the command-line parameters of any instances of `cmd.exe` to confirm the inclusion of `mklink`, `osk.exe`, and `cmd.exe`, ensuring the context matches the rule conditions.
  - **Correlate with User Logins:** Check for any unusual user login attempts or account activity around the time of the detection, possibly indicating an elevation attempt or unauthorized access.
  - **Conduct EDR Investigation:** Query the Endpoint Detection and Response (EDR) system for any alerts or suspicious activities linked to the identified process and check for subsequent actions performed by the elevated command prompt.
  ### Prioritization
  This alert is categorized as high severity because a successful privilege escalation attack could allow an unauthorized user to execute arbitrary commands with elevated permissions, posing a significant risk to the security and integrity of the system.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where the symbolic linking feature is disabled or in configurations that restrict the use of `mklink`. Additionally, advanced adversaries may employ alternative methods to achieve privilege escalation that do not involve this specific command-line sequence. It is also essential to consider that legitimate administrative tasks may trigger false positives, hence the need for context around the event.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
