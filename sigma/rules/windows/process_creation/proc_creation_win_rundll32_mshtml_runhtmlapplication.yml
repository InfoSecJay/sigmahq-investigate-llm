title: Mshtml.DLL RunHTMLApplication Suspicious Usage
id: 4782eb5a-a513-4523-a0ac-f3082b26ac5c
related:
- id: 9f06447a-a33a-4cbe-a94f-a3f43184a7a3
  type: obsolete
- id: 73fcad2e-ff14-4c38-b11d-4172c8ac86c7
  type: obsolete
status: test
description: |
  Detects execution of commands that leverage the "mshtml.dll" RunHTMLApplication export to run arbitrary code via different protocol handlers (vbscript, javascript, file, http...)
references:
- https://twitter.com/n1nj4sec/status/1421190238081277959
- https://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_TROJAN.WIN32.POWESSERE.G_MITIGATION_BYPASS_PART2.txt
- http://hyp3rlinx.altervista.org/advisories/MICROSOFT_WINDOWS_DEFENDER_DETECTION_BYPASS.txt
author: Nasreddine Bencherchali (Nextron Systems),  Florian Roth (Nextron Systems),
  Josh Nickels, frack113, Zaw Min Htun (ZETA)
date: 2022-08-14
modified: 2024-02-23
tags:
- attack.defense-evasion
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - '\..\'
    - 'mshtml'
    CommandLine|contains:
    - '#135'
    - 'RunHTMLApplication'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule identifies the suspicious execution of commands that leverage the `mshtml.dll` library's `RunHTMLApplication` export to run arbitrary code through various protocol handlers such as VBScript, JavaScript, or HTTP. Attackers often exploit this capability to execute malicious scripts and bypass traditional security measures. The rule specifically looks for the presence of particular command line parameters that indicate the usage of `mshtml.dll` alongside patterns that denote potential evasion techniques, such as the use of relative paths and specific command line tokens like `#135`. The primary data source for this detection is process creation logs, which capture detailed information about executing processes and their command-line arguments.
  ### Investigation Steps
  1. Use your EDR solution to investigate the process creation logs for entries matching the suspicious command line parameters related to `mshtml.dll`.
  2. Cross-reference affected endpoints with AV logs to check if any detections or blocks occurred around the time of the suspicious execution.
  3. Query proxy logs to identify any outbound connections from the machine associated with the alert, specifically looking for unusual protocol usage related to HTTP or file downloads.
  4. Review historical cloud logs (if applicable) from platforms like AWS or Azure to track any suspicious activities or configurations that correlate to the time of the alert.
