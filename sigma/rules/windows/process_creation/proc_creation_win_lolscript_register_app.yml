title: Potential Register_App.Vbs LOLScript Abuse
id: 28c8f68b-098d-45af-8d43-8089f3e35403
status: test
description: Detects potential abuse of the "register_app.vbs" script that is part
  of the Windows SDK. The script offers the capability to register new VSS/VDS Provider
  as a COM+ application. Attackers can use this to install malicious DLLs for persistence
  and execution.
references:
- https://twitter.com/sblmsrsn/status/1456613494783160325?s=20
- https://github.com/microsoft/Windows-classic-samples/blob/7cbd99ac1d2b4a0beffbaba29ea63d024ceff700/Samples/Win7Samples/winbase/vss/vsssampleprovider/register_app.vbs
author: Austin Songer @austinsonger
date: 2021-11-05
modified: 2022-07-07
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\cscript.exe'
    - '\wscript.exe'
  - OriginalFileName:
    - 'cscript.exe'
    - 'wscript.exe'
  selection_cli:
    CommandLine|contains: '.vbs -register '     # register_app.vbs
  condition: all of selection*
falsepositives:
- Other VB scripts that leverage the same starting command line flags
level: medium
notes: |
  ### Technical Context
  This detection rule is designed to identify potential misuse of the "register_app.vbs" script included in the Windows Software Development Kit (SDK). This script allows the registration of new Volume Shadow Copy Service (VSS) or Virtual Disk Service (VDS) providers as COM+ applications. Attackers may exploit this capability to install malicious Dynamic Link Libraries (DLLs) for persistence or automated execution on compromised systems. The rule focuses on monitoring process creation events for specific invocations of Windows Script Host (WSH) executables, namely `cscript.exe` and `wscript.exe`, and checks for command-line arguments indicating the registration process for the "register_app.vbs" script.
  The technical data sources utilized by this rule include process creation logs that capture executable names and their associated command-line parameters. By scrutinizing this information, security analysts can discern whether the script is being used for legitimate purposes or if it has been co-opted for nefarious intents, allowing timely investigations into possible compromise.
  ### Investigation Steps
  - Use EDR tools to review process creation logs for instances of `cscript.exe` or `wscript.exe` executing `register_app.vbs`. Check the corresponding timestamps for unusual activity.
  - Confirm the command-line parameters associated with the identified processes to ensure they contain evidence of suspicious invocation, specifically looking for flags that indicate the script is being used for registration. 
  - Examine the system for newly registered COM objects or services that have been created in conjunction with the suspicious script execution. Look for any unauthorized changes or installations.
  - Correlate the detected activity with network traffic logs and proxy logs to identify any connections to known malicious domains or anomalous patterns that may indicate data exfiltration or command and control (C2) communication.
