title: Suspicious Process By Web Server Process
id: 8202070f-edeb-4d31-a010-a26c72ac5600
status: test
description: |
  Detects potentially suspicious processes being spawned by a web server process which could be the result of a successfully placed web shell or exploitation
references:
- https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENT-WEB-SHELL-MALWARE-20200422.PDF
author: Thomas Patzke, Florian Roth (Nextron Systems), Zach Stanford @svch0st, Tim
  Shelton, Nasreddine Bencherchali (Nextron Systems)
date: 2019-01-16
modified: 2024-11-26
tags:
- attack.persistence
- attack.t1505.003
- attack.t1190
logsource:
  category: process_creation
  product: windows
detection:
  selection_webserver_image:
    ParentImage|endswith:
    - '\caddy.exe'
    - '\httpd.exe'
    - '\nginx.exe'
    - '\php-cgi.exe'
    - '\php.exe'
    - '\tomcat.exe'
    - '\UMWorkerProcess.exe'          # https://www.fireeye.com/blog/threat-research/2021/03/detection-response-to-exploitation-of-microsoft-exchange-zero-day-vulnerabilities.html
    - '\w3wp.exe'
    - '\ws_TomcatService.exe'
  selection_webserver_characteristics_tomcat1:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    ParentImage|contains:
    - '-tomcat-'
    - '\tomcat'
  selection_webserver_characteristics_tomcat2:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    ParentCommandLine|contains:
    - 'CATALINA_HOME'
    - 'catalina.home'
    - 'catalina.jar'
  selection_anomaly_children:
    Image|endswith:
    - '\arp.exe'
    - '\at.exe'
    - '\bash.exe'
    - '\bitsadmin.exe'
    - '\certutil.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\dsget.exe'
    - '\hostname.exe'
    - '\nbtstat.exe'
    - '\net.exe'
    - '\net1.exe'
    - '\netdom.exe'
    - '\netsh.exe'
    - '\nltest.exe'
    - '\ntdsutil.exe'
    - '\powershell_ise.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\qprocess.exe'
    - '\query.exe'
    - '\qwinsta.exe'
    - '\reg.exe'
    - '\rundll32.exe'
    - '\sc.exe'
    - '\sh.exe'
    - '\wmic.exe'
    - '\wscript.exe'
    - '\wusa.exe'
  filter_main_fp_1:
    ParentImage|endswith: '\java.exe'
    CommandLine|endswith: 'Windows\system32\cmd.exe /c C:\ManageEngine\ADManager "Plus\ES\bin\elasticsearch.bat
      -Enode.name=RMP-NODE1 -pelasticsearch-pid.txt'
  filter_main_fp_2:
    ParentImage|endswith: '\java.exe'
    CommandLine|contains|all:
    - 'sc query'
    - 'ADManager Plus'
  condition: 1 of selection_webserver_* and selection_anomaly_children and not 1 of
    filter_main_*
falsepositives:
- Particular web applications may spawn a shell process legitimately
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious processes being spawned by recognized web server processes, such as Caddy, Apache HTTPD, Nginx, and Tomcat, among others. By monitoring process creation events, it identifies anomalies where common command-line tools and executables are initiated from these web server parent processes. These anomalies may indicate unauthorized access, such as a web shell compromise or exploitation of web applications, where an attacker uses an existing web service as a foothold to execute further malicious actions.
  The detection logic centers on inspecting the **ParentImage** field, allowing the rule to trigger alerts on processes that are initiated by web server applications specifically. Additionally, command-line parameters are analyzed to further pinpoint suspicious behaviors consistent with known exploitation tactics, specifically aligning with MITRE ATT&CK technique T1505.003 (Web Shell). This comprehensive approach enables incident responders to prioritize investigations where web applications might be misused, allowing for timely intervention.
  ### Investigation Steps
  - **Verify Process Origin:** Utilize EDR tools to trace the origin of the flagged processes back to the specified web server (e.g., `httpd.exe`, `nginx.exe`) to confirm any unauthorized modifications or anomalies.
  - **Analyze Command-Line Arguments:** Inspect the command-line arguments of the unusual processes via Windows Event Logs or EDR to determine if there's any malicious activity evident, such as the execution of administrative tools or scripts.
  - **Check Process Relationships:** Use Sysinternals tools or EDR to examine the parent-child relationship of processes. Identify any suspicious command execution that could indicate lateral movement or privilege escalation.
  - **Review Web Server Logs:** Cross-reference the identified suspicious processes with web server logs and application logs to identify if there were any security events correlating with the process creation, helping to establish a timeline.
  ### Prioritization
  Given the high severity level associated with this alert, it indicates a significant risk that could lead to potential data breaches or escalated privileges within the network. The concern arises from the nature of web servers being common targets for exploitation; thus, rapid investigation is critical.
  ### Blind Spots and Assumptions
  This rule may not trigger in environments where web applications are correctly segmented and monitored, or in instances where legitimate web applications spawn similar process behaviors without malicious intent. Additionally, if an adversary uses custom or less common web server software, these activities might evade detection as well. The assumption is that all parent processes are running known web servers, and any deviation in deployment should be articulated to avoid overlooking potential alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
