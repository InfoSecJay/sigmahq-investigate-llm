title: Suspicious Process By Web Server Process
id: 8202070f-edeb-4d31-a010-a26c72ac5600
status: test
description: |
  Detects potentially suspicious processes being spawned by a web server process which could be the result of a successfully placed web shell or exploitation
references:
- https://media.defense.gov/2020/Jun/09/2002313081/-1/-1/0/CSI-DETECT-AND-PREVENT-WEB-SHELL-MALWARE-20200422.PDF
author: Thomas Patzke, Florian Roth (Nextron Systems), Zach Stanford @svch0st, Tim
  Shelton, Nasreddine Bencherchali (Nextron Systems)
date: 2019-01-16
modified: 2024-11-26
tags:
- attack.persistence
- attack.t1505.003
- attack.t1190
logsource:
  category: process_creation
  product: windows
detection:
  selection_webserver_image:
    ParentImage|endswith:
    - '\caddy.exe'
    - '\httpd.exe'
    - '\nginx.exe'
    - '\php-cgi.exe'
    - '\php.exe'
    - '\tomcat.exe'
    - '\UMWorkerProcess.exe'          # https://www.fireeye.com/blog/threat-research/2021/03/detection-response-to-exploitation-of-microsoft-exchange-zero-day-vulnerabilities.html
    - '\w3wp.exe'
    - '\ws_TomcatService.exe'
  selection_webserver_characteristics_tomcat1:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    ParentImage|contains:
    - '-tomcat-'
    - '\tomcat'
  selection_webserver_characteristics_tomcat2:
    ParentImage|endswith:
    - '\java.exe'
    - '\javaw.exe'
    ParentCommandLine|contains:
    - 'CATALINA_HOME'
    - 'catalina.home'
    - 'catalina.jar'
  selection_anomaly_children:
    Image|endswith:
    - '\arp.exe'
    - '\at.exe'
    - '\bash.exe'
    - '\bitsadmin.exe'
    - '\certutil.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\dsget.exe'
    - '\hostname.exe'
    - '\nbtstat.exe'
    - '\net.exe'
    - '\net1.exe'
    - '\netdom.exe'
    - '\netsh.exe'
    - '\nltest.exe'
    - '\ntdsutil.exe'
    - '\powershell_ise.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\qprocess.exe'
    - '\query.exe'
    - '\qwinsta.exe'
    - '\reg.exe'
    - '\rundll32.exe'
    - '\sc.exe'
    - '\sh.exe'
    - '\wmic.exe'
    - '\wscript.exe'
    - '\wusa.exe'
  filter_main_fp_1:
    ParentImage|endswith: '\java.exe'
    CommandLine|endswith: 'Windows\system32\cmd.exe /c C:\ManageEngine\ADManager "Plus\ES\bin\elasticsearch.bat
      -Enode.name=RMP-NODE1 -pelasticsearch-pid.txt'
  filter_main_fp_2:
    ParentImage|endswith: '\java.exe'
    CommandLine|contains|all:
    - 'sc query'
    - 'ADManager Plus'
  condition: 1 of selection_webserver_* and selection_anomaly_children and not 1 of
    filter_main_*
falsepositives:
- Particular web applications may spawn a shell process legitimately
level: high
notes: |
  ### Technical Context
  The detection rule "Suspicious Process By Web Server Process" identifies potentially malicious processes launched by common web server applications, such as Caddy, Apache, Nginx, and Tomcat. This detection is crucial because the spawning of unusual child processes—especially from legitimate web server executables—may indicate that a web shell has been successfully deployed or that an exploitation attempt has occurred. The rule focuses on capturing process creation logs where the parent image falls within a defined list of web servers and the spawned child processes match known suspicious binaries associated with exploitation techniques. 
  The rule employs a combination of ParentImage checks (to verify the process hierarchy) and a selection of suspicious executables commonly linked to web-based threats (e.g., powershell.exe, cmd.exe). This multifaceted approach allows for filtering out legitimate activity by filtering on specific command line patterns and characteristics, enhancing the accuracy of the detection.
  ### Investigation Steps
  - Utilize EDR tools to analyze process creation logs and trace how suspicious processes were initiated from the web server binaries.
  - Confirm the legitimacy of the captured ParentImage processes by cross-referencing them against known good configurations and directory paths.
  - Investigate historical command-line attributes associated with identified processes to understand the context of execution and potential malicious usage.
  - Check for relevant network activity, utilizing NDR logs, to identify any outbound connections made by the suspicious processes.
