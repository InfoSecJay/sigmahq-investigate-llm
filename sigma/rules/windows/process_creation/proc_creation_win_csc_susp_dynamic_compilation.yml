title: Dynamic .NET Compilation Via Csc.EXE
id: dcaa3f04-70c3-427a-80b4-b870d73c94c4
status: test
description: Detects execution of "csc.exe" to compile .NET code. Attackers often
  leverage this to compile code on the fly and use it in other stages.
references:
- https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/
- https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf
- https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/
- https://twitter.com/gN3mes1s/status/1206874118282448897
- https://github.com/redcanaryco/atomic-red-team/blob/b27a3cb25025161d49ac861cb216db68c46a3537/atomics/T1027.004/T1027.004.md#atomic-test-1---compile-after-delivery-using-cscexe
author: Florian Roth (Nextron Systems), X__Junior (Nextron Systems)
date: 2019-08-24
modified: 2024-05-27
tags:
- attack.defense-evasion
- attack.t1027.004
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
    Image|endswith: '\csc.exe'
  selection_susp_location_1:
    CommandLine|contains:
    - ':\Perflogs\'
    - ':\Users\Public\'
    - '\AppData\Local\Temp\'         # User execution
    - '\Temporary Internet'
    - '\Windows\Temp\'         # Admin execution
  selection_susp_location_2:
  - CommandLine|contains|all:
    - ':\Users\'
    - '\Favorites\'
  - CommandLine|contains|all:
    - ':\Users\'
    - '\Favourites\'
  - CommandLine|contains|all:
    - ':\Users\'
    - '\Contacts\'
  - CommandLine|contains|all:
    - ':\Users\'
    - '\Pictures\'
  selection_susp_location_3:
    CommandLine|re: '([Pp]rogram[Dd]ata|%([Ll]ocal)?[Aa]pp[Dd]ata%|\\[Aa]pp[Dd]ata\\([Ll]ocal([Ll]ow)?|[Rr]oaming))\\[^\\]{1,256}$'
  filter_main_programfiles:
        # Note: this is a generic filter. You could baseline execution in your env for a more robust rule
    ParentImage|startswith:
    - 'C:\Program Files (x86)\'         # https://twitter.com/gN3mes1s/status/1206874118282448897
    - 'C:\Program Files\'         # https://twitter.com/gN3mes1s/status/1206874118282448897
  filter_main_sdiagnhost:
    ParentImage: 'C:\Windows\System32\sdiagnhost.exe'     # https://twitter.com/gN3mes1s/status/1206874118282448897
  filter_main_w3p:
    ParentImage: 'C:\Windows\System32\inetsrv\w3wp.exe'     # https://twitter.com/gabriele_pippi/status/1206907900268072962
  filter_optional_chocolatey:
    ParentImage:     # Chocolatey https://chocolatey.org/
    - 'C:\ProgramData\chocolatey\choco.exe'
    - 'C:\ProgramData\chocolatey\tools\shimgen.exe'
  filter_optional_defender:
    ParentCommandLine|contains: '\ProgramData\Microsoft\Windows Defender Advanced
      Threat Protection'
  filter_optional_ansible:
        # Note: As ansible is widely used we exclude it with this generic filter.
        # A better option would be to filter based on script content basis or other marker while hunting
    ParentCommandLine|contains:
            # '{"failed":true,"msg":"Ansible requires PowerShell v3.0 or newer"}'
    - 'JwB7ACIAZgBhAGkAbABlAGQAIgA6AHQAcgB1AGUALAAiAG0AcwBnACIAOgAiAEEAbgBzAGkAYgBsAGUAIAByAGUAcQB1AGkAcgBlAHMAIABQAG8AdwBlAHIAUwBoAGUAbABsACAAdgAzAC4AMAAgAG8AcgAgAG4AZQB3AGUAcgAiAH0AJw'
    - 'cAewAiAGYAYQBpAGwAZQBkACIAOgB0AHIAdQBlACwAIgBtAHMAZwAiADoAIgBBAG4AcwBpAGIAbABlACAAcgBlAHEAdQBpAHIAZQBzACAAUABvAHcAZQByAFMAaABlAGwAbAAgAHYAMwAuADAAIABvAHIAIABuAGUAdwBlAHIAIgB9ACcA'
    - 'nAHsAIgBmAGEAaQBsAGUAZAAiADoAdAByAHUAZQAsACIAbQBzAGcAIgA6ACIAQQBuAHMAaQBiAGwAZQAgAHIAZQBxAHUAaQByAGUAcwAgAFAAbwB3AGUAcgBTAGgAZQBsAGwAIAB2ADMALgAwACAAbwByACAAbgBlAHcAZQByACIAfQAnA'
  condition: selection_img and 1 of selection_susp_location_* and not 1 of filter_main_*
    and not 1 of filter_optional_*
falsepositives:
- Legitimate software from program files - https://twitter.com/gN3mes1s/status/1206874118282448897
- Legitimate Microsoft software - https://twitter.com/gabriele_pippi/status/1206907900268072962
- Ansible
level: medium
notes: |
  ### Technical Context
  The detection rule titled "Dynamic .NET Compilation Via Csc.EXE" is designed to identify potentially malicious behavior associated with the execution of `csc.exe`, the C# compiler used to compile .NET code dynamically. Attackers often exploit this capability to execute arbitrary code on compromised systems as part of their attack strategies. The rule works by monitoring process creation events for instances where `csc.exe` is invoked, specifically looking at the command-line parameters and the paths from which it is executed. It focuses on locations that are not typically used for legitimate application installs or operations, such as `%TEMP%`, `%USER%`, or script directories, increasing the likelihood of detecting suspicious activities.
  This alert relates to the MITRE ATT&CK framework under the tactic of "Defense Evasion" and the technique T1027.004 
  - "Obfuscated Files or Information". By reviewing command-line arguments, the rule aims to spot indicators of potential exploitation or execution of stealthy payloads that could circumvent established security protocols.
  ### Investigation Steps
  - **Check EDR Alerts:** Review the EDR logs for the device where the alert was triggered. Investigate the execution context, including any other suspicious processes that were running concurrently.
  - **Analyze Command-Line Arguments:** Inspect the command-line parameters used with `csc.exe` to determine if they contain unusual or suspicious patterns indicative of malicious intent (e.g., obfuscated payloads).
  - **Correlate with Network Activity:** Use network logs to see if there are any outgoing connections or callbacks associated with the timeframe when `csc.exe` was executed. Look for unusual data exfiltration or command-and-control (C2) traffic.
  - **Review Parent Processes:** Investigate the parent processes that invoked `csc.exe`. This can provide context about whether the execution originated from a legitimate process or was injected by malware processes.
  ### Prioritization
  This alert is categorized as medium severity due to the elevated risk posed by potential exploitation of `csc.exe` for dynamic code execution, which is a common tactic leveraged by adversaries. While false positives can occur with legitimate software, timely investigation is critical to mitigate potential threats.
  ### Blind Spots and Assumptions
  The detection rule may not fire in scenarios where `csc.exe` is executed from locations that are typical for legitimate software or if itâ€™s used by whitelisted applications. Certain third-party applications that employ `csc.exe` can lead to false positives, complicating investigations. Additionally, users could maliciously modify the process attributes or run `csc.exe` from standard directories. Understanding environmental baseline behaviors is essential to improving the effectiveness of this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
