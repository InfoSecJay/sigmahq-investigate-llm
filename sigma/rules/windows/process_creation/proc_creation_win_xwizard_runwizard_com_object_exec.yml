title: COM Object Execution via Xwizard.EXE
id: 53d4bb30-3f36-4e8a-b078-69d36c4a79ff
status: test
description: |
  Detects the execution of Xwizard tool with the "RunWizard" flag and a GUID like argument.
  This utility can be abused in order to run custom COM object created in the registry.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Xwizard/
- https://www.elastic.co/guide/en/security/current/execution-of-com-object-via-xwizard.html
- https://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/
author: Ensar Åžamil, @sblmsrsn, @oscd_initiative, Nasreddine Bencherchali (Nextron
  Systems)
date: 2020-10-07
modified: 2024-08-15
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine: 'RunWizard'
    CommandLine|re: '\{[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}\}'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule identifies the execution of the Xwizard application with the specific command-line flag "RunWizard" and a GUID-like argument. Xwizard is a utility that can be misused by adversaries to execute custom Component Object Model (COM) objects created in the Windows Registry, often as part of a wider strategy to evade detection mechanisms. The rule queries for specific entries in process creation logs to capture instances where Xwizard is invoked in this manner, leveraging command-line parameters as key indicators of potential malicious activity. This functionality ties into the MITRE ATT&CK framework under the tactic of "Defense Evasion" and the technique T1218 (Signed Binary Proxy Execution), highlighting how attackers may attempt to obscure their actions by utilizing legitimate system processes.
  ### Investigation Steps
  - **Review Process Creation Logs:** Leverage the EDR platform to analyze process creation logs for any instances of Xwizard.exe being invoked with the "RunWizard" flag and a matching GUID format. Focus on the timing and context of these executions.
  - **Analyze Command-Line Arguments:** Use Sysmon logs to inspect the command-line arguments associated with triggering events. Look for anomalies or unusual patterns that deviate from normal operational behavior.
  - **Cross-Reference with Security Tools:** Check for any alerts or flags raised by antivirus, EDR, or similar security tools that might have logged relevant activity surrounding the execution of Xwizard.
  - **Investigate Associated Network Connections:** Query network traffic logs to see if there are any outbound connections correlated with the execution of Xwizard, which may indicate further malicious activity or data exfiltration.
  ### Prioritization
  The alert is categorized with a medium severity level primarily due to the potential for the exploitation of Xwizard to execute untrusted code, which could lead to data compromise or further system intrusion. Given the nature of this activity, immediate investigation is warranted to assess the associated risks.
  ### Blind spots and Assumptions
  This detection rule may not fire if Xwizard is executed without the "RunWizard" flag or if the GUID format is altered from the defined regex pattern. Additionally, there is an assumption that sufficient logging is enabled for process creation and that environments are not heavily customized to suppress normal logging events. Adversaries could also employ obfuscation techniques to alter command-line parameters, which may lead to evasion of this detection strategy.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
