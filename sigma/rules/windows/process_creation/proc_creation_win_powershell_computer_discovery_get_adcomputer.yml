title: Computer Discovery And Export Via Get-ADComputer Cmdlet
id: 435e10e4-992a-4281-96f3-38b11106adde
related:
- id: db885529-903f-4c5d-9864-28fe199e6370
  type: similar
status: test
description: Detects usage of the Get-ADComputer cmdlet to collect computer information
  and output it to a file
references:
- http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html
- https://www.microsoft.com/en-us/security/blog/2022/10/18/defenders-beware-a-case-for-post-ransomware-investigations/
- https://www.cisa.gov/uscert/sites/default/files/publications/aa22-320a_joint_csa_iranian_government-sponsored_apt_actors_compromise_federal%20network_deploy_crypto%20miner_credential_harvester.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-11-10
modified: 2022-11-17
tags:
- attack.discovery
- attack.t1033
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli:
    CommandLine|contains|all:
    - 'Get-ADComputer '
    - ' -Filter \*'
    CommandLine|contains:
    - ' > '
    - ' | Select '
    - 'Out-File'
    - 'Set-Content'
    - 'Add-Content'
  condition: all of selection_*
falsepositives:
- Legitimate admin scripts may use the same technique, it's better to exclude specific
  computers or users who execute these commands or scripts often
level: medium
notes: |
  ### Technical Context
  The Sigma rule "Computer Discovery And Export Via Get-ADComputer Cmdlet" is designed to detect suspicious use of the PowerShell cmdlet `Get-ADComputer`, which can be employed by attackers to gather information about computers in a domain. This cmdlet is often used in conjunction with various output redirection commands such as `Out-File`, `Set-Content`, or `Add-Content`, indicating intent to export the gathered data to a file. The detection focuses on monitoring process creation events specifically for PowerShell (`powershell.exe` or `pwsh.exe`), capturing command-line arguments that involve querying Active Directory for computers, and writing those outputs to files.
  By leveraging Windows process creation logs as the primary telemetry source, the rule looks for specific patterns in command-line execution that may signify malicious intent, linking it to the MITRE ATT&CK tactics of Discovery, particularly technique T1033 (System Owner/User Discovery). As malicious actors may utilize this cmdlet during initial reconnaissance or post-compromise stages, effective detection will allow incident responders to investigate potential unauthorized information gathering within their environments.
  ### Investigation Steps
  - **Review EDR Activity:** Check the EDR logs for alerts related to PowerShell execution and gather contextual information on the originating user and machine, ensuring that the activity is not part of a legitimate operation.
    
  - **Analyze Command-Line Parameters:** Investigate recent PowerShell command-line logs for any executions of `Get-ADComputer` alongside redirection commands to archive files, confirming if any potentially sensitive computer information was exported.
    
  - **Correlate Security Logs:** Cross-reference Windows Security, System, and Application logs to identify any related activities, such as account logins or machine access that occurred around the time of the suspicious PowerShell execution.
    
  - **Check for Legitimate Use:** Consult with system administrators or the user associated with the detection to ascertain if the execution was part of standard administrative scripts or if further investigation into malicious intent is warranted.
  ### Prioritization
  The alert is classified as medium severity due to the potential risk of an unauthorized user collecting sensitive information about the organization's computer infrastructure, which could facilitate further attacks.
  ### Blind Spots and Assumptions
  This detection rule may not fire if:
  - The PowerShell execution is obfuscated or if anti-detection techniques are employed by the adversary, altering the command-line arguments.
  - Legitimate administrative tasks frequently involve the use of the same cmdlet, potentially leading to false positives without adequate filtering for known good user activity.
  - Systems lacking proper logging may not capture the relevant process execution data, resulting in missed detections in environments with disabled Windows logging settings.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
