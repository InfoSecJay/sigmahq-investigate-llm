title: Visual Basic Command Line Compiler Usage
id: 7b10f171-7f04-47c7-9fa2-5be43c76e535
status: test
description: Detects successful code compilation via Visual Basic Command Line Compiler
  that utilizes Windows Resource to Object Converter.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Vbc/
author: 'Ensar Åžamil, @sblmsrsn, @oscd_initiative'
date: 2020-10-07
modified: 2021-11-27
tags:
- attack.defense-evasion
- attack.t1027.004
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\vbc.exe'
    Image|endswith: '\cvtres.exe'
  condition: selection
falsepositives:
- Utilization of this tool should not be seen in enterprise environment
level: high
notes: |
  ### Technical Context
  This detection rule identifies instances of the Visual Basic Command Line Compiler (`vbc.exe`) being exploited along with the Windows Resource to Object Converter (`cvtres.exe`). The rule operates by monitoring process creation logs, specifically looking for a scenario where `cvtres.exe` is initiated with `vbc.exe` as its parent process. This behavior is often indicative of an adversary attempting to evade detection by compiling malicious code in an environment where development tools are typically not monitored closely. The relevant MITRE ATT&CK tactic here is Defense Evasion, specifically technique T1027.004 (Windows Code Signing). By leveraging common system tools, potential threats may obscure malicious activities, making them harder to detect with traditional security measures.
  ### Investigation Steps
  - **Check EDR Alerts**: Use the EDR solution to review alerts generated from the identified process creation, ensuring no other suspicious activities or related alerts are logged at the same time.
  - **Review Process Creation Logs**: Search the Windows Event Logs, particularly focusing on process creation logs to trace the execution chain for `cvtres.exe` back to `vbc.exe`, noting any unusual parent processes or arguments.
  - **Analyze Network Connections**: Utilize Network Detection tools to review any outbound connections made by `cvtres.exe` or other related processes, identifying any links to anomalous external addresses.
  - **Inspect File System Changes**: Check application and system logs for any file creations or modifications occurring around the same time as the detection, particularly focusing on newly compiled binaries or scripts.
  ### Prioritization
  Given that the Visual Basic Command Line Compiler is rarely used in enterprise environments, any alerts triggered by this rule represent a high-severity risk, necessitating immediate investigation to determine if malicious code has been compiled.
  ### Blind Spots and Assumptions
  The primary assumption is that the environment is not utilizing legitimate development tools or related usage of `vbc.exe`. If legitimate development activities occur, this rule may experience false negatives. Additionally, if an adversary compromises legitimate binaries or uses obfuscation techniques, this detection may be bypassed. Ensure to cross-reference usage patterns and user privileges to better assess the legitimacy of the activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
