title: Potential Suspicious Windows Feature Enabled - ProcCreation
id: c740d4cf-a1e9-41de-bb16-8a46a4f57918
related:
- id: 55c925c1-7195-426b-a136-a9396800e29b
  type: similar
status: test
description: |
  Detects usage of the built-in PowerShell cmdlet "Enable-WindowsOptionalFeature" used as a Deployment Image Servicing and Management tool.
  Similar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
references:
- https://learn.microsoft.com/en-us/powershell/module/dism/enable-windowsoptionalfeature?view=windowsserver2022-ps
- https://learn.microsoft.com/en-us/windows/win32/projfs/enabling-windows-projected-file-system
- https://learn.microsoft.com/en-us/windows/wsl/install-on-server
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-12-29
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_cmd:
    CommandLine|contains|all:
    - 'Enable-WindowsOptionalFeature'
    - '-Online'
    - '-FeatureName'
  selection_feature:
        # Add any insecure/unusual windows features that you don't use in your environment
    CommandLine|contains:
    - 'TelnetServer'
    - 'Internet-Explorer-Optional-amd64'
    - 'TFTP'
    - 'SMB1Protocol'
    - 'Client-ProjFS'
    - 'Microsoft-Windows-Subsystem-Linux'
  condition: all of selection_*
falsepositives:
- Legitimate usage of the features listed in the rule.
level: medium
notes: |
  ### Technical Context
  The Sigma rule detects the usage of the PowerShell cmdlet `Enable-WindowsOptionalFeature`, which is a part of the Deployment Image Servicing and Management (DISM) toolset. This cmdlet is typically utilized to install or configure optional Windows features, such as Telnet or the Windows Subsystem for Linux (WSL). The rule monitors command-line processes for specific keywords related to the `Enable-WindowsOptionalFeature` command, particularly its online mode option and associated feature names. By capturing these command-line inputs, the rule aims to identify potentially suspicious feature activations that could be indicative of malicious activity or system misconfigurations.
  Detection sources include the process creation logs from Windows systems, specifically focusing on command-line parameters. The rule emphasizes features that are generally considered insecure or unnecessary within corporate environments, allowing SOC analysts to quickly identify and investigate potentially unauthorized adjustments to system configurations.
  ### Investigation Steps
   
  Review the process creation logs in your EDR tool for instances of `Enable-WindowsOptionalFeature` to gather context around the execution.
   
  Check the command-line parameters associated with the detected execution to ascertain what features were enabled or modified, particularly looking for suspicious feature names.
   
  Correlate the detection with network activity from your NDR or firewall logs to identify any unusual outbound traffic generated by the affected systems, especially related to the newly enabled features.
   
  Search for any related alerts in the SIEM that might indicate prior suspicious activity or behavior, which could provide additional context for the detected cmdlet invocation.
