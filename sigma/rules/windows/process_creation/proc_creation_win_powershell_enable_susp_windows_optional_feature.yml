title: Potential Suspicious Windows Feature Enabled - ProcCreation
id: c740d4cf-a1e9-41de-bb16-8a46a4f57918
related:
- id: 55c925c1-7195-426b-a136-a9396800e29b
  type: similar
status: test
description: |
  Detects usage of the built-in PowerShell cmdlet "Enable-WindowsOptionalFeature" used as a Deployment Image Servicing and Management tool.
  Similar to DISM.exe, this cmdlet is used to enumerate, install, uninstall, configure, and update features and packages in Windows images
references:
- https://learn.microsoft.com/en-us/powershell/module/dism/enable-windowsoptionalfeature?view=windowsserver2022-ps
- https://learn.microsoft.com/en-us/windows/win32/projfs/enabling-windows-projected-file-system
- https://learn.microsoft.com/en-us/windows/wsl/install-on-server
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-12-29
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_cmd:
    CommandLine|contains|all:
    - 'Enable-WindowsOptionalFeature'
    - '-Online'
    - '-FeatureName'
  selection_feature:
        # Add any insecure/unusual windows features that you don't use in your environment
    CommandLine|contains:
    - 'TelnetServer'
    - 'Internet-Explorer-Optional-amd64'
    - 'TFTP'
    - 'SMB1Protocol'
    - 'Client-ProjFS'
    - 'Microsoft-Windows-Subsystem-Linux'
  condition: all of selection_*
falsepositives:
- Legitimate usage of the features listed in the rule.
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify potentially suspicious utilization of the PowerShell cmdlet `Enable-WindowsOptionalFeature`, which is often used in context with the Deployment Image Servicing and Management (DISM) tool. The command serves a legitimate purpose by allowing users to enable or disable Windows features and packages, which can include services like Telnet or SMB1, inherently suggestive of a defense evasion tactic. The rule monitors process creation events specifically for command line arguments containing 'Enable-WindowsOptionalFeature', '-Online', and '-FeatureName', while cross-referencing the selection of potentially insecure or unusual features that may indicate malicious intent. Given its context within the MITRE ATT&CK framework, this rule relates to the **Defense Evasion** tactic aimed at obscuring malicious activities from detection.
  The detection leverages Windows Process Creation logs, primarily looking at CommandLine parameters to flag features that are flagged as insecure within an enterprise environment. Analysts should validate if the logged command execution aligns with standard operating procedures within the organization, as legitimate business processes may also trigger this rule.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine Windows Security logs for process creation events associated with the cmdlet `Enable-WindowsOptionalFeature`. Look specifically for the occurrence of the command with any flagged feature names.
  - **Correlate with Known Legitimate Uses:** Investigate if the execution was part of a known process or system maintenance operation within the enterprise. Check for any scheduled tasks, scripts, or other planned maintenance activities around the same timeframe.
  - **Analyze Related Security Events:** Utilize EDR tools to identify any other suspicious behavior related to the process execution, such as subsequent commands or network connections initiated shortly after the command was run.
  - **Assess User Context:** Determine the user account that executed the command and whether it has the necessary administrative privileges or roles. Investigate if the account is known for legitimate administrative tasks or if it shows signs of unusual activity.
  ### Prioritization
  Given the medium severity level of this alert, it suggests that while the execution of the cmdlet may not conclusively indicate malicious activity, the potential for misuse in a compromise scenario is high, warranting a proactive investigation to prevent possible exploitation or security breaches.
  ### Blind spots and Assumptions
  This detection rule assumes that PowerShell is being actively monitored and that the environment does not include legitimate use of the referenced features like Telnet or SMB1, which may result in false positives. Additionally, if an adversary is aware of the monitoring, they may employ methods to disguise their call to `Enable-WindowsOptionalFeature`, such as using alternative techniques or hiding their command lines from logs, thus leading to the rule not firing or being bypassed.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
