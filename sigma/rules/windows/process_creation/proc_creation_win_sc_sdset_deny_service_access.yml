title: Deny Service Access Using Security Descriptor Tampering Via Sc.EXE
id: 99cf1e02-00fb-4c0d-8375-563f978dfd37
related:
- id: 98c5aeef-32d5-492f-b174-64a691896d25     # Generic SD tampering
  type: similar
- id: a537cfc3-4297-4789-92b5-345bfd845ad0     # Specific Technique
  type: similar
status: test
description: Detects suspicious DACL modifications to deny access to a service that
  affects critical trustees. This can be used to hide services or make them unstoppable.
references:
- https://www.sans.org/blog/red-team-tactics-hiding-windows-services/
- https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/
- https://learn.microsoft.com/en-us/windows/win32/secauthz/sid-strings
author: Jonhnathan Ribeiro, oscd.community
date: 2020-10-16
modified: 2023-02-28
tags:
- attack.persistence
- attack.t1543.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_sc:
  - Image|endswith: '\sc.exe'
  - OriginalFileName: 'sc.exe'
  selection_sdset:
    CommandLine|contains|all:
    - 'sdset'
    - 'D;'         # Deny Access
  selection_trustee:
    CommandLine|contains:
    - ';IU'         # Interactively logged-on user
    - ';SU'         # Service logon user
    - ';BA'         # Built-in administrators
    - ';SY'         # Local system
    - ';WD'         # Everyone
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule aims to detect the tampering of Security Descriptors using the service control program (`sc.exe`). Specifically, it focuses on modifications that deny access to critical service trustees, which can render a service hidden or non-stoppable to authorized users. The rule analyzes process creation logs for instances where `sc.exe` is run with the parameter `sdset` to set security descriptors that specify denial of access (`D;`) to specific built-in user groups or individuals, such as interactively logged-on users, service logon users, built-in administrators, local system accounts, or everyone. This technique is associated with the MITRE ATT&CK tactic of persistence (T1543.003), where adversaries manipulate service configurations to maintain control over a compromised system without being detected.
  The technical data sources leveraged by this detection include Windows process creation logs, specifically monitoring command-line parameters to identify potential malicious behavior. Identifying such activities can help incident responders pinpoint unauthorized attempts to modify service access controls, indicating an elevated risk of persistence through malicious modifications that may evade traditional security measures.
  ### Investigation Steps
  - **Review Process Creation Logs:** Use EDR tools to backtrack the invocation of `sc.exe` with the `sdset` command, focusing on the context of users who executed the command and the specific parameters used to set the DACLs.
  - **Analyze Trust Access Lists (TALs):** Check the Security Descriptor of critical services using relevant PowerShell cmdlets (like `Get-Service` or `Get-Acl`) to verify alterations in permissions that match the suspicious command logs observed.
  - **Correlate with Other Security Events:** Look through Windows Security Logs to analyze if any unusual access attempts or account use correlate with the changes made to the service's security descriptor.
  - **Assess Impacted Services:** Evaluate the list of services affected by any denied access changes to determine their criticality and assess whether the modification has led to degradation in service operations or visibility.
  ### Prioritization
  This alert is classified as high severity due to the direct implications on service accessibility and potential concealment of malicious activities. Unauthorized changes to service access controls may allow adversaries to maintain persistence, evade detection, and hinder incident response efforts.
  ### Blind Spots and Assumptions
  The rule may not fire if an adversary utilizes a different method to modify service access controls outside of `sc.exe`, as the detection is specifically oriented to command-line parameters associated with `sdset`. Additionally, if the command executions occur under the context of a highly privileged account or arise from internal automated processes, there might be legitimate operational justifications that could lead to false positives. It assumes that sufficient logging is enabled and that logs from relevant sources are retained in a sufficiently timely manner.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
