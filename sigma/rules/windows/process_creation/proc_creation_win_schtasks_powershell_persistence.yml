title: Potential Persistence Via Powershell Search Order Hijacking - Task
id: b66474aa-bd92-4333-a16c-298155b120df
related:
- id: 6e8811ee-90ba-441e-8486-5653e68b2299
  type: similar
status: test
description: Detects suspicious powershell execution via a schedule task where the
  command ends with an suspicious flags to hide the powershell instance instead of
  executeing scripts or commands. This could be a sign of persistence via PowerShell
  "Get-Variable" technique as seen being used in Colibri Loader
references:
- https://blog.malwarebytes.com/threat-intelligence/2022/04/colibri-loader-combines-task-scheduler-and-powershell-in-clever-persistence-technique/
author: pH-T (Nextron Systems), Florian Roth (Nextron Systems)
date: 2022-04-08
modified: 2023-02-03
tags:
- attack.execution
- attack.persistence
- attack.t1053.005
- attack.t1059.001
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    ParentImage: 'C:\WINDOWS\System32\svchost.exe'
    ParentCommandLine|contains|all:
    - '-k netsvcs'
    - '-s Schedule'
    CommandLine|endswith:
    - ' -windowstyle hidden'
    - ' -w hidden'
    - ' -ep bypass'
    - ' -noni'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential persistence mechanisms that use PowerShell through the Windows Task Scheduler. It specifically identifies PowerShell commands executed by a process that was spawned from `svchost.exe`, which is a common parent process for legitimate Windows services. The rule looks for command-line parameters that indicate an intent to use PowerShell in a hidden window or with execution policies that bypass security measures, which is common among malicious actors. The indicated techniques relate to MITRE ATT&CK under the tactics of Execution (T1059.001) and Persistence (T1053.005), where adversaries attempt to maintain a foothold within the environment through deceptive PowerShell usage. In particular, this rule aims to uncover signifiers of techniques utilized by threats such as the Colibri Loader, which utilize such methods to establish persistence.
  ### Investigation Steps
  - **Initial EDR Query:** Search in the EDR for recent PowerShell executions that match the described command-line patterns, focusing specifically on those initiated by `C:\WINDOWS\System32\svchost.exe`. 
  - **Process Tree Analysis:** Investigate the process tree for the identified PowerShell execution to determine its ancestry and to uncover any additional suspicious child processes or parent relationships.
  - **Review Scheduled Tasks:** Examine the Windows Task Scheduler for any tasks associated with the identified PowerShell command that may not align with known or expected behaviors.
  - **Examine Event Logs:** Review Windows Security and System logs for any events related to task creation or modifications that correspond with the detected PowerShell process to understand the context of the execution.
  ### Prioritization
  This alert is classified as high severity due to the nature of the behavior it detects, wherein PowerShell is invoked with unusual parameters. This could imply that an adversary is attempting to leverage legitimate processes to hide malicious activity, which poses a significant risk to system integrity and confidentiality.
  ### Blind Spots and Assumptions
  One limitation of this detection rule is that it may not capture all instances of misuse due to varied command-line obfuscations or malicious actors using different parent processes or tools to invoke PowerShell. Additionally, legitimate administrative activities might trigger false positives if they inadvertently match the command-line patterns specified. It is assumed that the monitoring tools are adequately logging and capturing the necessary event information; any lack in proper logging configurations can impede detection effectiveness.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
