title: Suspicious Encoded PowerShell Command Line
id: ca2092a1-c273-4878-9b4b-0d60115bf5ea
status: test
description: Detects suspicious powershell process starts with base64 encoded commands
  (e.g. Emotet)
references:
- https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e
author: Florian Roth (Nextron Systems), Markus Neis, Jonhnathan Ribeiro, Daniil Yugoslavskiy,
  Anton Kutepov, oscd.community
date: 2018-09-03
modified: 2023-04-06
tags:
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli_enc:
    CommandLine|contains: ' -e'     # covers -en and -enc
  selection_cli_content:
    CommandLine|contains:
    - ' JAB'
    - ' SUVYI'
    - ' SQBFAFgA'
    - ' aQBlAHgA'
    - ' aWV4I'
    - ' IAA'
    - ' IAB'
    - ' UwB'
    - ' cwB'
  selection_standalone:
    CommandLine|contains:
    - '.exe -ENCOD '
    - ' BA^J e-'         # Reversed
  filter_optional_remote_signed:
    CommandLine|contains: ' -ExecutionPolicy remotesigned '
  condition: selection_img and (all of selection_cli_* or selection_standalone) and
    not 1 of filter_optional_*
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies suspicious PowerShell processes that are initiated with base64 encoded commands, which are commonly used by threat actors to obfuscate their actions. Specifically, the rule looks for the execution of PowerShell (`powershell.exe` or `pwsh.exe`) where the command line arguments contain certain indicators of encoded commands, such as the presence of ' -e' or specific base64 strings. It leverages Windows process creation logsâ€”monitoring both the image paths and command-line parameters associated with process initiation. By applying this rule, analysts can flag potentially malicious activity that aligns with the MITRE ATT&CK execution technique T1059.001 (Command and Scripting Interpreter: PowerShell), which is a common tactic used in various cyber attack scenarios.
  ### Investigation Steps
  - **Verify Process Details:** Check the process details in your EDR solution for any PowerShell instances that matched the alert criteria, including user context and parents of the process to establish the chain of execution.
  - **Inspect Command Line Arguments:** Review the command line arguments associated with the flagged PowerShell process in Windows Event Logs or EDR to determine if they contain suspicious encoded data or patterns documented in the detection rule.
  - **Analyze Network Connections:** Investigate any established network connections (using NDR or firewalls) correlated with the alert to identify if the suspicious process attempted to communicate with any known malicious hosts or IP addresses.
  - **Review Security Logs:** Examine Windows Security and Application logs to find any prior or subsequent events linked to the same user or system which could indicate malicious activities in the lead-up to or following the PowerShell execution.
  ### Prioritization
  Given that this alert indicates the use of potentially obfuscated PowerShell commands, which are frequently leveraged in advanced attacks, it is prioritized as 'high' severity. Such alerts require prompt investigation to mitigate any potential compromise or data exfiltration.
  ### Blind Spots and Assumptions
  This rule may not capture encoded PowerShell commands executed by sophisticated attackers employing advanced evasion techniques such as altering the command structure or utilizing custom obfuscation methods. Additionally, if PowerShell has been set to bypass logging via configuration changes or if security policies limit the detection of command-line arguments, the rule may not fire as expected. It assumes that the telemetry accurately represents PowerShell invocation and that necessary event logging is enabled on the endpoints, which could vary across environments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
