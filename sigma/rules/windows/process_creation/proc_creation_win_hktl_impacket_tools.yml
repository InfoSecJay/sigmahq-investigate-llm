title: HackTool - Impacket Tools Execution
id: 4627c6ae-6899-46e2-aa0c-6ebcb1becd19
status: test
description: Detects the execution of different compiled Windows binaries of the impacket
  toolset (based on names or part of their names - could lead to false positives)
references:
- https://github.com/ropnop/impacket_static_binaries/releases/tag/0.9.21-dev-binaries
author: Florian Roth (Nextron Systems)
date: 2021-07-24
modified: 2023-02-07
tags:
- attack.execution
- attack.t1557.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|contains:
    - '\goldenPac'
    - '\karmaSMB'
    - '\kintercept'
    - '\ntlmrelayx'
    - '\rpcdump'
    - '\samrdump'
    - '\secretsdump'
    - '\smbexec'
    - '\smbrelayx'
    - '\wmiexec'
    - '\wmipersist'
  - Image|endswith:
    - '\atexec_windows.exe'
    - '\dcomexec_windows.exe'
    - '\dpapi_windows.exe'
    - '\findDelegation_windows.exe'
    - '\GetADUsers_windows.exe'
    - '\GetNPUsers_windows.exe'
    - '\getPac_windows.exe'
    - '\getST_windows.exe'
    - '\getTGT_windows.exe'
    - '\GetUserSPNs_windows.exe'
    - '\ifmap_windows.exe'
    - '\mimikatz_windows.exe'
    - '\netview_windows.exe'
    - '\nmapAnswerMachine_windows.exe'
    - '\opdump_windows.exe'
    - '\psexec_windows.exe'
    - '\rdp_check_windows.exe'
    - '\sambaPipe_windows.exe'
    - '\smbclient_windows.exe'
    - '\smbserver_windows.exe'
    - '\sniff_windows.exe'
    - '\sniffer_windows.exe'
    - '\split_windows.exe'
    - '\ticketer_windows.exe'
              # - '\addcomputer_windows.exe'
              # - '\esentutl_windows.exe'
              # - '\getArch_windows.exe'
              # - '\lookupsid_windows.exe'
              # - '\mqtt_check_windows.exe'
              # - '\mssqlclient_windows.exe'
              # - '\mssqlinstance_windows.exe'
              # - '\ntfs-read_windows.exe'
              # - '\ping_windows.exe'
              # - '\ping6_windows.exe'
              # - '\raiseChild_windows.exe'
              # - '\reg_windows.exe'
              # - '\registry-read_windows.exe'
              # - '\services_windows.exe'
              # - '\wmiquery_windows.exe'
  condition: selection
falsepositives:
- Legitimate use of the impacket tools
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of various compiled binaries from the Impacket toolset. Impacket is a collection of Python classes for working with network protocols that often facilitates penetration testing and attacker activities, particularly around the exploitation of Windows environments. The rule monitors process creation events, specifically looking for specific binary names or parts of binary names that are associated with Impacket utilities, including `goldenPac`, `ntlmrelayx`, and `secretsdump`, among others. These binaries, often executed in a legitimate penetration testing context, can also signify malicious activity, thereby warranting vigilant detection.
  The rule utilizes Windows process creation logs as its primary data source. The MITRE ATT&CK framework categorizes this detection under the Execution tactic and specifically maps to the technique T1557.001 (Credential Dumping: Dumping Access Tokens). Detecting the execution of these binaries through system telemetry can provide insights into unauthorized lateral movement or credential harvesting attempts within the network.
  ### Investigation Steps
  - **Validate Process Origin:** Check the process creation logs via your EDR for details on the user account and origin of the process. This can help determine if the execution is legitimate or suspicious.
  - **Cross-reference Access:** Utilize Windows Security logs to identify related event descriptions, access tokens, or privileges associated with the executed binaries. Focus on events that indicate unusual privilege escalation or lateral movement.
  - **Analyze Network Connections:** Review network traffic logs for outbound connections or unusual traffic patterns correlated with the execution of the detected process. Utilizing NDR tools can help ascertain whether the executed binaries are attempting to reach malicious domains or services.
  - **Audit System Changes:** Examine application and system logs for any recent changes in system configurations or new software installations that correlate with the appearance of Impacket binaries. Keeping track of recent changes can highlight potential attack vectors.
  ### Prioritization
  Given the high severity level assigned to this alert, any detection of Impacket binaries being executed in the environment should be treated with urgency. These executions can indicate potential lateral movement or credential dumping activities that could compromise sensitive user accounts or system integrity.
  ### Blind Spots and Assumptions
  This rule may not fire if the Impacket binaries are executed from non-standard locations or if they are renamed or modified by adversaries to evade detection. Additionally, it assumes that the threat actor has not employed techniques to mask their activities within the environment, such as using legitimate administrative accounts or emergency administrative tools. Analysts should be aware that benign use of Impacket tools, often seen in penetration tests, could result in false positives, necessitating thorough contextual analysis to distinguish between legitimate and malicious uses.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
