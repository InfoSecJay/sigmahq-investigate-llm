title: Potential File Download Via MS-AppInstaller Protocol Handler
id: 180c7c5c-d64b-4a63-86e9-68910451bc8b
related:
- id: 7cff77e1-9663-46a3-8260-17f2e1aa9d0a
  type: derived
status: test
description: |
  Detects usage of the "ms-appinstaller" protocol handler via command line to potentially download arbitrary files via AppInstaller.EXE
  The downloaded files are temporarly stored in ":\Users\%username%\AppData\Local\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\AC\INetCache\<RANDOM-8-CHAR-DIRECTORY>"
references:
- https://lolbas-project.github.io/lolbas/Binaries/AppInstaller/
author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel
date: 2023-11-09
tags:
- attack.defense-evasion
- attack.execution
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - 'ms-appinstaller://?source='
    - 'http'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  The detection rule "Potential File Download Via MS-AppInstaller Protocol Handler" monitors for command-line executions that utilize the "ms-appinstaller" protocol to potentially download arbitrary files through the AppInstaller.EXE application. This protocol handler can be exploited by an adversary to execute unwanted downloads without the user's knowledge. The rule specifically looks for command-line arguments containing 'ms-appinstaller://?source=' alongside HTTP URLs, indicating a potential file download event. The relevant data sources for this detection include Windows process creation logs, which capture the command-line parameters utilized at the time of the download attempt. By correlating the data captured from these logs, analysts can identify suspicious usage patterns indicative of malicious activity. This detection aligns with the MITRE ATT&CK frameworks under the tactics of execution (T1218) and defense evasion.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the Windows process creation logs in your EDR tool for any instances of AppInstaller.EXE and focus on the command-line arguments used during the execution.
  - **Check File Contents:** Investigate the contents of any files downloaded to the cached directory at `C:\Users\%username%\AppData\Local\Packages\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe\AC\INetCache\<RANDOM-8-CHAR-DIRECTORY>`, checking for unusual or unauthorized files.
  - **Analyze Network Traffic:** Utilize the NDR or firewall logs to trace any outbound connections originating from the affected endpoint that may correspond with the time of the suspicious AppInstaller use, specifically looking for unusual or unauthorized domains.
  - **Verify User Activity:** Cross-reference user activities around the time of the alert using VPN, Proxy, and cloud logs to determine if the file download was initiated by legitimate user actions.
  ### Prioritization
  This rule's alerts are classified as medium severity due to the potential risk of unauthorized file downloads that can compromise system integrity, leading to further exploitation. It indicates that while the activity may not definitively represent a successful breach, it warrants thorough investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the command-line syntax does not strictly match the specified patterns, or if AppInstaller.EXE is executed redirection or through other means that bypass traditional detection. Additionally, if the AppInstaller cache is cleared prior to analysis, the downloaded files may be inaccessible. Analysts should be aware that legitimate processes could also generate similar command-line arguments, creating potential false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
