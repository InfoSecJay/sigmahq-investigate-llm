title: Hiding User Account Via SpecialAccounts Registry Key - CommandLine
id: 9ec9fb1b-e059-4489-9642-f270c207923d
related:
- id: f8aebc67-a56d-4ec9-9fbe-7b0e8b7b4efd
  type: similar
status: experimental
description: |
  Detects changes to the registry key "HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\Userlist" where the value is set to "0" in order to hide user account from being listed on the logon screen.
references:
- https://thedfirreport.com/2024/01/29/buzzing-on-christmas-eve-trigona-ransomware-in-3-hours/
- https://thedfirreport.com/2024/04/01/from-onenote-to-ransomnote-an-ice-cold-intrusion/
- https://thedfirreport.com/2024/04/29/from-icedid-to-dagon-locker-ransomware-in-29-days/
- https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/
author: '@Kostastsale, @TheDFIRReport'
date: 2022-05-14
modified: 2024-08-23
tags:
- attack.t1564.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\reg.exe'
    CommandLine|contains|all:
    - '\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList'
    - 'add'
    - '/v'
    - '/d 0'
  condition: selection
falsepositives:
- System administrator activities
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect modifications to the Windows registry key `HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\Userlist`, specifically when an entry is added with a value of `0`. This registry key is used to control user visibility on the logon screen, and an entry with a value of `0` effectively hides that user account, which can be indicative of an attempt by an adversary to conceal unauthorized access. The detection primarily leverages process creation logs to identify instances of the command line invocation for `reg.exe`, specifically monitoring for the command parameters that indicate registry modification. The associated MITRE ATT&CK technique for this detection is **T1564.002: Hide Account**, which helps analysts understand the malicious context behind such registry changes.
  ### Investigation Steps
  - **Review Process Creation Logs**: Search EDR for the execution of `reg.exe` with the command line parameters reflecting the registry modification. Check for timestamps and process parent relationships to detect if it was initiated by known legitimate processes.
  - **Examine User Account Activity**: Utilize Windows Security logs to correlate any recent logon attempts or account creation activities associated with the modified registry key. Analyze account attributes to identify potential unauthorized accounts.
  - **Analyze Related Network Traffic**: Use NDR tools to look for unusual outbound connections originating from accounts that have been hidden. Focus on identifying patterns that may indicate exfiltration or remote access attempts.
  - **Check for Alert Correlations**: Investigate if there are any other alerts or log entries that may correlate with this registry change, such as unusual alterations in user privileges or other system modifications indicative of a broader compromise.
  ### Prioritization
  The alert is categorized as medium severity because hiding a user account can indicate malicious activity, potentially facilitating unauthorized access or persistence methods. Organizations should treat such detections with urgency to prevent potential threats from escalating.
  ### Blind Spots and Assumptions
  This rule may not fire if the modification is performed via a different method, such as using PowerShell or Group Policy, as the detection focuses solely on the execution of `reg.exe`. Additionally, legitimate system administrators modifying the registry might produce false positives. Adversaries could also use obfuscation techniques to hide their actions, including changing the command invocation pattern or using different executable utilities. It's essential for detection engineers to understand that not all attacks will follow standard patterns and that variations in execution can lead to gaps in detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
