title: Email Exifiltration Via Powershell
id: 312d0384-401c-4b8b-abdf-685ffba9a332
status: test
description: Detects email exfiltration via powershell cmdlets
references:
- https://www.microsoft.com/security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/
- https://github.com/Azure/Azure-Sentinel/blob/7e6aa438e254d468feec061618a7877aa528ee9f/Hunting%20Queries/Microsoft%20365%20Defender/Ransomware/DEV-0270/Email%20data%20exfiltration%20via%20PowerShell.yaml
author: Nasreddine Bencherchali (Nextron Systems),  Azure-Sentinel (idea)
date: 2022-09-09
tags:
- attack.exfiltration
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    CommandLine|contains|all:
    - 'Add-PSSnapin'
    - 'Get-Recipient'
    - '-ExpandProperty'
    - 'EmailAddresses'
    - 'SmtpAddress'
    - '-hidetableheaders'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Email Exfiltration Via Powershell" detection rule is designed to identify potential instances of email data being exfiltrated from an organization's network using PowerShell cmdlets. Specifically, the rule looks for process creation events triggered by PowerShell (either `powershell.exe` or `pwsh.exe`) that include command-line parameters indicative of email data retrieval. The relevant cmdlets include `Add-PSSnapin`, which allows the addition of PowerShell modules used for accessing email data, `Get-Recipient`, which retrieves recipient information, and several flags like `-ExpandProperty` and `-hidetableheaders` that customize the output format. This rule ties into the MITRE ATT&CK framework under the tactic of "Exfiltration" (ID: TA0010) with specific techniques such as "Exfiltration Over Command and Control Channel" (ID: T1041). Detection relies on Windows process creation logs, making it essential for SOC analysts to be vigilant about unusual PowerShell activity.
  ### Investigation Steps
  - **Review PowerShell Execution Logs:** Start by examining PowerShell logs to identify the specific execution context and parameters used during the detected activity. This includes checking for the presence of unusual command-line arguments alongside the identified processes.
  - **Analyze Network Connections:** Utilize your EDR and network detection tools to assess any outbound connections made around the same time as the detected PowerShell activity. Look for connections to external email services or unusual IP addresses.
  - **Inspect User Activity:** Check users' logins and actions leading up to the alert, particularly focusing on privileged accounts that might be allowed to run PowerShell commands. Understand the user roles to establish if the command execution was legitimate or suspicious.
  - **Correlate with Email Logs:** Review any relevant email logs or cloud email service logs to find evidence of email being sent to external addresses. Look for patterns or large volumes of emails sent by the involved user or process that align with the PowerShell command execution time.
  ### Prioritization
  This alert is classified as high severity due to the significant risk associated with the unauthorized exfiltration of sensitive email data, which could result in data breaches or compliance violations if not promptly investigated.
  ### Blind Spots and Assumptions
  There are several blind spots and assumptions tied to this detection rule. For example, if an adversary uses obfuscated PowerShell commands or other scripting languages to perform email exfiltration, the current rule may fail to activate. Additionally, if legitimate processes are used by authorized users in unusual ways (e.g., scheduled tasks), these may also bypass detection. Furthermore, environments with altered PowerShell execution policies or those lacking detailed process creation logging may not properly capture the necessary telemetry to trigger this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
