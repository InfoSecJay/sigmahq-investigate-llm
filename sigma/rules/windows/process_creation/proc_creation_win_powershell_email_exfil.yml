title: Email Exifiltration Via Powershell
id: 312d0384-401c-4b8b-abdf-685ffba9a332
status: test
description: Detects email exfiltration via powershell cmdlets
references:
- https://www.microsoft.com/security/blog/2022/09/07/profiling-dev-0270-phosphorus-ransomware-operations/
- https://github.com/Azure/Azure-Sentinel/blob/7e6aa438e254d468feec061618a7877aa528ee9f/Hunting%20Queries/Microsoft%20365%20Defender/Ransomware/DEV-0270/Email%20data%20exfiltration%20via%20PowerShell.yaml
author: Nasreddine Bencherchali (Nextron Systems),  Azure-Sentinel (idea)
date: 2022-09-09
tags:
- attack.exfiltration
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    CommandLine|contains|all:
    - 'Add-PSSnapin'
    - 'Get-Recipient'
    - '-ExpandProperty'
    - 'EmailAddresses'
    - 'SmtpAddress'
    - '-hidetableheaders'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential email exfiltration attempts using PowerShell cmdlets commonly leveraged by attackers. Specifically, the rule looks for instances where the PowerShell executable (either `powershell.exe` or `pwsh.exe`) is invoked with a command line containing specific parameters related to email retrieval, such as `Add-PSSnapin`, `Get-Recipient`, and `-ExpandProperty` for accessing email addresses. When attackers aim to extract sensitive data, they often utilize these parameters to extract email addresses and send them outside the organization. By monitoring for this particular process creation behavior across logged data sources, such as process creation logs, the rule aids in detecting unauthorized activities indicative of potential data breaches.
  ### Investigation Steps
  - **Review EDR Logs**: Examine the process creation logs in your EDR solution to identify the context in which PowerShell was executed, paying special attention to the user account and the command line arguments.
  - **Check Email Logs**: Use email server logs to track any unusual email activity or outbound emails corresponding to the identified PowerShell command execution, particularly for messages sent to external domains.
  - **Analyze User Activity**: Investigate the associated user account's behavior for anomalies leading up to the PowerShell command execution, including any recent changes in privilege levels or unusual login times.
  - **Correlate with SIEM Data**: Utilize your SIEM to correlate events from various sources, including firewall and proxy logs, to identify any suspicious outbound connections or data transfers following the PowerShell execution.
