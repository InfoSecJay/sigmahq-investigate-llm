title: Application Terminated Via Wmic.EXE
id: 49d9671b-0a0a-4c09-8280-d215bfd30662
related:
- id: 847d5ff3-8a31-4737-a970-aeae8fe21765     # Uninstall Security Products
  type: derived
status: test
description: Detects calls to the "terminate" function via wmic in order to kill an
  application
references:
- https://cyble.com/blog/lockfile-ransomware-using-proxyshell-attack-to-deploy-ransomware/
- https://www.bitdefender.com/files/News/CaseStudies/study/377/Bitdefender-Whitepaper-WMI-creat4871-en-EN-GenericUse.pdf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-09-11
tags:
- attack.execution
- attack.t1047
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\WMIC.exe'
  - OriginalFileName: 'wmic.exe'
  selection_cli:
    CommandLine|contains|all:
    - 'call'
    - 'terminate'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule is designed to monitor and identify instances where the Windows Management Instrumentation Command-line (WMIC) is utilized to terminate applications through the "terminate" command. Specifically, it looks for process creation events that involve the execution of `wmic.exe`, along with specific command line parameters that indicate an application is being terminated. Leveraging data sources such as process creation logs and command-line parameters, this rule examines instances where malicious actors may be using WMIC to forcibly close a running instance of a software application, which can be indicative of an attempt to disrupt services or actions taken by security solutions. This activity falls under the MITRE ATT&CK tactic for Execution (T1047) as it exploits legitimate administrative tools to perform malicious actions.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review process creation events for `wmic.exe` to determine the specific applications that were terminated and the context in which this occurred. This includes examining the user and the time of execution.
    
  - **Analyze Command-Line Parameters:** Analyze the command-line parameters associated with the `wmic.exe` process to confirm the presence of the "call" and "terminate" directives. Cross-reference this data against expected application behavior to identify anomalies.
  - **Review User Activity Logs:** Consult user activity logs from EDR or SIEM to ascertain if the user executing the command had appropriate privileges or if the action correlates with other suspicious activities.
  - **Assess Impacted Applications:** Investigate affected applications to understand the potential impact of the termination. This may require collaboration with IT personnel to determine if any critical services were disrupted.
  ### Prioritization
  This alert is classified as medium severity because while using WMIC to terminate processes can be a legitimate administrative task, its misuse for malicious purposes represents a potential security threat that needs prompt investigation to assess any potential service disruptions or unauthorized access.
  ### Blind Spots and Assumptions
  This rule assumes that WMIC is being used in its default capacity on Windows systems and may not fire if an adversary employs alternative methods (e.g., using PowerShell or other scripting tools) to terminate processes. Additionally, the detection may miss cases where WMIC is used in non-standard paths or renamed executables are employed to evade detection. It's also essential to consider that benign administrative actions may trigger false positives, particularly in environments where legitimate use of WMIC is common.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
