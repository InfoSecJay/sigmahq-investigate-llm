title: Operator Bloopers Cobalt Strike Modules
id: 4f154fb6-27d1-4813-a759-78b93e0b9c48
related:
- id: 647c7b9e-d784-4fda-b9a0-45c565a7b729
  type: similar
status: test
description: Detects Cobalt Strike module/commands accidentally entered in CMD shell
references:
- https://hstechdocs.helpsystems.com/manuals/cobaltstrike/current/userguide/content/cobalt-4-5-user-guide.pdf
- https://thedfirreport.com/2021/10/04/bazarloader-and-the-conti-leaks/
- https://thedfirreport.com/2022/06/16/sans-ransomware-summit-2022-can-you-detect-this/
author: _pete_0, TheDFIRReport
date: 2022-05-06
modified: 2023-01-30
tags:
- attack.execution
- attack.t1059.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'Cmd.Exe'
  - Image|endswith: '\cmd.exe'
  selection_cli:
    CommandLine|contains:
    - 'Invoke-UserHunter'
    - 'Invoke-ShareFinder'
    - 'Invoke-Kerberoast'
    - 'Invoke-SMBAutoBrute'
    - 'Invoke-Nightmare'
    - 'zerologon'
    - 'av_query'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This detection rule, titled "Operator Bloopers Cobalt Strike Modules," is designed to identify unintentional executions of specific Cobalt Strike commands that may occur within Windows command-line interfaces. It leverages process creation logs to monitor for instances where the command-line parameters contain phrases associated with Cobalt Strike modules, such as `Invoke-UserHunter` or `Invoke-Kerberoast`. The rule operates under the MITRE ATT&CK tactic of Execution, specifically targeting technique T1059.003 (Windows Command Shell). The use of these commands typically suggests that adversaries may be attempting reconnaissance or lateral movement within the network. By detecting these command executions, SOC analysts can investigate potential unauthorized uses of Cobalt Strike, thereby better understanding the threat landscape.
  The key data sources utilized for this detection include the creation of processes, notably focusing on instances where `cmd.exe` is invoked with specific parameters. Monitoring process creation events is critical, as it allows for the direct observation of command invocations that may signal hostile activity in the environment.
  ### Investigation Steps
  - **Review EDR Alerts:** Start by checking EDR logs for any instances where `cmd.exe` was executed with the specified command-line arguments associated with Cobalt Strike. Analyze the context and surrounding processes that may indicate suspicious behavior.
  - **Analyze Process Tree:** Utilize the EDR to investigate the process tree, identifying the parent processes that initiated the command shell. This can provide insight into whether the command execution was malicious or part of legitimate operations.
  - **Cross-Reference with Security Events:** Look into Windows Security logs to determine if the execution resulted in any unauthorized access attempts or if other security events correlate with the detected command execution.
  - **Check Network Connections:** Inspect network logs from firewalls or proxies to see if there were any outbound connections made shortly after the execution of the detected commands. This can reveal potential data exfiltration attempts or contact with command-and-control infrastructure.
  ### Prioritization
  The severity of this alert is classified as high because the execution of Cobalt Strike commands often indicates active compromise attempts or post-exploitation activities by threat actors, which can lead to significant security incidents if not addressed promptly.
  ### Blind spots and Assumptions
  While this detection rule is highly relevant, it operates under the assumption that Cobalt Strike commands will remain consistently identifiable in the command line. There is a potential blind spot if adversaries implement obfuscation techniques to alter command representation, preventing detection. Additionally, the rule may not fire if the commands are executed within a different context or environment that is not monitored, such as remote sessions or alternate shells. Analysts should remain vigilant for sophisticated attack methods that may manipulate or bypass standard detection mechanisms.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
