title: UAC Bypass Using IEInstal - Process
id: 80fc36aa-945e-4181-89f2-2f907ab6775d
status: test
description: Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
    ParentImage|endswith: '\ieinstal.exe'
    Image|contains: '\AppData\Local\Temp\'
    Image|endswith: 'consent.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential User Account Control (UAC) bypass attempts leveraging the `ieinstal.exe` utility, commonly associated with the UACMe 64 exploit. UAC is a security feature in Windows that helps prevent unauthorized changes to the operating system, and bypassing it indicates a privilege escalation attempt. The rule analyzes process creation logs to detect when a `consent.exe` process is spawned from `ieinstal.exe`, particularly when running with a high or system-level integrity. The key indicators include the presence of `ieinstal.exe` in a Temp directory and the resulting process's integrity levels indicating elevated permissions. Data sources involved in this detection include Windows process creation logs, capturing details such as application paths, parent process names, and their respective integrity levels.
  ### Investigation Steps
  - Review recent process creation logs in your EDR tool to identify instances of `ieinstal.exe` and follow the chain of processes that led to the creation of `consent.exe`.
  - Analyze the integrity levels of the involved processes; elevated integrity levels may suggest a successful UAC bypass attempt, warranting further investigation.
  - Utilize your SIEM to correlate any related alerts or anomalies from other data sources, such as registry changes or suspicious network activity associated with the same time frame.
  - Check any associated user credentials or account activity in relevant logs to determine if unauthorized privilege escalation actions were taken post-bypass.
