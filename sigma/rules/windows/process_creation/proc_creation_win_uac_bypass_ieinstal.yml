title: UAC Bypass Using IEInstal - Process
id: 80fc36aa-945e-4181-89f2-2f907ab6775d
status: test
description: Detects the pattern of UAC Bypass using IEInstal.exe (UACMe 64)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
    ParentImage|endswith: '\ieinstal.exe'
    Image|contains: '\AppData\Local\Temp\'
    Image|endswith: 'consent.exe'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect Unsolicited Access Control (UAC) bypass attempts leveraging the `IEInstal.exe` executable, a known method for privilege escalation. The rule examines process creation events within the Windows operating system to identify instances where a process (`consent.exe`) runs with high or system integrity levels, specifically when initiated by `IEInstal.exe`. This pattern is indicative of attempts to circumvent security measures. It taps into various data sources such as process creation logs, which detail the parent-child relationship between executing processes and their integrity levels. The relevant MITRE ATT&CK tactic is "Defense Evasion" (T1548.002), which highlights techniques used by adversaries to bypass system defenses to escalate their privileges.
  ### Investigation Steps
  - **Check EDR Logs**: Review endpoint detection and response logs for any instances of the specified parent-child process relationship, particularly those tied to `IEInstal.exe` and `consent.exe` during the time window of the alert.
  - **Examine Process Tree**: Utilize process exploration tools to visualize the process tree and confirm whether `consent.exe` was spawned from `IEInstal.exe`, noting any other suspicious parent processes.
  - **Review User Activity Logs**: Check user activity logs for unusual account behavior or privilege escalation actions around the same timeframe as the generated alert.
  - **Correlate with Security Events**: Analyze Windows Security logs for events related to user access controls and modifications that coincide with the detected UAC bypass attempt.
  ### Prioritization
  Given the high potential for privilege escalation and associated security implications within an enterprise environment, this alert should be treated with high severity to prevent unauthorized access or data breaches.
  ### Blind Spots and Assumptions
  There are several blind spots regarding this rule. For example, if the `IEInstal.exe` executable is not present in the environment or if UAC settings have been modified, this rule may not trigger as expected. Additionally, legitimate software using these processes may lead to false positives. It's also assumed that sufficient logging is enabled; otherwise, the relevant process creation events may not be captured, thus failing to detect actual attempts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
