title: Potential PsExec Remote Execution
id: ea011323-7045-460b-b2d7-0f7442ea6b38
status: test
description: Detects potential psexec command that initiate execution on a remote
  systems via common commandline flags used by the utility
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/psexec
- https://www.poweradmin.com/paexec/
- https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2023-02-28
tags:
- attack.resource-development
- attack.t1587.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # Accepting EULA in commandline - often used in automated attacks
    CommandLine|contains|all:
    - 'accepteula'
    - ' -u '
    - ' -p '
    - ' \\\\'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Potential PsExec Remote Execution" detection rule is designed to identify potential misuse of PsExec, a command-line utility commonly used for executing processes remotely on Windows systems. Specifically, this rule looks for command-line parameters that are typically associated with PsExec's functionality, such as `-u` for specifying a user account, `-p` for the password, and `accepteula`, which implies the acceptance of the End User License Agreement. By monitoring process creation logs from Windows, particularly through the Sysmon tool, this rule aims to detect instances where these command-line parameters are being utilized in a potentially malicious context, suggesting that an attacker may be attempting to execute commands or payloads on remote systems. This behavior is aligned with the MITRE ATT&CK framework under the tactic of Resource Development and the technique T1587.001, which highlights the adversaryâ€™s ability to deploy malicious tools into target environments.
  ### Investigation Steps
  - **Confirm Alert Context:** Investigate the timeline around the alert to establish context regarding the originating process and any related activities. Utilize EDR solutions to drill down into the process tree and identify parent-child relationships.
  - **Analyze Network Traffic:** Review network connections that were established late to monitor any attempts to interact with remote systems. Use NDR to correlate the time of the PsExec execution with any outbound connections to suspicious IP addresses.
  - **Check Security Logs:** Inspect the Windows Security logs for any user authentication events that correspond with the timestamps from the detected execution. Look for unusual logins or access attempts that may indicate account compromise.
  - **Review System and Application Logs:** Look into the application and system logs for any indication of anomalies or errors that occurred during or after the execution of the PsExec command. This can provide insights into the potential impact of the detected behavior.
  ### Prioritization
  This alert is classified as high severity due to the potential for remote code execution via PsExec, which could lead to unauthorized access, data exfiltration, or lateral movement within the network.
  ### Blind Spots and Assumptions
  Detection of the PsExec execution may be hindered if the command is executed via scripts or non-standard command-line utilities that do not incorporate the common flags monitored by this rule. Additionally, if PsExec or similar tools are used in a legitimate administrative capacity, this could lead to false positives. It is also assumed that the telemetry being monitored is correctly configured to capture process creation events from Sysmon.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
