title: HackTool - Stracciatella Execution
id: 7a4d9232-92fc-404d-8ce1-4c92e7caf539
status: test
description: Detects Stracciatella which executes a Powershell runspace from within
  C# (aka SharpPick technique) with AMSI, ETW and Script Block Logging disabled based
  on PE metadata characteristics.
references:
- https://github.com/mgeeky/Stracciatella
author: pH-T (Nextron Systems)
date: 2023-04-17
modified: 2024-11-23
tags:
- attack.execution
- attack.defense-evasion
- attack.t1059
- attack.t1562.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\Stracciatella.exe'
  - OriginalFileName: 'Stracciatella.exe'
  - Description: 'Stracciatella'
  - Hashes|contains:
    - 'SHA256=9d25e61ec1527e2a69d7c2a4e3fe2fe15890710c198a66a9f25d99fdf6c7b956'
    - 'SHA256=fd16609bd9830c63b9413671678bb159b89c357d21942ddbb6b93add808d121a'
  condition: selection
falsepositives:
- Unlikely
level: high

notes: |
  ### Technical Context
  The "HackTool 
  - Stracciatella Execution" detection rule is designed to identify the execution of Stracciatella, a tool known for invoking PowerShell runspaces in C# while employing tactics to evade defenses, such as disabling the Anti-Malware Scan Interface (AMSI), ETW, and Script Block Logging. This behavior aligns with the MITRE ATT&CK techniques T1059 (Command and Scripting Interpreter) and T1562.001 (Impair Defenses: Disable or Bypass Security Tools). The key indicators of compromise examined by this rule include the process creation of `Stracciatella.exe`, verification of its original filename and description, and SHA256 hashes associated with known malicious versions of the binary. The relevant data sources for this detection include Windows security logs focused on process creation events, specifically looking at details such as the Image path, OriginalFileName, and provided file hashes.
  ### Investigation Steps
  - **Verify Process Creation:** Check the EDR for any recent process creation logs related to `Stracciatella.exe`, and correlate the execution time with user activity to determine legitimacy.
  - **Analyze PowerShell Activity:** Investigate PowerShell logs in the environment for any commands executed that may relate to Stracciatella's intended operations, focusing on suspicious usage patterns.
  - **Review Network Connections:** Use NDR tools to monitor network logs for any unusual outbound connections associated with the execution of Stracciatella, as these might indicate data exfiltration or command and control communications.
  - **Evaluate System Changes:** Examine Windows Event Logs for any security-related changes or alterations made during the execution timeframe, especially focusing on any logs that exhibit irregularities around AMSI, ETW, or Script Block Logging configurations.
  ### Prioritization
  This alert is classified as high severity due to the nature of the Stracciatella tool, which is associated with evading detection and performing potentially harmful actions within the environment, thereby posing a significant risk to enterprise security.
  ### Blind Spots and Assumptions
  This rule may not fire if Stracciatella is executed using different filename conventions or if the indicators of compromise have been altered to avoid detection. Additionally, if the execution occurs in environments with constrained logging or if security logging is disabled entirely, the detection may also fail. Adversaries may employ techniques such as renaming the executable or using different execution paths to bypass this detection, highlighting the importance of maintaining comprehensive monitoring across processes and user behavior.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
