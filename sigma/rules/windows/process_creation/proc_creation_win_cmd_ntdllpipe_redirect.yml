title: NtdllPipe Like Activity Execution
id: bbc865e4-7fcd-45a6-8ff1-95ced28ec5b2
status: test
description: Detects command that type the content of ntdll.dll to a different file
  or a pipe in order to evade AV / EDR detection. As seen being used in the POC NtdllPipe
references:
- https://web.archive.org/web/20220306121156/https://www.x86matthew.com/view_post?id=ntdll_pipe
author: Florian Roth (Nextron Systems)
date: 2022-03-05
modified: 2023-03-07
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
    - 'type %windir%\system32\ntdll.dll'
    - 'type %systemroot%\system32\ntdll.dll'
    - 'type c:\windows\system32\ntdll.dll'
    - '\\ntdll.dll > \\\\.\\pipe\\'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "NtdllPipe Like Activity Execution" rule is designed to detect attempts to read the contents of the `ntdll.dll` file and send that data to a pipe, potentially as a tactic to evade detection by antivirus (AV) or endpoint detection and response (EDR) systems. This activity is commonly associated with sophisticated adversaries trying to manipulate system processes and can involve using command-line operations that resemble legitimate commands. The rule specifically looks for certain command-line patterns that indicate this activity, such as the use of the `type` command directly referencing `ntdll.dll`, combined with output redirection to a named pipe (e.g., `\\.\\pipe\\`). The primary data sources for this detection are Windows Process Creation logs, which capture details about executed commands, parameters, and their corresponding process IDs.
  This detection aligns with the MITRE ATT&CK framework under the tactic of Defense Evasion (T1203). By signaling the use of `ntdll.dll` in potentially malicious contexts, the rule assists incident responders in identifying and investigating attempts to circumvent security controls through unconventional means.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check Windows Security or Sysmon logs for process creation events that match the command-line patterns defined in the detection rule.
  - **Analyze Parent-Child Process Relationships:** Use EDR tools to trace the relationships between parent and child processes to identify potentially malicious origins of the command execution.
  - **Inspect Network Connections:** Review network logs to see if there are unusual outbound connections initiated by processes associated with the detected activity.
  - **Correlation with Other Alerts:** Cross-reference the alert with any other active alerts in the environment to evaluate if this behavior is part of a larger incident or attack vector.
  ### Prioritization
  This alert is classified as high severity due to the inherent risks associated with evasion techniques that target critical system files like `ntdll.dll`. Such activities may indicate advanced malicious behavior that requires immediate investigation and response.
  ### Blind Spots and Assumptions
  This rule may not trigger if the command is executed without the specified strings, such as utilizing different methods to access or manipulate `ntdll.dll`. Additionally, if the command execution is obfuscated or executed through other means (e.g., indirect script execution or malicious software invoking these commands without using the `cmd` directly), the detection may fail. Adversaries could leverage legitimate system processes, tools, or custom scripts to achieve similar outcomes without triggering this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
