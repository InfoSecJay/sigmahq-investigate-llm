title: Suspicious AgentExecutor PowerShell Execution
id: c0b40568-b1e9-4b03-8d6c-b096da6da9ab
related:
- id: 7efd2c8d-8b18-45b7-947d-adfe9ed04f61
  type: similar
status: test
description: Detects execution of the AgentExecutor.exe binary. Which can be abused
  as a LOLBIN to execute powershell scripts with the ExecutionPolicy "Bypass" or any
  binary named "powershell.exe" located in the path provided by 6th positional argument
author: Nasreddine Bencherchali (Nextron Systems), memory-shards
references:
- https://twitter.com/lefterispan/status/1286259016436514816
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Agentexecutor/
- https://learn.microsoft.com/en-us/mem/intune/apps/intune-management-extension
- https://twitter.com/jseerden/status/1247985304667066373/photo/1
date: 2022-12-24
modified: 2024-08-07
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\AgentExecutor.exe'
  - OriginalFileName: 'AgentExecutor.exe'
  selection_cli:
        # Example:
        #   AgentExecutor.exe -powershell [scriptPath] [outputFilePath] [errorFilePath] [timeoutFilePath] [timeoutSeconds] [powershellPath] [enforceSignatureCheck] [runAs32BitOn64]
        # Note:
        #   - If [timeoutSeconds] is NULL then it defaults to 60000
        #   - If [enforceSignatureCheck] is:
        #       - "NULL" or "1" then a PowerShell instance is spawned with the args: "-NoProfile -executionPolicy allsigned -file "
        #       - Else a PowerShell instance is spawned with the args: "-NoProfile -executionPolicy bypass -file "
        #   - [powershellPath] is always concatendated to "powershell.exe"
    CommandLine|contains:
    - ' -powershell'         # Also covers the "-powershellDetection" flag
    - ' -remediationScript'
  filter_main_pwsh:
    CommandLine|contains:
    - 'C:\Windows\System32\WindowsPowerShell\v1.0\'
    - 'C:\Windows\SysWOW64\WindowsPowerShell\v1.0\'
  filter_main_intune:
    ParentImage|endswith: '\Microsoft.Management.Services.IntuneWindowsAgent.exe'
  condition: all of selection_* and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Suspicious AgentExecutor PowerShell Execution" Sigma rule is designed to detect potentially malicious activities involving the execution of the `AgentExecutor.exe` binary. This binary can often be misused as a Living Off The Land Binary (LOLBIN) for executing PowerShell scripts, notably with the ExecutionPolicy set to "Bypass". The rule monitors process creation events specifically looking for instances of `AgentExecutor.exe`, along with its command-line parameters, particularly those indicating that PowerShell is to be launched (e.g., `-powershell` or `-remediationScript`). It also checks the context of execution by excluding scenarios involving legitimate parent processes, such as `IntuneWindowsAgent.exe`.
  To achieve this, the rule utilizes data sources such as process creation logs from Windows Security, capturing critical attributes like the process image name and command-line arguments used during execution. By linking this detection to the MITRE ATT&CK framework, specifically under the category of defense evasion (T1218), analysts can identify attempts to misuse legitimate tools to run unauthorized scripts, potentially signaling malicious behavior.
  ### Investigation Steps
  - **Check Process Creation Logs:** Use your EDR tool to analyze the process creation logs for instances of the `AgentExecutor.exe`. Pay close attention to the command-line arguments used.
  - **Review Parent Processes:** Investigate the parent process of any suspicious executions. Ensure the execution does not stem from legitimate applications like `IntuneWindowsAgent.exe`.
  - **Inspect PowerShell Execution:** If relevant, continue by reviewing PowerShell logs for any script executions or commands run in conjunction with the detected `AgentExecutor.exe` processes.
  - **Correlate with Other Logs:** Cross-reference any suspicious activity with network logs, firewall logs, and proxy logs to see if any unusual connections correlate with the timeline of the alert.
  ### Prioritization
  This alert is prioritized as high severity due to the potential use of trusted binaries for executing unauthorized scripts, which can indicate an active threat actor attempting to bypass security controls and execute malicious payloads.
  ### Blind Spots and Assumptions
  This rule may not fire if the `AgentExecutor.exe` is executed from a non-standard path or with command-line arguments that do not trigger the specified conditions. Additionally, if attackers rename the executable or use alternative means to invoke PowerShell, the detection will fail. Situations leading to false positives are also a concern, such as legitimate administrative tooling that uses the same arguments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
