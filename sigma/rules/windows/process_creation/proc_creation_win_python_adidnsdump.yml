title: PUA - Adidnsdump Execution
id: 26d3f0a2-f514-4a3f-a8a7-e7e48a8d9160
status: test
description: |
  This tool enables enumeration and exporting of all DNS records in the zone for recon purposes of internal networks Python 3 and python.exe must be installed,
  Usee to Query/modify DNS records for Active Directory integrated DNS via LDAP
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md#atomic-test-9---remote-system-discovery---adidnsdump
author: frack113
date: 2022-01-01
modified: 2023-02-21
tags:
- attack.discovery
- attack.t1018
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\python.exe'
    CommandLine|contains: 'adidnsdump'
  condition: selection
falsepositives:
- Unknown
level: low
notes: |
  n
  ### Technical Context
  The Sigma rule titled "PUA 
  - Adidnsdump Execution" is designed to identify potentially unwanted applications (PUA) that leverage the `adidnsdump` tool, which can be utilized for reconnaissance purposes within Active Directory environments. The primary focus of this rule is to detect instances where the Python interpreter, specifically `python.exe`, is executed with the command line containing the string `adidnsdump`. This process can indicate that an attacker is trying to enumerate DNS records or modify them via LDAP, which can be a precursor to further malicious activities. The relevant technical data sources involved in this detection include Windows process creation logs, particularly looking for command-line parameters that feature specific calls to the Python interpreter. 
  The detection falls under the MITRE ATT&CK framework tactic of **Discovery**, specifically under the technique **T1018: Remote System Discovery**. This highlights its relevance to identifying unauthorized attempts to gather information about the internal network.
  ### Investigation Steps
  - **Check Process Logs:** Utilize your EDR tool to review process creation logs for instances of `python.exe` and specifically look for processes where the command line contains `adidnsdump`. 
  - **Correlate User Activity:** Investigate the accounts associated with the execution of the `adidnsdump` command to determine if the user has legitimate access or if the activity appears anomalous.
  - **Review DNS Records:** Query DNS logs from your domain controllers to inspect for any recent modifications or queries that match the timeframe of the detected activity associated with the `adidnsdump` execution.
  - **Analyze Network Traffic:** Consult your network detection and response (NDR) solutions to uncover any unusual DNS queries or outbound traffic that coincides with the timing of the process detection.
  ### Prioritization
  The severity level is marked as low because while the execution of `adidnsdump` can indicate reconnaissance activities, it may also be part of legitimate administrative tasks. However, it should still prompt further investigation due to the potential for misuse by an unauthorized actor.
  ### Blind spots and Assumptions
  This rule may not fire in environments where Python is uniformly deployed for legitimate purposes, as it could lead to false negatives during normal operations. Additionally, if command-line arguments are obfuscated or if the tool is executed from a different interpreter or script, detection may be bypassed. Furthermore, assumptions include that the necessary logging for process creation is enabled and configured correctly across all relevant endpoints.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
