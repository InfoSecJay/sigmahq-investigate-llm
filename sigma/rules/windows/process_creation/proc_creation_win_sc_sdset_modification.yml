title: Service Security Descriptor Tampering Via Sc.EXE
id: 98c5aeef-32d5-492f-b174-64a691896d25
related:
- id: 99cf1e02-00fb-4c0d-8375-563f978dfd37     # Deny Service Access
  type: similar
- id: a537cfc3-4297-4789-92b5-345bfd845ad0     # Specific Technique
  type: similar
status: test
description: Detection of sc.exe utility adding a new service with special permission
  which hides that service.
references:
- https://blog.talosintelligence.com/2021/10/threat-hunting-in-large-datasets-by.html
- https://www.sans.org/blog/red-team-tactics-hiding-windows-services/
- https://twitter.com/Alh4zr3d/status/1580925761996828672
- https://twitter.com/0gtweet/status/1628720819537936386
- https://itconnect.uw.edu/tools-services-support/it-systems-infrastructure/msinf/other-help/understanding-sddl-syntax/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-02-28
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.011
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\sc.exe'
  - OriginalFileName: 'sc.exe'
  selection_cli:
    CommandLine|contains: 'sdset'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Service Security Descriptor Tampering Via sc.EXE" focuses on detecting suspicious modifications to Windows service security descriptors using the `sc.exe` command-line utility, particularly when it is tasked with adding new services that could potentially be hidden from standard service listings. The rule looks for process creation events specifically involving `sc.exe`, especially when the command line includes the argument `sdset`, which is utilized to change the security descriptor of a service. This can be indicative of an adversary attempting to conceal malicious services, thereby facilitating persistence and evasion from detection.
  The primary technical data source for this detection is the process creation logs from Windows, including details about the executed image and its accompanying command-line parameters. The associated MITRE ATT&CK tactics involved include "Persistence" (T1547), "Defense Evasion" (T1027), and "Privilege Escalation" (T1068). Understanding this detection rule aids incident responders in identifying potentially malicious activities and the misuse of native Windows tools to modify service permissions stealthily.
  ### Investigation Steps
  - **Check Process Execution Details:** Inspect the EDR logs for the execution of `sc.exe`. Confirm the command line arguments used, especially for any unusual parameters like `sdset`, which might indicate an attempt to alter security descriptors.
  - **Examine Service Status:** Utilize the Windows Services tool or PowerShell commands (e.g., `Get-Service`) to verify the status and properties of all services. Look for any newly added services with atypical configurations or permissions that may not align with organizational standards.
  - **Review Security Logs:** Query the Windows Security Event Logs, particularly for event IDs associated with service creation or modifications (e.g., event ID 7045). This can provide additional context on whether any unauthorized changes have been made.
  - **Analyze Network Connections:** Inspect network logs and proxies for any unusual outbound traffic from the newly created or modified services. Unexpected network behavior could indicate that a malicious service is actively communicating with command-and-control infrastructure.
  ### Prioritization 
  When this alert is fired, it is of medium severity, as it may indicate an ongoing attempt to maintain persistence within the environment or manipulate services to avoid detection. This activity is crucial to address promptly to prevent potential escalation of attacks.
  ### Blind Spots and Assumptions
  This detection rule may not fire if `sc.exe` is executed with arguments that do not include `sdset`, which could mean that an attacker is using alternative methods, such as PowerShell, to achieve similar objectives. Additionally, if security auditing is improperly configured, the rule may not capture all service creation events. There may also exist scenarios where legitimate administrative activities trigger the rule, necessitating thorough investigation to avoid false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
