title: Suspicious PowerShell Invocations - Specific - ProcessCreation
id: 536e2947-3729-478c-9903-745aaffe60d2
related:
- id: fce5f582-cc00-41e1-941a-c6fabf0fdb8c
  type: obsolete
- id: ae7fbf8e-f3cb-49fd-8db4-5f3bed522c71
  type: similar
- id: 8ff28fdd-e2fa-4dfa-aeda-ef3d61c62090
  type: similar
status: test
description: Detects suspicious PowerShell invocation command parameters
references:
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-05
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_convert_b64:
    CommandLine|contains|all:
    - '-nop'
    - ' -w '
    - 'hidden'
    - ' -c '
    - '[Convert]::FromBase64String'
  selection_iex:
    CommandLine|contains|all:
    - ' -w '
    - 'hidden'
    - '-noni'
    - '-nop'
    - ' -c '
    - 'iex'
    - 'New-Object'
  selection_enc:
    CommandLine|contains|all:
    - ' -w '
    - 'hidden'
    - '-ep'
    - 'bypass'
    - '-Enc'
  selection_reg:
    CommandLine|contains|all:
    - 'powershell'
    - 'reg'
    - 'add'
    - '\software\'
  selection_webclient:
    CommandLine|contains|all:
    - 'bypass'
    - '-noprofile'
    - '-windowstyle'
    - 'hidden'
    - 'new-object'
    - 'system.net.webclient'
    - '.download'
  selection_iex_webclient:
    CommandLine|contains|all:
    - 'iex'
    - 'New-Object'
    - 'Net.WebClient'
    - '.Download'
  filter_chocolatey:
    CommandLine|contains:
    - "(New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1"
    - 'Write-ChocolateyWarning'
  condition: 1 of selection_* and not 1 of filter_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious PowerShell activities that may indicate an attempt to evade security controls or execute unauthorized scripts. It identifies specific command-line parameters frequently associated with suspicious PowerShell invocations, like the use of base64 encoding, 'hidden' window styles, and various bypass flags. The rule monitors the `process_creation` category within Windows environments, focusing on the textual patterns in command-line executions captured in the logs. It references the MITRE ATT&CK tactic of **Defense Evasion** (T1070 
  - Indicator Removal on Host). By capturing these patterns, security teams can identify potentially harmful behavior, preventing or mitigating compromises.
  ### Investigation Steps
  - **Check EDR Alerts:** Review EDR logs for the context of the PowerShell process, including parent-child process relationships and any related alerts indicating suspicious behavior.
  - **Analyze Windows Security Logs:** Investigate Windows Event Logs (Security) for event IDs related to PowerShell executions, especially authentication events preceding the detected invocation.
  - **Review Network Activity:** Utilize network detection tools to assess outbound connections made by the identified process, particularly to external or suspicious domains.
  - **Inspect System and Application Logs:** Examine logs for any unusual events or application-specific warnings that correspond with the time of the PowerShell execution, providing further context to the alert.
  ### Prioritization
  The severity level for this alert is medium because while suspicious PowerShell invocations can indicate malicious activity, they might also occur due to legitimate administrative tasks. However, due to the wide misuse of PowerShell for attack purposes, timely investigation is crucial.
  ### Blind Spots and Assumptions
  This rule may not trigger on PowerShell actions executed through alternate methods, such as scripts executed from non-standard shells or legitimate administrative tasks that do not exhibit the suspicious parameters identified. Moreover, command-line obfuscation techniques or direct native API calls might bypass this detection. Engineered tactics by adversaries could also involve customizing PowerShell commands to avoid triggering these specific patterns. Analysts should be aware that while the detection rule aims to capture nefarious intent, benign use cases may generate false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
