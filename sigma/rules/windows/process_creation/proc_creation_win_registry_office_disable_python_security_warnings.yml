title: Python Function Execution Security Warning Disabled In Excel
id: 023c654f-8f16-44d9-bb2b-00ff36a62af9
related:
- id: 17e53739-a1fc-4a62-b1b9-87711c2d5e44
  type: similar
status: test
description: |
  Detects changes to the registry value "PythonFunctionWarnings" that would prevent any warnings or alerts from showing when Python functions are about to be executed.
  Threat actors could run malicious code through the new Microsoft Excel feature that allows Python to run within the spreadsheet.
references:
- https://support.microsoft.com/en-us/office/data-security-and-python-in-excel-33cc88a4-4a87-485e-9ff9-f35958278327
author: '@Kostastsale'
date: 2023-08-22
tags:
- attack.defense-evasion
- attack.t1562.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - '\Microsoft\Office\'
    - '\Excel\Security'
    - 'PythonFunctionWarnings'
    CommandLine|contains: ' 0'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Python Function Execution Security Warning Disabled In Excel" aims to detect modifications made to the Windows registry specifically targeting the "PythonFunctionWarnings" value in Microsoft Excel. This rule highlights a potential security concern in modern Excel versions that allow the execution of Python scripts within spreadsheets. By disabling warnings or alerts related to these Python executions, threat actors can covertly run malicious code without notifying users of the risks involved. The key indicators include command-line parameters associated with Microsoft Office's Excel security settings, particularly those that set "PythonFunctionWarnings" to 0, thus quelling any associated warnings prior to execution. This aligns with the MITRE ATT&CK tactic of Defense Evasion, specifically technique T1562.001, which involves disabling security features to evade detection.
  ### Investigation Steps
  - **Review Registry Changes**: Use Windows Event Logs to inspect for any recent modifications to the registry key `HKEY_CURRENT_USER\Software\Microsoft\Office\<version>\Excel\Security\PythonFunctionWarnings` and determine the user responsible for the change.
  - **Analyze Excel Activity**: Leverage EDR tools to investigate any recent Excel processes, particularly those spawning Python scripts, to see if they align with the modified registry settings.
  - **Examine Process Creation Logs**: Check Windows Security logs for process creation events that coincide with the modification of the "PythonFunctionWarnings" registry key to monitor for any potentially unauthorized execution.
  - **Check Network Activity**: Utilize network detection tools to analyze outbound connections initiated by Excel when executing Python code, ensuring they adhere to expected patterns and do not communicate with suspect hosts.
  ### Prioritization
  This alert is classified as high severity due to the potential for attackers to exploit newly available functionalities in Excel to run malicious code, effectively bypassing built-in security warnings which could lead to data breaches or compromise of sensitive information.
  ### Blind Spots and Assumptions
  This detection rule may fail to capture legitimate changes made by users who are unaware of the ramifications of disabling such warnings. Additionally, it assumes that malicious actors will not employ alternate methods to disable warnings or obfuscate their activities, potentially leading to missed detections. Users and SOC analysts must remain vigilant for patterns of behavior that might indicate an attack, as this rule does not account for those scenarios where attackers leverage legitimate functionalities in unexpected ways.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
