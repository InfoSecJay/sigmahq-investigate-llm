title: Potential DLL Sideloading Via DeviceEnroller.EXE
id: e173ad47-4388-4012-ae62-bd13f71c18a8
related:
- id: ee4c5d06-3abc-48cc-8885-77f1c20f4451
  type: similar
status: test
description: |
  Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that does not exist. This non-existent DLL file is named "ShellChromeAPI.dll".
  Adversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter
references:
- https://mobile.twitter.com/0gtweet/status/1564131230941122561
- https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html
author: '@gott_cyber'
date: 2022-08-29
modified: 2023-02-04
tags:
- attack.defense-evasion
- attack.t1574.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\deviceenroller.exe'
  - OriginalFileName: 'deviceenroller.exe'
  selection_cli:
    CommandLine|contains: '/PhoneDeepLink'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential DLL sideloading attacks involving the Windows utility `DeviceEnroller.exe`. The rule specifically looks for instances where the `PhoneDeepLink` parameter is used within the command line of the process, coupled with the observation that an expected DLL named `ShellChromeAPI.dll` does not exist. Adversaries may exploit this by dropping a maliciously renamed DLL and executing it through `DeviceEnroller.exe`, which could be misused to bypass security controls. This detection relies primarily on process creation logs, particularly analyzing the command-line parameters used to initiate `DeviceEnroller.exe`, as well as confirming the presence or absence of the purported DLL.
  ### Investigation Steps
  - Check the EDR alerts for any process creation events related to `DeviceEnroller.exe`, and examine the full command line for the presence of the `/PhoneDeepLink` parameter.
  - Investigate file system logs to confirm whether `ShellChromeAPI.dll` exists on the system, and identify any recently created or modified DLL files that may warrant further examination.
  - Review the context in which the alert was triggered, including user and system behavior preceding the event, to establish potential malicious activity patterns.
  - Utilize your firewall and network traffic analysis tools to identify any unusual outbound connections made by the `DeviceEnroller.exe` process, which could indicate data exfiltration or command-and-control communications.
