title: Potential DLL Sideloading Via DeviceEnroller.EXE
id: e173ad47-4388-4012-ae62-bd13f71c18a8
related:
- id: ee4c5d06-3abc-48cc-8885-77f1c20f4451
  type: similar
status: test
description: |
  Detects the use of the PhoneDeepLink parameter to potentially sideload a DLL file that does not exist. This non-existent DLL file is named "ShellChromeAPI.dll".
  Adversaries can drop their own renamed DLL and execute it via DeviceEnroller.exe using this parameter
references:
- https://mobile.twitter.com/0gtweet/status/1564131230941122561
- https://strontic.github.io/xcyclopedia/library/DeviceEnroller.exe-24BEF0D6B0ECED36BB41831759FDE18D.html
author: '@gott_cyber'
date: 2022-08-29
modified: 2023-02-04
tags:
- attack.defense-evasion
- attack.t1574.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\deviceenroller.exe'
  - OriginalFileName: 'deviceenroller.exe'
  selection_cli:
    CommandLine|contains: '/PhoneDeepLink'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule targets a potential DLL sideloading technique employed by adversaries utilizing the `DeviceEnroller.exe` process in Windows environments. It specifically looks for instances where the command line parameters of `DeviceEnroller.exe` contain `/PhoneDeepLink`, suggesting an attempt to load a fictitious DLL named `ShellChromeAPI.dll`. By leveraging this parameter, attackers can drop a maliciously renamed DLL into the system and execute it, thereby evading detection mechanisms that focus on legitimate file operations or typical application behavior. This behavior aligns with the MITRE ATT&CK technique T1574.002 (DLL Side-Loading) under the defense evasion tactic. The rule relies on process creation logs as the primary data source, focusing particularly on process execution and command-line arguments.
  ### Investigation Steps
  - **Validate Process Execution**: Use EDR to verify the execution of `DeviceEnroller.exe` and confirm whether it was initiated with the suspect command line argument, `/PhoneDeepLink`.
  - **Check for Malicious DLL**: Conduct a search for `ShellChromeAPI.dll` across the system to determine if this file exists or was recently created, which may indicate lateral movement by an adversary.
  - **Monitor Related Network Activity**: Inspect network connection logs to identify any unusual outbound communications initiated by `DeviceEnroller.exe`, which could signify data exfiltration or C2 traffic.
  - **Review Security Logs**: Analyze Windows Security logs for any anomalies related to user accounts that executed `DeviceEnroller.exe`, especially focusing on unauthorized access or privilege escalation patterns.
  ### Prioritization
  The alert is categorized as medium severity because while the detection of potentially malicious DLL sideloading can indicate a sophisticated attack attempt, the existence of legitimate use cases for the `DeviceEnroller.exe` process necessitates a careful investigation to minimize unnecessary escalations.
  ### Blind Spots and Assumptions
  This rule may not trigger in scenarios where the DLL is already present and used in a benign context, or if the command line parameters are obfuscated or modified by the adversary. Additionally, the rule assumes that any instance of `DeviceEnroller.exe` will have the `PhoneDeepLink` parameter included; malicious actors might use alternative methods to evade detection. Furthermore, it is reliant on effective logging configured in the environment, as the absence of detailed process creation logs could result in missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
