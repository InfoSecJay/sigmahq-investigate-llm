title: Potential Suspicious Mofcomp Execution
id: 1dd05363-104e-4b4a-b963-196a534b03a1
status: test
description: |
  Detects execution of the "mofcomp" utility as a child of a suspicious shell or script running utility or by having a suspicious path in the commandline.
  The "mofcomp" utility parses a file containing MOF statements and adds the classes and class instances defined in the file to the WMI repository.
  Attackers abuse this utility to install malicious MOF scripts
references:
- https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/
- https://github.com/The-DFIR-Report/Sigma-Rules/blob/75260568a7ffe61b2458ca05f6f25914efb44337/win_mofcomp_execution.yml
- https://learn.microsoft.com/en-us/windows/win32/wmisdk/mofcomp
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-12
modified: 2023-04-11
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\mofcomp.exe'
  - OriginalFileName: 'mofcomp.exe'
  selection_case:
  - ParentImage|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\wsl.exe'
    - '\wscript.exe'
    - '\cscript.exe'
  - CommandLine|contains:
    - '\AppData\Local\Temp'
    - '\Users\Public\'
    - '\WINDOWS\Temp\'
    - '%temp%'
    - '%tmp%'
    - '%appdata%'
  filter_main_wmiprvse:
    ParentImage: 'C:\Windows\System32\wbem\WmiPrvSE.exe'
    CommandLine|contains: 'C:\Windows\TEMP\'
    CommandLine|endswith: '.mof'
  filter_optional_null_parent:
        # Sometimes the parent information isn't available from the Microsoft-Windows-Security-Auditing provider.
    CommandLine|contains: 'C:\Windows\TEMP\'
    CommandLine|endswith: '.mof'
  condition: all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "Potential Suspicious Mofcomp Execution" detection rule identifies the potential misuse of the "mofcomp" utility, which is commonly abused by attackers to execute malicious Management Object Format (MOF) scripts. This rule specifically looks for instances where "mofcomp.exe" is executed as a child process of known scripting utilities (e.g., cmd.exe, PowerShell) or with suspicious command line parameters involving paths such as AppData or Temp directories. The alert is aligned with the MITRE ATT&CK technique T1218 (Signed Binary Proxy Execution), which focuses on how legitimate binaries like "mofcomp" can be weaponized to conduct malicious activities under the guise of normal operations. By monitoring Windows process creation logs, this rule can catch potentially harmful operations before they can affect the organization's systems.
  ### Investigation Steps
  - **Check Process Details:** Examine the "mofcomp.exe" process in your EDR solution for details such as command-line parameters, associated parent processes, and any immediate network activities or file changes that followed the execution.
  - **Review Logs for Scripting Utilities:** Investigate logs from tools like PowerShell or cmd to identify any suspicious commands or scripts that might have triggered the "mofcomp" execution. Focus on unusual scripts or commands run prior to the alert.
  - **Analyze WMI Repository Changes:** Use WMI monitoring tools or queries to review any recent modifications to the WMI repository to determine if unauthorized classes or properties have been added, indicating possible malicious activity.
  - **Assess Endpoint Security Logs:** Correlate alerts with AV and endpoint security logs to check for any known threats or patterns commonly associated with the misuse of genuine system utilities like mofcomp.exe.
  ### Prioritization
  This alert is categorized with a high severity level, as the execution of "mofcomp" in a suspicious context could indicate an ongoing or planned attack that leverages Windows Management Instrumentation (WMI) for unauthorized actions, posing a significant risk to enterprise systems.
  ### Blind spots and Assumptions
  One potential blind spot of this rule is that it may not trigger if the parent process information is not available, leading to missed detections. Furthermore, if attackers rename or obfuscate the “mofcomp.exe” process or utilize legitimate scripts without suspicious parameters, the rule may fail to fire. It is essential for security teams to consider these aspects and regularly assess the configuration of logging and monitoring to ensure comprehensive visibility.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
