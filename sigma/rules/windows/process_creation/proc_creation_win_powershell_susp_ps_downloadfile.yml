title: PowerShell DownloadFile
id: 8f70ac5f-1f6f-4f8e-b454-db19561216c5
status: test
description: Detects the execution of powershell, a WebClient object creation and
  the invocation of DownloadFile in a single command line
references:
- https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html
author: Florian Roth (Nextron Systems)
date: 2020-08-28
modified: 2021-11-27
tags:
- attack.execution
- attack.t1059.001
- attack.command-and-control
- attack.t1104
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - 'powershell'
    - '.DownloadFile'
    - 'System.Net.WebClient'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "PowerShell DownloadFile" is designed to detect suspicious PowerShell command executions that involve the WebClient object and the DownloadFile method. This rule looks for process creation events where the command line includes specific strings indicative of potentially malicious activity, namely "powershell", ".DownloadFile", and "System.Net.WebClient". The presence of these strings suggests an intent to download files from the internet, commonly leveraged by threat actors to retrieve malware or data exfiltration tools. The primary data sources involved in this detection are Windows Security event logs, particularly focusing on process creation logs facilitated by Sysmon. 
  This detection aligns with the MITRE ATT&CK tactics on Execution (Tactics: Execution) and specifically identifies techniques such as Command and Control (T1059.001) and other related techniques (T1104 and T1105). This helps incident responders understand the potential context of a detected alert, given the likelihood of malicious intents associated with this type of usage.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check the Sysmon process creation logs for the suspicious PowerShell command and analyze the time of occurrence and the user context in which it executed.
  - **Inspect Network Activity:** Use EDR and NDR tools to trace any outbound connections that were initiated post the command execution to identify if any potentially harmful downloads took place.
  - **Evaluate File Creation Events:** Look for file creation logs on the disk to determine if any files were downloaded as a result of the PowerShell command and assess their nature and intent.
  - **Conduct Threat Intelligence Lookup:** Utilize threat intelligence resources or signature-based AV tools to evaluate if the files involved in this alert are known malicious artifacts as part of the remote file download.
  ### Prioritization
  This alert is categorized as high severity due to the potential risk associated with the direct downloading of files from the internet, which could lead to the introduction of malware into the environment or compromise sensitive data. Quick response actions are vital to mitigating the associated risks linked to this type of command execution.
  ### Blind Spots and Assumptions
  This rule may not fire if the PowerShell command is obfuscated or if the command is executed through legitimate user-initiated actions that lack the defined keywords. Additionally, if PowerShell is executed with parameters that do not expose the malicious action in its command line, the detection may fail. It's assumed that defenders keep close vigilance on PowerShell usage; however, valid administrative processes might lead to false negatives if benign scripts are not adequately monitored.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
