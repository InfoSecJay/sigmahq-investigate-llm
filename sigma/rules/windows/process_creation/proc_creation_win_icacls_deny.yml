title: Use Icacls to Hide File to Everyone
id: 4ae81040-fc1c-4249-bfa3-938d260214d9
status: test
description: Detect use of icacls to deny access for everyone in Users folder sometimes
  used to hide malicious files
references:
- https://app.any.run/tasks/1df999e6-1cb8-45e3-8b61-499d1b7d5a9b/
author: frack113
date: 2022-07-18
modified: 2024-04-29
tags:
- attack.defense-evasion
- attack.t1564.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_icacls:
  - OriginalFileName: 'iCACLS.EXE'
  - Image|endswith: '\icacls.exe'
  selection_cmd:   # icacls "C:\Users\admin\AppData\Local\37f92fe8-bcf0-4ee0-b8ba-561f797f5696" /deny *S-1-1-0:(OI)(CI)(DE,DC)
    CommandLine|contains|all:
    - '/deny'
    - '*S-1-1-0:'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the use of the `icacls.exe` command-line utility to modify file permissions in a manner that denies access to all users, which may indicate an attempt to conceal malicious files. Specifically, it looks for instances where the command includes the `/deny` option applied to the security identifier `*S-1-1-0`, which represents "Everyone." This behavior can be associated with attackers attempting to evade detection by hiding their malicious payloads in common directories. The primary data source for this detection is Windows process creation logs, which provide insights into executed commands, including their original filenames and command-line parameters.
  In terms of MITRE ATT&CK frameworks, this behavior aligns with the tactic of "Defense Evasion" and specifically the technique "Hide Artifacts" (T1564.001). By monitoring for the specific parameters used in conjunction with `icacls.exe`, security teams can be alerted to potentially suspicious activities indicating a larger compromise.
  ### Investigation Steps
  - **Review Process Creation Logs:** Use EDR tools to review process creation logs to identify instances of `icacls.exe` execution, paying close attention to the command line parameters associated with the process.
  - **Correlate with User Activity:** Investigate the user account that executed the command by checking user activity logs via Windows Security event logs to understand the context and assess if the action was legitimate.
  - **Examine File Permissions:** Use Sysinternals tools or built-in Windows utilities to examine the permissions of the file that was modified to confirm whether access has indeed been denied to all users.
  - **Check for Additional Malicious Indicators:** Query for any other related activities or anomalies around the same time, such as network connections or unusual process behavior that might indicate broader malicious activity.
  ### Prioritization
  This alert is given a medium severity level because the use of `icacls` to deny access for all users can indicate attempts to hide malicious activities. However, it is essential to consider the context of the usage, as legitimate system administration activities might also invoke similar command patterns.
  ### Blind Spots and Assumptions
  One potential blind spot for this rule is the possibility that attackers might use alternative methods or tools for hiding files, which would not be captured by monitoring `icacls.exe`. Additionally, if an attacker has elevated privileges, they might execute this operation without triggering typical alerting mechanisms. It is also assumed that systems are adequately logging command-line activities; environments with disabled or misconfigured logging might not trigger this detection accurately. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
