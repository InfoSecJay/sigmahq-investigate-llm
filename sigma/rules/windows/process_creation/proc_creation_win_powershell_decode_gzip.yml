title: Gzip Archive Decode Via PowerShell
id: 98767d61-b2e8-4d71-b661-e36783ee24c1
status: test
description: Detects attempts of decoding encoded Gzip archives via PowerShell.
references:
- https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution
author: Hieu Tran
date: 2023-03-13
tags:
- attack.command-and-control
- attack.t1132.001
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    CommandLine|contains|all:
    - 'GZipStream'
    - '::Decompress'
  condition: selection
falsepositives:
- Legitimate administrative scripts may use this functionality. Use "ParentImage"
  in combination with the script names and allowed users and applications to filter
  legitimate executions
level: medium
notes: |
  ### Technical Context
  The rule titled "Gzip Archive Decode Via PowerShell" aims to detect malicious activities that involve decoding encoded Gzip archives through PowerShell execution. It specifically monitors for instances where the command line of a process creation event contains both 'GZipStream' and '::Decompress.' This dual condition indicates that the process is likely leveraging PowerShell to decode potentially malicious Gzip files, which could be a part of a payload delivery mechanism typically used in command and control (C2) scenarios. The primary data source for this detection is Windows Process Creation logs, which capture all newly initiated processes, including the command-line parameters used during their creation. This rule aligns with the MITRE ATT&CK technique T1132.001 (Application Layer Protocol: Gzip), which describes how malicious actors may use application protocols to obscure their activities.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the Windows Event Logs for process creation events with command lines containing 'GZipStream' and '::Decompress' to identify the specific user and context of the execution.
    
  - **Analyze Parent Processes:** Investigate the parent process of any identified instances to determine if there are any legitimate administrative scripts or tools that may be invoking this command, taking note of the user or service account responsible.
  - **Monitor Network Activities:** Utilize EDR and NDR tools to assess any concurrent network activities that may indicate command and control communication, especially if the identified process has established outbound connections.
  - **Review Related Artifacts:** Examine file system activity to find any Gzip files that may have been decoded by the process, as well as check for new or modified files in commonly used temporary directories that malware might utilize.
  ### Prioritization
  This alert is given a medium severity level because while the decoding of Gzip archives can be legitimate, its frequent use or occurrence in unusual contexts may indicate an attempt to execute further malicious payloads, warranting immediate investigation.
  ### Blind Spots and Assumptions
  A key assumption is that the logging levels are adequate to capture all relevant process creation activities; if not configured correctly, legitimate or suspicious actions may not be logged. Additionally, this rule may fail to fire if an adversary uses obfuscated command line options or if the Gzip decoding is carried out by a legitimate process not captured by this specific rule. Furthermore, the presence of legitimate administrative scripts that use similar functionality could lead to false positives, hence requiring careful filtering and contextual analysis.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
