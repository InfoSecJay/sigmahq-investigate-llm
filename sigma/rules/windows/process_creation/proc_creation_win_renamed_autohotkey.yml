title: Renamed AutoHotkey.EXE Execution
id: 0f16d9cf-0616-45c8-8fad-becc11b5a41c
status: test
description: Detects execution of a renamed autohotkey.exe binary based on PE metadata
  fields
references:
- https://www.autohotkey.com/download/
- https://thedfirreport.com/2023/02/06/collect-exfiltrate-sleep-repeat/
author: Nasreddine Bencherchali
date: 2023-02-07
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Product|contains: 'AutoHotkey'
  - Description|contains: 'AutoHotkey'
  - OriginalFileName:
    - 'AutoHotkey.exe'
    - 'AutoHotkey.rc'
  filter:
  - Image|endswith:
    - '\AutoHotkey.exe'
    - '\AutoHotkey32.exe'
    - '\AutoHotkey32_UIA.exe'
    - '\AutoHotkey64.exe'
    - '\AutoHotkey64_UIA.exe'
    - '\AutoHotkeyA32.exe'
    - '\AutoHotkeyA32_UIA.exe'
    - '\AutoHotkeyU32.exe'
    - '\AutoHotkeyU32_UIA.exe'
    - '\AutoHotkeyU64.exe'
    - '\AutoHotkeyU64_UIA.exe'
  - Image|contains: '\AutoHotkey'
  condition: selection and not filter
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of renamed AutoHotkey executables by monitoring process creation events in Windows environments. AutoHotkey is a popular scripting language for automating repetitive tasks, but it is often abused by attackers to deploy malicious scripts in a stealthy manner. The detection logic focuses on key attributes typically associated with AutoHotkey processes, specifically checking for instances where the executable's metadata, such as the product name or the original file name, contains "AutoHotkey." It also assesses whether the image paths of the executed binaries match a predefined set of known AutoHotkey executables, ensuring that renamed or custom versions are highlighted.
  This detection falls under the MITRE ATT&CK tactic of **Defense Evasion** (T1203), where malicious actors seek ways to obfuscate their activities to evade traditional security mechanisms. By identifying renamed AutoHotkey binaries, security operations centers (SOCs) can respond to potential threats that may otherwise blend into the normal operational noise.
  ### Investigation Steps
  - **Examine Process Creation Logs**: Utilize your EDR solution to filter for process creation logs that correspond to the AutoHotkey binaries identified by the rule. Review command-line parameters and parent processes for unusual execution patterns.
  - **Review User Activity**: Check the user account associated with the AutoHotkey execution to evaluate whether it aligns with expected behavior. Investigate if this user has a history of running automation scripts or if this activity seems out of character.
  - **Analyze Network Activity**: Investigate network connections using NDR tools to determine if the AutoHotkey process was involved in any unusual outbound connections. Pay close attention to any suspicious data exfiltration patterns.
  - **Correlate with Other Security Alerts**: Cross-reference this alert with logs from other security tools such as AV and NGFW to identify any other related threats or behaviors. Look for indicators that could suggest a coordinated attack or additional compromised systems.
  ### Prioritization
  This alert is classified as medium severity due to the potential for abuse of AutoHotkey binaries in executing malicious scripts, which could lead to unauthorized data access or system compromise. It is crucial for incident responders to evaluate the context of the execution to assess the complete threat landscape.
  ### Blind Spots and Assumptions
  One assumption is that the rule solely relies on the naming conventions and metadata of AutoHotkey executables. Attackers may rename binaries or compile their scripts into other formats, potentially bypassing this detection. Furthermore, there's a possibility of legitimate use cases for AutoHotkey in the organization, which may generate false positives requiring further investigation. Additionally, if logs are not collected from all endpoints or if there are variations in how the application is deployed, the rule may not fire in those instances.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
