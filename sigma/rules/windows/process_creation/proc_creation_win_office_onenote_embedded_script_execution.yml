title: OneNote.EXE Execution of Malicious Embedded Scripts
id: 84b1706c-932a-44c4-ae28-892b28a25b94
status: test
description: |
  Detects the execution of malicious OneNote documents that contain embedded scripts.
  When a user clicks on a OneNote attachment and then on the malicious link inside the ".one" file, it exports and executes the malicious embedded script from specific directories.
references:
- https://bazaar.abuse.ch/browse/tag/one/
author: '@kostastsale'
date: 2023-02-02
tags:
- attack.defense-evasion
- attack.t1218.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\onenote.exe'
    Image|endswith:
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\wscript.exe'
    CommandLine|contains:
    - '\exported\'
    - '\onenoteofflinecache_files\'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying the execution of malicious scripts that may be embedded within OneNote documents. When a user interacts with a OneNote file, malicious links within the document can cause the OneNote application (OneNote.EXE) to export and execute a script, potentially using various scripting engines such as `cmd.exe`, `powershell.exe`, `cscript.exe`, and others to perform harmful actions. The rule is primarily concerned with monitoring the command-line parameters of processes initiated by OneNote, specifically looking for signs that the exported scripts are being run from unusual directories. This behavior is categorized within the MITRE ATT&CK framework as **T1218.001 
  - Signed Binary Proxy Execution** under the **Defense Evasion** tactic, indicating that attackers may attempt to use trusted applications for malicious purposes to evade detection.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR for instances of `OneNote.EXE` initiating processes like `cmd.exe`, `powershell.exe`, and others flagged in the rule to confirm legitimate versus anomalous execution.
    
  - **Analyze Command-Line Parameters:** Inspect the command line arguments associated with the flagged processes to look for abnormal paths or commands that include `\exported\` or `\onenoteofflinecache_files\`, which could indicate malicious intent.
  - **Correlate with User Activity:** Review user activity logs or ticketing systems to determine if the execution aligns with user behavior. Look for any recent OneNote document downloads or suspicious user actions.
  - **Monitor Network Activity:** Check for network connections initiated by these processes to identify any communication with known malicious IPs or domains, potentially indicating a data exfiltration attempt.
  ### Prioritization
  The alert generated by this rule is classified as high severity due to the potential for data compromise and system infiltration through the execution of embedded malicious scripts, which can lead to unauthorized access or control over corporate systems.
  ### Blind Spots and Assumptions
  There are inherent limitations in detecting this type of behavior, such as possible evasion techniques employed by attackers to alter the command-line parameters or executing scripts under different, less suspicious file paths. Additionally, the rule may not fire in environments where OneNote is not heavily utilized, or if the user has administrative privileges allowing them to suppress alerts around specific processes. Furthermore, legitimate software applications running scripts may accidentally trigger the rule, leading to false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and completeness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
