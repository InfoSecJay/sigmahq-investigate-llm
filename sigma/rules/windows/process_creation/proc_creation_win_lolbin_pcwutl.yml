title: Code Execution via Pcwutl.dll
id: 9386d78a-7207-4048-9c9f-a93a7c2d1c05
status: test
description: Detects launch of executable by calling the LaunchApplication function
  from pcwutl.dll library.
references:
- https://lolbas-project.github.io/lolbas/Libraries/Pcwutl/
- https://twitter.com/harr0ey/status/989617817849876488
author: Julia Fomina, oscd.community
date: 2020-10-05
modified: 2023-02-09
tags:
- attack.defense-evasion
- attack.t1218.011
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\rundll32.exe'
  - OriginalFileName: 'RUNDLL32.EXE'
  selection_cli:
    CommandLine|contains|all:
    - 'pcwutl'
    - 'LaunchApplication'
  condition: all of selection_*
falsepositives:
- Use of Program Compatibility Troubleshooter Helper
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect potential code execution via the `pcwutl.dll` library, specifically by identifying instances where `rundll32.exe` is utilized to call the `LaunchApplication` function. The detection is primarily based on process creation logs, particularly monitoring command line parameters and the image executed. In this scenario, `rundll32.exe` serves as a legitimate method to invoke functions from DLLs, which is sometimes exploited by adversaries for malicious activity. The MITRE ATT&CK framework identifies this technique under the "Defense Evasion" tactic and specifically as technique T1218.011.
  Investigations using this rule will focus on the command line used alongside `rundll32.exe`, particularly looking for references to `pcwutl` in the command line arguments, which could indicate unauthorized use of the helper library to launch executables en masse. 
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine Windows Security logs for `rundll32.exe` process creation events and filter for those containing the command line parameters referencing `pcwutl` and `LaunchApplication`.
    
  - **Correlate with EDR Data:** Utilize EDR tools to assess the context of the execution, ensuring that you check for any parent process and associated behaviors that may indicate malicious intent.
  - **Check for Similar Alerts:** Investigate if similar alerts have arisen within a short time frame, which may indicate a possible coordinated attack or recurring threat actor behavior.
  - **Analyze Network Activity:** Investigate associated network connections and communications for any unusual or unauthorized outbound connections linked to the process.
  ### Prioritization
  The alert is classified as medium severity due to the use of a known system utility, `rundll32.exe`, which can be exploited by adversaries for malicious code execution. The context of its use, especially referencing `pcwutl.dll`, increases suspicion and warrants further investigation.
  ### Blind Spots and Assumptions
  This rule assumes that the process will not operate under legitimate circumstances or has not been white-listed within the environment, which could lead to false negatives. The detection methodology may also fail in highly customized environments where standard logging practices are not in place, or if the adversary utilizes different techniques or legitimate user interactions to execute their payload without triggering this specific rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
