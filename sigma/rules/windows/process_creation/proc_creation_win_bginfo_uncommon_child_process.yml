title: Uncommon Child Process Of BgInfo.EXE
id: aaf46cdc-934e-4284-b329-34aa701e3771
related:
- id: 811f459f-9231-45d4-959a-0266c6311987
  type: similar
status: test
description: Detects uncommon child processes of "BgInfo.exe" which could be a sign
  of potential abuse of the binary to proxy execution via external VBScript
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Bginfo/
- https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/
author: Nasreddine Bencherchali (Nextron Systems), Beyu Denis, oscd.community
date: 2019-10-26
modified: 2023-08-16
tags:
- attack.execution
- attack.t1059.005
- attack.defense-evasion
- attack.t1218
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith:
    - '\bginfo.exe'
    - '\bginfo64.exe'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule aims to identify potentially malicious activity by monitoring process creation logs for uncommon child processes initiated by "BgInfo.exe" or "BgInfo64.exe". The rule targets instances where these legitimate tools may be exploited to execute arbitrary code, often through external scripts such as VBScript. By examining process creation events, the rule gathers data from the system's process hierarchy to identify unusual child processes that could indicate an abuse of these binaries for executing unauthorized commands, thereby facilitating a potential stealthy execution path that evades traditional detection methods. 
  Key data sources used for detection include process creation logs that capture critical details such as the executable path, process command-line parameters, and parent-child relationships, which are essential for analyzing the legitimacy of process behavior in a Windows environment.
  ### Investigation Steps
  - Use EDR tools to analyze the process tree related to the "BgInfo.exe" parent process to identify any suspicious child processes that have been spawned.
  - Review command-line arguments associated with the detected child processes for any unexpected flags or parameters that may indicate malicious behavior.
  - Query historical process creation logs to determine if similar execution patterns have occurred previously, which can help identify recurring threats or potential false positives.
  - Check network logs for any unusual outbound connections initiated by the child processes, which may signify data exfiltration or command-and-control communications.
