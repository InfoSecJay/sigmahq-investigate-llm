title: PowerShell Set-Acl On Windows Folder
id: 0944e002-e3f6-4eb5-bf69-3a3067b53d73 # ProcCreation Susp
related:
- id: cae80281-ef23-44c5-873b-fd48d2666f49     # PsScript Low
  type: derived
- id: bdeb2cff-af74-4094-8426-724dc937f20a     # ProcCreation Low
  type: derived
- id: 3bf1d859-3a7e-44cb-8809-a99e066d3478     # PsScript High
  type: derived
status: test
description: Detects PowerShell scripts to set the ACL to a file in the Windows folder
references:
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1
- https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-18
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  selection_cmdlet:
    CommandLine|contains|all:
    - 'Set-Acl '
    - '-AclObject '
  selection_paths:
        # Note: Add more suspicious paths
    CommandLine|contains:
    - '-Path "C:\Windows'
    - "-Path 'C:\\Windows"
    - '-Path %windir%'
    - '-Path $env:windir'
  selection_permissions:
        # Note: Add more suspicious permissions
    CommandLine|contains:
    - 'FullControl'
    - 'Allow'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is implemented to identify the use of the PowerShell cmdlet `Set-Acl`, which is a command used to modify access control lists (ACLs) of files or folders within the Windows environment. The rule specifically targets scenarios where ACL modifications are applied to sensitive locations such as the Windows folder, which can indicate potential malicious intent, such as privilege escalation or the attempt to give unauthorized access to certain files. The rule leverages process creation telemetry, examining the command lines associated with instances of PowerShell executable (`PowerShell.EXE` or `pwsh.exe`) to find instances where `Set-Acl` is applied to paths within the Windows directory with permissions indicating elevated access, such as `FullControl`. 
  The technique corresponds to the MITRE ATT&CK tactic of **Defense Evasion**, specifically within the technique **T1505.005 
  - Set-Acl on Windows Folder**. This evasion method, typically used by attackers to manipulate file permissions to evade detection or maintain persistence, is a crucial focus of this rule.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the process creation logs within the EDR for any instances of PowerShell executing with the `Set-Acl` cmdlet along with the relevant command-line arguments.
  - **Correlate with Other Event Logs:** Cross-reference such PowerShell events with Windows Security Event Logs to identify any other potentially suspicious activities occurring simultaneously, such as privilege escalations or account modifications.
  - **Check ACL Modifications:** Investigate the specific folders referenced in the command line (e.g., `C:\Windows`) to verify any recent changes made to their ACLs and assess if any unauthorized permissions were granted.
  - **Analyze Historical Activity:** Review historical trends regarding PowerShell executions in the environment to identify any similar patterns or repeated attempts that could indicate an ongoing adversary operation.
  ### Prioritization
  The alert generated by this rule is categorized as high severity due to its potential association with malicious intent related to privilege escalation or manipulation of directory access controls in critical system directories such as Windows, which could pose a significant threat to enterprise security.
  ### Blind Spots and Assumptions
  This rule may not fire if `Set-Acl` is executed via other non-PowerShell methods or if the attacker uses alternate techniques to modify ACLs that do not involve PowerShell directly. Additionally, legitimate administrative tasks that include the use of `Set-Acl` may lead to false positives, especially in environments where PowerShell is routinely used for system management. It is assumed that the command lines include specific suspicious paths and parameters; if an attacker utilizes obfuscation or alternative wording, the rule may fail to trigger.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
