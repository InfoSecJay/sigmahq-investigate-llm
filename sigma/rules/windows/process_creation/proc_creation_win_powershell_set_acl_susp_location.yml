title: PowerShell Set-Acl On Windows Folder
id: 0944e002-e3f6-4eb5-bf69-3a3067b53d73 # ProcCreation Susp
related:
- id: cae80281-ef23-44c5-873b-fd48d2666f49     # PsScript Low
  type: derived
- id: bdeb2cff-af74-4094-8426-724dc937f20a     # ProcCreation Low
  type: derived
- id: 3bf1d859-3a7e-44cb-8809-a99e066d3478     # PsScript High
  type: derived
status: test
description: Detects PowerShell scripts to set the ACL to a file in the Windows folder
references:
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1
- https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-18
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  selection_cmdlet:
    CommandLine|contains|all:
    - 'Set-Acl '
    - '-AclObject '
  selection_paths:
        # Note: Add more suspicious paths
    CommandLine|contains:
    - '-Path "C:\Windows'
    - "-Path 'C:\\Windows"
    - '-Path %windir%'
    - '-Path $env:windir'
  selection_permissions:
        # Note: Add more suspicious permissions
    CommandLine|contains:
    - 'FullControl'
    - 'Allow'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious use of PowerShell to modify Access Control Lists (ACLs) on files within the Windows folder. The detection mechanism revolves around monitoring process creation events, specifically focusing on instances where PowerShell (`powershell.exe` or `pwsh.exe`) is executed with the `Set-Acl` command. The rule looks for specific command-line parameters that indicate an attempt to adjust file permissions, particularly within the Windows directory, which is a common target for attackers seeking to hide malicious activity. By examining the command-line arguments for specific terms like `-Path`, `-AclObject`, and permission levels such as `FullControl` or `Allow`, the rule can identify potentially unauthorized modifications to file access controls.
  ### Investigation Steps
  - Examine the EDR logs for the related PowerShell process creation events, noting the timestamp and user context to determine if the activity aligns with normal user behavior. 
  - Review the command-line arguments used during the PowerShell execution to identify the target files and modifications being attempted, focusing specifically on any changes to files in the Windows folder.
  - Utilize file integrity monitoring tools to check for recent changes made to the ACLs of sensitive files and identify the specific permissions that were altered.
  - Analyze network traffic logs for any unusual outbound connections that occurred during or shortly after the execution of the detected PowerShell commands to reveal possible data exfiltration or communication with command-and-control (C2) servers.
