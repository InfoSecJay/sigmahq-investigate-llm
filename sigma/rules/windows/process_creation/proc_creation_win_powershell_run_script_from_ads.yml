title: Run PowerShell Script from ADS
id: 45a594aa-1fbd-4972-a809-ff5a99dd81b8
status: test
description: Detects PowerShell script execution from Alternate Data Stream (ADS)
references:
- https://github.com/p0shkatz/Get-ADS/blob/1c3a3562e713c254edce1995a7d9879c687c7473/Get-ADS.ps1
author: Sergey Soldatov, Kaspersky Lab, oscd.community
date: 2019-10-30
modified: 2022-07-14
tags:
- attack.defense-evasion
- attack.t1564.004
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    CommandLine|contains|all:
    - 'Get-Content'
    - '-Stream'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify the execution of PowerShell scripts that are run from an Alternate Data Stream (ADS). ADS can be used by attackers to conceal malicious scripts within legitimate files, thus evading traditional detection methods. The rule specifically focuses on monitoring PowerShell (both `powershell.exe` and `pwsh.exe`) process creations, checking for command lines that execute the `Get-Content` command with the `-Stream` option, indicative of utilizing ADS to pull in and execute a script. The rule leverages data from process creation logs within the Windows operating system, capturing key attributes involving execution paths, parent processes, and command-line parameters. It correlates with the MITRE ATT&CK technique for defense evasion (T1564.004).
  ### Investigation Steps
  - **Verify Process Details:** Use your EDR to check the process tree for any instances of `powershell.exe` or `pwsh.exe` associated with the detected event, focusing on their parents and children to understand the context of execution.
  - **Review Command-Line Arguments:** Investigate the command-line arguments utilized during the execution. Look specifically for the use of `Get-Content -Stream`, which can indicate potential abuse of ADS for script execution.
  - **Cross-Check Alternate Data Streams:** Utilize tools or scripts (like the one mentioned in the reference) to enumerate and analyze any ADS associated with the files being referenced in the PowerShell command. This may uncover hidden scripts or malicious content.
  - **Assess Related Network Activity:** Check firewall and network logs to see if there was any external communication associated with this PowerShell execution. This can help in determining if the execution is part of a broader attack or co-opting of command-and-control behavior.
  ### Prioritization
  Alerts generated by this rule are assigned a high severity level as executing PowerShell scripts from Alternate Data Streams is a notable technique that adversaries use for evading detection mechanisms, thereby presenting a significant risk to the organizationâ€™s security posture.
  ### Blind Spots and Assumptions
  This rule may not detect instances where PowerShell is obfuscated or where alternate techniques are used to execute scripts without invoking the standard command arguments (e.g., using other means to access or execute the ADS). Additionally, if an attacker manages to delete or hide the ADS before detection, this rule could also fail to trigger. A critical assumption is that all PowerShell executions utilize the targeted command syntax; any variations or legitimate uses of ADS that do not meet the specified criteria might lead to false negatives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
