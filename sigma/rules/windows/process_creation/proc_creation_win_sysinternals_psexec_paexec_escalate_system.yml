title: PsExec/PAExec Escalation to LOCAL SYSTEM
id: 8834e2f7-6b4b-4f09-8906-d2276470ee23
related:
- id: 207b0396-3689-42d9-8399-4222658efc99     # Generic rule based on similar cli flags
  type: similar
status: test
description: Detects suspicious commandline flags used by PsExec and PAExec to escalate
  a command line to LOCAL_SYSTEM rights
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/psexec
- https://www.poweradmin.com/paexec/
- https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2021-11-23
modified: 2024-03-05
tags:
- attack.resource-development
- attack.t1587.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_sys:   # Escalation to LOCAL_SYSTEM
    CommandLine|contains|windash:
            # Note that you don't need to add the ".exe" part when using psexec/paexec
            # The "-" can also be replaced with "/"
            # The order of args isn't important
            # "cmd" can be replaced by "powershell", "pwsh" or any other console like software
    - ' -s cmd'
    - ' -s -i cmd'
    - ' -i -s cmd'
            # Pwsh (For PowerShell 7)
    - ' -s pwsh'
    - ' -s -i pwsh'
    - ' -i -s pwsh'
            # PowerShell (For PowerShell 5)
    - ' -s powershell'
    - ' -s -i powershell'
    - ' -i -s powershell'
  selection_other:
    CommandLine|contains:
    - 'psexec'
    - 'paexec'
    - 'accepteula'
  condition: all of selection_*
falsepositives:
- Admins that use PsExec or PAExec to escalate to the SYSTEM account for maintenance
  purposes (rare)
- Users that debug Microsoft Intune issues using the commands mentioned in the official
  documentation; see https://learn.microsoft.com/en-us/mem/intune/apps/intune-management-extension
level: high
notes: |
  n
  ### Technical Context
  This detection rule identifies possible misuse of PsExec or PAExec tools, which are commonly employed to execute processes with elevated privileges, by specifically investigating the command line used when these applications are invoked. It focuses on command line arguments that signify an attempt to escalate privileges to the LOCAL_SYSTEM account using flags such as `-s` for system access paired with command invocations like `cmd` or `powershell`. The rule taps into process creation logs, allowing detection of suspicious command lines that may indicate unauthorized attempts to gain administrative access. The detection aligns with the MITRE ATT&CK technique T1587.001 (Development of Resources), highlighting potential exploitation of these tools in a threat scenario.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the logs in the EDR or Sysmon for recent instances of PsExec or PAExec being executed, paying particular attention to the command line arguments used for invocation.
  - **Assess Context of Execution:** Cross-reference the times of detection with scheduled tasks, maintenance activities, or user activity logs to determine if the command was executed as part of legitimate administrative work.
  - **Analyze User Permissions:** Verify the user account running the detected process for potential misconfigurations or unauthorized access rights that could lead to exploitation.
  - **Inspect Additional Logs:** Check Windows Security and System logs for associated events that correlate with the use of these tools, looking for indicators such as logon events that align with process creation timestamps.
  ### Prioritization
  The high alert severity is justified in an enterprise setting because unauthorized escalation to the LOCAL_SYSTEM account poses a significant risk, as it can facilitate deeper access into the system and potentially lead to extensive lateral movement and privilege escalation.
  ### Blind Spots and Assumptions
  This rule may not trigger in scenarios where PsExec or PAExec is utilized legitimately by system administrators for maintenance tasks, especially if such activities are infrequent. Additionally, environments with strict network segmentation may see reduced misuse of these tools due to limited access paths. The assumption that proper logging is enabled and any tampering of process creation logs is absent is critical; if logs are not properly maintained, detection may fail.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
