title: Suspicious Advpack Call Via Rundll32.EXE
id: a1473adb-5338-4a20-b4c3-126763e2d3d3
status: test
description: Detects execution of "rundll32" calling "advpack.dll" with potential
  obfuscated ordinal calls in order to leverage the "RegisterOCX" function
references:
- https://twitter.com/Hexacorn/status/1224848930795552769
- http://www.hexacorn.com/blog/2020/02/05/stay-positive-lolbins-not/
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-17
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\rundll32.exe'
  - OriginalFileName: 'RUNDLL32.EXE'
  - CommandLine|contains: 'rundll32'
  selection_cli_dll:
    CommandLine|contains: 'advpack'
  selection_cli_ordinal:
  - CommandLine|contains|all:
    - '#+'
    - '12'
  - CommandLine|contains: '#-'
  condition: all of selection_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious activity involving the execution of the `rundll32.exe` process calling `advpack.dll`. The rule specifically looks for command-line arguments that exhibit characteristics commonly associated with obfuscated function calls, particularly targeting the `RegisterOCX` function in `advpack.dll`. By inspecting the command-line parameters for unusual patterns, like the presence of specific symbols (e.g., `#+`, `12`, `#-`), the rule aims to identify when an attacker might be trying to evade detection by using benign-looking, yet suspicious, methods. 
  The relevant telemetry source for this detection is Windows Process Creation logs, which record instances of process execution, along with their associated command-line arguments. The MITRE ATT&CK framework categorizes this behavior under the "Defense Evasion" tactic, emphasizing the need to recognize when legitimate system utilities are misused in a malicious context.
  ### Investigation Steps
  - **Check Process Execution Details:** Use EDR tools to investigate the `rundll32.exe` process and its command-line arguments. Pay special attention to any unusual arguments that may indicate malicious intent.
  - **Examine Related Process Activity:** Analyze the parent-child relationship of processes created during the time frame of the alert. Look for any unknown or suspicious parent processes that executed `rundll32.exe`.
  - **Query Windows Event Logs:** Review relevant Windows Security, System, and Application logs for any corresponding security events that could support or refute the findings, especially looking for unusual authentication attempts or service events.
  - **Analyze Network Traffic:** Utilize NDR tools to inspect any outbound network connections that were initiated by the suspicious `rundll32.exe` execution. Look for connections to known malicious domains or IP addresses.
  ### Prioritization
  Given that this alert relates to potential misuse of a common Windows utility for defense evasion, it is marked as high severity. Such behaviors may indicate an attempt to compromise systems or escalate privileges, warranting immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not trigger in environments where `rundll32.exe` is regularly used for legitimate administrative tasks, thus leading to possible false negatives. Additionally, if attackers modify the execution patterns or deploy custom obfuscation techniques that do not match the identified command-line signatures, the detection may fail. It's assumed that the environment has logging adequately configured for process creation events and that command-line arguments are not being stripped by security settings.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
