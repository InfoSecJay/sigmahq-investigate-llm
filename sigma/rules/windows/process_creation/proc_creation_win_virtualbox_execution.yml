title: Detect Virtualbox Driver Installation OR Starting Of VMs
id: bab049ca-7471-4828-9024-38279a4c04da
status: test
description: Adversaries can carry out malicious operations using a virtual instance
  to avoid detection. This rule is built to detect the registration of the Virtualbox
  driver or start of a Virtualbox VM.
references:
- https://news.sophos.com/en-us/2020/05/21/ragnar-locker-ransomware-deploys-virtual-machine-to-dodge-security/
- https://threatpost.com/maze-ransomware-ragnar-locker-virtual-machine/159350/
author: Janantha Marasinghe
date: 2020-09-26
modified: 2022-07-14
tags:
- attack.defense-evasion
- attack.t1564.006
- attack.t1564
logsource:
  category: process_creation
  product: windows
detection:
  selection_1:
    CommandLine|contains:
    - 'VBoxRT.dll,RTR3Init'
    - 'VBoxC.dll'
    - 'VBoxDrv.sys'
  selection_2:
    CommandLine|contains:
    - 'startvm'
    - 'controlvm'
  condition: 1 of selection_*
fields:
- ComputerName
- User
- CommandLine
- ParentCommandLine
falsepositives:
- This may have false positives on hosts where Virtualbox is legitimately being used
  for operations
level: low
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect operations related to the VirtualBox virtual machine software, which can be exploited by adversaries to conduct malicious activities while evading detection. The rule looks for specific command-line parameters associated with the installation or initiation of VirtualBox drivers and virtual machines. It focuses on the presence of key terms such as `VBoxRT.dll`, `VBoxC.dll`, `VBoxDrv.sys`, `startvm`, and `controlvm` in the process creation logs from Windows. In the MITRE ATT&CK framework, this activity is classified under the "Defense Evasion" tactic (T1564), leveraging techniques designed to obscure malicious actions from security detection mechanisms.
  ### Investigation Steps
  - **Verify the Source of the Alert:** Use your EDR tool to identify the process that triggered the alert and examine its context, including associated parent processes and any other concurrent activities. 
  - **Analyze Command-Line Arguments:** Check the command-line arguments of the detected process to confirm whether they contain the flagged keywords associated with VirtualBox. 
  - **Review User Behavior:** Investigate the user account that executed the command to assess if it aligns with normal usage patterns or if it raises suspicion due to unusual activity. 
  - **Cross-reference with Known Good:** If applicable, compare the alert against a list of endpoints known to have legitimate VirtualBox usage and confirm whether this instance fits that profile.
  ### Prioritization
  This alert is given a low severity level as it may involve benign usage of VirtualBox on systems where it is a standard application. However, its use should be monitored, particularly on endpoints not typically associated with virtual machine operations.
  ### Blind spots and Assumptions
  This rule may not fire in scenarios where adversaries use alternative means to launch virtual environments or disguise their operations under different process names. Additionally, environments where VirtualBox is legitimately utilized may yield false positives, potentially obscuring genuine threats. Engineers should consider these factors and adjust detection sensitivity as appropriate to their specific environments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
