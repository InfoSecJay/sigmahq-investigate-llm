title: File Deletion Via Del
id: 379fa130-190e-4c3f-b7bc-6c8e834485f3
status: test
description: |
  Detects execution of the builtin "del"/"erase" commands in order to delete files.
  Adversaries may delete files left behind by the actions of their intrusion activity.
  Malware, tools, or other non-native files dropped or created on a system by an adversary may leave traces to indicate to what was done within a network and how.
  Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1070.004/T1070.004.md
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/erase
author: frack113
date: 2022-01-15
modified: 2024-03-05
tags:
- attack.defense-evasion
- attack.t1070.004
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\cmd.exe'
  - OriginalFileName: 'Cmd.Exe'
  selection_del:
    CommandLine|contains:
    - 'del '
    - 'erase '
  selection_flags:
    CommandLine|contains|windash:
    - ' -f'         # Force deleting of read-only files.
    - ' -s'         # Delete specified files from all subdirectories.
    - ' -q'         # Quiet mode, do not ask if ok to delete on global wildcard
  condition: all of selection_*
falsepositives:
- False positives levels will differ Depending on the environment. You can use a combination
  of ParentImage and other keywords from the CommandLine field to filter legitimate
  activity
level: low
notes: |
  n
  ### Technical Context
  This detection rule targets the execution of built-in Windows commands "del" and "erase," which are commonly used to delete files. Adversaries may leverage these commands to remove traces of their activity, thereby attempting to obscure their presence on compromised systems. 
  The rule identifies instances where `cmd.exe` is invoked with command-line arguments indicative of file deletion activities (`del` or `erase`), particularly when accompanied by flags that suggest a more aggressive deletion approach, such as `-f` (force), `-s` (subdirectories), or `-q` (quiet mode). The primary data source analyzed to trigger this rule is the process creation logs, specifically monitoring command-line parameters used when executing commands via the Windows command shell. This behavior aligns with the MITRE ATT&CK technique T1070.004: File Deletion, falling under the tactic of Defense Evasion.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs for instances of `cmd.exe` executed with the `del` or `erase` commands, particularly focusing on the command-line arguments used.
  - **Analyze Parent Process:** Correlate the parent process of detected `cmd.exe` instances to identify potential malicious activity or legitimate processes that may justify file deletion.
  - **Inspect File Operations:** Utilize EDR solutions to audit the file system changes made during the time window of the detected activity, ensuring suspicious deletions are adequately scoped.
  - **Review User Activity:** Consult user activity logs to determine whether the commands were executed by authorized users and whether they align with normal operational behavior.
  ### Prioritization
  Given that this alert pertains to potential malicious file deletion, which may indicate an attempt to cover tracks following an intrusion, it is prioritized as low severity. However, context must be applied based on the environment and the known behavior of users.
  ### Blind Spots and Assumptions
  This rule may not detect deletions performed by users through graphical interfaces or other methods not involving the command line. Furthermore, legitimate administrative activities that include file cleanup may generate false positives; filtering based on context and user role is essential. Adversaries could also employ alternate methods or scripts that bypass this detection, such as using native application functionality for deletion without invoking the command line.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
