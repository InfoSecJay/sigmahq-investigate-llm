title: Powershell Token Obfuscation - Process Creation
id: deb9b646-a508-44ee-b7c9-d8965921c6b6
related:
- id: f3a98ce4-6164-4dd4-867c-4d83de7eca51
  type: similar
status: test
description: Detects TOKEN OBFUSCATION technique from Invoke-Obfuscation
references:
- https://github.com/danielbohannon/Invoke-Obfuscation
author: frack113
date: 2022-12-27
modified: 2024-08-11
tags:
- attack.defense-evasion
- attack.t1027.009
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # Examples:
        #   IN`V`o`Ke-eXp`ResSIOn (Ne`W-ob`ject Net.WebClient).DownloadString
        #   &('In'+'voke-Expressi'+'o'+'n') (.('New-Ob'+'jec'+'t') Net.WebClient).DownloadString
        #   &("{2}{3}{0}{4}{1}"-f 'e','Expression','I','nvok','-') (&("{0}{1}{2}"-f'N','ew-O','bject') Net.WebClient).DownloadString
  - CommandLine|re: '\w+`(\w+|-|.)`[\w+|\s]'
        # - CommandLine|re: '\((\'(\w|-|\.)+\'\+)+\'(\w|-|\.)+\'\)' TODO: fixme
  - CommandLine|re: '"(\{\d\})+"\s*-f'
        #   ${e`Nv:pATh}
  - CommandLine|re: '(?i)\$\{`?e`?n`?v`?:`?p`?a`?t`?h`?\}'
  filter_main_envpath:
    CommandLine|contains: '${env:path}'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "Powershell Token Obfuscation 
  - Process Creation" rule is designed to detect obfuscation techniques used in PowerShell commands that can indicate malicious activity. Specifically, it targets the use of the `Invoke-Obfuscation` tool, which is often leveraged by threat actors to avoid detection by security solutions. The rule looks for indicators of abnormal command line patterns within process creation logs, focusing on specific obfuscation features like non-standard character usage and complex string manipulations. 
  This detection leverages data sources such as process creation logs within Windows environments, specifically targeting the command line arguments that are associated with PowerShell execution. By examining these command lines for certain patterns—such as backticks (`), environmental variable references, and structured string formatting—security analysts can identify potentially harmful obfuscated scripts. This rule falls under the MITRE ATT&CK tactic of Defense Evasion, specifically the technique T1027.009, which deals with obfuscated files or information.
  ### Investigation Steps
  - **Check Process Creation Logs**: Utilize the EDR to review process creation logs for any instances where PowerShell commands were executed with the identified obfuscation patterns.
  - **Correlate with Sysmon Data**: Cross-reference findings with Sysmon logs to analyze the execution context and determine if any unusual activity or behavior is associated with the detected process.
  - **Block and Analyze Executable**: If a suspicious process is identified, examine its properties and hash information. Block or isolate the executable if it poses a threat, and run additional scans for associated malware.
  - **Review Network Connections**: Analyze outgoing network connections from the affected host using NDR tools, as malicious PowerShell scripts often attempt to communicate with external command-and-control servers after execution.
  ### Prioritization
  Alerts generated by this rule are considered high-severity due to the potential for obfuscated PowerShell commands to hide malicious activities, such as data exfiltration, ransomware deployment, or other harmful actions. Immediate investigation is critical to mitigate risk to the enterprise.
  ### Blind Spots and Assumptions
  One potential blind spot for this rule is the possibility of legitimate PowerShell use cases that may also contain obfuscation patterns, leading to false positives. Additionally, if PowerShell logs are not properly enabled or if the command execution is done under system contexts that do not log appropriately, the rule may fail to trigger. Moreover, adversaries may modify strategies or change obfuscation techniques to evade detection, thereby reducing the effectiveness of this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and comprehensiveness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
