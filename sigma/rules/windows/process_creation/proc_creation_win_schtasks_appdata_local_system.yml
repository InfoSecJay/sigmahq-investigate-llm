title: Suspicious Schtasks Execution AppData Folder
id: c5c00f49-b3f9-45a6-997e-cfdecc6e1967
status: test
description: 'Detects the creation of a schtask that executes a file from C:\Users\<USER>\AppData\Local'
references:
- https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/
author: pH-T (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2022-03-15
modified: 2022-07-28
tags:
- attack.execution
- attack.persistence
- attack.t1053.005
- attack.t1059.001
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    Image|endswith: '\schtasks.exe'
    CommandLine|contains|all:
    - '/Create'
    - '/RU'
    - '/TR'
    - 'C:\Users\'
    - '\AppData\Local\'
    CommandLine|contains:
    - 'NT AUT'         # This covers the usual NT AUTHORITY\SYSTEM
    - ' SYSTEM '         # SYSTEM is a valid value for schtasks hence it gets it's own value with space
  filter:
        # FP from test set in SIGMA
    ParentImage|contains|all:
    - '\AppData\Local\Temp\'
    - 'TeamViewer_.exe'
    Image|endswith: '\schtasks.exe'
    CommandLine|contains: '/TN TVInstallRestore'
  condition: selection and not filter
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the suspicious creation of scheduled tasks using the Windows `schtasks.exe` command-line tool, particularly those that execute files from the AppData folder located at `C:\Users\<USER>\AppData\Local`. The rule utilizes process creation logs, focusing on command-line parameters associated with the `schtasks.exe` process, which typically indicates that a new scheduled task is being created. Specifically, it looks for command lines that include creation flags such as `/Create`, the run user flag `/RU`, and the task run parameters `/TR`, in conjunction with paths that consist of the AppData directory. 
  This behavior aligns with MITRE ATT&CK technique T1053.005 (Scheduled Task/Job for Windows), as attackers often utilize scheduled tasks to maintain persistence on compromised systems. The context of the file execution (in this case, located within the AppData folder) can indicate potential misuse and malicious intent, as the AppData directory is commonly targeted by malware to hide execution from users and system administrators.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the process creation logs to identify the instance of `schtasks.exe` being executed. Look for unusual command line parameters or execution paths related to user accounts that do not typically schedule tasks.
  - **Correlate with EDR Data:** Utilize your EDR solution to determine if the executed task triggered any additional processes or indicators of compromise in the timeline surrounding the event. Check for any associated suspicious execution from the AppData folder.
  - **Check User Activity:** Investigate the user or account information associated with the scheduled task creation. Determine if the user has a legitimate reason to execute tasks or if there is evidence of compromised account activity.
  - **Analyze Task Scheduler History:** Review the Windows Task Scheduler history to understand the context and frequency of the created tasks. Look for anomalies, such as tasks that run unauthorized scripts or unusual timing and frequency of executions.
  ### Prioritization
  The alert generated by this rule is tagged as high severity due to its association with potential persistence mechanisms employed by attackers, such as creating malicious scheduled tasks that could lead to further compromise or lateral movement within the enterprise environment.
  ### Blind spots and Assumptions
  One potential blind spot is the reliance on the naming conventions and typical behavior of malicious tasks; if an adversary uses non-standard paths or command-line options, the rule may not trigger. Additionally, this rule assumes that `schtasks.exe` is being used in the typical manner, which can be subverted by advanced adversaries who may use alternative methods to create scheduled tasks. False positives may also arise from legitimate administrative actions or benign software behavior that fits the rule's criteria.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
