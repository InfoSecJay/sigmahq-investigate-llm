title: Potential File Overwrite Via Sysinternals SDelete
id: a4824fca-976f-4964-b334-0621379e84c4
status: test
description: Detects the use of SDelete to erase a file not the free space
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1485/T1485.md
author: frack113
date: 2021-06-03
modified: 2023-02-28
tags:
- attack.impact
- attack.t1485
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    OriginalFileName: sdelete.exe
  filter:
    CommandLine|contains:
    - ' -h'
    - ' -c'
    - ' -z'
    - ' /\?'
  condition: selection and not filter
fields:
- ComputerName
- User
- CommandLine
- ParentCommandLine
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify the use of Sysinternals SDelete, a command-line utility for securely deleting files, specifically when it is employed to overwrite files rather than just erase free space. The rule monitors process creation events on Windows systems, looking for instances where `sdelete.exe` is executed. It focuses on command-line arguments associated with legitimate usage of the tool such as `-h` (to delete without prompting), `-c` (to clean free space), and `-z` (to zero the residual data). If these flags are not present in the command-line arguments while the application is running, it flags a potential misuse scenario that could indicate an attempt to overwrite or delete a file for malicious purposes. This is relevant within the context of data exfiltration or malware activity where an attacker may want to conceal themselves by erasing traces of their actions.
  ### Investigation Steps
  - Investigate the process creation logs in the EDR console to identify the execution of `sdelete.exe`, paying close attention to the associated user and system.
  - Review the command-line parameters used with SDelete by querying the EDR logs to find any instances where the tool was run without the filtering flags, indicating potentially malicious intent.
  - Correlate alerts with historical logs from your AV solution to check for any prior detections or anomalies related to file deletions or overwrites on the affected systems.
  - Utilize the Proxy logs to look for any network activity from the affected machine to see if there were any attempts to exfiltrate data that might coincide with the timing of the SDelete execution.
