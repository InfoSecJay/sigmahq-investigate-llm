title: Malicious Windows Script Components File Execution by TAEF Detection
id: 634b00d5-ccc3-4a06-ae3b-0ec8444dd51b
status: test
description: |
  Windows Test Authoring and Execution Framework (TAEF) framework allows you to run automation by executing tests files written on different languages (C, C#, Microsoft COM Scripting interfaces
  Adversaries may execute malicious code (such as WSC file with VBScript, dll and so on) directly by running te.exe
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Te/
- https://twitter.com/pabraeken/status/993298228840992768
- https://learn.microsoft.com/en-us/windows-hardware/drivers/taef/
author: 'Agro (@agro_sev) oscd.community'
date: 2020-10-13
modified: 2021-11-27
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\te.exe'
  - ParentImage|endswith: '\te.exe'
  - OriginalFileName: '\te.exe'
  condition: selection
falsepositives:
- It's not an uncommon to use te.exe directly to execute legal TAEF tests
level: low
notes: |
  # Detection Rule Documentation: Malicious Windows Script Components File Execution by TAEF Detection
  ### Technical Context
  The Sigma rule identifies potentially malicious executions of the Windows Test Authoring and Execution Framework (TAEF), specifically watching for the `te.exe` executable. The rule is designed to flag scenarios where `te.exe` is directly invoked or when it serves as a parent process for other running components. TAEF is utilized for testing code across various programming languages, and while it can be used for legitimate purposes, adversaries might exploit it to execute harmful scripts, such as those written in VBScript or using malicious Dynamic Link Libraries (DLLs). 
  This detection rule primarily leverages process creation logs, looking for specific indicators associated with `te.exe`. The relevant MITRE ATT&CK technique is T1218 (Windows Script Host), which encompasses methods employed by attackers to execute scripts through various scripting environments, including Windows Script Components. 
  ### Investigation Steps
  - **Check Process Details:** Investigate the process details of any alerts triggered by this rule through your EDR. Analyze the command-line arguments and parent-child relationships to determine the legitimacy of the execution.
  - **Review Historical Activity:** Utilize Windows Event Logs to look for prior occurrences of `te.exe` being executed. Pay attention to any suspicious patterns or correlation with known threat actors or behavior.
  - **Examine Recent Changes:** Use relevant telemetry, such as Sysmon logs, to identify recent changes or installations on the affected system. This includes examining new applications, user account activity, and alterations in script files.
  - **Monitor for Malicious Behavior:** Conduct a broader analysis of the network traffic related to the triggering system. Observing DNS queries or unusual outbound connections can provide context to the activities associated with the detected execution.
  ### Prioritization
  Given that this alert pertains to potentially malicious script execution via a known legitimate tool, it should be considered low-severity in the context of typical enterprise environments. However, its occurrence warrants timely investigation to rule out any misuse.
  ### Blind Spots and Assumptions
  This detection rule relies on the presumption that `te.exe` is not commonly used for legitimate automation tasks, which may lead to false positives, as it can be invoked legitimately for TAEF testing. Additionally, the rule may fail to fire in environments where users have been trained to employ alternative techniques for executing scripts or if an adversary finds ways to obfuscate the execution of `te.exe`, making it appear as part of normal operations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
