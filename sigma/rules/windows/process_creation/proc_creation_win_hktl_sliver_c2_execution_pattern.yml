title: HackTool - Sliver C2 Implant Activity Pattern
id: 42333b2c-b425-441c-b70e-99404a17170f
status: test
description: Detects process activity patterns as seen being used by Sliver C2 framework
  implants
references:
- https://github.com/BishopFox/sliver/blob/79f2d48fcdfc2bee4713b78d431ea4b27f733f30/implant/sliver/shell/shell_windows.go#L36
- https://www.microsoft.com/security/blog/2022/08/24/looking-for-the-sliver-lining-hunting-for-emerging-command-and-control-frameworks/
author: Nasreddine Bencherchali (Nextron Systems), Florian Roth (Nextron Systems)
date: 2022-08-25
modified: 2023-03-05
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains: '-NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8'
  condition: selection
falsepositives:
- Unlikely
level: critical
notes: |
  ### Technical Context
  The Sigma rule titled "HackTool 
  - Sliver C2 Implant Activity Pattern" is designed to detect specific command-line activities associated with the Sliver command and control (C2) framework. This rule identifies the execution of processes where the command line contains the parameters `-NoExit -Command [Console]::OutputEncoding=[Text.UTF8Encoding]::UTF8`. These parameters are commonly utilized by Sliver implants to set up a PowerShell session with UTF-8 output encoding. By monitoring process creation logs from Windows, the rule focuses on identifying potentially malicious activities that align with the MITRE ATT&CK technique T1059 (Command and Scripting Interpreter), which encompasses various scripting techniques for executing commands.
  The primary data source leveraged for this detection is the **process creation logs**, specifically reviewing the command-line parameters of running processes. This enables SOC analysts to recognize unauthorized or irregular command executions that could signify the presence of Sliver implants within the network environment, facilitating earlier intervention and response.
  ### Investigation Steps
  - **Review EDR alerts:** Check for any alerts or logs associated with the detected command line in the EDR tool. Correlate these findings with any additional suspicious process executions occurring around the same time to identify patterns or related incidents.
  - **Analyze process lineage:** Using process tree functionality within the EDR, trace the parent-child process relationships for the identified command line execution. This can help in understanding how the command was initiated and whether it is linked to any known benign activities or other malicious events.
  - **Inspect network connections:** Utilize network detection and response tools to review any outbound connections made by the process in question. Look for unusual patterns or connections to known malicious IPs associated with Sliver C2 infrastructure.
  - **Check PowerShell logs:** Review Windows PowerShell logs for any unusual activities related to the detected command line. This includes searching for additional commands executed in the same session or unusual module loads that could indicate exploitation attempts.
  ### Prioritization
  Given the critical nature of the alert, it must be prioritized as high due to the potential implications of C2 implant activity. The presence of the Sliver framework in an environment suggests an active compromise, necessitating immediate investigation and response to mitigate risks of data exfiltration or further lateral movement within the network.
  ### Blind Spots and Assumptions
  This rule assumes that the targeted PowerShell command line will not change significantly to evade detection. As such, modifications to the parameters or execution contexts (for example, running from a different shell or with altered flags) may result in missed detections. Additionally, environments heavily utilizing PowerShell for legitimate automation may generate false negatives if legitimate commands mirror this pattern. Lastly, if the commands are executed at a high privilege level without generating process creation logs, detection may also be hindered.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
