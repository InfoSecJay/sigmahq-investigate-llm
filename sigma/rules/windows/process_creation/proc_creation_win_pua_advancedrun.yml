title: PUA - AdvancedRun Execution
id: d2b749ee-4225-417e-b20e-a8d2193cbb84
related:
- id: fa00b701-44c6-4679-994d-5a18afa8a707
  type: similar
status: test
description: Detects the execution of AdvancedRun utility
references:
- https://twitter.com/splinter_code/status/1483815103279603714
- https://medium.com/s2wblog/analysis-of-destructive-malware-whispergate-targeting-ukraine-9d5d158f19f3
- https://www.elastic.co/security-labs/operation-bleeding-bear
- https://www.winhelponline.com/blog/run-program-as-system-localsystem-account-windows/
author: Florian Roth (Nextron Systems)
date: 2022-01-20
modified: 2023-02-21
tags:
- attack.execution
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1564.003
- attack.t1134.002
- attack.t1059.003
logsource:
  product: windows
  category: process_creation
detection:
  selection:
  - OriginalFileName: 'AdvancedRun.exe'
  - CommandLine|contains|all:
    - ' /EXEFilename '
    - ' /Run'
  - CommandLine|contains|all:
    - ' /WindowState 0'
    - ' /RunAs '
    - ' /CommandLine '
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "PUA 
  - AdvancedRun Execution" targets the detection of the execution of the AdvancedRun utility, a tool often utilized for executing applications with specific parameters, including running programs as a different user or under the Local System account. This rule works by monitoring process creation events in Windows, specifically looking for instances where the executable "AdvancedRun.exe" is called with particular command-line arguments that indicate potentially malicious usage. With the inclusion of parameters like `/EXEFilename`, `/Run`, `/WindowState 0`, and `/RunAs`, the rule aims to identify scenarios where the tool is leveraged for privilege escalation and evasion tactics, which fall under MITRE ATT&CK techniques T1564.003 (Hide Artifacts: Hidden Files and Directories) and T1134.002 (Access Token Manipulation: Create Token Manipulation).
  To effectively detect this behavior, the rule leverages Windows event logs pertaining to process creation. These logs provide insights into executable files initiated by users or system processes and contain valuable details such as the command-line arguments used, thus enabling analysts to ascertain whether AdvancedRun may be employed for malicious purposes. As such, it is crucial for SOC analysts to scrutinize the contextual usage of the utility to prevent privilege escalation incidents.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the Windows Event Logs, particularly the Security log for Process Creation (Event ID 4688), to identify instances of "AdvancedRun.exe" execution details, including timestamps and user context.
  - **Analyze Command-Line Parameters:** For identified processes, examine the complete command-line parameters passed to "AdvancedRun.exe" to understand the intent of execution and potential misuse, particularly focusing on parameters like `/RunAs` and `/CommandLine`.
  - **Correlate with User Activity:** Cross-reference the log entries with user activity logs to determine the legitimacy of the user invoking AdvancedRun and whether this action aligns with their typical behavior or role within the organization.
  - **Review System/Application Logs:** Check corresponding Application and System logs for any unusual activities or errors that coincided with the execution of AdvancedRun, which can provide insights into potential exploitation attempts or abnormal behaviors.
  ### Prioritization
  The alert is categorized as medium severity in an enterprise environment due to the potential risks associated with the misuse of AdvancedRun for privilege escalation and defense evasion. The ability for a process to run with elevated privileges poses a significant threat, especially when employed by malicious actors to execute unauthorized actions within the environment.
  ### Blind Spots and Assumptions
  This rule may not fire if the AdvancedRun executable is renamed or altered in a manner that bypasses detection. Moreover, it assumes that the use of AdvancedRun is not a common part of legitimate business processes within the environment; if team members frequently use it in benign contexts, the risk of false positives increases. Additionally, if logging is not consistently enabled or if critical events are filtered out, the rule may fail to capture relevant executions. Engineering teams should consider these factors when assessing the rule's effectiveness and making adjustments for their specific environments.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
