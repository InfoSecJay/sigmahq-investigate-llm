title: Uncommon Extension Shim Database Installation Via Sdbinst.EXE
id: 18ee686c-38a3-4f65-9f44-48a077141f42
related:
- id: 517490a7-115a-48c6-8862-1a481504d5a8
  type: derived
status: test
description: |
  Detects installation of a potentially suspicious new shim with an uncommon extension using sdbinst.exe.
  Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims
references:
- https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html
- https://github.com/nasbench/Misc-Research/blob/8ee690e43a379cbce8c9d61107442c36bd9be3d3/Other/Undocumented-Flags-Sdbinst.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-08-01
modified: 2024-01-10
tags:
- attack.persistence
- attack.privilege-escalation
- attack.t1546.011
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\sdbinst.exe'
  - OriginalFileName: 'sdbinst.exe'
  filter_main_legit_ext:
    CommandLine|contains: '.sdb'
  filter_main_legit_extensions:
        # ParentImage|endswith: ':\Windows\System32\svchost.exe'
  - CommandLine|endswith:
    - ' -c'
    - ' -f'
    - ' -mm'
    - ' -t'
  - CommandLine|contains: ' -m -bg'
  filter_main_null:
    CommandLine:
  filter_main_empty:
    CommandLine: ''
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially suspicious installations of shim databases utilizing the `sdbinst.exe` executable, which is native to Windows. It specifically looks for command-line arguments associated with the installation process that are unusual or uncommon, indicating an attempt at persistence or privilege escalation by an adversary. When executed, `sdbinst.exe` processes files with a `.sdb` extension, which are used for application shimmingâ€”a technique that allows for the modification of program behavior without altering the executable itself. The monitoring focuses on process creation logs where the command-line parameters of `sdbinst.exe` exhibit particular patterns that could imply nefarious intent, such as invoking non-standard extensions and specific command-line flags. This aligns with MITRE ATT&CK tactics related to persistence and privilege escalation (T1546.011).
  ### Investigation Steps
  - **Check EDR for Process Details:** Investigate the process creation logs for `sdbinst.exe`, ensuring to examine the user account associated with its execution. Look for unusual parent processes that may indicate scripting or exploitation.
  - **Review Command-Line Parameters:** Examine the command line used for invoking `sdbinst.exe`, searching for unusual flags or non-standard extensions that deviate from typical operations. This can highlight potential misuse or attempts to bypass normal functionality.
  - **Cross-Reference Logs:** Use the SIEM to correlate alerts with other telemetry sources, such as Windows Security logs and Sysmon logs, for additional context on system changes or user behavior around the time of the alert.
  - **Perform File Integrity Checks:** Conduct checks against the `.sdb` files and their locations, looking for unauthorized changes or the presence of known malicious files. Utilize tools for validating the integrity of the application shims installed.
  ### Prioritization
  The severity level of this alert is medium due to the potential for an attacker to leverage shim databases for persistence and privilege escalation, thereby compromising critical systems if left unaddressed.
  ### Blind Spots and Assumptions
  This detection rule may not fire in environments where `sdbinst.exe` is frequently used for legitimate purposes by applications or system administrators. If an attacker is aware of this detection mechanism, they might obfuscate the command-line arguments or utilize alternative methods for shim execution. Additionally, environments not logging process creations or with strict application whitelisting may fail to capture the relevant activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
