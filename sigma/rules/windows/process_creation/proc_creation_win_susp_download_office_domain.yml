title: Suspicious Download from Office Domain
id: 00d49ed5-4491-4271-a8db-650a4ef6f8c1
status: test
description: Detects suspicious ways to download files from Microsoft domains that
  are used to store attachments in Emails or OneNote documents
references:
- https://twitter.com/an0n_r0/status/1474698356635193346?s=12
- https://twitter.com/mrd0x/status/1475085452784844803?s=12
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2021-12-27
modified: 2022-08-02
tags:
- attack.command-and-control
- attack.t1105
- attack.t1608
logsource:
  product: windows
  category: process_creation
detection:
  selection_download:
  - Image|endswith:
    - '\curl.exe'
    - '\wget.exe'
  - CommandLine|contains:
    - 'Invoke-WebRequest'
    - 'iwr '
    - 'curl '
    - 'wget '
    - 'Start-BitsTransfer'
    - '.DownloadFile('
    - '.DownloadString('
  selection_domains:
    CommandLine|contains:
    - 'https://attachment.outlook.live.net/owa/'
    - 'https://onenoteonlinesync.onenote.com/onenoteonlinesync/'
  condition: all of selection_*
falsepositives:
- Scripts or tools that download attachments from these domains (OneNote, Outlook
  365)
level: high
notes: |
  ### Technical Context
  This Sigma rule identifies potentially suspicious file downloads originating from Microsoft domains typically used for email attachments or OneNote documents. The rule mainly focuses on process creation logs that track the execution of specific commands or tools such as `curl.exe` and `wget.exe`, as well as PowerShell commands like `Invoke-WebRequest` and `Start-BitsTransfer`. By analyzing the command-line parameters, the rule detects instances where files are downloaded from known, potentially risky domains, which could indicate malicious activity or unauthorized data exfiltration attempts. The data sources leveraged for this detection include Windows process creation logs, which capture relevant details about processes executed within the environment.
  ### Investigation Steps
  - Review the process creation logs in your EDR tool to identify the context and origin of the suspicious download event, noting the user and timing.
  - Examine the command-line parameters associated with the execution of `curl`, `wget`, or PowerShell scripts to understand the specific requests made to the identified Microsoft domains.
  - Correlate the source IP addresses and user accounts involved with historical data in your SIEM to determine if there is a pattern of unusual activity or known compromised entities.
  - Check the content of the downloaded files, if available, by cross-referencing with AV logs or sandboxing tools to ascertain if they contain malicious payloads or are benign from legitimate operations.
