title: Uncommon Child Process Spawned By Odbcconf.EXE
id: 8e3c7994-131e-4ba5-b6ea-804d49113a26
status: test
description: Detects an uncommon child process of "odbcconf.exe" binary which normally
  shouldn't have any child processes.
references:
- https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16
- https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/
- https://medium.com/@cyberjyot/t1218-008-dll-execution-using-odbcconf-exe-803fa9e08dac
author: Harjot Singh @cyb3rjy0t
date: 2023-05-22
tags:
- attack.defense-evasion
- attack.t1218.008
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\odbcconf.exe'
  condition: selection
falsepositives:
- In rare occurrences where "odbcconf" crashes. It might spawn a "werfault" process
- Other child processes will depend on the DLL being registered by actions like "regsvr".
  In case where the DLLs have external calls (which should be rare). Other child processes
  might spawn and additional filters need to be applied.
level: medium
notes: |
  ### Technical Context
  This detection rule identifies anomalous child processes spawned by the legitimate Windows executable `odbcconf.exe`, which is primarily used for configuring ODBC data sources. Under normal circumstances, `odbcconf.exe` typically does not create child processes, making any such activity suspicious and potentially indicative of an attack vector, such as DLL sideloading or other evasion tactics. The rule analyzes process creation logs to monitor for any child processes that are initiated with `odbcconf.exe` as the parent. The relevant data sources include the Windows Process Creation logs, which contain information such as the name of the parent process, identifiers for the initiating user, and command-line arguments that provide further context to the execution environment.
  ### Investigation Steps
  - Utilize EDR to review the process creation timeline and identify any unusual child processes spawned from `odbcconf.exe`. Look for process names and command-line parameters that are not typically associated with normal ODBC configuration activities.
  - Cross-reference IP and domain access logs from the Proxy or VPN to identify any communications that occurred during the same timeframe as the anomalous process creation. This can help pinpoint potential C2 (command and control) communication.
  - Check for any associated alerts in the AV logs that may indicate malware signatures or behaviors correlated with the identified child processes. This can provide insights into the nature of the potential threat.
  - Review system and application logs (such as those in Windows Event Viewer) to determine if there were any recent changes or updates made to ODBC configurations that might explain the unusual behavior. This can help you assess whether the activity was legitimate or malicious.
