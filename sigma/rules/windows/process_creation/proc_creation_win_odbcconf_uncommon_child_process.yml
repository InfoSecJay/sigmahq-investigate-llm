title: Uncommon Child Process Spawned By Odbcconf.EXE
id: 8e3c7994-131e-4ba5-b6ea-804d49113a26
status: test
description: Detects an uncommon child process of "odbcconf.exe" binary which normally
  shouldn't have any child processes.
references:
- https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16
- https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/
- https://medium.com/@cyberjyot/t1218-008-dll-execution-using-odbcconf-exe-803fa9e08dac
author: Harjot Singh @cyb3rjy0t
date: 2023-05-22
tags:
- attack.defense-evasion
- attack.t1218.008
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\odbcconf.exe'
  condition: selection
falsepositives:
- In rare occurrences where "odbcconf" crashes. It might spawn a "werfault" process
- Other child processes will depend on the DLL being registered by actions like "regsvr".
  In case where the DLLs have external calls (which should be rare). Other child processes
  might spawn and additional filters need to be applied.
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect unusual child processes spawned by `odbcconf.exe`, a command-line utility for managing ODBC (Open Database Connectivity) data sources in Windows. Typically, `odbcconf.exe` does not generate any child processes, making such occurrences significant from a security perspective. When this rule is activated, it signifies that `odbcconf.exe` has initiated an unexpected process, which could indicate an attempt to leverage the legitimate tool for malicious purposes, such as executing unauthorized scripts or software. The rule inspects the Process Creation logs, focusing specifically on the parent-child relationship in process execution, and targets instances where the parent process ends with the string `\odbcconf.exe`. This detection aligns with the MITRE ATT&CK framework under the tactic of Defense Evasion and the technique T1218.008, which involves using legitimate binaries to execute malicious code without detection.
  ### Investigation Steps
  - **Check Process Hierarchy:** Utilize your Endpoint Detection and Response (EDR) tools to review the process creation tree, identifying instances where `odbcconf.exe` has spawned child processes. Determine the legitimacy of these child processes.
  - **Analyze Command-Line Arguments:** Investigate the command-line parameters employed by `odbcconf.exe` during its execution. Look for any suspicious or unusual arguments that could indicate malicious intent.
  - **Examine Network Activity:** Use Network Detection and Response (NDR) tools to scrutinize network activity associated with the child processes. Look for connections to known malicious IPs or domains that could reveal external communications.
  - **Conduct File and Registry Analysis:** Check for unusual file modifications or registry changes occurring around the time of the alert. Correlate these changes with system logs (Application or System) to determine if other indicators of compromise are present.
  ### Prioritization
  The alert generated by this rule is assigned a medium severity level due to the potential insights into malicious activity that can seamlessly blend with legitimate operations, making it critical to investigate unexpected child processes originating from `odbcconf.exe`.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where `odbcconf.exe` is not present or used, limiting its applicability. Additionally, if an adversary utilizes other legitimate tools to create child processes, this rule would not detect such actions. False positives may arise in rare cases where `odbcconf.exe` crashes and triggers the `werfault.exe` process. Moreover, depending on the registered DLLs, legitimate processes initiated (e.g., through registry changes like `regsvr`) could also lead to child processes, necessitating further filters to improve detection accuracy.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
