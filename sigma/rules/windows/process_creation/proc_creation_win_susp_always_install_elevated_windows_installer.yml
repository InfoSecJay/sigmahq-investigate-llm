title: Always Install Elevated Windows Installer
id: cd951fdc-4b2f-47f5-ba99-a33bf61e3770
status: test
description: Detects Windows Installer service (msiexec.exe) trying to install MSI
  packages with SYSTEM privilege
references:
- https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-48-638.jpg
author: Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community
date: 2020-10-13
modified: 2024-12-01
tags:
- attack.privilege-escalation
- attack.t1548.002
logsource:
  product: windows
  category: process_creation
detection:
  selection_user:
    User|contains:     # covers many language settings
    - 'AUTHORI'
    - 'AUTORI'
  selection_image_1:
    Image|contains|all:
    - '\Windows\Installer\'
    - 'msi'
    Image|endswith: 'tmp'
  selection_image_2:
    Image|endswith: '\msiexec.exe'
    IntegrityLevel:
    - 'System'
    - 'S-1-16-16384'
  filter_installer:
    ParentImage: 'C:\Windows\System32\services.exe'
  filter_repair:
  - CommandLine|endswith: '\system32\msiexec.exe /V'       # ignore "repair option"
  - ParentCommandLine|endswith: '\system32\msiexec.exe /V'       # ignore "repair option"
  filter_sophos:
    ParentImage|startswith: 'C:\ProgramData\Sophos\'
  filter_avira:
    ParentImage|startswith: 'C:\ProgramData\Avira\'
  filter_avast:
    ParentImage|startswith:
    - 'C:\Program Files\Avast Software\'
    - 'C:\Program Files (x86)\Avast Software\'
  filter_google_update:
    ParentImage|startswith:
    - 'C:\Program Files\Google\Update\'
    - 'C:\Program Files (x86)\Google\Update\'
  condition: 1 of selection_image_* and selection_user and not 1 of filter_*
falsepositives:
- System administrator usage
- Anti virus products
- WindowsApps located in "C:\Program Files\WindowsApps\"
level: medium
notes: |
  n
  ### Technical Context
  The Sigma rule "Always Install Elevated Windows Installer" detects attempts by the Windows Installer service (msiexec.exe) to install MSI packages while operating with SYSTEM privileges. This behavior can indicate potential privilege escalation attempts by malicious actors. The rule leverages several key data points from Windows process creation logs, specifically targeting instances where the User context contains specific terms (e.g., 'AUTHORI'), indicating non-standard user interactions, alongside conditions that check if the installer image is from a legitimate installer directory or is a temporary file. The Integrity Level and Parent Image filters ensure that the installations are initiated from the Windows services process, which is anomalous for typical software installations. This detection aligns with the MITRE ATT&CK tactic of Privilege Escalation and specifically references the technique T1548.002, which relates to abusing access tokens.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check the process creation logs from your EDR to identify specific instances of msiexec.exe running with SYSTEM privileges and examine their command-line parameters for unusual arguments.
  - **Validate User Context:** Investigate the user context under which these installations are triggered to confirm if they belong to standard administrative roles or if they show signs of anomalous behavior.
  - **Analyze Process Parentage:** Use EDR tools to analyze the parent processes of detected msiexec.exe instances to confirm that they were launched by services.exe or other expected service processes.
  - **Correlate with Other Logs:** Review Windows Security, Sysmon, or AV logs for any additional events surrounding the time of the msiexec.exe execution to gather context on possible malicious activity or false positives (e.g., legitimate administrative tasks).
  ### Prioritization
  The alert is considered medium severity in an enterprise environment due to its potential to indicate privilege escalation attempts, a critical security concern. However, true positives may also arise from legitimate administrative activities that must be carefully validated.
  ### Blind Spots and Assumptions
  This rule may fail to trigger in cases where an adversary employs custom image paths or obfuscation techniques, as the detection relies on specific paths and processes. Additionally, certain AV products like Sophos, Avira, and Avast may suppress or alter standard event logging, leading to gaps in detection. Itâ€™s assumed that such installations are genuinely anomalous and not regular system administrator activities, which may result in false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
