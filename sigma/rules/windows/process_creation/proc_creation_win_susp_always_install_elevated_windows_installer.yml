title: Always Install Elevated Windows Installer
id: cd951fdc-4b2f-47f5-ba99-a33bf61e3770
status: test
description: Detects Windows Installer service (msiexec.exe) trying to install MSI
  packages with SYSTEM privilege
references:
- https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-48-638.jpg
author: Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community
date: 2020-10-13
modified: 2024-12-01
tags:
- attack.privilege-escalation
- attack.t1548.002
logsource:
  product: windows
  category: process_creation
detection:
  selection_user:
    User|contains:     # covers many language settings
    - 'AUTHORI'
    - 'AUTORI'
  selection_image_1:
    Image|contains|all:
    - '\Windows\Installer\'
    - 'msi'
    Image|endswith: 'tmp'
  selection_image_2:
    Image|endswith: '\msiexec.exe'
    IntegrityLevel:
    - 'System'
    - 'S-1-16-16384'
  filter_installer:
    ParentImage: 'C:\Windows\System32\services.exe'
  filter_repair:
  - CommandLine|endswith: '\system32\msiexec.exe /V'       # ignore "repair option"
  - ParentCommandLine|endswith: '\system32\msiexec.exe /V'       # ignore "repair option"
  filter_sophos:
    ParentImage|startswith: 'C:\ProgramData\Sophos\'
  filter_avira:
    ParentImage|startswith: 'C:\ProgramData\Avira\'
  filter_avast:
    ParentImage|startswith:
    - 'C:\Program Files\Avast Software\'
    - 'C:\Program Files (x86)\Avast Software\'
  filter_google_update:
    ParentImage|startswith:
    - 'C:\Program Files\Google\Update\'
    - 'C:\Program Files (x86)\Google\Update\'
  condition: 1 of selection_image_* and selection_user and not 1 of filter_*
falsepositives:
- System administrator usage
- Anti virus products
- WindowsApps located in "C:\Program Files\WindowsApps\"
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially unauthorized or suspicious privilege escalation attempts through the Windows Installer service (msiexec.exe). The rule looks for instances where msiexec.exe is invoked with SYSTEM privileges to install MSI packages, particularly when the user context contains specific substrings indicative of unauthorized installation attempts. By analyzing process creation logs, the detection mechanism identifies system-level operations originating from authorized processes like `services.exe`. Additional filters exclude legitimate scenarios, such as normal antivirus operations or the repair functionality of Windows Installer, thus ensuring a focused detection for atypical behaviors that could signify a security incident.
  ### Investigation Steps
  - Use EDR tools to query recent instances of `msiexec.exe` running with SYSTEM privileges and correlate them with the user context and command line parameters.
  - Review process creation logs in the SIEM for any abnormal patterns or frequent installations from specific user accounts that match the detection criteria.
  - Investigate the parent process of flagged msiexec.exe instances to ensure they originated from legitimate sources, particularly looking for invocation from `C:\Windows\System32\services.exe`.
  - Check for known false positives from legitimate antivirus processes by cross-referencing the parent images against a whitelist of trusted applications or processes.
