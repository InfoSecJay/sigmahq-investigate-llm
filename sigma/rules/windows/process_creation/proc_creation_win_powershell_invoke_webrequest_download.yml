title: Suspicious Invoke-WebRequest Execution
id: 5e3cc4d8-3e68-43db-8656-eaaeefdec9cc
related:
- id: e218595b-bbe7-4ee5-8a96-f32a24ad3468
  type: derived
status: test
description: Detects a suspicious call to Invoke-WebRequest cmdlet where the and output
  is located in a suspicious location
references:
- https://www.sentinelone.com/blog/living-off-windows-defender-lockbit-ransomware-sideloads-cobalt-strike-through-microsoft-security-tool/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-02
modified: 2024-02-23
tags:
- attack.command-and-control
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_commands:
    CommandLine|contains:
            # These are all aliases of Invoke-WebRequest
    - 'curl '
    - 'Invoke-WebRequest'
    - 'iwr '
    - 'wget '
  selection_flags:
    CommandLine|contains:
    - ' -ur'
    - ' -o'
  selection_susp_locations:
    CommandLine|contains:
    - '\AppData\'
    - '\Desktop\'
    - '\Temp\'
    - '\Users\Public\'
    - '%AppData%'
    - '%Public%'
    - '%Temp%'
    - '%tmp%'
    - ':\Windows\'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects potentially malicious use of the PowerShell cmdlet `Invoke-WebRequest`, a common technique leveraged by attackers to download payloads or perform command-and-control (C2) activities. The rule specifically looks for activities where `Invoke-WebRequest` is called with output redirected to suspicious locations such as `AppData`, `Desktop`, `Temp`, or other user-accessible directories. By analyzing process creation logs, including command-line parameters and the original file names associated with PowerShell executions, the rule flags any instances where the command line contains known aliases for the `Invoke-WebRequest` cmdlet along with suspicious flags or output redirection patterns. This detection is critical for identifying lateral movement attempts or initial exploitation phases in a network environment.
  ### Investigation Steps
  - Query the EDR for recent process creation events involving `powershell.exe` or `pwsh.exe` that include the detected command line arguments, focusing on the timeline of the alerts.
  - Investigate the destination folder for downloaded files by examining changes in the `AppData`, `Desktop`, and `Temp` directories, ensuring to capture any unexpected file modifications or creations.
  - Review network logs on the NGFW or NDR to identify any outbound connections made by the flagged PowerShell process, paying close attention to external IP addresses and domains.
  - Utilize Proxy logs to evaluate any web traffic generated by suspicious PowerShell commands, correlating the traffic with the command's execution context for further insights into potential C2 activities.
