title: Possible Privilege Escalation via Weak Service Permissions
id: d937b75f-a665-4480-88a5-2f20e9f9b22a
status: test
description: Detection of sc.exe utility spawning by user with Medium integrity level
  to change service ImagePath or FailureCommand
references:
- https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment
- https://pentestlab.blog/2017/03/30/weak-service-permissions/
author: Teymur Kheirkhabarov
date: 2019-10-26
modified: 2024-12-01
tags:
- attack.persistence
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1574.011
logsource:
  category: process_creation
  product: windows
detection:
  scbynonadmin:
    Image|endswith: '\sc.exe'
    IntegrityLevel:
    - 'Medium'
    - 'S-1-16-8192'
  selection_binpath:
    CommandLine|contains|all:
    - 'config'
    - 'binPath'
  selection_failure:
    CommandLine|contains|all:
    - 'failure'
    - 'command'
  condition: scbynonadmin and 1 of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential privilege escalation activities involving the Windows `sc.exe` utility, which is commonly used for managing services. Specifically, the rule identifies instances where a user with a Medium integrity level is executing `sc.exe` in a manner that alters a service's `ImagePath` or `FailureCommand`. By monitoring process creation logs for executions of `sc.exe` with specific command-line parameters, such as "config" or "failure command," the rule flags potential misuse that could indicate an attempt to manipulate service configurations for nefarious purposes. The integrity level criteria help to ensure that the detection is focused on less-privileged users who may be attempting to escalate their permissions through service misconfigurations.
  ### Investigation Steps
  - Review process creation logs in the EDR to identify the specific user account that executed `sc.exe`, along with the associated command-line parameters used.
  - Analyze the service configurations involved by querying the related service details in the Windows Services management console or through PowerShell, focusing on the `ImagePath` and `FailureCommand` values.
  - Check event logs related to service management (e.g., Event ID 7045) for additional context on service creation or modification events that coincide with the detected activity.
  - Correlate findings with network activity logs from the NGFW or Proxy to identify any suspicious outbound connections or interactions that may relate to the user involved in the elevated privileges attempt.
