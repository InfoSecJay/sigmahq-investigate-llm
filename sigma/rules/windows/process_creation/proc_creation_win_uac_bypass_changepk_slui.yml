title: UAC Bypass Using ChangePK and SLUI
id: 503d581c-7df0-4bbe-b9be-5840c0ecc1fc
status: test
description: Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)
references:
- https://mattharr0ey.medium.com/privilege-escalation-uac-bypass-in-changepk-c40b92818d1b
- https://github.com/hfiref0x/UACME
- https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf
author: Christian Burkard (Nextron Systems)
date: 2021-08-23
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\changepk.exe'
    ParentImage|endswith: '\slui.exe'
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects potential User Account Control (UAC) bypass attempts using two specific executables: `changepk.exe` and `slui.exe`. In typical scenarios, `slui.exe` is a legitimate Windows component responsible for activation and licensing, while `changepk.exe` is not commonly used and can be associated with privilege escalation attacks. The rule leverages process creation logs to identify instances where `changepk.exe` is executed as a child process of `slui.exe`, particularly under high integrity levels such as 'High' or 'System'. The integrity levels measured via the Windows Security model indicate the trustworthiness of processes; thus, anomalies in this context can signify potential malicious activity. 
  By continuously monitoring these specific indicators, the rule aims to provide SOC analysts with alerts that warrant further investigation into possible security incidents, particularly those involving privilege escalation tactics.
  ### Investigation Steps
  - Review the process creation logs in your EDR to confirm instances of `changepk.exe` launching via `slui.exe`, noting the timestamp and user context in which they were executed.
  - Check the integrity levels of the processes involved by analyzing event logs, ensuring they align with typical operations and identifying any deviations that may indicate malicious behavior.
  - Use your SIEM to correlate this activity with other security alerts or behavioral anomalies in the environment to identify potential widespread exploitation attempts.
  - Examine system and user access logs to determine if there were any abnormal access patterns or changes in permissions that could correlate with the detected UAC bypass activity.
