title: UAC Bypass Using ChangePK and SLUI
id: 503d581c-7df0-4bbe-b9be-5840c0ecc1fc
status: test
description: Detects an UAC bypass that uses changepk.exe and slui.exe (UACMe 61)
references:
- https://mattharr0ey.medium.com/privilege-escalation-uac-bypass-in-changepk-c40b92818d1b
- https://github.com/hfiref0x/UACME
- https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf
author: Christian Burkard (Nextron Systems)
date: 2021-08-23
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\changepk.exe'
    ParentImage|endswith: '\slui.exe'
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This sigma rule is designed to detect potential User Account Control (UAC) bypass attempts through the usage of `changepk.exe` initiated by `slui.exe`. UAC is a security feature in Windows that helps prevent unauthorized changes to the operating system, and an effective bypass can allow an adversary to escalate privileges. In this scenario, the rule focuses on process creation logs where `changepk.exe` is executed only if its parent process is `slui.exe` while operating at a high integrity level (either 'High', 'System', or specific Security Identifiers). By monitoring process execution, particularly through specific command-line parameters and parent-child relationships, analysts can identify possible malicious activities associated with privilege escalation attempts under MITRE ATT&CK technique T1548.002 (Abuse Elevation Control Mechanism: Bypass User Access Control).
  To implement this detection effectively, the rule utilizes Windows Security event logs specifically designed to capture process creation, which will provide visibility into the execution of key executable files along with their associated parent processes. This structured approach aids in alerting security teams about potentially suspicious activities that breach normal UAC operations and warrant further investigation.
  ### Investigation Steps
  - **Verify the Process Chain:** Check the relevant Windows Security logs for the execution of `changepk.exe`, ensuring its parent process is accurately logged as `slui.exe` to confirm the legitimacy of the trigger.
  - **Analyze the Integrity Levels:** Use the EDR to retrieve additional context on the integrity levels associated with both processes to ascertain whether they match the high or system integrity levels indicated in the alert.
  - **Check for Related Network Activity:** Investigate if any unusual outbound connections occurred around the time of process execution through the NGFW or NDR to identify potential data exfiltration attempts or command and control communications.
  - **Review Recent User Actions:** Look for prior user actions or policy changes in user behavior and access patterns in the logs, especially around the system's privilege escalation maneuvers, to provide background context for the detection.
  ### Prioritization
  The alert is categorized as high severity due to the potential escalation of privileges that can allow attackers to gain greater access within the network, leading to more significant risks including system compromise or data breaches.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where execution of `changepk.exe` occurs in an unconventional manner (e.g., directly run without a parent `slui.exe`) or when processes are named differently due to renaming or alterations by adversaries. Additionally, if monitoring is not comprehensive or if logging is disabled on critical systems, important context may be missed, and subsequent alerts may be overlooked. It's assumed that standard configurations in the enterprise environment are in place; any deviations could impact the detection effectiveness.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
