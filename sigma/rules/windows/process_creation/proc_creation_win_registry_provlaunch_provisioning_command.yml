title: Potential Provisioning Registry Key Abuse For Binary Proxy Execution
id: 2a4b3e61-9d22-4e4a-b60f-6e8f0cde6f25
related:
- id: 7f5d1c9a-3e83-48df-95a7-2b98aae6c13c     # CLI Generic
  type: similar
- id: f9999590-1f94-4a34-a91e-951e47bedefd     # CLI Abuse
  type: similar
- id: 7021255e-5db3-4946-a8b9-0ba7a4644a69     # Registry
  type: similar
status: test
description: Detects potential abuse of the provisioning registry key for indirect
  command execution through "Provlaunch.exe".
references:
- https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/
- https://twitter.com/0gtweet/status/1674399582162153472
author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel
date: 2023-08-08
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains: 'SOFTWARE\Microsoft\Provisioning\Commands\'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential abuse of the provisioning registry key that facilitates indirect command execution through the executable `Provlaunch.exe`. The rule monitors process creation events on Windows systems, specifically looking for command lines that contain references to the registry path `SOFTWARE\Microsoft\Provisioning\Commands\`. By utilizing data from process creation logs, this detection can help identify malicious attempts to run commands through trusted applications, a technique often employed by adversaries for defense evasion, specifically under the MITRE ATT&CK technique **T1218: Signed Binary Proxy Execution**. The detection leverages the inherent trust of the provisioning framework within Windows environments to execute potentially harmful commands while bypassing standard security controls.
  ### Investigation Steps
  - **Verify Process Source**: Check the process creation logs in your EDR to identify the originating executable and its parent process. Ensure that the execution context aligns with expected usage patterns for `Provlaunch.exe`.
    
  - **Analyze Command Line Arguments**: Review the command line parameters associated with the process to understand the nature of the commands being executed. Assess whether these commands are legitimate or indicative of unauthorized activity.
    
  - **Cross-Reference Event Logs**: Utilize Windows Event Logs (Security, System) to correlate any related events or anomalies around the same timeframe, which may provide additional context or confirm malicious behavior.
    
  - **Inspect Registry Changes**: Use registry monitoring capabilities to identify any modifications made to the provisioning registry keys, especially those linked to `SOFTWARE\Microsoft\Provisioning\Commands\`, which could indicate unauthorized changes by an adversary.
  ### Prioritization
  Given the high level of severity for this alert, any detection of provisioning registry key abuse should prompt immediate investigation due to the potential for privilege escalation and command execution that might circumvent security measures.
  ### Blind Spots and Assumptions
  This rule assumes that `Provlaunch.exe` is being invoked externally through legitimate command invocation patterns. However, if no commands specifically reference the provisioning registry key, the rule might not trigger. Additionally, if `Provlaunch.exe` is manipulated in a manner that does not align with this rule's parameters, or if other benign commands utilize this registry key, false negatives may occur. Furthermore, the detection may not capture scenarios where adversaries employ custom scripts or tools that do not interact with the provisioning framework directly.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
