title: MpiExec Lolbin
id: 729ce0ea-5d8f-4769-9762-e35de441586d
status: test
description: Detects a certain command line flag combination used by mpiexec.exe LOLBIN
  from HPC pack that can be used to execute any other binary
references:
- https://twitter.com/mrd0x/status/1465058133303246867
- https://learn.microsoft.com/en-us/powershell/high-performance-computing/mpiexec?view=hpc19-ps
author: Florian Roth (Nextron Systems)
date: 2022-01-11
modified: 2024-11-23
tags:
- attack.execution
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_binary:
  - Image|endswith: '\mpiexec.exe'
  - Hashes|contains: 'IMPHASH=d8b52ef6aaa3a81501bdfff9dbb96217'
  selection_flags:
    CommandLine|contains:
    - ' /n 1 '
    - ' -n 1 '
  condition: all of selection*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "MpiExec Lolbin" detection rule focuses on identifying potentially malicious uses of the `mpiexec.exe` command-line utility, which is part of the High-Performance Computing (HPC) Pack. This utility is often used in legitimate high-performance computing tasks, but certain command-line flags combined with a specific file hash can indicate misuse for executing malicious binaries. The rule specifically looks for instances of `mpiexec.exe` being invoked with the command line arguments `/n 1` or `-n 1`, in conjunction with a matching binary hash (IMPHASH). By monitoring process creation events, this rule leverages data from Windows Security event logs and Sysmon logs related to process creation, allowing it to capture suspicious command executions that may be indicative of an attack leveraging the MITRE ATT&CK technique T1218, which relates to using trusted binaries to evade detection.
  ### Investigation Steps
  - **Verify Process Creation Logs**: Use EDR tools to examine process creation logs for occurrences of `mpiexec.exe` with the specified command line parameters and the correct hash. Focus on timestamps and the parent process to assess the context of execution.
  - **Cross-reference Command-Line Arguments**: Review command-line usage in the output of Sysmon and correlate with the process creation logs to verify if the flags used align with known good or bad behavior patterns.
  - **Check Network Activity**: Utilize network detection tools (NDR) to inspect any outbound connections initiated by the process, which could help determine if the execution was connected to malicious activities such as data exfiltration.
  - **Review System Audit Logs**: Analyze Windows security audit logs for any user and permission-related anomalies that coincide with the detected execution of `mpiexec.exe`. This may indicate privilege escalation or unauthorized access.
  ### Prioritization
  This alert is classified as high severity due to the potential for `mpiexec.exe` to be used for executing arbitrary code under the guise of a legitimate application, which poses a significant risk to system integrity and security.
  ### Blind Spots and Assumptions
  The rule may not trigger if `mpiexec.exe` is executed without the specified command-line flags or if the binary is signed differently than recorded in the hash. Additionally, adversaries may modify the command line or use different methods to invoke similar functionality, thereby evading detection. Finally, if Sysmon is not configured to log detailed process creation events, critical telemetry may be missing, resulting in undetected activities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
