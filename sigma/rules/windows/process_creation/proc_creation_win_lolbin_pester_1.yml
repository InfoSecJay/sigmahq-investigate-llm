title: Execute Code with Pester.bat
id: 59e938ff-0d6d-4dc3-b13f-36cc28734d4e
status: test
description: Detects code execution via Pester.bat (Pester - Powershell Modulte for
  testing)
references:
- https://twitter.com/Oddvarmoe/status/993383596244258816
- https://github.com/api0cradle/LOLBAS/blob/d148d278f5f205ce67cfaf49afdfb68071c7252a/OSScripts/pester.md
author: Julia Fomina, oscd.community
date: 2020-10-08
modified: 2023-11-09
tags:
- attack.execution
- attack.t1059.001
- attack.defense-evasion
- attack.t1216
logsource:
  category: process_creation
  product: windows
detection:
  powershell_module:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    CommandLine|contains|all:
    - 'Pester'
    - 'Get-Help'
  cmd_execution:
    Image|endswith: '\cmd.exe'
    CommandLine|contains|all:
    - 'pester'
    - ';'
  get_help:
    CommandLine|contains:
    - 'help'
    - '\?'
  condition: powershell_module or (cmd_execution and get_help)
falsepositives:
- Legitimate use of Pester for writing tests for Powershell scripts and modules
level: medium
notes: |
  ### Technical Context
  The detection rule "Execute Code with Pester.bat" is designed to identify potential misuse of the Pester PowerShell module, which is commonly employed for testing PowerShell scripts and modules. This rule monitors processes for specific command-line parameters associated with Pester, particularly the usage of "Get-Help" and other relevant commands. It leverages the process creation log source from Windows, scrutinizing the command line of newly spawned processes for indications of Pester execution through both PowerShell and command prompt (cmd.exe).
  The rule addresses the MITRE ATT&CK tactics of Execution (T1059.001) and Defense Evasion (T1216). By focusing on calls to Pester, which can be leveraged for malicious purposes under the guise of legitimate testing, this rule aims to differentiate between standard use cases and potentially harmful activities within the environment. The identification of suspicious command line strings enables analysts to take appropriate action and investigate further.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your SIEM or EDR tool for any instances of `powershell.exe` or `cmd.exe` executed with the Pester command-line parameters. Look for unusual execution patterns or times.
  - **Analyze Command Line Arguments:** Inspect the command line arguments of the detected processes for any suspicious strings or concatenations that are not typical for your environmentâ€™s use of Pester. Pay close attention to additional commands following Pester calls.
  - **Correlate with User Activity Logs:** Cross-reference the originating user account with recent user activity logs in your SIEM to determine if the account has a legitimate reason to use Pester or if there are anomalous behaviors suggesting compromise.
  - **Investigate Related Network Activity:** Use the network detection tools to check for any outbound or lateral network connections initiated by the process that executed Pester. Look for connections to unexpected destinations or unusual data flows.
  ### Prioritization
  The severity level for alerts generated by this rule is classified as medium. Although the Pester module has legitimate uses, its execution may also indicate potential malicious behavior; therefore, it warrants timely investigation to mitigate risks to the enterprise environment.
  ### Blind Spots and Assumptions
  This detection may not trigger in situations where attackers attempt to obfuscate their use of Pester or execute it in an unusual way, such as using alternative command names or loading it in a less detectable manner. Additionally, legitimate administrative uses of Pester to manage or test scripts may lead to false positives, necessitating careful context evaluation by analysts. Furthermore, attackers could potentially disable logging or use environments that do not adequately capture process creation events, resulting in the rule not firing.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
