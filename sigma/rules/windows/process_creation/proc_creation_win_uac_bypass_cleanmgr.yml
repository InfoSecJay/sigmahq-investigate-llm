title: UAC Bypass Using Disk Cleanup
id: b697e69c-746f-4a86-9f59-7bfff8eab881
status: test
description: Detects the pattern of UAC Bypass using scheduled tasks and variable
  expansion of cleanmgr.exe (UACMe 34)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|endswith: '"\system32\cleanmgr.exe /autoclean /d C:'
    ParentCommandLine: 'C:\Windows\system32\svchost.exe -k netsvcs -p -s Schedule'
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential User Account Control (UAC) bypass attempts, specifically targeting scenarios where the Windows Disk Cleanup utility (cleanmgr.exe) is executed with specific command-line arguments. The rule looks for process creation events where the `cleanmgr.exe` command ends with "/autoclean /d C:" and is initiated by a `svchost.exe` process running at a high or system integrity level. Such behavior is indicative of T1548.002 (Bypass User Account Control), a technique used by attackers to gain elevated privileges without triggering the usual UAC prompts. The primary data sources involved in this detection include Windows Security event logs that capture process creation events, along with details about the command-line arguments, parent processes, and integrity levels.
  ### Investigation Steps
  - **Review Process Tree:** Analyze the full process tree in your EDR tool to understand the parent-child relationships between processes and confirm if `cleanmgr.exe` was indeed spawned from a legitimate `svchost.exe` instance.
  - **Correlate Command-Line Arguments:** Check the command-line history for the identified instances of `cleanmgr.exe` to verify the use of the specific flags "/autoclean /d C:".
  - **Examine Integrity Levels:** Investigate the integrity levels of the processes involved. High and System integrity levels should be closely monitored as they could signify malicious intentions when executing such tasks.
  - **Check for Known Mitigations:** Look for any existing policy configurations that might prevent unauthorized access to scheduled tasks or modifications, especially on the machines where the alert was triggered.
  ### Prioritization
  Given the high severity level of this alert, it suggests that the discovered behavior may indicate an active attempt at privilege escalation, which could lead to a significant security breach if not addressed promptly.
  ### Blind Spots and Assumptions
  This rule may not trigger if the attacker employs alternative methods for UAC bypass that do not involve `cleanmgr.exe` or if command-line arguments are varied to avoid detection (e.g., using other utilities). Additionally, the rule assumes that process creation logs are adequately captured and are not being tampered with, which may not always be the case in an advanced persistent threat (APT) scenario. Lastly, there may be benign applications or scheduled tasks that could generate similar behavior, risking potential false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
