title: Security Tools Keyword Lookup Via Findstr.EXE
id: 4fe074b4-b833-4081-8f24-7dcfeca72b42
related:
- id: fe63010f-8823-4864-a96b-a7b4a0f7b929
  type: derived
status: test
description: |
  Detects execution of "findstr" to search for common names of security tools. Attackers often pipe the results of recon commands such as "tasklist" or "whoami" to "findstr" in order to filter out the results.
  This detection focuses on the keywords that the attacker might use as a filter.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/987e3ca988ae3cff4b9f6e388c139c05bf44bbb8/atomics/T1518.001/T1518.001.md#atomic-test-1---security-software-discovery
- https://www.microsoft.com/en-us/security/blog/2023/10/18/multiple-north-korean-threat-actors-exploiting-the-teamcity-cve-2023-42793-vulnerability/
- https://www.hhs.gov/sites/default/files/manage-engine-vulnerability-sector-alert-tlpclear.pdf
author: Nasreddine Bencherchali (Nextron Systems), frack113
date: 2023-10-20
modified: 2023-11-14
tags:
- attack.discovery
- attack.t1518.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\find.exe'
    - '\findstr.exe'
  - OriginalFileName:
    - 'FIND.EXE'
    - 'FINDSTR.EXE'
  selection_cli:
    CommandLine|endswith:
            # Note: Add additional keywords to increase and enhance coverage
            # Note:
            #   We use the double quote variation because in cases of where the command is executed through cmd for example:
            #       cmd /c "tasklist | findstr virus"
            #   Logging utilties such as Sysmon would capture the end quote as part of findstr execution
    - ' avira'
    - ' avira"'
    - ' cb'
    - ' cb"'
    - ' cylance'
    - ' cylance"'
    - ' defender'
    - ' defender"'
    - ' kaspersky'
    - ' kaspersky"'
    - ' kes'
    - ' kes"'
    - ' mc'
    - ' mc"'
    - ' sec'
    - ' sec"'
    - ' sentinel'
    - ' sentinel"'
    - ' symantec'
    - ' symantec"'
    - ' virus'
    - ' virus"'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect the execution of the `findstr.exe` command, which is often utilized by attackers to query system processes and filter relevant output related to security tools. By executing commands like `tasklist` or `whoami` and piping the results through `findstr`, adversaries can identify security products installed on a system, potentially aiding in further malicious activities. The specific keywords targeted in the command line, such as "virus" or product names like "Avira" and "Kaspersky," serve as indicators of reconnaissance efforts. The rule leverages process creation logs from Windows, focusing on the execution of system processes and examining their command line arguments to identify suspicious filtering of security-related outputs. This activity maps to the MITRE ATT&CK tactic of Discovery, particularly technique T1518.001 (Software Discovery).
  ### Investigation Steps
  - **Check Process Creation Logs:** Review Windows Sysmon or Security logs for events corresponding to `findstr.exe` or `find.exe` executions, especially those containing targeted keywords.
  - **Analyze Command Line Arguments:** Investigate the complete command line executed alongside the detected `findstr` invocations using EDR tools to understand the context and intent.
  - **Correlate with Other Security Events:** Cross-reference this alert with activity from other security tools (e.g., AV logs, NGFW, and Proxy) to identify any concurrent malicious behavior that could indicate a larger attack vector.
  - **Identify Source and User Context:** Determine the user account under which the command was executed and assess whether it corresponds to routine administrative activities or indicates potential compromise.
  ### Prioritization
  This alert is assigned a medium severity because while the presence of `findstr` in suspicious contexts can indicate reconnaissance attempts, the benign use of this command in administrative tasks may also trigger false positives. Prompt analysis is critical to distinguish between legitimate and malicious activities.
  ### Blind Spots and Assumptions
  This rule assumes that the use of `findstr` will be captured by available logging mechanisms. However, it may not fire if security logging is disabled or if the adversary uses alternate methods for filtering (e.g., direct calls to APIs without command line interactions). Thereâ€™s also the possibility of evasion through obfuscation techniques or the use of alternative search commands like `find` or PowerShell. Furthermore, custom or less common security tool names may also not be captured by this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
