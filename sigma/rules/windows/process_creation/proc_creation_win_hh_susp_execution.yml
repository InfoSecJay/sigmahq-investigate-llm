title: Suspicious HH.EXE Execution
id: e8a95b5e-c891-46e2-b33a-93937d3abc31
status: test
description: Detects a suspicious execution of a Microsoft HTML Help (HH.exe)
references:
- https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/chm-badness-delivers-a-banking-trojan/
- https://github.com/elastic/protections-artifacts/commit/746086721fd385d9f5c6647cada1788db4aea95f#diff-27939090904026cc396b0b629c8e4314acd6f5dac40a676edbc87f4567b47eb7
- https://www.ptsecurity.com/ww-en/analytics/pt-esc-threat-intelligence/higaisa-or-winnti-apt-41-backdoors-old-and-new/
- https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37
author: Maxim Pavlunin
date: 2020-04-01
modified: 2023-04-12
tags:
- attack.defense-evasion
- attack.execution
- attack.initial-access
- attack.t1047
- attack.t1059.001
- attack.t1059.003
- attack.t1059.005
- attack.t1059.007
- attack.t1218
- attack.t1218.001
- attack.t1218.010
- attack.t1218.011
- attack.t1566
- attack.t1566.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'HH.exe'
  - Image|endswith: '\hh.exe'
  selection_paths:
    CommandLine|contains:
    - '.application'
    - '\AppData\Local\Temp\'
    - '\Content.Outlook\'
    - '\Downloads\'
    - '\Users\Public\'
    - '\Windows\Temp\'
            # - '\AppData\Local\Temp\Temp?_'
            # - '\AppData\Local\Temp\Rar$'
            # - '\AppData\Local\Temp\7z'
            # - '\AppData\Local\Temp\wz'
            # - '\AppData\Local\Temp\peazip-tmp'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Suspicious HH.EXE Execution" is designed to identify potentially malicious activities involving the execution of the Microsoft HTML Help utility (HH.exe). This executable, while a legitimate Microsoft application used to display Help files, has been exploited by various threat actors for delivering malware, including banking trojans. The rule focuses on two key indicators: the presence of HH.exe being executed from suspicious paths and command-line arguments typically associated with malicious activities (such as containing `.application`). 
  Data sources actively utilized for detection include Windows Process Creation logs, which provide insights into the instances where processes are spawned, alongside other telemetry that can provide context around the execution environment, such as command-line parameters. The rule references multiple relevant MITRE ATT&CK tactics, including defense evasion (T1566) and execution (T1059.001), highlighting the various techniques attackers might use to evade detection while executing their payload.
  ### Investigation Steps
  - **Check Process Creation Logs**: Utilize EDR solutions to filter for process creation events related to HH.exe, focusing on the timestamp and user context to identify unexpected behaviors or user accounts.
  - **Analyze Command Line Arguments**: Investigate command-line parameters associated with the HH.exe execution—particularly looking for paths like `AppData`, `Temp`, or other user directories that indicate potentially malicious behavior.
  - **Review Network Connections**: Utilize NDR tools to check for unusual outbound connections that may coincide with the HH.exe execution, especially connections to known malicious IPs or domains.
  - **Correlate with Other Alerts**: Cross-reference the findings with any related alerts within the SIEM or security tools, looking for indications of other suspicious activities that may point to a coordinated attack.
  ### Prioritization
  The rule is classified as high severity due to the potential impact of malware delivery through HH.exe, which can lead to unauthorized access and data breaches within an organization’s environment.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where HH.exe is utilized for legitimate purposes without malicious intent or when application whitelisting is in place, thereby preventing typical execution paths from being taken. Additionally, if an adversary manages to rename HH.exe or use a different unconventional execution method, such as a PowerShell script, this detection mechanism may fail. It's important for engineers to understand that monitoring should be comprehensive, incorporating additional indicators and telemetry that may shed light on less common exploitation methods.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
