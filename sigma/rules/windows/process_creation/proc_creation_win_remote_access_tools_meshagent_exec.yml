title: Remote Access Tool - MeshAgent Command Execution via MeshCentral
id: 74a2b202-73e0-4693-9a3a-9d36146d0775
status: experimental
description: |
  Detects the use of MeshAgent to execute commands on the target host, particularly when threat actors might abuse it to execute commands directly.
  MeshAgent can execute commands on the target host by leveraging win-console to obscure their activities and win-dispatcher to run malicious code through IPC with child processes.
references:
- https://github.com/Ylianst/MeshAgent
- https://github.com/Ylianst/MeshAgent/blob/52cf129ca43d64743181fbaf940e0b4ddb542a37/modules/win-dispatcher.js#L173
- https://github.com/Ylianst/MeshAgent/blob/52cf129ca43d64743181fbaf940e0b4ddb542a37/modules/win-info.js#L55
author: '@Kostastsale'
date: 2024-09-22
tags:
- attack.command-and-control
- attack.t1219
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    ParentImage|endswith: '\meshagent.exe'
    Image|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
  condition: selection
falsepositives:
- False positives can be found in environments using MessAgent for remote management,
  analysis should prioritize the grandparent process, MessAgent.exe, and scrutinize
  the resulting child processes triggered by any suspicious interactive commands directed
  at the target host.
level: medium
notes: |
  ### Technical Context
  This Sigma rule aims to detect potentially malicious command execution via MeshAgent, a remote access tool commonly used for legitimate remote management. The rule identifies instances where MeshAgent is the parent process of command-line utilities such as `cmd.exe`, `powershell.exe`, or `pwsh.exe`, indicating that an unauthorized user may be utilizing MeshAgent to execute commands on a target host. The detection leverages process creation logs, assessing the relationship between the MeshAgent executable and its child processes. By focusing on this process hierarchy, security teams can identify attempts by threat actors to exert control over compromised systems while attempting to evade detection through legitimate-sounding software.
  ### Investigation Steps
  - Query the EDR for recent process creation events that show `meshagent.exe` as the parent process to identify potentially malicious child processes like `cmd.exe` or `powershell.exe`.
  - Review command-line parameters associated with detected child processes to ascertain whether they exhibit any typical characteristics of malicious activity, such as downloading files or executing scripts.
  - Examine logs from the NGFW and Proxy for any unusual outbound connections initiated by the detected child processes, which may strengthen the case for malicious activity.
  - Analyze the environment and usage patterns of MeshAgent to assess legitimate use cases and understand the normal operational baseline to identify false positives in the alerting.
