title: Suspicious Child Process Of Veeam Dabatase
id: d55b793d-f847-4eea-b59a-5ab09908ac90
related:
- id: 869b9ca7-9ea2-4a5a-8325-e80e62f75445
  type: similar
status: test
description: Detects suspicious child processes of the Veeam service process. This
  could indicate potential RCE or SQL Injection.
references:
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-04
tags:
- attack.initial-access
- attack.persistence
- attack.privilege-escalation
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith: '\sqlservr.exe'
    ParentCommandLine|contains: 'VEEAMSQL'
  selection_child_1:
    Image|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\wsl.exe'
    - '\wt.exe'
    CommandLine|contains:
    - '-ex '
    - 'bypass'
    - 'cscript'
    - 'DownloadString'
    - 'http://'
    - 'https://'
    - 'mshta'
    - 'regsvr32'
    - 'rundll32'
    - 'wscript'
    - 'copy '
  selection_child_2:
    Image|endswith:
    - '\net.exe'
    - '\net1.exe'
    - '\netstat.exe'
    - '\nltest.exe'
    - '\ping.exe'
    - '\tasklist.exe'
    - '\whoami.exe'
  condition: selection_parent and 1 of selection_child_*
level: critical
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious child processes that are spawned by the Veeam service process (`sqlservr.exe`). The intent behind this detection is to identify potential Remote Code Execution (RCE) or SQL Injection attacks targeting Veeam Database servers, common tactics employed by adversaries looking to gain unauthorized access or escalate privileges within an enterprise environment. The rule looks for process creation events that indicate a parent-child relationship where the parent process is `sqlservr.exe` and the child is either a command-line interface tool (such as `cmd.exe`, `powershell.exe`, `wscript.exe`, etc.) or a network utility (`net.exe`, `ping.exe`, etc.). It specifically detects child processes that include certain command-line parameters indicative of malicious activities, such as downloading content from the internet or using scripting tools known for their exploit capabilities. This detection aligns with several MITRE ATT&CK tactics and techniques, notably Initial Access, Persistence, and Privilege Escalation.
  ### Investigation Steps
  - **Check Process Trees:** Use your EDR tool to examine the process trees for the identified `sqlservr.exe` instance. This will help understand the chain of execution and determine if any malicious commands were executed.
  - **Examine Command-Line Arguments:** Analyze the command-line arguments of the child processes against known malicious patterns. Look for parameters in the command line to identify potential exploitation techniques.
  - **Review Windows Event Logs:** Query Windows Security and Sysmon event logs for any relevant security incidents or unusual activity around the time the alert was triggered. This can help in correlating with other suspicious events.
  - **Conduct Network Forensics:** Check proxy and firewall logs for any outbound connections initiated by the detected child processes. This could indicate data exfiltration or command-and-control communications.
  ### Prioritization
  Given the critical nature of the detected event and the potential risks associated with misused Veeam processes, this alert should be treated with high priority in an enterprise environment. Immediate investigation is warranted to determine if a security breach or exploitation attempt is occurring.
  ### Blind Spots and Assumptions
  This rule may not fire if the malicious child processes use different names or command-line arguments not included in the detection criteria. Additionally, if the Veeam service runs in a containerized environment or does not utilize the expected process structures, the rule may miss relevant activities. There is also an assumption that standard logging practices are followed and that the appropriate logging levels for Sysmon are configured correctly, which may not always be the case.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
