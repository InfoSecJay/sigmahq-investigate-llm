title: Potentially Suspicious File Download From File Sharing Domain Via PowerShell.EXE
id: b6e04788-29e1-4557-bb14-77f761848ab8
status: experimental
description: Detects potentially suspicious file downloads from file sharing domains
  using PowerShell.exe
references:
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
- https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv
- https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/
- https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-02-23
modified: 2024-10-21
tags:
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_websites:
    CommandLine|contains:
            # Note: You might want to baseline the github domain before including it
            # - '.githubusercontent.com'       # Includes both gists and github repositories / Michael Haag (idea).
    - 'anonfiles.com'
    - 'cdn.discordapp.com'
    - 'ddns.net'
    - 'dl.dropboxusercontent.com'
    - 'ghostbin.co'
    - 'glitch.me'
    - 'gofile.io'
    - 'hastebin.com'
    - 'mediafire.com'
    - 'mega.nz'
    - 'onrender.com'
    - 'pages.dev'
    - 'paste.ee'
    - 'pastebin.com'
    - 'pastebin.pl'
    - 'pastetext.net'
    - 'pixeldrain.com'
    - 'privatlab.com'
    - 'privatlab.net'
    - 'send.exploit.in'
    - 'sendspace.com'
    - 'storage.googleapis.com'
    - 'storjshare.io'
    - 'supabase.co'
    - 'temp.sh'
    - 'transfer.sh'
    - 'trycloudflare.com'
    - 'ufile.io'
    - 'w3spaces.com'
    - 'workers.dev'
  selection_download:
    CommandLine|contains:
    - '.DownloadString('
    - '.DownloadFile('
    - 'Invoke-WebRequest '
    - 'iwr '
    - 'wget '
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to identify potentially suspicious file downloads executed via PowerShell, particularly from known file sharing domains. It operates by monitoring process creation logs for instances of PowerShell or PowerShell Core (pwsh) being executed with command-line parameters that indicate a file download action, such as `Invoke-WebRequest`, `DownloadString`, or `DownloadFile`. The rule specifically looks for downloads from a list of domains commonly associated with file sharing and hosting to detect anomalous behaviors that could signify malicious activity.
  The data sources that inform this rule primarily include process creation logs from Windows systems, focusing on identifying not only the executing images but also the command-line arguments that indicate both the action performed and the destination domains. The combination of these indicators helps in recognizing and flagging potentially nefarious file download attempts made through PowerShell.
  ### Investigation Steps
  - Utilize EDR tools to review the process creation logs for alerts triggered by this rule and gather contextual information about the PowerShell execution, including the command-line used.
  - Investigate the network traffic logs to identify any outbound connections to the flagged domains during the time the PowerShell command was executed, checking for potential data exfiltration or unauthorized downloads.
  - Cross-reference alerts with proxy logs to validate the legitimacy of any file sharing domain interactions, highlighting any unusual patterns or behaviors that deviate from established baselines.
  - Examine any downloaded files or objects stored on the endpoint to assess their legitimacy and potential for containing malicious payloads, employing AV tools for automated scanning where applicable.
