title: Potentially Suspicious File Download From File Sharing Domain Via PowerShell.EXE
id: b6e04788-29e1-4557-bb14-77f761848ab8
status: experimental
description: Detects potentially suspicious file downloads from file sharing domains
  using PowerShell.exe
references:
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
- https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv
- https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/
- https://www.huntress.com/blog/slashandgrab-screen-connect-post-exploitation-in-the-wild-cve-2024-1709-cve-2024-1708
author: Nasreddine Bencherchali (Nextron Systems)
date: 2024-02-23
modified: 2024-10-21
tags:
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_websites:
    CommandLine|contains:
            # Note: You might want to baseline the github domain before including it
            # - '.githubusercontent.com'       # Includes both gists and github repositories / Michael Haag (idea).
    - 'anonfiles.com'
    - 'cdn.discordapp.com'
    - 'ddns.net'
    - 'dl.dropboxusercontent.com'
    - 'ghostbin.co'
    - 'glitch.me'
    - 'gofile.io'
    - 'hastebin.com'
    - 'mediafire.com'
    - 'mega.nz'
    - 'onrender.com'
    - 'pages.dev'
    - 'paste.ee'
    - 'pastebin.com'
    - 'pastebin.pl'
    - 'pastetext.net'
    - 'pixeldrain.com'
    - 'privatlab.com'
    - 'privatlab.net'
    - 'send.exploit.in'
    - 'sendspace.com'
    - 'storage.googleapis.com'
    - 'storjshare.io'
    - 'supabase.co'
    - 'temp.sh'
    - 'transfer.sh'
    - 'trycloudflare.com'
    - 'ufile.io'
    - 'w3spaces.com'
    - 'workers.dev'
  selection_download:
    CommandLine|contains:
    - '.DownloadString('
    - '.DownloadFile('
    - 'Invoke-WebRequest '
    - 'iwr '
    - 'wget '
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious file downloads from known file-sharing domains utilizing PowerShell (either `powershell.exe` or its Core variant `pwsh.exe`). It focuses on specific command-line arguments that indicate file retrieval actions, such as `.DownloadString()`, `.DownloadFile()`, `Invoke-WebRequest`, and `wget`. The rule scans the process creation logs within the Windows environment to trigger alerts based on an association with file-sharing domains such as `mediafire.com`, `mega.nz`, and various others known for hosting potentially harmful files. By leveraging command-line parameters, the rule aims to identify instances where PowerShell may be employed as a tool for downloading suspicious contentâ€”an activity associated with the **Execution** tactic (T1203) of the MITRE ATT&CK framework. This detection rule is particularly pertinent in enterprise settings where the unauthorized download of files could lead to data breaches or the introduction of malware into the network.
  ### Investigation Steps
  - **Review Process Creation Logs:** Utilize EDR solutions to examine the process creation events corresponding to the alert, particularly focusing on command-line arguments used in the execution of PowerShell.
  - **Analyze Network Connections:** Investigate network traffic data and DNS logs to identify outbound connections to the flagged file-sharing domains during the timeframe of the suspicious download.
  - **Correlate with User Activity:** Check for other suspicious user activities or behaviors in the event logs around the same time to understand the context of the alert and potentially identify a broader attack vector.
  - **Scan Downloaded Files:** If any suspicious file was downloaded, leverage AV solutions to scan those files for known malware signatures and perform a deeper analysis.
  ### Prioritization
  The severity of this alert is classified as high due to the potential for downloading malicious content from file-sharing domains, which can lead to significant risks such as data exfiltration or system compromise.
  ### Blind spots and Assumptions
  The detection rule may fail to trigger if an adversary utilizes local file paths or proxies not recognized by the rule. Additionally, legitimate users may access these domains for legitimate purposes, introducing false positives. Assumptions include that the system must have effective logging enabled for PowerShell operations, and users are not employing alternative methods (e.g., using different scripting languages or applications) to download files.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
