title: HackTool - XORDump Execution
id: 66e563f9-1cbd-4a22-a957-d8b7c0f44372
status: test
description: Detects suspicious use of XORDump process memory dumping utility
references:
- https://github.com/audibleblink/xordump
author: Florian Roth (Nextron Systems)
date: 2022-01-28
modified: 2023-02-08
tags:
- attack.defense-evasion
- attack.t1036
- attack.t1003.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\xordump.exe'
  - CommandLine|contains:
    - ' -process lsass.exe '
    - ' -m comsvcs '
    - ' -m dbghelp '
    - ' -m dbgcore '
  condition: selection
falsepositives:
- Another tool that uses the command line switches of XORdump
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "HackTool 
  - XORDump Execution" is designed to detect the execution of the XORDump utility, a process memory dumping tool that is often used by adversaries for defense evasion techniques and to extract sensitive information from memory. This rule specifically looks for process creation events where the executable name ends with `xordump.exe` and the command line arguments indicate the targeting of specific processes such as `lsass.exe` or the use of memory dump options (`-m`). The relevant technical data sources include Windows Process Creation logs, which detail the creation of processes along with their corresponding command-line parameters. By correlating the specific patterns associated with malicious use, this rule aims to provide an early warning for potential unauthorized access to sensitive data, in line with the MITRE ATT&CK tactics of Defense Evasion (TA0005) and Credential Dumping (TA1003).
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the Windows Event Logs for any recent process creation entries associated with `xordump.exe`, and note the timing and user context to assess potential malicious intent.
    
  - **Analyze Command-Line Arguments:** Examine the command-line parameters used in conjunction with `xordump.exe`, specifically looking for indications of targeting `lsass.exe` or any other abnormal arguments that suggest nefarious activity.
    
  - **Correlate with EDR Alerts:** Utilize EDR solutions to identify any related alerts that may indicate further suspicious behavior surrounding the time of the XORDump execution, such as unauthorized access to sensitive credentials.
    
  - **Investigate Recent Changes:** Look into any recent changes to system configurations, application logs, or network activity that coincide with the execution of XORDump to understand the broader context and potential impact on the environment.
  ### Prioritization
  The alert generated by this rule is categorized as high severity due to the potential risk associated with unauthorized memory dumping, which can lead to credential theft and subsequent privilege escalation if not addressed promptly.
  ### Blind Spots and Assumptions
  This Sigma rule may not fire in instances where the XORDump utility is executed with obfuscated or altered command-line parameters that do not match the specified patterns. It also assumes that standard logging is enabled on the endpoints, as any disabled logging could prevent capture of the event. Additionally, legitimate administrative actions using similar command patterns might create false positives, necessitating careful review by analysts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
