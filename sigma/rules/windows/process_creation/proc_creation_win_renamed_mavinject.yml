title: Renamed Mavinject.EXE Execution
id: e6474a1b-5390-49cd-ab41-8d88655f7394
status: test
description: Detects the execution of a renamed version of the "Mavinject" process.
  Which can be abused to perform process injection using the "/INJECTRUNNING" flag
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1056.004/T1056.004.md
- https://posts.specterops.io/mavinject-exe-functionality-deconstructed-c29ab2cf5c0e
- https://twitter.com/gN3mes1s/status/941315826107510784
- https://reaqta.com/2017/12/mavinject-microsoft-injector/
- https://twitter.com/Hexacorn/status/776122138063409152      # Deleted tweet
- https://github.com/SigmaHQ/sigma/issues/3742
- https://github.com/keyboardcrunch/SentinelOne-ATTACK-Queries/blob/6a228d23eefe963ca81f2d52f94b815f61ef5ee0/Tactics/DefenseEvasion.md#t1055-process-injection
author: frack113, Florian Roth
date: 2022-12-05
modified: 2023-02-03
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1055.001
- attack.t1218.013
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    OriginalFileName:
    - 'mavinject32.exe'
    - 'mavinject64.exe'
  filter:
    Image|endswith:
    - '\mavinject32.exe'
    - '\mavinject64.exe'
  condition: selection and not filter
falsepositives:
- Unlikely
level: high
notes: |
  n
  ### Technical Context
  The "Renamed Mavinject.EXE Execution" detection rule is designed to identify the execution of renamed variants of the legitimate "Mavinject" process, specifically targeting its abuse in process injection techniques. Mavinject can be misused by adversaries for performing process injection actions using the "/INJECTRUNNING" flag, which may lead to privilege escalation or evasion tactics as outlined in the MITRE ATT&CK framework, particularly T1055.001 (Process Injection) and T1218.013 (Signed Binary Proxy Execution). This rule relies on Windows process creation logs, specifically examining the `OriginalFileName` attribute for known Mavinject variants “mavinject32.exe” and “mavinject64.exe,” and looking for processes that appear to match these while also ensuring they do not get triggered from their original, legitimate locations.
  ### Investigation Steps
  - **Check Process Creation Logs**: Investigate the detected process creation events related to the renamed Mavinject executables in the Windows Event Logs to establish the context of the execution.
  - **Analyze Command-Line Arguments**: Retrieve and analyze the command-line parameters associated with the detected processes to identify if the "/INJECTRUNNING" flag was used, which could indicate potential malicious intent.
  - **Review EDR Alerts**: Use your Endpoint Detection and Response (EDR) tools to review any alerts associated with the execution of the detected process, focusing on whether other suspicious activities are present.
  - **Correlate with Network Activity**: Examine network connections made by the process to identify any unusual external communications that could indicate further malicious activity or command and control (C2) interactions.
  ### Prioritization
  Given the high level of risk associated with process injection techniques that can lead to privilege escalation and evasion tactics, alerts generated by this rule should be prioritized for immediate investigation to mitigate potential exploits before they can escalate into more severe incidents.
  ### Blind spots and Assumptions
  This rule assumes that renamed copies of Mavinject will be running on endpoints and expects that the necessary telemetry for process creation is being correctly logged. Potential blind spots include environments where process creation logging is disabled or where renamed executables are executed from legitimate paths that the rule does not account for. Adversaries may also employ techniques to hide their activities or use legitimate tools in a way that does not trigger this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
