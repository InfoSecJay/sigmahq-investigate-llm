title: Suspicious Child Process of AspNetCompiler
id: 9ccba514-7cb6-4c5c-b377-700758f2f120 # SuspChild
related:
- id: 4c7f49ee-2638-43bb-b85b-ce676c30b260     # TMP File
  type: similar
- id: 9f50fe98-fe5c-4a2d-86c7-fad7f63ed622     # Susp Paths
  type: similar
- id: a01b8329-5953-4f73-ae2d-aa01e1f35f00     # Exec
  type: similar
status: test
description: Detects potentially suspicious child processes of "aspnet_compiler.exe".
references:
- https://lolbas-project.github.io/lolbas/Binaries/Aspnet_Compiler/
- https://ijustwannared.team/2020/08/01/the-curious-case-of-aspnet_compiler-exe/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-08-14
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith: '\aspnet_compiler.exe'
  selection_child:
        # Note: add other potential suspicious child processes and paths
  - Image|endswith:
    - '\calc.exe'
    - '\notepad.exe'
  - Image|contains:
    - '\Users\Public\'
    - '\AppData\Local\Temp\'
    - '\AppData\Local\Roaming\'
    - ':\Temp\'
    - ':\Windows\Temp\'
    - ':\Windows\System32\Tasks\'
    - ':\Windows\Tasks\'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Suspicious Child Process of AspNetCompiler" detection rule aims to identify the creation of potentially nefarious child processes spawned by the legitimate `aspnet_compiler.exe`. This Windows process is normally used for compiling ASP.NET applications and should not typically lead to the execution of processes like `calc.exe` or `notepad.exe`, particularly from suspicious directories like `Temp` or user profile locations. By monitoring process creation events, the rule looks for instances where the parent process is `aspnet_compiler.exe`, and subsequently checks if any child processes match certain suspicious criteria. This includes checking the executable path for known benign applications utilized in illicit activities, which could indicate a misuse of the legitimate compiler to facilitate defense evasion tactics as outlined in the MITRE ATT&CK framework under the technique `T1127 
  - Trusted Developer Utilities`.
  ### Investigation Steps
  - **Check Parent Process Context:** Review the process creation logs in your EDR for `aspnet_compiler.exe` instances to assess the legitimacy of its execution and if it aligns with expected application development processes.
  - **Inspect Child Processes:** Verify the child processes spawned from `aspnet_compiler.exe`, focusing on those originating from suspicious paths (e.g., `C:\Users\Public\`, `C:\AppData\Local\Temp\`) and assess if they were unexpected or unnecessary.
  - **Review File Context and Properties:** Use your EDR or file integrity monitoring tools to inspect the properties of the identified child processes, including their digital signatures, creation dates, and any associated file hashes.
  - **Network Activity Assessment:** Examine network connection logs for any outbound requests made by the suspicious child processes, particularly those trying to contact unintended external hosts or domains.
  ### Prioritization
  This alert carries a high severity level due to its potential implication of misuse of a legitimate system process, indicating a possible attempt to execute unauthorized code or maintain persistence within the environment.
  ### Blind spots and Assumptions
  There may be legitimate scenarios where `aspnet_compiler.exe` is invoked appropriately without malicious intent, possibly leading to false positives. The detection logic presumes that monitoring is comprehensive enough to capture all relevant process creation events; however, stealthy attackers might exploit administrative privileges or use alternate methods to hide process creation. Additionally, if the child process is executed through an obfuscated or atypical method, the rule may not trigger.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
