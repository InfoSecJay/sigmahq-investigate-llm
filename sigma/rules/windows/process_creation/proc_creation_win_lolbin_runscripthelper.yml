title: Suspicious Runscripthelper.exe
id: eca49c87-8a75-4f13-9c73-a5a29e845f03
status: test
description: Detects execution of powershell scripts via Runscripthelper.exe
references:
- https://lolbas-project.github.io/lolbas/Binaries/Runscripthelper/
author: Victor Sergeev, oscd.community
date: 2020-10-09
modified: 2022-07-11
tags:
- attack.execution
- attack.t1059
- attack.defense-evasion
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\Runscripthelper.exe'
    CommandLine|contains: 'surfacecheck'
  condition: selection
fields:
- CommandLine
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious activities by monitoring for the execution of `Runscripthelper.exe`, a Windows binary often leveraged for executing PowerShell scripts. The rule specifically targets command line invocations containing the term 'surfacecheck', which may indicate an obfuscation technique or an attempt to bypass standard security controls. By analyzing process creation logs, this rule detects the presence and parameters of the command, enabling detection of unauthorized or unexpected script execution that could signify a compromise or an attempt at lateral movement within the network. Responders are encouraged to review the associated context around these executions for deeper threat assessment.
  ### Investigation Steps
  - Review the process creation logs in your EDR to identify the full command line used with `Runscripthelper.exe`, along with other related processes that may have initiated it.
  - Check the timeline of execution in the Windows Event Logs to correlate it with other alerts or anomalies in the environment, noting any suspicious patterns.
  - Conduct a search in your AV logs to ascertain whether the `Runscripthelper.exe` instance or its associated scripts have been previously flagged as malicious or unwanted.
  - Utilize your proxy logs to determine if there was any external communication around the time the script was executed, particularly with any known malicious IP addresses or domains.
