title: Suspicious Diantz Alternate Data Stream Execution
id: 6b369ced-4b1d-48f1-b427-fdc0de0790bd
status: test
description: Compress target file into a cab file stored in the Alternate Data Stream
  (ADS) of the target file.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Diantz/
author: frack113
date: 2021-11-26
modified: 2022-12-31
tags:
- attack.defense-evasion
- attack.t1564.004
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains|all:
    - diantz.exe
    - .cab
    CommandLine|re: ':[^\\]'
  condition: selection
falsepositives:
- Very Possible
level: medium
notes: |
  ### Technical Context
  The "Suspicious Diantz Alternate Data Stream Execution" rule is designed to detect potentially malicious activity related to the use of Alt Data Streams (ADS) in Windows environments, a technique associated with Defense Evasion (MITRE ATT&CK Technique T1564.004). The rule triggers on the execution of the `diantz.exe` utility, specifically monitoring for command line operations that compress files into a CAB file stored within an ADS of the target file. By analyzing process creation logs for these specific characteristics, the rule identifies suspicious usage patterns that may indicate an attempt to conceal malware or other malicious content in the less visible ADS space, which might generally evade standard security measures. 
  For detection, this rule relies on Windows Process Creation logs, which provide detailed command-line parameters of executed applications, allowing analysts to identify malicious behaviors associated with the usage of `diantz.exe`.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the relevant process creation logs for instances of `diantz.exe` being executed, particularly analyzing command line arguments for unusual or unexpected behaviors.
    
  - **Check Alternate Data Streams:** Utilize tools such as PowerShell (`Get-Item :$DATA`) to inspect the target files for any existing ADS. Look specifically for `.cab` files that may have been stored unexpectedly.
    
  - **Correlate with EDR Alerts:** Query the EDR for any alerts around the same timeline to determine if there were any other anomalous activities or indicators of compromise concurrent with the execution of `diantz.exe`.
    
  - **Conduct Threat Intelligence Lookup:** Check the source IPs and hosts involved in the file's origin and usage against threat intelligence feeds to identify any known malicious actors or patterns associated with the activity.
  ### Prioritization
  This alert is classified as medium severity due to the potential for malicious use of alternate data streams to conceal dangerous files, which can enable further compromise of the system and evade detection by traditional antivirus tools.
  ### Blind spots and Assumptions
  Potential blind spots include environments where the execution of `diantz.exe` is legitimately permitted for administrative tasks, which might lead to false positives. Additionally, if attackers use similar tools with different names or custom scripts, they may bypass this detection altogether. The assumption is that logging is correctly configured to capture and retain process creation logs; any failure to capture this telemetry would lead to missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
