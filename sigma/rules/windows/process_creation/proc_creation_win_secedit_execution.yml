title: Potential Suspicious Activity Using SeCEdit
id: c2c76b77-32be-4d1f-82c9-7e544bdfe0eb
status: test
description: Detects potential suspicious behaviour using secedit.exe. Such as exporting
  or modifying the security policy
references:
- https://blueteamops.medium.com/secedit-and-i-know-it-595056dee53d
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/secedit
author: Janantha Marasinghe
date: 2022-11-18
modified: 2022-12-30
tags:
- attack.discovery
- attack.persistence
- attack.defense-evasion
- attack.credential-access
- attack.privilege-escalation
- attack.t1562.002
- attack.t1547.001
- attack.t1505.005
- attack.t1556.002
- attack.t1562
- attack.t1574.007
- attack.t1564.002
- attack.t1546.008
- attack.t1546.007
- attack.t1547.014
- attack.t1547.010
- attack.t1547.002
- attack.t1557
- attack.t1082
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\secedit.exe'
  - OriginalFileName: 'SeCEdit'
  selection_flags_discovery:
    CommandLine|contains|all:
    - '/export'
    - '/cfg'
  selection_flags_configure:
    CommandLine|contains|all:
    - '/configure'
    - '/db'
    # filter:
    #     SubjectUserName|endswith: '$'  SubjectUserName is from event ID 4719 in the Windows Security log
  condition: selection_img and (1 of selection_flags_*)
falsepositives:
- Legitimate administrative use
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Suspicious Activity Using SeCEdit" is designed to monitor for potentially malicious activities involving `secedit.exe`, a native Windows command-line tool used for managing and configuring security policy settings. This rule specifically looks for instances where the tool is invoked with certain command line parameters, such as `/export` or `/configure`, which indicate attempts to either export or alter security configurations. The telemetry sources for this detection rely on process creation logs, where the command line arguments and the image being executed are of critical interest. By capturing this data, the rule alerts on potential anomalies that suggest abuse of the `secedit` utility during malicious activities, aligning with the MITRE ATT&CK tactics related to discovery (TA0007), persistence (TA0003), defense evasion (TA0005), credential access (TA0006), and privilege escalation (TA0004).
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine recent entries in Windows process creation logs for the execution of `secedit.exe` alongside relevant command line arguments to identify unauthorized modifications to security settings.
    
  - **Analyze User Context:** Check the user context under which `secedit.exe` was executed. Investigate the user’s permissions and whether they have legitimate reasons for making security changes.
  - **Evaluate System Modifications:** Utilize EDR tools to trace any file system changes linked to changes made by `secedit.exe`, focusing on any alterations in security policy files or registry settings that are associated with the executed commands.
  - **Cross-reference with Network Activity:** Inspect logs from Proxy, VPN, or NDR tools to determine if there are any associated suspicious network activities that coincide with the execution of `secedit.exe`.
  ### Prioritization
  This alert is given medium severity due to the sensitive nature of security configurations, which can be exploited by attackers to maintain persistence or evade defenses. However, it could also result from legitimate administrative actions, necessitating further investigation.
  ### Blind Spots and Assumptions
  This rule may not fire in instances where `secedit.exe` is executed with unexpected or less common command-line arguments not explicitly monitored in the rule’s conditions. Additionally, if an adversary is using legitimate administrative credentials, the activity may not raise immediate alarms, particularly in environments where administrative actions are common. Another assumption is that the visibility of process creation logs may vary; if logging is improperly configured or disabled, crucial data required for detection could be missed.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
