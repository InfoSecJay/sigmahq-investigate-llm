title: Suspicious MSHTA Child Process
id: 03cc0c25-389f-4bf8-b48d-11878079f1ca
status: test
description: Detects a suspicious process spawning from an "mshta.exe" process, which
  could be indicative of a malicious HTA script execution
references:
- https://www.trustedsec.com/july-2015/malicious-htas/
author: Michael Haag
date: 2019-01-16
modified: 2023-02-06
tags:
- attack.defense-evasion
- attack.t1218.005
- car.2013-02-003
- car.2013-03-001
- car.2014-04-003
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith: '\mshta.exe'
  selection_child:
  - Image|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\wscript.exe'
    - '\cscript.exe'
    - '\sh.exe'
    - '\bash.exe'
    - '\reg.exe'
    - '\regsvr32.exe'
    - '\bitsadmin.exe'
  - OriginalFileName:
    - 'Cmd.Exe'
    - 'PowerShell.EXE'
    - 'pwsh.dll'
    - 'wscript.exe'
    - 'cscript.exe'
    - 'Bash.exe'
    - 'reg.exe'
    - 'REGSVR32.EXE'
    - 'bitsadmin.exe'
  condition: all of selection*
falsepositives:
- Printer software / driver installations
- HP software
level: high
notes: |
  ### Technical Context
  This detection rule identifies suspicious behavior associated with the execution of HTA (HTML Application) scripts using the Microsoft HTML Application Host (mshta.exe). The rule aims to capture child processes that are spawned by mshta.exe, specifically looking for instances where potentially unwanted command-line utilities such as cmd.exe, PowerShell, or various scripting engines (wscript.exe, cscript.exe) are executed. This behavior might signify malicious activity as adversaries often leverage mshta.exe to run scripts that evade traditional detection mechanisms, especially in scenarios where they attempt to bypass control measures or execute payloads covertly. 
  The primary technical data sources for this detection include process creation logs that capture the administrative execution context. Each event is scrutinized to confirm the parent process (in this case, mshta.exe) and the characteristics of the child processes that could indicate a malicious intent. This detection aligns with the MITRE ATT&CK technique T1218.005 (Signed Binary Proxy Execution: HTA), which outlines how attackers utilize signed binaries to execute malicious content while maintaining stealth.
  ### Investigation Steps
  - **Verify EDR Alerts:** Check the EDR for any associated alerts related to mshta.exe and its child processes. Investigate the timeline to determine if there were recent suspicious activities around the time of the alert.
    
  - **Analyze Process Tree:** Use the process tree in a forensic tool or EDR to visualize the parent-child relationships starting from mshta.exe. Look for unusual command-line arguments or execution paths that deviate from standard operational behavior.
  - **Cross-Reference with Sysmon Logs:** Review Sysmon logs specific to process creation events to identify the details of the mshta.exe execution and its child processes. Pay attention to the network connections or file modifications associated with these processes.
  - **Examine User Context:** Validate which user initiated the mshta.exe process; legitimate administrative tasks or installations often involve mshta, but a user context that lacks administrative relevance could suggest compromise.
  ### Prioritization
  The high severity level of this alert stems from the potential use of mshta.exe as a vector for executing malicious scripts. Given that attackers can leverage this technique for lateral movement or to deliver payloads undetected, any related alert should be treated with urgency and prioritized for immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if adversaries obscure their execution by using alternate techniques or tools, such as employing a different parent process or runtime environment that does not involve mshta.exe. Furthermore, legitimate applications or installations utilizing mshta.exe effectively for valid processes can lead to false positives, specifically in the context of approved printer or software installation routines. It's essential for engineers to recognize that behavioral patterns vary significantly across different environments, which may influence the efficacy of this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
