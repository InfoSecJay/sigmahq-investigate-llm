title: Uncommon  Assistive Technology Applications Execution Via AtBroker.EXE
id: f24bcaea-0cd1-11eb-adc1-0242ac120002
status: test
description: Detects the start of a non built-in assistive technology applications
  via "Atbroker.EXE".
references:
- http://www.hexacorn.com/blog/2016/07/22/beyond-good-ol-run-key-part-42/
- https://lolbas-project.github.io/lolbas/Binaries/Atbroker/
author: Mateusz Wydra, oscd.community
date: 2020-10-12
modified: 2024-03-06
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\AtBroker.exe'
  - OriginalFileName: 'AtBroker.exe'
  selection_cli:
    CommandLine|contains: 'start'
  filter_main_builtin:
    CommandLine|contains:
    - 'animations'
    - 'audiodescription'
    - 'caretbrowsing'
    - 'caretwidth'
    - 'colorfiltering'
    - 'cursorindicator'
    - 'cursorscheme'
    - 'filterkeys'
    - 'focusborderheight'
    - 'focusborderwidth'
    - 'highcontrast'
    - 'keyboardcues'
    - 'keyboardpref'
    - 'livecaptions'
    - 'magnifierpane'
    - 'messageduration'
    - 'minimumhitradius'
    - 'mousekeys'
    - 'Narrator'
    - 'osk'
    - 'overlappedcontent'
    - 'showsounds'
    - 'soundsentry'
    - 'speechreco'
    - 'stickykeys'
    - 'togglekeys'
    - 'voiceaccess'
    - 'windowarranging'
    - 'windowtracking'
    - 'windowtrackingtimeout'
    - 'windowtrackingzorder'
  filter_optional_java:
    CommandLine|contains: 'Oracle_JavaAccessBridge'
  condition: all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Legitimate, non-default assistive technology applications execution
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect instances where non-default assistive technology applications are executed via the process `AtBroker.exe`. `AtBroker.exe` is a legitimate Windows process associated with accessibility features, but adversaries can sometimes leverage assistive technology tools for malicious purposes, such as evading detection or executing unwanted applications. The rule inspects Windows process creation logs, particularly monitoring the command line parameters associated with the execution of `AtBroker.exe`. It identifies activities where the command line includes the `start` keyword alongside an absence of known built-in parameters or applications (e.g., `Narrator`, `Sticky Keys`). This activity can indicate that a non-standard application is being run, which may represent an attempt to bypass security mechanisms. The rule is associated with the MITRE ATT&CK technique [T1218 
  - Signed Binary Proxy Execution], which explores the use of legitimate binaries to run potentially malicious code.
  ### Investigation Steps
  - **Review EDR Logs**: Analyze the process creation events in your EDR tool for the execution of `AtBroker.exe` along with the associated command line arguments to identify potentially malicious intent.
  - **Check Process Relationships**: Investigate whether the triggered `AtBroker.exe` process spawned any suspicious child processes, which might indicate lateral movement or execution of unauthorized code.
  - **Correlate with Network Data**: Look into relevant network logs to determine if there was any unusual outbound traffic from the system where the alert was triggered, which could indicate data exfiltration or callback attempts.
  - **User Context Analysis**: Examine user activity leading up to the alert to determine if the execution of the non-standard application aligns with legitimate use or if it was initiated by a suspicious account or during unusual hours.
  ### Prioritization
  The alert generated by this rule is considered medium severity in an enterprise environment. While the execution of `AtBroker.exe` with unusual parameters may not always indicate malicious activity, it requires prompt investigation due to the potential for exploitation by adversaries who leverage legitimate processes.
  ### Blind Spots and Assumptions 
  This rule may not fire if the assistive technology application is executed with allowed parameters or if the executable is manipulated to look benign. False positives can arise from the use of legitimate applications that might be flagged during regular operations, potentially causing confusion for analysts. Additionally, if command lines are obfuscated or executed using another tool (such as a scheduled task), this detection mechanism might fail. Analysts should remain aware that attackers may utilize similar methods to blend in with legitimate user activities, making contextual awareness crucial.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
