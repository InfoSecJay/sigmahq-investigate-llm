title: File Download From Browser Process Via Inline URL
id: 94771a71-ba41-4b6e-a757-b531372eaab6
status: test
description: Detects execution of a browser process with a URL argument pointing to
  a file with a potentially interesting extension. This can be abused to download
  arbitrary files or to hide from the user for example by launching the browser in
  a minimized state.
references:
- https://twitter.com/mrd0x/status/1478116126005641220
- https://lolbas-project.github.io/lolbas/Binaries/Msedge/
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2022-01-11
modified: 2023-11-09
tags:
- attack.command-and-control
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
    Image|endswith:
    - '\brave.exe'
    - '\chrome.exe'
    - '\msedge.exe'
    - '\opera.exe'
    - '\vivaldi.exe'
  selection_http:
    CommandLine|contains: 'http'
  selection_extensions:
    CommandLine|endswith:
    - '.7z'
    - '.dat'
    - '.dll'
    - '.exe'
    - '.hta'
    - '.ps1'
    - '.psm1'
    - '.txt'
    - '.vbe'
    - '.vbs'
    - '.zip'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify suspicious downloads initiated by web browsers that could lead to the execution of potentially malicious files. Specifically, the rule looks for browser processes being executed with command-line arguments that include URLs leading to files with certain extensions known to be commonly abused for malware delivery, such as '.exe', '.dll', '.zip', and others. By monitoring process creation events and analyzing the command-line parameters, this rule can flag instances where a browser might be used to download and execute harmful files, potentially without the user's awarenessâ€”especially if the browser executes in a minimized state.
  The rule correlates with the MITRE ATT&CK technique T1105, which concerns the downloading of files from a command-and-control server. It leverages data from Windows Process Creation logs, specifically focusing on the command-line attributes indicating the presence of URLs and targeted file extensions that may signal a security risk. 
  ### Investigation Steps
  - **Review Process Execution Details:** Check the process creation logs for the specific browser (e.g., brave.exe, chrome.exe) that triggered the alert. Validate the command-line arguments to understand the context of the URL accessed and the file being downloaded.
  - **Analyze Network Traffic:** Utilize the network traffic logs from your EDR/NDR solutions to correlate the time of the alert with any outbound connections made to the URL detected in the command line. Look for unusual or untrusted domains that may indicate malicious intent.
  - **Check User Activity and Context:** Examine user activity data and potential MITRE ATT&CK tactics in relation to this alert. Understand if the user activity correlates with acceptable behavior or if there may be a compromise scenario.
  - **Assess File Execution and Impact:** Investigate if the downloaded file was executed post-download. Cross-check endpoint protection logs to see if the file was flagged or quarantined by antivirus/antimalware.
  ### Prioritization
  The alert is classified as medium severity due to the potential risk associated with downloading arbitrary files that could lead to malware infection. In a corporate environment, such behavior should be treated seriously and investigated promptly to prevent potential exploits.
  ### Blind Spots and Assumptions
  There are some assumptions inherent in this rule; for example, it presupposes that the browser process execution will be logged with sufficient detail regarding command line data in the event of a download. Additionally, this rule may not trigger if the malicious file is downloaded but not executed, or if the download occurs over secure channels that obscure URL content, such as HTTPS. Adversaries may also obfuscate their download attempts by using legitimate browser functionalities or other non-standard tools, which may lead to missed alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
