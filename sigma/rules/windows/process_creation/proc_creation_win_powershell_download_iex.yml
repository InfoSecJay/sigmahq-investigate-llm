title: PowerShell Download and Execution Cradles
id: 85b0b087-eddf-4a2b-b033-d771fa2b9775
status: test
description: Detects PowerShell download and execution cradles.
references:
- https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
author: Florian Roth (Nextron Systems)
date: 2022-03-24
modified: 2023-05-04
tags:
- attack.execution
- attack.t1059
logsource:
  product: windows
  category: process_creation
detection:
  selection_download:
    CommandLine|contains:
    - '.DownloadString('
    - '.DownloadFile('
    - 'Invoke-WebRequest '
    - 'iwr '
  selection_iex:
    CommandLine|contains:
    - ';iex $'
    - '| IEX'
    - '|IEX '
    - 'I`E`X'
    - 'I`EX'
    - 'IE`X'
    - 'iex '
    - 'IEX ('
    - 'IEX('
    - 'Invoke-Expression'
  condition: all of selection_*
falsepositives:
- Some PowerShell installers were seen using similar combinations. Apply filters accordingly
level: high
notes: |
  ### Technical Context
  The "PowerShell Download and Execution Cradles" detection rule identifies potentially malicious PowerShell commands that involve downloading and executing code from the internet. The rule focuses on two main command patterns: those that attempt to download content through methods like `Invoke-WebRequest`, `DownloadString`, and `DownloadFile`, and those that execute downloaded commands using `Invoke-Expression` (often abbreviated as `IEX`). This behavior is commonly associated with various attack strategies, such as those employed by threat actors to execute remote scripts and deliver payloads.
  The primary logging source leveraged for detection is the process creation logs from Windows, which captures command-line parameters that include these suspicious patterns. By looking for specific substrings in the command-line arguments of created processes, the detection rule effectively identifies the use of PowerShell as a means of executing potentially harmful scripts. This falls under the MITRE ATT&CK framework's "Execution" tactic, specifically focusing on the technique T1059 (Scripting).
  ### Investigation Steps
  - **Check EDR for Related Processes:** Investigate the PowerShell process with the observed command-line for any parent process or associated child processes using the EDR solution. Look for unusual execution chains that could indicate an attack.
  - **Review Windows Event Logs:** Access the Windows Event Logs, particularly the Security and System logs, to assess the authentication events or system changes that coincide with the time of the suspicious PowerShell execution.
  - **Examine Proxy Logs:** Check the proxy logs to identify any web requests made by the machine at the time of the alert. Look for any requests to suspicious domains or unusual file downloads that coincide with the PowerShell commands.
  - **Analyze DNS Queries:** Investigate the DNS queries related to the timestamp of the alert to determine if any abnormal domain lookups occurred. This could highlight connections to known malicious sites or command and control servers.
  ### Prioritization
  Given that executing commands via PowerShell to download additional payloads represents a critical security risk, alerts generated by this rule should be treated with high severity. Immediate investigation is warranted, as these actions often precede further compromise of systems.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where PowerShell is executed without a direct command-line appearance, such as through obfuscation techniques or non-standard execution methods. Additionally, legitimate PowerShell installers may trigger false positives due to similar command structures. It is also presumed that the security measures on the endpoint (such as EDR configurations) are adequate to monitor system behavior consistently.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
