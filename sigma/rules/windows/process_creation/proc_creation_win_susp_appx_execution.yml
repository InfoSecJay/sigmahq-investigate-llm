title: Potentially Suspicious Windows App Activity
id: f91ed517-a6ba-471d-9910-b3b4a398c0f3
status: test
description: Detects potentially suspicious child process of applications launched
  from inside the WindowsApps directory. This could be a sign of a rogue ".appx" package
  installation/execution
references:
- https://news.sophos.com/en-us/2021/11/11/bazarloader-call-me-back-attack-abuses-windows-10-apps-mechanism/
- https://www.sentinelone.com/labs/inside-malicious-windows-apps-for-malware-deployment/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-12
modified: 2023-08-31
tags:
- attack.defense-evasion
logsource:
  product: windows
  category: process_creation
detection:
  selection_parent:
        # GrandParentImage|endswith: '\sihost.exe'
    ParentImage|contains: 'C:\Program Files\WindowsApps\'
  selection_susp_img:
    Image|endswith:
            # You can add more LOLBINs
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\wscript.exe'
  selection_susp_cli:
        # You can add more potentially suspicious keywords
    CommandLine|contains:
    - 'cmd /c'
    - 'Invoke-'
    - 'Base64'
  filter_optional_terminal:
    ParentImage|contains: ':\Program Files\WindowsApps\Microsoft.WindowsTerminal'
    ParentImage|endswith: '\WindowsTerminal.exe'
        # Note: to avoid FP add the default shells and profiles that your WT integrates
    Image|endswith:
    - '\powershell.exe'
    - '\cmd.exe'
    - '\pwsh.exe'
  condition: selection_parent and 1 of selection_susp_* and not 1 of filter_optional_*
falsepositives:
- Legitimate packages that make use of external binaries such as Windows Terminal
level: medium
notes: |
  n
  ### Technical Context
  This detection rule identifies potentially suspicious child processes initiated from applications located within the WindowsApps directory, which may indicate an unauthorized or rogue ".appx" package execution. The rule inspects process creation logs, focusing on instances where the parent process originates from the WindowsApps directory and subsequently spawns child processes such as `cmd.exe`, `powershell.exe`, or other potentially malicious executables. Additionally, it checks specific command-line arguments to identify further suspicious activity. The presence of these elements can signify attempts to evade detection, as attackers may leverage trusted applications to execute harmful actions.
  The rule includes an exception for processes initiated by Windows Terminal to reduce false positives from legitimate usage. Because Windows Terminal can utilize components like PowerShell or cmd.exe, it's crucial to distinguish between benign and malicious activity in these contexts.
  ### Investigation Steps
  - Review EDR logs to trace the parent process that initiated the suspicious child processes within the WindowsApps directory, emphasizing the timeline of these actions.
  - Analyze the command-line arguments associated with the detected processes using the SIEM to identify any potentially malicious commands or scripts, such as those using `Invoke-` or `Base64`.
  - Check for any related logs in the AV and NGFW systems that might indicate known malicious activity or external communications tied to the suspicious process.
  - Investigate cloud logs (AWS, GCP, Azure) for any unusual access patterns or deployments in conjunction with the detected activity, ensuring to correlate timeframes and user accounts involved.
