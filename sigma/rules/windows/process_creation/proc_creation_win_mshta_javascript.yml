title: Suspicious JavaScript Execution Via Mshta.EXE
id: 67f113fa-e23d-4271-befa-30113b3e08b1
status: test
description: Detects execution of javascript code using "mshta.exe".
references:
- https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.005/T1218.005.md
author: E.M. Anhaus (originally from Atomic Blue Detections, Endgame), oscd.community
date: 2019-10-24
modified: 2023-02-07
tags:
- attack.defense-evasion
- attack.t1218.005
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\mshta.exe'
  - OriginalFileName: 'MSHTA.EXE'
  selection_cli:
    CommandLine|contains: 'javascript'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Suspicious JavaScript Execution Via Mshta.EXE" detection rule identifies potential malicious activity involving the Windows Mshta.exe utility. This executable is typically used to interpret HTML applications (HTAs) but can be exploited by attackers to execute embedded JavaScript. The rule primarily looks for two conditions: it examines process creation logs to identify instances where Mshta.exe is executed and checks the command-line arguments to see if they include JavaScript code. This behavior is flagged as it often aligns with techniques used in exploitation (such as T1218.005 from the MITRE ATT&CK framework), where adversaries leverage legitimate tools to bypass defenses and perform actions within a target environment. The telemetry involved includes process creation logs and command-line parameters generated by the EDR or Sysmon, focusing on the original file name of the running executable and the specifics of its command-line execution.
  ### Investigation Steps
  - **Verify Process Creation Logs:** Check the EDR or Sysmon logs for the creation of Mshta.exe around the time of the alert, noting any unusual parent processes that initiated it.
  - **Analyze Command-Line Parameters:** Review the associated command-line arguments for any suspicious JavaScript code or obfuscation that could indicate malicious intent.
  - **Correlate with Network Activity:** Utilize NDR to assess if any network connections were established by Mshta.exe or if there were unusual outbound requests that could relate to the suspicious execution.
  - **Check for Additional Artifacts:** Look for any abnormal files, registry changes, or scheduled tasks associated with the event, as further actions may have been taken by the attacker post-execution.
  ### Prioritization
  The alert is categorized as high severity due to the potential for executing malicious code that can compromise system integrity, lead to data exfiltration, or facilitate further exploitation within the environment.
  ### Blind Spots and Assumptions
  This rule may not fire in cases where Mshta.exe is not used by an attacker, such as when they directly execute JavaScript through other means, or if command-line arguments are obfuscated beyond recognition. Additionally, if the execution process is rapidly terminated or if there is another security control in place, it may not generate detectable logs. It's assumed that logging mechanisms are properly configured to capture process creation events effectively.
  > 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environments and operational needs. Please communicate any changes to the detection engineering team.
