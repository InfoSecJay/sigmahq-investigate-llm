title: Potential DLL Injection Via AccCheckConsole
id: 0f6da907-5854-4be6-859a-e9958747b0aa
status: test
description: |
  Detects the execution "AccCheckConsole" a command-line tool for verifying the accessibility implementation of an application's UI.
  One of the tests that this checker can run are called "verification routine", which tests for things like Consistency, Navigation, etc.
  The tool allows a user to provide a DLL that can contain a custom "verification routine". An attacker can build such DLLs and pass it via the CLI, which would then be loaded in the context of the "AccCheckConsole" utility.
references:
- https://gist.github.com/bohops/2444129419c8acf837aedda5f0e7f340
- https://twitter.com/bohops/status/1477717351017680899?s=12
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/AccCheckConsole/
author: Florian Roth (Nextron Systems)
date: 2022-01-06
modified: 2024-08-29
tags:
- attack.execution
- detection.threat-hunting
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\AccCheckConsole.exe'
  - OriginalFileName: 'AccCheckConsole.exe'
  selection_cli:
    CommandLine|contains:
    - ' -hwnd'
    - ' -process '
    - ' -window '
  condition: all of selection_*
falsepositives:
- Legitimate use of the UI Accessibility Checker
level: medium
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Potential DLL Injection Via AccCheckConsole" is designed to detect potentially malicious activity involving the execution of the `AccCheckConsole` utility, which is a command-line tool used to verify accessibility implementations in applications. This rule is focused on identifying instances where an attacker may use this tool to load custom DLLs through specified command-line parameters, such as `-hwnd`, `-process`, and `-window`. By monitoring the process creation logs for the `AccCheckConsole.exe` executable, the rule identifies when a command to execute this tool is issued with the aforementioned flags that may enable DLL injection. The key data sources for this detection include process creation logs that capture the command line used to initiate `AccCheckConsole.exe`, making it possible to flag unexpected usage indicative of an attack. This detection relates to the MITRE ATT&CK tactic of execution, specifically the technique of "DLL Search Order Hijacking" (T1038).
  ### Investigation Steps
  - **Review Process Creation Logs**: Utilize your EDR tool to filter process creation events for `AccCheckConsole.exe` to identify instances of its execution along with command-line arguments.
  - **Analyze Command-Line Parameters**: Examine the command-line arguments associated with the process to check for unusual or unauthorized flags that may suggest possible DLL injection attempts.
  - **Perform File Integrity Checks**: Investigate the DLLs being loaded during the execution of the `AccCheckConsole` to confirm if any unfamiliar or suspicious DLLs are present in the directory or in memory.
  - **Query for User Activity**: Use your SIEM to correlate user activity around the time the alert was triggered. Look for any unusual account usage patterns or privileges that might support the scenario of a potential compromise.
  ### Prioritization
  This alert is classified as medium severity due to its potential implications; while the legitimate use of accessibility tools is common, the ability to inject custom routines via DLLs poses a significant risk if exploited by an adversary.
  ### Blind spots and Assumptions
  The detection rule may fail to trigger in environments where command line arguments are obfuscated, or if `AccCheckConsole.exe` is executed with a benign or unexpected command line that does not utilize the flagged options. Additionally, legitimate instances of this tool may arise in a userâ€™s workflow, leading to false positives. Adversaries may also employ alternative methods to achieve similar results (e.g., using different tools or command-line arguments). It is assumed that users who execute this tool are familiar with its legitimate uses, and any deviation from normal use patterns should warrant further investigation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
