title: PowerShell Script Change Permission Via Set-Acl
id: bdeb2cff-af74-4094-8426-724dc937f20a
related:
- id: cae80281-ef23-44c5-873b-fd48d2666f49     # PsScript Low
  type: derived
- id: 0944e002-e3f6-4eb5-bf69-3a3067b53d73     # ProcCreation Susp
  type: derived
- id: 3bf1d859-3a7e-44cb-8809-a99e066d3478     # PsScript High
  type: derived
status: test
description: Detects PowerShell execution to set the ACL of a file or a folder
references:
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1
- https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-18
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  selection_cmdlet:
    CommandLine|contains|all:
    - 'Set-Acl '
    - '-AclObject '
    - '-Path '
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious activity involving the execution of PowerShell scripts that modify file or folder Access Control Lists (ACLs) via the `Set-Acl` cmdlet. The rule monitors process creation logs for instances where the PowerShell executable is invoked, combined with specific command-line parameters that denote an attempt to change permissions on files or directories. By flagging these occurrences—especially those that may not align with typical organizational practices—analysts can uncover possible tactics employed by threat actors to gain or maintain unauthorized access to sensitive resources.
  Key data sources include process creation logs that capture detailed information about PowerShell executions. This includes the command-line arguments, which are scrutinized for signs of the `Set-Acl` cmdlet, along with properties indicating the manipulation of security settings. Detecting such actions can help prevent data exfiltration, privilege escalation, or other forms of misconduct involving access rights.
  ### Investigation Steps
  - Examine the detailed command-line arguments of the flagged PowerShell process using the EDR tool to verify the context of the `Set-Acl` command and identify the targeted files or folders.
  - Review related process threads originating from the PowerShell executable to trace any preceding suspicious activities or script executions that might provide insight into the motivation behind the ACL change.
  - Correlate alerts with logs from the NGFW to detect any unauthorized access attempts or anomalous behaviors that coincide with the time of the PowerShell execution.
  - Analyze historical file access logs to determine if the adjusted permissions correlate with any unusual file activity, potentially indicating data theft or unauthorized user access.
