title: PowerShell Script Change Permission Via Set-Acl
id: bdeb2cff-af74-4094-8426-724dc937f20a
related:
- id: cae80281-ef23-44c5-873b-fd48d2666f49     # PsScript Low
  type: derived
- id: 0944e002-e3f6-4eb5-bf69-3a3067b53d73     # ProcCreation Susp
  type: derived
- id: 3bf1d859-3a7e-44cb-8809-a99e066d3478     # PsScript High
  type: derived
status: test
description: Detects PowerShell execution to set the ACL of a file or a folder
references:
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.security/set-acl?view=powershell-5.1
- https://github.com/redcanaryco/atomic-red-team/blob/74438b0237d141ee9c99747976447dc884cb1a39/atomics/T1505.005/T1505.005.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-18
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  selection_cmdlet:
    CommandLine|contains|all:
    - 'Set-Acl '
    - '-AclObject '
    - '-Path '
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of PowerShell commands specifically leveraging the `Set-Acl` cmdlet, which is commonly used to change the Access Control List (ACL) of file and folder objects. By monitoring process creation events on Windows, particularly focusing on commands that contain the `Set-Acl` parameter with indications of the `-AclObject` and `-Path` parameters, the rule identifies potentially malicious attempts to alter file permissions. Adversaries may manipulate file ACLs to maintain persistence or evade detection by restricting access to sensitive files. This behavior is classified under the MITRE ATT&CK technique T1505.005 (API Misuse), which falls under the tactic of Defense Evasion.
  Telemetry for this rule primarily comes from Windows process creation logs, including data such as the executable name and command-line parameters used during PowerShell script execution. The monitoring of `PowerShell.EXE` and `pwsh.dll`, among other relevant file paths and parameters, is essential for effective alerting and the identification of unauthorized privilege escalations or changes to security controls.
  ### Investigation Steps
  - **Search EDR Logs:** Look for the specific instances of PowerShell execution along with the related process creation events through your Endpoint Detection and Response (EDR) tool to pinpoint the source of the executed command.
  - **Review Command-Line Arguments:** Inspect the command-line arguments associated with the PowerShell process to confirm whether `Set-Acl` was used and understand the target file or folder involved.
  - **Examine Process Parentage:** Check for any parent processes that initiated the PowerShell instance to determine if there is a related suspicious activity leading to this command's execution.
  - **Analyze Security Logs:** Cross-reference Windows Security logs for any changes to file permissions or suspicious access attempts, particularly focusing on any unexpected changes to high-value assets.
  ### Prioritization
  Given the high severity level of this alert, it indicates a strong potential for malicious activity where an attacker may be attempting to evade detection or alter permissions to facilitate further exploitation. Quick investigation and containment are crucial to protect sensitive data.
  ### Blind spots and Assumptions
  This rule may not fire in cases where the attacker uses a different means to achieve ACL changes, such as through native executables or other scripting languages. Additionally, if the PowerShell execution is heavily obfuscated or if another legitimate application is misusing this cmdlet, false negatives may occur. Adversarial techniques can also include clearing of logs or evasion tactics that prevent command-line visibility, reducing detectability.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
