title: HackTool - EDRSilencer Execution
id: eb2d07d4-49cb-4523-801a-da002df36602
status: test
description: |
  Detects the execution of EDRSilencer, a tool that leverages Windows Filtering Platform (WFP) to block Endpoint Detection and Response (EDR) agents from reporting security events to the server based on PE metadata information.
references:
- https://github.com/netero1010/EDRSilencer
author: '@gott_cyber'
date: 2024-01-02
tags:
- attack.defense-evasion
- attack.t1562
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\EDRSilencer.exe'
  - OriginalFileName: 'EDRSilencer.exe'
  - Description|contains: 'EDRSilencer'
  condition: selection
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The detection rule for "HackTool 
  - EDRSilencer Execution" is designed to identify the execution of the EDRSilencer application, a tool known for enabling attackers to bypass Endpoint Detection and Response (EDR) solutions by leveraging the Windows Filtering Platform (WFP). The rule specifically monitors process creation logs to spot instances where the EDRSilencer executable is initiated. It looks for specific attributes of the process, such as the image path ending with `\EDRSilencer.exe`, the original file name matching `EDRSilencer.exe`, and any description containing the term `EDRSilencer`. By monitoring these parameters, the rule aims to detect malicious activities that seek to hinder security defenses, aligning with the MITRE ATT&CK tactic of Defense Evasion (T1562), which encompasses actions taken by adversaries to evade detection by security measures.
  The data sources primarily involved in this detection include Windows Event Logs capturing process creation events, which provide critical details about the execution of new processes on the system. The rule essentially acts as an early warning system, alerting SOC analysts to potentially malicious activities related to EDR circumvention.
  ### Investigation Steps
  - **Analyze Process Creation Logs**: Review the process creation event logs in your EDR solution for any instances of `EDRSilencer.exe` being executed, paying attention to the user and system context of the process to determine if the execution is legitimate or suspicious.
  - **Correlate with Network Traffic**: Utilize your network detection tools to assess any outgoing connections or suspicious traffic that correlates with the execution of EDRSilencer, which may indicate attempts to communicate with command and control servers.
  - **Check Historical Logs**: Investigate historical Windows Event Logs (Security) to trace previous executions of similar processes or tools, which could indicate a recurring adversarial campaign targeting your organization's defenses.
  - **Review System Integrity**: Conduct a thorough examination of the relevant system files and registry entries to ensure no further compromise exists and that the integrity of the system has not been altered by the execution of EDRSilencer.
  ### Prioritization
  The alert is categorized as high severity due to the critical nature of EDRSilencer as a threat tool designed to bypass security controls. Its execution directly jeopardizes the integrity of the organization's security posture and warrants immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the EDRSilencer is executed with alternative vectors not captured by process creation monitoring, such as script-based execution or through remote command execution mechanisms. Additionally, if the tool is renamed or disguised, it may evade detection altogether. It's also assumed that standard process creation logging is enabled; if not, the rule will fail to detect the execution of the tool. Understanding that adversaries may modify the metadata or attributes of the binaries can aid detection engineers in enhancing detection capabilities.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
