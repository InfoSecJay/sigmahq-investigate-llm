title: UAC Bypass Using MSConfig Token Modification - Process
id: ad92e3f9-7eb6-460e-96b1-582b0ccbb980
status: test
description: Detects the pattern of UAC Bypass using a msconfig GUI hack (UACMe 55)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-30
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
    ParentImage|endswith: '\AppData\Local\Temp\pkgmgr.exe'
    CommandLine: '"C:\Windows\system32\msconfig.exe" -5'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect instances of User Account Control (UAC) bypass via the modification of the MSConfig tool, specifically utilizing a specific command line pattern associated with a well-documented technique known as UACMe (version 55). The rule identifies processes with high integrity levels, such as 'High' or 'System', that have a parent image running from the temporary application directory (`\AppData\Local\Temp\pkgmgr.exe`) and includes the command line execution of `msconfig.exe` with the parameter `-5`. By monitoring process creation events on Windows systems, it effectively captures potential privilege escalation attempts characterized by malicious use of system tools. This detection aligns with the MITRE ATT&CK framework under the tactics of **Defense Evasion** and **Privilege Escalation** (T1548.002).
  ### Investigation Steps
  - **Check Process Creation Logs**: Review the process creation logs for any instances of `msconfig.exe` being executed with the command line `-5`, especially focusing on high integrity level processes.
  - **Verify Parent Process**: Investigate the parent process `pkgmgr.exe` to see if it has any associated malicious activity, and check for other child processes spawned from it.
  - **Consult Security Events**: Look through Windows Security logs for any unusual security events that might correlate with the timing of the detected command execution, especially concerning user account control modifications.
  - **Leverage EDR Analysis**: Utilize your EDR solution to analyze the behavior and context around the process creation, looking for other suspicious indicators such as additional commands, network connections, or file transfers from the Temp directory.
  ### Prioritization
  This alert is prioritized as high severity due to its association with known methods for bypassing UAC, which often indicates a significant security risk. Responding quickly can mitigate potential privilege escalation attempts that may lead to further exploitation within the environment.
  ### Blind Spots and Assumptions
  There are scenarios where this rule may not fire, such as if the attacker uses alternative methods for UAC bypass that do not leverage `msconfig.exe` or if the command is executed under a different parent process. Additionally, the rule assumes that proper telemetry and logging are preserved; if log retention is inadequate or if there is log tampering, it can lead to missed detections. Moreover, if similar processes are legitimately executed in the environment, there could be false positives that could overwhelm the detection efficacy.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
