title: Potential Arbitrary Command Execution Using Msdt.EXE
id: 258fc8ce-8352-443a-9120-8a11e4857fa5
status: test
description: Detects processes leveraging the "ms-msdt" handler or the "msdt.exe"
  binary to execute arbitrary commands as seen in the follina (CVE-2022-30190) vulnerability
references:
- https://twitter.com/nao_sec/status/1530196847679401984
- https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/
- https://twitter.com/_JohnHammond/status/1531672601067675648
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-05-29
modified: 2024-03-13
tags:
- attack.defense-evasion
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\msdt.exe'
  - OriginalFileName: 'msdt.exe'
  selection_cmd_inline:
    CommandLine|contains: 'IT_BrowseForFile='
  selection_cmd_answerfile_flag:
    CommandLine|contains: ' PCWDiagnostic'
  selection_cmd_answerfile_param:
    CommandLine|contains|windash: ' -af '
  condition: selection_img and (selection_cmd_inline or all of selection_cmd_answerfile_*)
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule focuses on identifying potential arbitrary command execution through the use of `msdt.exe`, a legitimate Windows tool for troubleshooting problems. The rule particularly detects instances where the "ms-msdt" handler is leveraged as part of an exploit stemming from the CVE-2022-30190 vulnerability. Adversaries may utilize `msdt.exe` to execute arbitrary commands in a way that appears legitimate, bypassing typical security mechanisms. The rule primarily relies on process creation logs, particularly monitoring the execution of `msdt.exe` with specific command-line parameters indicative of exploit attempts. The relevant MITRE ATT&CK techniques associated with this behavior include T1202 (Execution via Component Object Model and OLE) and defense-evasion tactics, which describe attempts to mask malicious activities within legitimate system processes.
  ### Investigation Steps
  - **Verify Process Execution:** Use EDR to confirm the execution of `msdt.exe` and check for any indicators of compromise associated with this process. Look for unexpected parent processes or unusual command-line arguments.
  - **Analyze Command-Line Parameters:** Review the command-line parameters passed to `msdt.exe` via Windows Event Logs, focusing on flags like `IT_BrowseForFile=` or `-af`, as these may reveal further exploitation attempts.
  - **Investigate Network Connections:** Utilize network detection and response (NDR) tools to examine any outbound connections that may correlate with the suspicious execution of `msdt.exe`, as these could point to exfiltration or command and control (C2) activities.
  - **Review System Logs for Suspicious Activity:** Check Windows Security and System logs for other security events that may align with the timing of the `msdt.exe` execution, providing context to the alert and potentially uncovering a broader attack pattern.
  ### Prioritization
  Given the high severity level of this alert, an immediate investigation is warranted since the exploit could allow adversaries to execute arbitrary commands, potentially leading to significant system compromise or data leakage.
  ### Blind Spots and Assumptions
  This rule may not fire if `msdt.exe` is not invoked as the attacker intended or if command-line arguments differ significantly from those defined in the detection criteria. Additionally, if defensive measures are in place that prevent the actual exploitation or if the attack vector is modified, the rule may be bypassed. Analysts should also consider false positives that may arise from legitimate administrative activities involving `msdt.exe`.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
