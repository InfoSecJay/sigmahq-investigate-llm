title: Suspicious Obfuscated PowerShell Code
id: 8d01b53f-456f-48ee-90f6-bc28e67d4e35
status: test
description: Detects suspicious UTF16 and base64 encoded and often obfuscated PowerShell
  code often used in command lines
references:
- https://app.any.run/tasks/fcadca91-3580-4ede-aff4-4d2bf809bf99/
author: Florian Roth (Nextron Systems)
date: 2022-07-11
modified: 2023-02-14
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            #  -bxor 0x
    - 'IAAtAGIAeABvAHIAIAAwAHgA'
    - 'AALQBiAHgAbwByACAAMAB4A'
    - 'gAC0AYgB4AG8AcgAgADAAeA'
            # .Invoke() |
    - 'AC4ASQBuAHYAbwBrAGUAKAApACAAfAAg'
    - 'AuAEkAbgB2AG8AawBlACgAKQAgAHwAI'
    - 'ALgBJAG4AdgBvAGsAZQAoACkAIAB8AC'
            # {1}{0}" -f
            # {0}{3}" -f
            # {2}{0}" -f
    - 'AHsAMQB9AHsAMAB9ACIAIAAtAGYAI'
    - 'B7ADEAfQB7ADAAfQAiACAALQBmAC'
    - 'AewAxAH0AewAwAH0AIgAgAC0AZgAg'
    - 'AHsAMAB9AHsAMwB9ACIAIAAtAGYAI'
    - 'B7ADAAfQB7ADMAfQAiACAALQBmAC'
    - 'AewAwAH0AewAzAH0AIgAgAC0AZgAg'
    - 'AHsAMgB9AHsAMAB9ACIAIAAtAGYAI'
    - 'B7ADIAfQB7ADAAfQAiACAALQBmAC'
    - 'AewAyAH0AewAwAH0AIgAgAC0AZgAg'
            # {1}{0}' -f
            # {0}{3}' -f
            # {2}{0}' -f
    - 'AHsAMQB9AHsAMAB9ACcAIAAtAGYAI'
    - 'B7ADEAfQB7ADAAfQAnACAALQBmAC'
    - 'AewAxAH0AewAwAH0AJwAgAC0AZgAg'
    - 'AHsAMAB9AHsAMwB9ACcAIAAtAGYAI'
    - 'B7ADAAfQB7ADMAfQAnACAALQBmAC'
    - 'AewAwAH0AewAzAH0AJwAgAC0AZgAg'
    - 'AHsAMgB9AHsAMAB9ACcAIAAtAGYAI'
    - 'B7ADIAfQB7ADAAfQAnACAALQBmAC'
    - 'AewAyAH0AewAwAH0AJwAgAC0AZgAg'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect and alert on suspicious PowerShell command lines that contain obfuscation techniques, particularly those that utilize UTF-16 and Base64 encoding. These techniques are often employed by threat actors to evade detection and execute potentially malicious scripts without raising immediate red flags. The rule works by analyzing the command line arguments of newly created processes on Windows systems and looking for specific encoded strings or patterns that indicate obfuscation. Key technical data sources involved in this detection include process creation logs that provide visibility into command line execution (e.g., Sysmon's `process_creation` events). This rule aligns with the MITRE ATT&CK tactic of "Defense Evasion" and particularly targets the "Obfuscated Files or Information" technique (T1027), which describes the use of encoding or obfuscation to hide malicious content.
  ### Investigation Steps
  - **Check Command Line Arguments:** Investigate the process creation logs to identify the command line arguments that triggered the alert, focusing on whether the obfuscated strings detected are executed in a context that indicates potential compromise.
  - **Correlate with EDR Data:** Utilize EDR solutions to analyze the behavior of the related process, checking for additional indicators of compromise, such as unusual network connections or file system changes initiated by the PowerShell script.
  - **Review Security Logs:** Inspect Windows Security and Application logs for any related failed or suspicious login attempts that might correlate with the timing of the executed PowerShell commands to assess if unauthorized access was a precursor to malicious scripting.
  - **Analyze Network Traffic:** Utilize NDR tools to analyze network traffic generated by the suspicious PowerShell execution, identifying any outgoing connections to known malicious domains or IP addresses that may have been contacted post-execution.
  ### Prioritization
  The severity level for alerts generated by this rule is rated as high due to the nature of obfuscated PowerShell commands often being indicative of active intrusion attempts or malware deployment. Organizations should prioritize immediate investigation as these threats can lead to significant data breaches or system compromise if left unaddressed.
  ### Blind Spots and Assumptions
  This rule may not fire if the obfuscation techniques used do not match the specific patterns defined in the detection logic, potentially allowing advanced adversaries to evade detection. Additionally, legitimate system administrator use of obfuscated PowerShell in authorized scripts could lead to false positives. It is assumed that the detection relies on an adequately configured Sysmon agent to capture complete command line details. If process creation logging is not enabled, the rule will also fail to generate alerts.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
