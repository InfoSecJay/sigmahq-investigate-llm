title: Potential Commandline Obfuscation Using Escape Characters
id: f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd
status: test
description: Detects potential commandline obfuscation using known escape characters
references:
- https://twitter.com/vysecurity/status/885545634958385153
- https://twitter.com/Hexacorn/status/885553465417756673     # Dead link
- https://twitter.com/Hexacorn/status/885570278637678592     # Dead link
- https://www.mandiant.com/resources/blog/obfuscation-wild-targeted-attackers-lead-way-evasion-techniques
- https://web.archive.org/web/20190213114956/http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/
author: juju4
date: 2018-12-11
modified: 2023-03-03
tags:
- attack.defense-evasion
- attack.t1140
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            # - <TAB>   # no TAB modifier in sigmac yet, so this matches <TAB> (or TAB in elasticsearch backends without DSL queries)
    - 'h^t^t^p'
    - 'h"t"t"p'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies potential obfuscation in command-line arguments associated with Windows process creation. Attackers often use escape characters or unusual formatting to disguise malicious commands and evade security measures. The rule specifically looks for known sequences of escape characters, such as 'h^t^t^p' and 'h"t"t"p', which may suggest attempts to hide the true nature of a command. The primary data source utilized in this rule is process creation logs, which capture command-line inputs when processes are initiated on Windows systems. By monitoring these logs, the SOC can identify suspicious activities that may indicate a more significant security threat.
  ### Investigation Steps
  - Investigate the process creation logs to determine the origin and context of the detected command-line obfuscation. Look for the PID and user context for further insights.
  - Correlate the identified command with other endpoint activity using your EDR solution to see if there are concurrent or prior actions that may indicate malicious intent.
  - Review any outbound network connections from the affected host to identify potential data exfiltration or communication with known malicious domains using NDR or Proxy logs.
  - Check for any recent changes in the environment, such as software installations or configuration changes, using cloud logs or AV reports, which may relate to the observed command-line activity.
