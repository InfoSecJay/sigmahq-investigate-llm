title: Potentially Suspicious Event Viewer Child Process
id: be344333-921d-4c4d-8bb8-e584cf584780
related:
- id: 7c81fec3-1c1d-43b0-996a-46753041b1b6
  type: derived
status: test
description: Detects uncommon or suspicious child processes of "eventvwr.exe" which
  might indicate a UAC bypass attempt
references:
- https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/
- https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100
author: Florian Roth (Nextron Systems)
date: 2017-03-19
modified: 2023-09-28
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
- car.2019-04-001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\eventvwr.exe'
  filter_main_generic:
    Image|endswith:
    - ':\Windows\System32\mmc.exe'
    - ':\Windows\System32\WerFault.exe'
    - ':\Windows\SysWOW64\WerFault.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule targets potentially suspicious child processes spawned by `eventvwr.exe`, the executable for the Windows Event Viewer. It is designed to identify behaviors that may indicate attempts at bypassing User Account Control (UAC) by looking for uncommon child processes related to `eventvwr.exe`. The specific child processes monitored by the rule are `mmc.exe` and `WerFault.exe`, which are often benign but can be misused in a malicious context. By analyzing the `process_creation` category of Windows event logs, specifically those that detail parent-child relationships. This rule aligns with the MITRE ATT&CK tactics of Defense Evasion (T1548.002) and Privilege Escalation.
  ### Investigation Steps
  - **Review Process Creation Logs:** Analyze the process creation logs for events related to `eventvwr.exe`, focusing on the parent-child relationships to identify any suspicious behavior.
  - **Validate Column Details:** Check the command line arguments and image paths of the spawned processes to ensure they are not obfuscated or misleading.
  - **Cross-reference with EDR:** Utilize the EDR solution to gather additional context on the detected processes, such as whether they have been flagged as malicious in other environments.
  - **Inspect Execution Context:** Investigate the timing and context of the process creation, looking for any irregular patterns that might indicate malicious intent, such as unexpected system user accounts initiating the process.
  ### Prioritization
  The alert is rated as high severity due to the potential for UAC bypass, which directly undermines a fundamental security control in Windows environments. The presence of suspicious child processes could indicate a serious compromise that warrants immediate attention.
  ### Blind Spots and Assumptions
  There are several limitations to this ruleâ€™s efficacy. First, it assumes that `eventvwr.exe` was used as a legitimate parent process, which may not be the case in every environment. Additionally, if an adversary uses a different legitimate parent or employs various evasion techniques (such as process injection), this rule may fail to trigger. The absence of other established telemetry related to `eventvwr.exe`, or if the process terminates quickly, may also result in undetected malicious activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
