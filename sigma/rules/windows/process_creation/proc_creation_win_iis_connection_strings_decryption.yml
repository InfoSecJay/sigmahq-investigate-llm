title: Microsoft IIS Connection Strings Decryption
id: 97dbf6e2-e436-44d8-abee-4261b24d3e41
status: test
description: Detects use of aspnet_regiis to decrypt Microsoft IIS connection strings.
  An attacker with Microsoft IIS web server access via a webshell or alike can decrypt
  and dump any hardcoded connection strings, such as the MSSQL service account password
  using aspnet_regiis command.
references:
- https://www.elastic.co/guide/en/security/current/microsoft-iis-connection-strings-decryption.html
author: Tim Rauch, Elastic (idea)
date: 2022-09-28
modified: 2022-12-30
tags:
- attack.credential-access
- attack.t1003
logsource:
  category: process_creation
  product: windows
detection:
  selection_name:
  - Image|endswith: '\aspnet_regiis.exe'
  - OriginalFileName: 'aspnet_regiis.exe'
  selection_args:
    CommandLine|contains|all:
    - 'connectionStrings'
    - ' -pdf'
  condition: all of selection*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Microsoft IIS Connection Strings Decryption" is designed to detect potentially malicious activity on Windows systems where an attacker is attempting to decrypt connection strings stored within Microsoft IIS (Internet Information Services). The rule focuses on the invocation of the `aspnet_regiis.exe` process with specific command-line arguments, namely those that contain the terms 'connectionStrings' and ' -pdf'. This activity is particularly concerning because an attacker who gains access to an IIS web server—possibly through a web shell—can utilize this command to reveal sensitive information, such as the MSSQL service account password, hardcoded within the application’s configuration files.
  The detection leverages Windows process creation logs to identify instances of `aspnet_regiis.exe` being executed in this manner. Its effectiveness lies in the specific command-line parameters associated with this process, which are indicative of an intent to manipulate connection strings. This rule aligns with the MITRE ATT&CK tactic of Credential Access (TA0006) and specifically addresses technique T1003, which pertains to credential dumping.
  ### Investigation Steps
  - **Check Process Creation Logs**: Use your EDR tool to review the process creation logs for instances of `aspnet_regiis.exe` and examine the command-line arguments used during execution. Look for processes initiated from unusual locations or by non-administrative accounts.
  - **Analyze User Activity**: Investigate the user account associated with the execution of the `aspnet_regiis.exe` process to determine if the account has suspicious behavior patterns or if there are any anomalies in their access rights.
  - **Examine Web Server Logs**: Review Microsoft IIS logs for any irregular HTTP requests or patterns preceding the execution of `aspnet_regiis.exe`. Such queries may point to exploitation attempts or webshell usage.
  - **Review Application Configuration Files**: Check the relevant configuration files in your IIS applications for any changes or anomalies indicating unauthorized access or modification, especially regarding hardcoded connection strings.
  ### Prioritization
  This alert is classified as high severity due to the potential exposure of sensitive information that could compromise the security of database accounts and other critical infrastructure components. The ability for an attacker to decrypt connection strings significantly escalates the risk of further exploitation in the enterprise environment.
  ### Blind Spots and Assumptions
  Potential blind spots include the possibility that the rule may not detect legitimate use of `aspnet_regiis.exe` by authorized personnel for maintenance tasks, which could lead to false positives. Additionally, the rule assumes that logging for process creation is properly configured and accessible; if this is not the case, the detection may fail to trigger. Attackers could also disable logging or employ methods to obfuscate their actions, rendering the detection ineffective.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
