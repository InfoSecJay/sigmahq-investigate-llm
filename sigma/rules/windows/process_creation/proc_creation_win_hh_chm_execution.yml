title: HH.EXE Execution
id: 68c8acb4-1b60-4890-8e82-3ddf7a6dba84
status: test
description: Detects the execution of "hh.exe" to open ".chm" files.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.001/T1218.001.md
- https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html
- https://www.zscaler.com/blogs/security-research/unintentional-leak-glimpse-attack-vectors-apt37
author: E.M. Anhaus (originally from Atomic Blue Detections, Dan Beavin), oscd.community
date: 2019-10-24
modified: 2023-12-11
tags:
- attack.defense-evasion
- attack.t1218.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'HH.exe'
  - Image|endswith: '\hh.exe'
  selection_cli:
    CommandLine|contains: '.chm'
  condition: all of selection_*
falsepositives:
- False positives are expected with legitimate ".CHM"
level: low
notes: |
  n
  ### Technical Context
  The "HH.EXE Execution" detection rule is designed to identify instances where the Windows Help Viewer (hh.exe) is invoked to open Compiled HTML Help (.chm) files on Windows systems. This execution behavior may be indicative of potentially malicious activity as adversaries can leverage htm files to deliver payloads or perform reconnaissance while obscuring their actions under the guise of legitimate file usage. The rule specifically monitors process creation events, focusing on logs that indicate the invocation of hh.exe and checks for command-line parameters that suggest a .chm file is being accessed. By evaluating both the process name and command line arguments, the rule aims to detect malicious use in alignment with the MITRE ATT&CK framework, particularly under the technique T1218.001, which pertains to the use of Windows Help Files for defense evasion.
  ### Investigation Steps
  - **Review Process Creation Logs:** Utilize the EDR tool to examine the process creation logs for instances of hh.exe. Verify the source of the .chm file and assess if it comes from a trusted location or an unexpected path.
  - **Correlate Command Line Arguments:** Check the command line parameters associated with the hh.exe execution. Anomalous file names or unexpected parameters could highlight suspicious activity warranting further investigation.
  - **Inspect Network Activity:** Search for related network connections using NDR logs during the time of hh.exe execution. Look for any outbound connections that may indicate exfiltration or other malicious behavior linked to the opened .chm file.
  - **Evaluate User Context:** Analyze the user context in which hh.exe was run. If the process was initiated by a non-privileged or unfamiliar user account, this could signal a higher threat level and may require escalation.
  ### Prioritization
  This alert is classified as low severity because, while the execution of hh.exe may indicate a potential threat, it can also occur through legitimate means when handling .chm files. Each instance should be evaluated in the context of normal user behavior within the environment.
  ### Blind Spots and Assumptions
  This rule may not capture all malicious uses of hh.exe, especially if executed with obfuscation techniques that alter command line parameters or if the attack uses alternative methods to trigger .chm file access. Furthermore, false positives are expected when legitimate users open .chm files, making context critical in response efforts. Additionally, if an adversary uses legitimate software in unexpected ways or if the telemetry from certain endpoints is missing or incorrectly configured, the rule might fail to fire.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
