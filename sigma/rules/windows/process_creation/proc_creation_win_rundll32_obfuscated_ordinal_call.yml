title: Potential Obfuscated Ordinal Call Via Rundll32
id: 43fa5350-db63-4b8f-9a01-789a427074e1
status: test
description: Detects execution of "rundll32" with potential obfuscated ordinal calls
references:
- Internal Research
- https://www.youtube.com/watch?v=52tAmVLg1KM&t=2070s
author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel (Nextron
  Systems)
date: 2023-05-17
modified: 2025-02-23
tags:
- attack.defense-evasion
- attack.t1027.010
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\rundll32.exe'
  - OriginalFileName: 'RUNDLL32.EXE'
  - CommandLine|contains: 'rundll32'
  selection_cli:
    CommandLine|contains:
    - '#+'
    - '#-'
            # ordinal can be represented by adding any number of zeros in front ordinal number, for e.g. 000000024
    - '#0'
            # ordinal is 16 bit ordinal, so if you make the number large enough (don't fit in 16 bit space), then it normally wraps around.
            # for e.g ordinal 24 can be also represented by 65560 (65536+24)
    - '#655'
    - '#656'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Potential Obfuscated Ordinal Call Via Rundll32" detection rule aims to identify potentially malicious uses of the `rundll32.exe` utility on Windows operating systems. This tool, while legitimate for executing dynamic link libraries (DLLs), can be misused by cyber adversaries to run harmful code in an obfuscated manner. The rule specifically looks for command-line parameters that include the sequence `#`, which is associated with obfuscated ordinal calls. It checks for instances where `rundll32.exe` is initiated with these obfuscated parameters, alongside confirmed characteristics of legitimate `rundll32` executions. 
  This detection is relevant to the MITRE ATT&CK technique T1027.010 (Obfuscated Files or Information) under the defense evasion tactic. The rule leverages process creation logs, focusing on command-line details to identify and respond to suspicious behaviors that may indicate an attempt to bypass security measures through obfuscation.
  ### Investigation Steps
  - **Verify Process Details**: Check the EDR or Sysmon logs for the execution details of `rundll32.exe`, including the process ID, parent processes, and execution path to ascertain the legitimacy of the execution.
  - **Examine Command-Line Parameters**: Inspect the command-line used with `rundll32.exe`. Note any obfuscated parameters, particularly those containing sequences like `#+`, `#0`, or higher ordinal values that could indicate malicious intent.
  - **Analyze Network Traffic**: Utilize NDR solutions to review outbound network connections made by the process. Look for unusual communication patterns or connections to known malicious domains that may indicate a compromise.
  - **Cross-Reference with Threat Intelligence**: Query the behavior against threat intelligence databases. Check if the specific invocation patterns of `rundll32.exe` have been associated with known threats or indicators of compromise.
  ### Prioritization
  The alert carries a medium severity level due to the potential risk associated with obfuscated executable calls. Such patterns could indicate attempts to bypass security controls, warranting timely investigation to prevent potential exploitations.
  ### Blind Spots and Assumptions
  This rule may not fire in certain situations where `rundll32.exe` is executed with legitimate command-line arguments or in instances of direct local execution without obfuscation. Additionally, adversaries may use alternative methods or executables to perform similar obfuscation tactics, leading to bypassing of this detection. Analysts should remain cognizant that the rule is not exhaustive and may require supplemental methods to cover a wider range of obfuscation techniques.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
