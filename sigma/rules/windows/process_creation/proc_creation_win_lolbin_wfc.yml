title: Use of Wfc.exe
id: 49be8799-7b4d-4fda-ad23-cafbefdebbc5
status: test
description: The Workflow Command-line Compiler can be used for AWL bypass and is
  listed in Microsoft's recommended block rules.
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wfc/
- https://learn.microsoft.com/en-us/windows/security/application-security/application-control/windows-defender-application-control/design/applications-that-can-bypass-wdac
author: 'Christopher Peacock @SecurePeacock, SCYTHE @scythe_io'
date: 2022-06-01
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\wfc.exe'
  - OriginalFileName: 'wfc.exe'
  condition: selection
falsepositives:
- Legitimate use by a software developer
level: medium
notes: |
  n
  ### Technical Context
  The detection rule for the use of `wfc.exe` focuses on identifying unauthorized or potentially malicious instances of the Workflow Command-line Compiler, which is utilized for compiling Windows workflow definitions. Given its ability to bypass application control mechanisms, such as Windows Defender Application Control (WDAC), this process is monitored closely as it can be leveraged in malicious contexts. The rule looks for the `Image` path ending with `\wfc.exe` and checks the `OriginalFileName` to confirm the execution of the legitimate binary, allowing for detection of potential misuse across Windows endpoints. This aligns with the MITRE ATT&CK tactics of defense evasion, specifically technique T1127, emphasizing methods adversaries might use to evade detection when deploying their payloads or executing commands.
  ### Investigation Steps
  - **Check EDR Alerts:** Review any alerts generated by EDR for the process `wfc.exe`, paying attention to the context in which it was executed and any associated command-line parameters that may indicate malicious intent.
  - **Analyze Command-Line Arguments:** Investigate the command-line used during the execution of `wfc.exe` to determine if there are any suspicious parameters or payloads that deviate from typical usage patterns.
  - **Review Process Tree:** Examine the parent-child relationship of the process creation for `wfc.exe`, ensuring that it was not spawned by a known malicious process or script which may indicate adversarial behavior.
  - **Correlate with Windows Security Logs:** Search for any related events in Windows Security logs that could provide insight into user accounts or sessions that invoked `wfc.exe`, as well as any other unusual activities around that time.
  ### Prioritization
  The alert for the use of `wfc.exe` is classified with a medium severity level due to its potential for evading application controls and executing other harmful actions, making it essential for further investigation in any enterprise environment.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where `wfc.exe` is used for legitimate development purposes, potentially leading to false positives. Additionally, if adversaries rename or modify the binary to evade detection, or if an environment lacks adequate logging configurations, the detection may fail entirely or produce incomplete results. It's crucial for engineers to recognize that attackers may employ various tactics to exploit such binaries beyond their conventional usage.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
