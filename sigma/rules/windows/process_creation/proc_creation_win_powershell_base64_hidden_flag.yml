title: Malicious Base64 Encoded PowerShell Keywords in Command Lines
id: f26c6093-6f14-4b12-800f-0fcb46f5ffd0
status: test
description: Detects base64 encoded strings used in hidden malicious PowerShell command
  lines
references:
- http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/
author: John Lambert (rule)
date: 2019-01-16
modified: 2023-01-05
tags:
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_hidden:
    CommandLine|contains: ' hidden '
  selection_encoded:
    CommandLine|contains:
    - 'AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA'
    - 'aXRzYWRtaW4gL3RyYW5zZmVy'
    - 'IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA'
    - 'JpdHNhZG1pbiAvdHJhbnNmZX'
    - 'YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg'
    - 'Yml0c2FkbWluIC90cmFuc2Zlc'
    - 'AGMAaAB1AG4AawBfAHMAaQB6AGUA'
    - 'JABjAGgAdQBuAGsAXwBzAGkAegBlA'
    - 'JGNodW5rX3Npem'
    - 'QAYwBoAHUAbgBrAF8AcwBpAHoAZQ'
    - 'RjaHVua19zaXpl'
    - 'Y2h1bmtfc2l6Z'
    - 'AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A'
    - 'kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg'
    - 'lPLkNvbXByZXNzaW9u'
    - 'SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA'
    - 'SU8uQ29tcHJlc3Npb2'
    - 'Ty5Db21wcmVzc2lvb'
    - 'AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ'
    - 'kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA'
    - 'lPLk1lbW9yeVN0cmVhb'
    - 'SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A'
    - 'SU8uTWVtb3J5U3RyZWFt'
    - 'Ty5NZW1vcnlTdHJlYW'
    - '4ARwBlAHQAQwBoAHUAbgBrA'
    - '5HZXRDaHVua'
    - 'AEcAZQB0AEMAaAB1AG4Aaw'
    - 'LgBHAGUAdABDAGgAdQBuAGsA'
    - 'LkdldENodW5r'
    - 'R2V0Q2h1bm'
    - 'AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A'
    - 'QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA'
    - 'RIUkVBRF9JTkZPNj'
    - 'SFJFQURfSU5GTzY0'
    - 'VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA'
    - 'VEhSRUFEX0lORk82N'
    - 'AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA'
    - 'cmVhdGVSZW1vdGVUaHJlYW'
    - 'MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA'
    - 'NyZWF0ZVJlbW90ZVRocmVhZ'
    - 'Q3JlYXRlUmVtb3RlVGhyZWFk'
    - 'QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA'
    - '0AZQBtAG0AbwB2AGUA'
    - '1lbW1vdm'
    - 'AGUAbQBtAG8AdgBlA'
    - 'bQBlAG0AbQBvAHYAZQ'
    - 'bWVtbW92Z'
    - 'ZW1tb3Zl'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The detection rule "Malicious Base64 Encoded PowerShell Keywords in Command Lines" aims to identify potential malicious PowerShell execution by monitoring for unusual command-line parameters containing base64-encoded strings. Attackers often use base64 encoding to obfuscate malicious commands and evade detection mechanisms. This rule specifically targets instances where PowerShell (powershell.exe or pwsh.exe) is executed with command-line arguments that are both encoded in base64 and include specific keywords indicative of suspicious activity. By examining process creation logs, particularly the command line parameters utilized during the invocation of these PowerShell instances, the rule leverages data from Windows event logs to discern whether the execution matches the patterns associated with malicious intent. This analysis aligns with the MITRE ATT&CK technique T1059.001, which focuses on scripting languages like PowerShell used for execution.
  ### Investigation Steps
  - **Check EDR Logs**: Investigate the EDR for related processes, especially the parent-child process relationships, to understand the context of the PowerShell command execution.
  - **Analyze Command-Line**: Review the complete command line associated with the identified PowerShell process to verify if any sensitive operations or external URL calls are present.
  - **Review Windows Event Logs**: Cross-reference with Windows Security and Sysmon logs to gather additional context about process creation and any abnormal account activity surrounding the time of the alert.
  - **Assess Network Activity**: Examine network connections initiated by the PowerShell process through your NDR or firewall logs to identify any external communications to blacklisted domains or known malicious IPs.
  ### Prioritization
  Given the severity level marked as high, alerts generated by this rule warrant immediate attention as they may indicate active exploitation attempts and pose a significant risk to the organization's environment.
  ### Blind Spots and Assumptions
  This rule assumes that PowerShell is utilized in its standard form and does not account for instances where malicious command execution might occur through alternative methods (e.g., direct DLL injection or execution by a different scripting host). Additionally, if attackers employ different encoding techniques, or if they use non-standard PowerShell executable names, the rule may not trigger. Understanding these limitations is key for security engineers to mitigate potential evasion tactics. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
