title: HackTool - CrackMapExec Process Patterns
id: f26307d8-14cd-47e3-a26b-4b4769f24af6
status: test
description: Detects suspicious process patterns found in logs when CrackMapExec is
  used
references:
- https://mpgn.gitbook.io/crackmapexec/smb-protocol/obtaining-credentials/dump-lsass
author: Florian Roth (Nextron Systems)
date: 2022-03-12
modified: 2023-02-13
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  product: windows
  category: process_creation
detection:
  selection_lsass_dump1:
    CommandLine|contains|all:
    - 'tasklist /fi '
    - 'Imagename eq lsass.exe'
    CommandLine|contains:
    - 'cmd.exe /c '
    - 'cmd.exe /r '
    - 'cmd.exe /k '
    - 'cmd /c '
    - 'cmd /r '
    - 'cmd /k '
    User|contains:     # covers many language settings
    - 'AUTHORI'
    - 'AUTORI'
  selection_lsass_dump2:
    CommandLine|contains|all:
    - 'do rundll32.exe C:\windows\System32\comsvcs.dll, MiniDump'
    - '\Windows\Temp\'
    - ' full'
    - '%%B'
  selection_procdump:
    CommandLine|contains|all:
    - 'tasklist /v /fo csv'
    - 'findstr /i "lsass"'
  condition: 1 of selection*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma detection rule focuses on identifying suspicious process creation patterns associated with CrackMapExec (CME), a tool popular among attackers for credential dumping and lateral movement in Windows environments. The rule leverages Windows process creation logs to detect specific command-line arguments used by CME for dumping the Local Security Authority Subsystem Service (LSASS) process. It looks for various patterns indicating that an attacker may be attempting to extract sensitive information from LSASS by utilizing commands that involve `tasklist`, `cmd.exe`, or `rundll32.exe`. These patterns are indicative of credential access techniques outlined in the MITRE ATT&CK framework, particularly under the tactic of Credential Access (TA0006) and technique T1003.001 (Credential Dumping: LSASS Memory).
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the Windows Security log for process creation events (Event ID 4688) related to the suspicious command lines identified by the detection rule. Pay particular attention to user accounts that executed these commands to assess potential malicious activity.
  - **Correlate with EDR Data:** Utilize EDR tools to analyze the behavior of processes that match the detected patterns. Inspect any related processes or files that may have been created, modified, or accessed during the time of the suspicious command execution.
  - **Assess Network Connections:** Use network traffic analysis tools to examine any outbound connections made by the processes involved. Investigate potential data exfiltration or command and control communications that could relate to the activities performed.
  - **Review User Activity and Context:** Investigate the context of the user accounts running the detected commands by checking user logon logs (Event ID 4624) and the associated machine activity. Check for any behavior anomalies or previous alerts that may correlate with the identified suspicious activity.
  ### Prioritization
  Given the sensitivity of the data potentially targeted (e.g., credentials) and the tactics employed by attackers, this alert carries a high severity level. Prompt investigation is crucial to mitigate any risk of credential compromise that may lead to further unauthorized access within the organization's network.
  ### Blind spots and Assumptions
  This detection rule may not fire in scenarios where attackers utilize obfuscation techniques to disguise their command-line arguments or when they execute similar commands without using the flagged patterns. Additionally, if the environment lacks logging for process creation or if Sysmon is not deployed, the rule will inevitably fail to capture relevant activities. Responders should assume that sophisticated adversaries may employ tools or techniques to evade detection, and it is essential to maintain a multi-layered security posture for comprehensive visibility.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
