title: Nslookup PowerShell Download Cradle - ProcessCreation
id: 1b3b01c7-84e9-4072-86e5-fc285a41ff23
related:
- id: 72671447-4352-4413-bb91-b85569687135
  type: obsolete
- id: 999bff6d-dc15-44c9-9f5c-e1051bfc86e1
  type: similar
status: test
description: Detects suspicious powershell download cradle using nslookup. This cradle
  uses nslookup to extract payloads from DNS records
references:
- https://twitter.com/Alh4zr3d/status/1566489367232651264
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-09-05
modified: 2022-12-19
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|contains: '\nslookup.exe'
  - OriginalFileName: '\nslookup.exe'
  selection_cmd:
    ParentImage|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    CommandLine|contains:
    - ' -q=txt '
    - ' -querytype=txt '
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Nslookup PowerShell Download Cradle rule detects suspicious activities involving the execution of PowerShell commands that utilize `nslookup.exe` to download malicious payloads from DNS records. This technique is commonly employed by attackers to bypass traditional security measures, leveraging legitimate system binaries to evade detection. The rule identifies instances where the command line arguments for PowerShell specifically invoke `nslookup` with DNS query parameters, such as `-q=txt` or `-querytype=txt`, which are typically indicative of attempts to extract data from DNS records. The primary data sources involved in this detection are Windows Process Creation logs that capture the execution of processes and their associated command-line parameters. This detection correlates with the [MITRE ATT&CK technique](https://attack.mitre.org/techniques/T1203/) associated with defense evasion.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the process creation logs for instances of `nslookup.exe` being launched by PowerShell. Look for accompanying command-line arguments that utilize DNS queries.
  - **Analyze Network Traffic:** Utilize the EDR or NetFlow data to see if there is any suspicious DNS traffic correlating with the time of the `nslookup` execution, especially queries that return TXT records.
  - **Inspect PowerShell logs:** Check Windows PowerShell logs (and Sysmon if configured) for any unusual script activity leading up to the execution, specifically looking for commands that would download or execute payloads.
  - **Correlate with Threat Intelligence:** Cross-reference the information gathered with threat intelligence feeds to determine if the behavior aligns with known indicators of compromise or attack patterns.
  ### Prioritization
  The medium severity level for this alert suggests a noteworthy but not immediately critical potential threat in the enterprise environment. Investigation is necessary since while it's not overtly malicious, it exploits legitimate tools that could indicate a compromise or attempted data exfiltration.
  ### Blind Spots and Assumptions
  This rule may not fire if legitimate instances of `nslookup` are executed with the expected DNS query types unrelated to compromise. Additionally, if the command is obfuscated or utilizes non-standard PowerShell execution methods (such as scripts loaded from alternate sources), it may go unnoticed. Thereâ€™s also an assumption that `nslookup` is available on the systems being monitored; in environments with stricter configurations or alternatives to `nslookup`, this detection may be less effective. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
