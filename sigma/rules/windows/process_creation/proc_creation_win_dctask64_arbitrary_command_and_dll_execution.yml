title: ManageEngine Endpoint Central Dctask64.EXE Potential Abuse
id: 6345b048-8441-43a7-9bed-541133633d7a
status: test
description: |
  Detects the execution of "dctask64.exe", a signed binary by ZOHO Corporation part of ManageEngine Endpoint Central.
  This binary can be abused for DLL injection, arbitrary command and process execution.
references:
- https://twitter.com/gN3mes1s/status/1222088214581825540
- https://twitter.com/gN3mes1s/status/1222095963789111296
- https://twitter.com/gN3mes1s/status/1222095371175911424
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2020-01-28
modified: 2025-01-22
tags:
- attack.defense-evasion
- attack.t1055.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\dctask64.exe'
  - Hashes|contains:
    - 'IMPHASH=6834B1B94E49701D77CCB3C0895E1AFD'
    - 'IMPHASH=1BB6F93B129F398C7C4A76BB97450BBA'
    - 'IMPHASH=FAA2AC19875FADE461C8D89DCF2710A3'
    - 'IMPHASH=F1039CED4B91572AB7847D26032E6BBF'
  selection_cli:
    CommandLine|contains:
    - ' executecmd64 '
    - ' invokeexe '
    - ' injectDll '
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule "ManageEngine Endpoint Central Dctask64.EXE Potential Abuse" is designed to detect potentially malicious behavior involving the execution of `dctask64.exe`, a legitimate binary associated with ManageEngine Endpoint Central. This executable, while signed by ZOHO Corporation, can be exploited to perform DLL injection or arbitrary command execution, making it a target for attackers aiming to bypass security by leveraging trusted software. The rule identifies instances of `dctask64.exe` being executed, focusing on specific malicious command-line arguments that indicate potential abuse, as well as ensuring the binary's integrity through its unique Import Hashes (IMPHASH).
  The technical data sources involved in this detection include process creation logs that document the execution of applications and their associated command-line parameters. By analyzing these elements, SOC analysts can effectively identify instances where the binary might have been employed outside of its intended operational context, thereby highlighting potential threats that warrant further investigation.
  ### Investigation Steps
  - Query the EDR for any instances of `dctask64.exe` execution to identify affected systems and correlate timestamps with alert generation.
  - Review the command-line usage associated with the `dctask64.exe` execution in process logs to check for any suspicious parameters like `executecmd64`, `invokeexe`, or `injectDll`.
  - Check for the presence of the known malicious IMPHASH values in the affected system's process execution history using file integrity monitoring tools or filesystem logs.
  - Analyze endpoint network traffic using the NDR to determine if any unexpected communication patterns or data exfiltration attempts were made by the affected systems during the incident window.
