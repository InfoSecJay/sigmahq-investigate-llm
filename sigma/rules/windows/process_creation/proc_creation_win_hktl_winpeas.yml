title: HackTool - winPEAS Execution
id: 98b53e78-ebaf-46f8-be06-421aafd176d9
status: test
description: WinPEAS is a script that search for possible paths to escalate privileges
  on Windows hosts. The checks are explained on book.hacktricks.xyz
references:
- https://github.com/carlospolop/PEASS-ng
- https://book.hacktricks.xyz/windows-hardening/windows-local-privilege-escalation
author: Georg Lauenstein (sure[secure])
date: 2022-09-19
modified: 2023-03-23
tags:
- attack.privilege-escalation
- attack.t1082
- attack.t1087
- attack.t1046
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'winPEAS.exe'
  - Image|endswith:
    - '\winPEASany_ofs.exe'
    - '\winPEASany.exe'
    - '\winPEASx64_ofs.exe'
    - '\winPEASx64.exe'
    - '\winPEASx86_ofs.exe'
    - '\winPEASx86.exe'
  selection_cli_option:
    CommandLine|contains:
    - ' applicationsinfo'         # Search installed applications information
    - ' browserinfo'         # Search browser information
    - ' eventsinfo'         # Display interesting events information
    - ' fileanalysis'         # Search specific files that can contains credentials and for regexes inside files
    - ' filesinfo'         # Search generic files that can contains credentials
    - ' processinfo'         # Search processes information
    - ' servicesinfo'         # Search services information
    - ' windowscreds'         # Search windows credentials
  selection_cli_dl:
    CommandLine|contains: 'https://github.com/carlospolop/PEASS-ng/releases/latest/download/'
  selection_cli_specific:
  - ParentCommandLine|endswith: ' -linpeas'
  - CommandLine|endswith: ' -linpeas'
  condition: 1 of selection_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "HackTool 
  - winPEAS Execution" is designed to detect the execution of winPEAS, a well-known Windows privilege escalation auditing tool. The rule looks for specific indicators related to the process creation of winPEAS binaries, including file names and command-line parameters commonly associated with its execution. Specifically, it focuses on processes with original filenames matching 'winPEAS.exe' and several variations (e.g., 'winPEASx64.exe'), alongside their command-line options that indicate potential malicious intentionâ€”such as searching for installed applications or Windows credentials. 
  By targeting both the image names and command-line arguments, the rule seeks to identify potential misuse of winPEAS by an attacker aiming to exploit privilege escalation vulnerabilities. This detection aligns with the MITRE ATT&CK frameworks, particularly under the tactics related to privilege escalation (TA0004) and techniques including "User Execution" (T1087) and "Process Execution" (T1046).
  ### Investigation Steps
  - **Monitor EDR Logs:** Review endpoint detection and response (EDR) logs to identify any instances where the winPEAS executable was run along with associated parent processes for context.
  - **Analyze Command-Line Arguments:** Check the command-line parameters used during the execution for any suspicious or uncommon flags that may indicate malicious behavior.
  - **Correlate with User Activity:** Cross-reference the execution logs with user account activity to determine if the process execution aligns with legitimate user behavior during the time of detection.
  - **Assess Network Connections:** Inspect any outbound network connections associated with the winPEAS process to identify possible data exfiltration or command and control (C2) communication.
  ### Prioritization
  This alert is classified as high severity due to the nature of winPEAS. Its detection indicates potential exploitation attempts for privilege escalation, which could lead to further breaches across the enterprise environment if not remediated quickly.
  ### Blind Spots and Assumptions
  This detection rule may not fire in scenarios where the winPEAS tool is altered or renamed to bypass detection, or if it is executed under a different legitimate application. Additionally, if an adversary uses custom scripts that perform similar functions without revealing recognizable patterns, the detection may fail. It is assumed that all required telemetry sources are correctly configured and that users do not execute winPEAS or similar tools for legitimate purposes.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and completeness, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
