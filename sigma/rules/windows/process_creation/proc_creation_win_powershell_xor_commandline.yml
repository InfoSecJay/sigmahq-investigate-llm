title: Suspicious XOR Encoded PowerShell Command
id: bb780e0c-16cf-4383-8383-1e5471db6cf9
related:
- id: 5b572dcf-254b-425c-a8c5-d9af6bea35a6
  type: obsolete
status: test
description: Detects presence of a potentially xor encoded powershell command
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65
- https://redcanary.com/blog/yellow-cockatoo/
- https://zero2auto.com/2020/05/19/netwalker-re/
- https://mez0.cc/posts/cobaltstrike-powershell-exec/
author: Sami Ruohonen, Harish Segar, Tim Shelton, Teymur Kheirkhabarov, Vasiliy Burov,
  oscd.community, Nasreddine Bencherchali
date: 2018-09-05
modified: 2023-01-30
tags:
- attack.defense-evasion
- attack.execution
- attack.t1059.001
- attack.t1140
- attack.t1027
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Description: 'Windows PowerShell'
  - Product: 'PowerShell Core 6'
  selection_cli_xor:
    CommandLine|contains: 'bxor'
  selection_cli_other:
    CommandLine|contains:
    - 'ForEach'
    - 'for('
    - 'for '
    - '-join '
    - "-join'"
    - '-join"'
    - '-join`'
    - '::Join'
    - '[char]'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule focuses on identifying potentially malicious PowerShell commands that are encoded using the XOR operation. It specifically targets instances where PowerShell (either the standard or Core version) executes commands that involve XOR encoding, which is commonly employed by attackers to obfuscate their payloads. The rule monitors process creation logs, filtering for PowerShell executions with command-line parameters that either explicitly mention XOR ('bxor') or employ specific string manipulation functions typically found in adversarial PowerShell scripts, such as 'ForEach', 'for', or '-join'. These indicators are crucial for recognizing attempts to bypass standard security measures and run hidden or encoded instructions.
  The core data sources utilized by this rule are process creation logs from Windows, which record details about the execution of processes along with their command-line arguments. By analyzing these logs, security teams can detect unusual PowerShell activities indicative of potential threats, enhancing their ability to respond to incidents effectively.
  ### Investigation Steps
  - Review the process creation logs in your EDR to identify all recent instances of PowerShell executions that match the detected criteria.
  - Investigate the command-line parameters associated with any suspicious PowerShell instances to determine if they involve XOR encoding or other indicators of threat behavior.
  - Cross-reference affected endpoints with Antivirus (AV) and Network Threat Detection (NDR) logs to assess whether any related malicious activity has been recorded, such as unexpected outbound connections.
  - If available, examine logs from Proxy services to identify further context around the network behavior associated with the suspicious PowerShell executions, including any external communication attempts.
