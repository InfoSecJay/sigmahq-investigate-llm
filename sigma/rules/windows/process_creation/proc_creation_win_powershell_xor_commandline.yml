title: Suspicious XOR Encoded PowerShell Command
id: bb780e0c-16cf-4383-8383-1e5471db6cf9
related:
- id: 5b572dcf-254b-425c-a8c5-d9af6bea35a6
  type: obsolete
status: test
description: Detects presence of a potentially xor encoded powershell command
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=65
- https://redcanary.com/blog/yellow-cockatoo/
- https://zero2auto.com/2020/05/19/netwalker-re/
- https://mez0.cc/posts/cobaltstrike-powershell-exec/
author: Sami Ruohonen, Harish Segar, Tim Shelton, Teymur Kheirkhabarov, Vasiliy Burov,
  oscd.community, Nasreddine Bencherchali
date: 2018-09-05
modified: 2023-01-30
tags:
- attack.defense-evasion
- attack.execution
- attack.t1059.001
- attack.t1140
- attack.t1027
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  - Description: 'Windows PowerShell'
  - Product: 'PowerShell Core 6'
  selection_cli_xor:
    CommandLine|contains: 'bxor'
  selection_cli_other:
    CommandLine|contains:
    - 'ForEach'
    - 'for('
    - 'for '
    - '-join '
    - "-join'"
    - '-join"'
    - '-join`'
    - '::Join'
    - '[char]'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Suspicious XOR Encoded PowerShell Command" detection rule identifies potentially malicious PowerShell commands that have been encoded using XOR techniques to evade traditional detection methods. It operates by monitoring process creation logs specifically from `powershell.exe` and `pwsh.exe`, and looks for command lines that include specific patterns indicating the use of XOR encoding, such as 'bxor'. The detection also checks for common PowerShell constructs that can be used to obfuscate commands, such as `ForEach`, `-join`, or `[char]`. If any of these indicators are found in the command line executed by a PowerShell process, this rule will trigger an alert, signaling that potentially malicious activity may be occurring.
  This rule is aligned with the MITRE ATT&CK tactics of Defense Evasion (T1027 – Obfuscated Files or Information) and Execution (T1059.001 – PowerShell), which highlight techniques used by attackers to execute payloads while attempting to evade security monitoring.
  ### Investigation Steps
  - **Verify Process Details:** Check the corresponding process creation logs in the EDR to gather context about the user and the parent process that initiated the suspicious PowerShell command.
    
  - **Inspect Command Line Arguments:** Review the command line arguments used in the PowerShell execution for further obfuscation techniques or indicators of malicious intent.
  - **Analyze Network Activity:** Use network logs or the EDR's network telemetry to evaluate any outbound connections that occurred concurrently with the execution of the PowerShell command, as these may indicate data exfiltration or communication with a command-and-control server.
  - **Check Security Tools Alerts:** Review alert logs from AV and IDS/IPS solutions for any related alerts that may have triggered around the time of the suspicious PowerShell execution.
  ### Prioritization
  This alert is classified as medium severity due to the potential for obfuscated commands to be part of a larger attack strategy, including lateral movement or data exfiltration. Such techniques can indicate advanced threats that warrant immediate investigation.
  ### Blind Spots and Assumptions
  This rule may not fire if the XOR encoded command does not match the prescribed patterns or if the obfuscation technique is updated or altered by the adversary. Additionally, practices like running PowerShell with the `-NoProfile` or `-EncodedCommand` parameters could bypass this detection. Analysts should be aware that legitimate administrative tasks may inadvertently trigger the rule, and therefore, they should consider the context of the activity when assessing the alert.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
