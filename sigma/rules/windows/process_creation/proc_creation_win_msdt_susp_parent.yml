title: Suspicious MSDT Parent Process
id: 7a74da6b-ea76-47db-92cc-874ad90df734
status: test
description: Detects msdt.exe executed by a suspicious parent as seen in CVE-2022-30190
  / Follina exploitation
references:
- https://twitter.com/nao_sec/status/1530196847679401984
- https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/
author: Nextron Systems
date: 2022-06-01
modified: 2023-02-06
tags:
- attack.defense-evasion
- attack.t1036
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith:
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\schtasks.exe'
    - '\wmic.exe'
    - '\wscript.exe'
    - '\wsl.exe'
            # Note: office applications are covered by: 438025f9-5856-4663-83f7-52f878a70a50
  selection_msdt:
  - Image|endswith: '\msdt.exe'
  - OriginalFileName: 'msdt.exe'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of `msdt.exe` (Microsoft Support Diagnostic Tool) when it is invoked by suspicious parent processes. In particular, the rule looks for instances where `msdt.exe` is launched by processes that are commonly associated with exploitation techniques, such as `cmd.exe`, `powershell.exe`, or `wscript.exe`. The observation of such behavior aligns with the recent security flaw identified as CVE-2022-30190, also referred to as the "Follina" vulnerability, which allows attackers to exploit legitimate Windows functionalities for malicious purposes. 
  The detection relies on Windows process creation logs, particularly focusing on the parent-child relationship between processes. By monitoring specific process executions, such as those initiated by commonly abused tools (like PowerShell and Command Prompt), this rule aims to identify potential abuse of the `msdt.exe` for unauthorized activities. This rule maps to the MITRE ATT&CK tactic of Defense Evasion and technique T1218, which encompasses the use of system utilities for malicious purposes.
  ### Investigation Steps
  - **Verify Parent Process:** Investigate the parent processes identified in the alert by cross-referencing with EDR logs. Ensure that the parent processes are not part of regular operations in your environment.
  - **Review Execution Context:** Utilize PowerShell and Sysmon logs to gain context on the execution parameters of `msdt.exe`. Look specifically for arguments that may indicate malicious intent.
  - **Observe Network Activity:** Check network connections initiated by `msdt.exe` in your NDR (Network Detection and Response) tools. Malicious activity may be signaled by unusual outbound connections or data exfiltration patterns.
  - **Conduct Threat Intelligence Lookup:** Correlate the alert with threat intelligence feeds. Determine if there are any known malicious hash signatures associated with the detected processes or their activities.
  ### Prioritization
  This alert is classified at a high severity level due to the potential for significant impact if an attacker successfully exploits the Follina vulnerability. Because `msdt.exe` can be leveraged to bypass defenses and execute arbitrary code, immediate investigation is crucial to mitigate risks.
  ### Blind Spots and Assumptions
  This rule primarily relies on process creation logs, which may not capture malicious activities if the adversary employs sophisticated evasion techniques or uses legitimate applications outside the specified parent processes. Additionally, if `msdt.exe` is called from processes not included in the monitoring list, this detection may fail to trigger. Analysts should be aware that legitimate administrative activities may produce similar alerts, necessitating thorough investigation to confirm malicious intent.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
