title: Suspicious Invoke-WebRequest Execution With DirectIP
id: 1edff897-9146-48d2-9066-52e8d8f80a2f
status: test
description: Detects calls to PowerShell with Invoke-WebRequest cmdlet using direct
  IP access
references:
- https://www.huntress.com/blog/critical-vulnerabilities-in-papercut-print-management-software
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-04-21
tags:
- attack.command-and-control
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_commands:
    CommandLine|contains:
            # These are all aliases of Invoke-WebRequest
    - 'curl '
    - 'Invoke-WebRequest'
    - 'iwr '
    - 'wget '
  selection_ip:
        # In case of FP with local IPs add additional filters
    CommandLine|contains:
    - '://1'
    - '://2'
    - '://3'
    - '://4'
    - '://5'
    - '://6'
    - '://7'
    - '://8'
    - '://9'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies suspicious executions of PowerShell that utilize the `Invoke-WebRequest` cmdlet combined with direct IP address access. It specifically looks for instances where commands are executed that point to remote resources using direct numeric IP addresses, which is a common technique employed by adversaries to obfuscate their command and control (C2) traffic. The rule evaluates `process_creation` logs and checks for commands that include various aliases of `Invoke-WebRequest`, such as `curl`, `iwr`, and `wget`, alongside criteria that indicate the use of direct IP addressesâ€”in this case, those that start with numbers from '1' to '9'. The associated MITRE ATT&CK tactic is **Command and Control**, with the specific technique tagged as **T1105**, which highlights the use of external resource retrieval to execute potentially malicious acts within the network. 
  ### Investigation Steps
  - **Verify Process Initiation:** Check the EDR for the details surrounding the process creation event, noting down the parent process and the timestamp of the execution to understand the context.
  - **Analyze Command Line Parameters:** Investigate the command line used in the flagged PowerShell execution in the Windows Event Logs to determine the exact nature of the request made and the resources targeted.
  - **Collect Network Traffic Logs:** Review network logs from the perimeter NGFW and NDR for any outgoing connections made to the reported direct IP address to assess if data was sent or received.
  - **Check Endpoint Security Alerts:** Look for any related alerts in the AV or EDR systems that may indicate prior or subsequent malicious behavior linked to the PowerShell execution.
  ### Prioritization
  This alert is assigned a medium severity level due to the potential for misuse of PowerShell in the environment, which can signify an attempt to establish a command and control channel or retrieve malicious payloads.
  ### Blind Spots and Assumptions
  The rule may not trigger if PowerShell is executed under different command names, uses local IP addresses that should be whitelisted, or gets obfuscated with command encoding techniques. Additionally, if attackers use other remote access methods outside the monitored command line constructs, these activities won't be captured. Furthermore, continuous updates and accurate filtering must be in place to reduce the likelihood of false positives, as benign users could also engage in similar activities for valid purposes.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
