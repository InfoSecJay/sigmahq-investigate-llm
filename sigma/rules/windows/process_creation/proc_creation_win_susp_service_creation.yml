title: Suspicious New Service Creation
id: 17a1be64-8d88-40bf-b5ff-a4f7a50ebcc8
related:
- id: 7fe71fc9-de3b-432a-8d57-8c809efc10ab
  type: derived
status: test
description: Detects creation of a new service via "sc" command or the powershell
  "new-service" cmdlet with suspicious binary paths
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1543.003/T1543.003.md
- https://web.archive.org/web/20180331144337/https://www.fireeye.com/blog/threat-research/2018/03/sanny-malware-delivery-method-updated-in-recently-observed-attacks.html
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-14
modified: 2022-11-18
tags:
- attack.persistence
- attack.privilege-escalation
- attack.t1543.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_sc:
    Image|endswith: '\sc.exe'
    CommandLine|contains|all:
    - 'create'
    - 'binPath='
  selection_posh:
    CommandLine|contains|all:
    - 'New-Service'
    - '-BinaryPathName'
  susp_binpath:
    CommandLine|contains:
            # Add more suspicious commands or binaries
    - 'powershell'
    - 'mshta'
    - 'wscript'
    - 'cscript'
    - 'svchost'
    - 'dllhost'
    - 'cmd '
    - 'cmd.exe /c'
    - 'cmd.exe /k'
    - 'cmd.exe /r'
    - 'rundll32'
            # Add more suspicious paths
    - 'C:\Users\Public'
    - '\Downloads\'
    - '\Desktop\'
    - '\Microsoft\Windows\Start Menu\Programs\Startup\'
    - 'C:\Windows\TEMP\'
    - '\AppData\Local\Temp'
  condition: 1 of selection* and susp_binpath
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The "Suspicious New Service Creation" detection rule identifies potentially malicious activities related to the creation of new services on Windows systems. It specifically monitors for the use of the `sc.exe` command and PowerShell's `New-Service` cmdlet, both of which can be utilized by adversaries to establish persistence through new service installations. The rule looks for specific patterns in the command line of process creation events, filtering for suspicious binary paths that could indicate the presence of malware or unauthorized actions. The primary data sources leveraged for detection are Windows process creation logs, which capture command line arguments and the images of executing processes. This rule is categorized under the MITRE ATT&CK framework's tactics of "Persistence" and "Privilege Escalation," particularly mapping to technique T1543.003, which highlights the creation of a Windows service.
  ### Investigation Steps
  - **Examine Process Creation Logs:** Use your EDR tool to review process creation logs around the time of the alert, focusing on entries related to `sc.exe` and PowerShell's `New-Service` cmdlet for further investigation.
  - **Analyze Suspicious Binary Paths:** Investigate the command line arguments associated with the service creation to identify any suspicious binary paths or commands that may indicate malicious intentions.
  - **Check Service Configuration:** Access the Windows service configuration using the `services.msc` console or PowerShell command `Get-Service` to verify the properties of the new service, including its executable path and startup type.
  - **Look for Related Network Activity:** Utilize network connection logs to ascertain if the new service has made any unusual outbound connections, indicating possible communication with command and control servers.
  ### Prioritization
  This alert is considered high severity due to the potential for newly created services to serve as persistence mechanisms for attackers. The existence of such services, especially those associated with suspicious binary paths, poses a significant threat to the integrity of the enterprise environment.
  ### Blind Spots and Assumptions
  The rule may not activate in scenarios where adversaries use legitimate binaries for malicious purposes or obfuscate their command lines to bypass detection. Additionally, if service creation attempts are made through alternative methods or scripting languages not monitored by the specified telemetry (like VBScript), this rule might not trigger. Furthermore, analysts should understand that benign applications may occasionally utilize similar behaviors, which could lead to false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
