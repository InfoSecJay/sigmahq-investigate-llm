title: Indirect Inline Command Execution Via Bash.EXE
id: 5edc2273-c26f-406c-83f3-f4d948e740dd
related:
- id: 2d22a514-e024-4428-9dba-41505bd63a5b
  type: similar
status: test
description: |
  Detects execution of Microsoft bash launcher with the "-c" flag.
  This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Bash/
author: frack113
date: 2021-11-24
modified: 2023-08-15
tags:
- attack.defense-evasion
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - ':\Windows\System32\bash.exe'
    - ':\Windows\SysWOW64\bash.exe'
  - OriginalFileName: 'Bash.exe'
  selection_cli:
    CommandLine|contains: ' -c '
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule is designed to monitor and alert on the execution of the Microsoft Bash launcher with the `-c` command-line flag on Windows systems. The presence of the Bash executable (`bash.exe`) in the process creation logs is indicative of a potential attack vector used by adversaries to execute commands and bypass traditional security measures. By utilizing the `-c` flag, attackers can chain Linux or Windows-based commands, which poses a significant risk for defense evasion tactics. This behavior is categorized under the MITRE ATT&CK technique T1202: Command and Scripting Interpreter, specifically focusing on evasion strategies employed through command-line execution.
  The rule leverages Windows process creation telemetry to detect when the Bash process is invoked and whether it includes the critical `-c` flag in the command-line arguments. Key data sources involved include process creation logs, which provide insight into active processes and their associated command-line parameters, allowing analysts to understand what actions were initiated and potentially identify nefarious activities.
  ### Investigation Steps
  - **Check Process Creation Logs:** Examine the Windows process creation logs in your EDR for occurrences of `bash.exe` along with the `-c` flag, capturing the command that was executed.
    
  - **Review Parent Process:** Investigate the parent process of `bash.exe` to determine if it originated from a known application or if it appears suspicious. This can shed light on how the shell was invoked in context.
  - **Correlate with Other Logs:** Cross-reference findings with security logs from neighboring tools (e.g., network logs, AV, or proxy logs) to identify any suspicious outbound connections or file activities triggered by the Bash command.
  - **Assess File and Registry Modifications:** Check for any related file or registry changes that occurred shortly after the invocation of `bash.exe`, especially those that may relate to lateral movement or persistence techniques.
  ### Prioritization
  The alert generated by this rule is classified as medium severity because the use of `bash.exe` with the `-c` option can indicate an attempt at command execution that evades standard security postures, potentially leading to a more serious breach. Investigating promptly may help in mitigating the risk.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where `bash.exe` is used legitimately, such as by system administrators for scripting purposes. Furthermore, it assumes that the Bash executable is present on the monitored systems; if Bash is not installed, the rule will not trigger. Adversaries might defeat this detection by using alternative shells or command-line interpreters that do not invoke `bash.exe`, or they might obfuscate their command strings to evade regex detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
