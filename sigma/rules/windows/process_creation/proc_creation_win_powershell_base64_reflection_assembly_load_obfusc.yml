title: Suspicious Encoded And Obfuscated Reflection Assembly Load Function Call
id: 9c0295ce-d60d-40bd-bd74-84673b7592b1
related:
- id: 62b7ccc9-23b4-471e-aa15-6da3663c4d59
  type: similar
status: test
description: Detects suspicious base64 encoded and obfuscated "LOAD" keyword used
  in .NET "reflection.assembly"
references:
- https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar
- https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/
- https://learn.microsoft.com/en-us/dotnet/api/system.appdomain.load?view=net-7.0
author: pH-T (Nextron Systems)
date: 2022-03-01
modified: 2023-04-06
tags:
- attack.execution
- attack.defense-evasion
- attack.t1059.001
- attack.t1027
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            # ::("L"+"oad")
    - 'OgA6ACgAIgBMACIAKwAiAG8AYQBkACIAKQ'
    - 'oAOgAoACIATAAiACsAIgBvAGEAZAAiACkA'
    - '6ADoAKAAiAEwAIgArACIAbwBhAGQAIgApA'
            # ::("Lo"+"ad")
    - 'OgA6ACgAIgBMAG8AIgArACIAYQBkACIAKQ'
    - 'oAOgAoACIATABvACIAKwAiAGEAZAAiACkA'
    - '6ADoAKAAiAEwAbwAiACsAIgBhAGQAIgApA'
            # ::("Loa"+"d")
    - 'OgA6ACgAIgBMAG8AYQAiACsAIgBkACIAKQ'
    - 'oAOgAoACIATABvAGEAIgArACIAZAAiACkA'
    - '6ADoAKAAiAEwAbwBhACIAKwAiAGQAIgApA'
            # ::('L'+'oad')
    - 'OgA6ACgAJwBMACcAKwAnAG8AYQBkACcAKQ'
    - 'oAOgAoACcATAAnACsAJwBvAGEAZAAnACkA'
    - '6ADoAKAAnAEwAJwArACcAbwBhAGQAJwApA'
            # ::('Lo'+'ad')
    - 'OgA6ACgAJwBMAG8AJwArACcAYQBkACcAKQ'
    - 'oAOgAoACcATABvACcAKwAnAGEAZAAnACkA'
    - '6ADoAKAAnAEwAbwAnACsAJwBhAGQAJwApA'
            # ::('Loa'+'d')
    - 'OgA6ACgAJwBMAG8AYQAnACsAJwBkACcAKQ'
    - 'oAOgAoACcATABvAGEAJwArACcAZAAnACkA'
    - '6ADoAKAAnAEwAbwBhACcAKwAnAGQAJwApA'
  condition: selection
fields:
- CommandLine
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The rule detects suspicious use of reflection in .NET applications, specifically targeting obfuscated and encoded invocations of the "Load" function via the `System.AppDomain.Load` API. The detection mechanism looks for command line arguments that include encoded or combined strings representing the "Load" keyword, utilizing techniques such as Base64 encoding and syntax obfuscation. The primary data source for this detection involves process creation logs on Windows, which track command-line arguments associated with executed processes. By identifying these patterns, security teams can pinpoint potentially malicious activities that leverage reflection to evade standard security measures and execute harmful code.
  ### Investigation Steps
  - Review the details of the alert in the SIEM to identify the exact command line that triggered the detection, focusing on the encoded strings associated with the "Load" function.
  - Use EDR solutions to investigate the corresponding process tree and parent-child relationships to understand the context in which the suspicious process was created.
  - Search for any additional Indicators of Compromise (IOCs) associated with the detected command line, such as the originating IP addresses or file hashes, using network (NDR) and proxy logs.
  - Monitor the environment for other instances of similar obfuscation techniques in process creation logs, as this may indicate a broader attack strategy or ongoing exploitation activity.
