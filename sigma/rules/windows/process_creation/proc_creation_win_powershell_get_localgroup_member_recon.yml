title: Suspicious Reconnaissance Activity Using Get-LocalGroupMember Cmdlet
id: c8a180d6-47a3-4345-a609-53f9c3d834fc
related:
- id: cef24b90-dddc-4ae1-a09a-8764872f69fc
  type: similar
status: test
description: Detects suspicious reconnaissance command line activity on Windows systems
  using the PowerShell Get-LocalGroupMember Cmdlet
references:
- https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-10
tags:
- attack.discovery
- attack.t1087.001
logsource:
  category: process_creation
  product: windows
detection:
    # Covers group and localgroup flags
  selection_cmdlet:
    CommandLine|contains: 'Get-LocalGroupMember '
  selection_group:
    CommandLine|contains:
            # Add more groups for other languages
    - 'domain admins'
    - ' administrator'         # Typo without an 'S' so we catch both
    - ' administrateur'         # Typo without an 'S' so we catch both
    - 'enterprise admins'
    - 'Exchange Trusted Subsystem'
    - 'Remote Desktop Users'
    - 'Utilisateurs du Bureau Ã  distance'         # French for "Remote Desktop Users"
    - 'Usuarios de escritorio remoto'         # Spanish for "Remote Desktop Users"
  condition: all of selection_*
fields:
- CommandLine
- ParentCommandLine
falsepositives:
- Administrative activity
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious reconnaissance activities on Windows systems that utilize the PowerShell `Get-LocalGroupMember` cmdlet. The rule looks for specific command-line executions that include the usage of this cmdlet and several sensitive user groups, which are often targeted by attackers during the reconnaissance phase. The identified groups such as 'Domain Admins', 'Remote Desktop Users', and various language translations represent potential targets for privilege escalation and lateral movement within an organization, as they hold significant permissions.
  In a typical enterprise environment, telemetry monitoring will rely on Windows process creation logs, specifically the command line used to invoke PowerShell. When a command includes `Get-LocalGroupMember` alongside references to sensitive group memberships, it raises flags for potential unauthorized or malicious activity. This detection is categorized under the MITRE ATT&CK tactic of "Discovery" and specifically aligns with the technique T1087.001, which pertains to querying local group memberships.
  ### Investigation Steps
  - **Review Command Line Activity:** Examine the process creation logs for any instances of `Get-LocalGroupMember` and note the command-line arguments provided. Assess if these matches any known administrative activity.
  - **Cross-Reference User Activity:** Use EDR solutions to correlate the detected command execution with user sessions and activities to determine if the actions were executed by potentially compromised accounts.
  - **Audit Group Memberships:** Check the memberships of the groups referenced in the command lines (e.g., Domain Admins) to ensure no unauthorized members have been added or queried improperly.
  - **Analyze System and Application Logs:** Look into Windows Security, System, and Application logs for any related events that may indicate unauthorized access or activity by involved users during and before the alert generation.
  ### Prioritization
  This alert is classified as medium severity because while the command itself could indicate legitimate administrative tasks, its usage in the context of sensitive group memberships can signify an ongoing reconnaissance activity by an adversary, warranting further investigation.
  ### Blind Spots and Assumptions
  This rule may not trigger for legitimate administrative activities performed by authorized users, particularly in organizations where `Get-LocalGroupMember` is a standard practice during audits or routine checkups. Additionally, certain group names may not be captured if they do not match the predefined list, potentially allowing adversaries to evade detection by querying less common groups or using a different cmdlet altogether. Analysts should also consider that sophisticated threats might use obfuscation techniques to disguise the execution of similar reconnaissance commands.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
