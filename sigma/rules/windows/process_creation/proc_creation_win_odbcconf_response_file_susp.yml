title: Suspicious Response File Execution Via Odbcconf.EXE
id: 2d32dd6f-3196-4093-b9eb-1ad8ab088ca5
related:
- id: 5f03babb-12db-4eec-8c82-7b4cb5580868
  type: derived
- id: 65d2be45-8600-4042-b4c0-577a1ff8a60e
  type: obsolete
status: test
description: Detects execution of "odbcconf" with the "-f" flag in order to load a
  response file with a non-".rsp" extension.
references:
- https://learn.microsoft.com/en-us/sql/odbc/odbcconf-exe?view=sql-server-ver16
- https://lolbas-project.github.io/lolbas/Binaries/Odbcconf/
- https://www.trendmicro.com/en_us/research/17/h/backdoor-carrying-emails-set-sights-on-russian-speaking-businesses.html
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-05-22
modified: 2024-03-13
tags:
- attack.defense-evasion
- attack.t1218.008
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\odbcconf.exe'
  - OriginalFileName: 'odbcconf.exe'
  selection_cli:
    CommandLine|contains|windash: ' -f '
  filter_main_rsp_ext:
    CommandLine|contains: '.rsp'
  filter_main_runonce_odbc:
        # When odbcconf is run with the "/R" flag, it creates a "runonce" key to run at the next reboot
    ParentImage: 'C:\Windows\System32\runonce.exe'
    Image: 'C:\Windows\System32\odbcconf.exe'
    CommandLine|contains: '.exe /E /F "C:\WINDOWS\system32\odbcconf.tmp"'
  condition: all of selection_* and not 1 of filter_main_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious activity involving the execution of the `odbcconf.exe` program, specifically when it is run with the `-f` flag to load a response file that does not have the expected `.rsp` extension. The rule searches for process creation events specifically for the `odbcconf.exe` image, examining the command-line parameters to identify instances where the `-f` flag is used. It also checks to ensure that the command line does not contain strings indicating commonly used `.rsp` files, which would be a legitimate use of the tool. This behavior aligns with the MITRE ATT&CK technique T1218.008 (Signed Binary Proxy Execution), highlighting potential evasion tactics that adversaries might employ by abusing legitimate system tools to execute malicious payloads. The detection involves data sources like Windows process creation logs which capture the necessary details whenever a process is started.
  ### Investigation Steps
  - **Verify Process Execution:** Review the process creation logs in your EDR to confirm the execution of `odbcconf.exe` with the specified command-line parameters. Investigate the corresponding parent processes to understand the context of the execution.
  - **Inspect Command-Line Arguments:** Analyze the full command line of the detected execution to identify any unusual or suspicious flags or arguments. Pay attention to the file paths and any network connections made shortly after the execution.
  - **Check Related Artifacts:** Look for additional evidence in Windows Sysmon logs for network connections and file manipulations related to the execution of `odbcconf.exe`. This includes examining any temp files created, especially those without `.rsp` extensions.
  - **Review User Activity:** Correlate the time of the alert with user activity logs from your SIEM to determine if there was any associated user who may have initiated or could explain the execution. This could help in identifying whether the event is part of a legitimate process or part of malicious activity.
  ### Prioritization
  The alert generated by this rule is marked as high severity because the execution of `odbcconf.exe` with potentially harmful command line arguments can be indicative of advanced evasion techniques by adversaries. The usage of legitimate tools in a compromised context raises significant concern for potential data breaches or lateral movement within the enterprise network.
  ### Blind Spots and Assumptions
  This rule operates under the assumption that logging for process creation events is enabled and accurately captures all necessary data, including command-line parameters. However, it might not fire in environments where legitimate use cases for `odbcconf.exe` exist, particularly if those uses are common and expected. Additionally, advanced adversaries may use deception techniques such as altering executable names or manipulating digital signatures to bypass detection. Hence, analysts should remain vigilant for variations of this activity that might evade this rule, including examining whether modifications have been made to the `odbcconf.exe` binary itself.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
