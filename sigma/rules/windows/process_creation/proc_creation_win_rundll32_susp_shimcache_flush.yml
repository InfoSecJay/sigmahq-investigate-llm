title: ShimCache Flush
id: b0524451-19af-4efa-a46f-562a977f792e
status: stable
description: Detects actions that clear the local ShimCache and remove forensic evidence
references:
- https://medium.com/@blueteamops/shimcache-flush-89daff28d15e
author: Florian Roth (Nextron Systems)
date: 2021-02-01
tags:
- attack.defense-evasion
- attack.t1112
logsource:
  category: process_creation
  product: windows
detection:
  selection1a:
    CommandLine|contains|all:
    - 'rundll32'
    - 'apphelp.dll'
  selection1b:
    CommandLine|contains:
    - 'ShimFlushCache'
    - '#250'
  selection2a:
    CommandLine|contains|all:
    - 'rundll32'
    - 'kernel32.dll'
  selection2b:
    CommandLine|contains:
    - 'BaseFlushAppcompatCache'
    - '#46'
  condition: ( selection1a and selection1b ) or ( selection2a and selection2b )
fields:
- Image
- CommandLine
- ParentCommandLine
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "ShimCache Flush" detection rule is designed to identify suspicious activities aimed at clearing the ShimCache in a Windows environment. ShimCache, a feature of the Windows operating system, tracks executable files that have been run on a system, often used for forensic analysis to determine if malware or unauthorized applications have been executed. This rule specifically looks for process creation events that include certain command-line parameters indicative of attempts to flush the ShimCache, thereby erasing potential forensic evidence of executed applications. The relevant command-line patterns include invocations of `rundll32` combined with either `apphelp.dll` or `kernel32.dll`, employing specific functions to perform the cache clearing. This detection aligns with the MITRE ATT&CK technique T1112 (Modification of Registry), signifying a defensive evasion tactic where adversaries remove traces of their activities. 
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR to identify the instances of `rundll32` utilizing the command-line patterns specified in the rule to confirm whether the alert is valid or a false positive.
  - **Examine Parent Processes:** Analyze the parent command lines associated with the detected processes to identify the context in which the ShimCache flush occurred; this can help attribute the action to a particular user or process.
  - **Correlate with Other Log Sources:** Cross-reference the alert with Windows Event Logs, specifically looking for any anomalous user accounts or patterns that coincide with the detected command executions.
  - **Evaluate System and Application Logs:** Review the System and Application logs for any unexpected behaviors or events around the time the alert was generated to gather additional context that may reveal signs of other ongoing malicious activities.
  ### Prioritization
  The alert has been given a high severity level as the clearing of ShimCache can be indicative of advanced persistent threats (APTs) attempting to cover their tracks after gaining unauthorized access to a host, thus posing a significant risk to system integrity and data security.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where the command line parameters are obfuscated or rewritten, potentially bypassing detection. Additionally, the rule assumes that logs for all relevant processes are being adequately collected and that sufficient permissions are in place to log process creationsâ€”if not, such activities could go undetected. Moreover, false positives can occur due to legitimate process operations involving `rundll32` that do not relate to malicious intent.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
