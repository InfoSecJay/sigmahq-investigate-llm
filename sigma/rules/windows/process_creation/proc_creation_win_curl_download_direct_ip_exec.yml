title: File Download From IP URL Via Curl.EXE
id: 9cc85849-3b02-4cb5-b371-3a1ff54f2218
related:
- id: 5cb299fc-5fb1-4d07-b989-0644c68b6043
  type: similar
status: test
description: Detects file downloads directly from IP address URL using curl.exe
references:
- https://labs.withsecure.com/publications/fin7-target-veeam-servers
- https://github.com/WithSecureLabs/iocs/blob/344203de742bb7e68bd56618f66d34be95a9f9fc/FIN7VEEAM/iocs.csv
- https://github.com/pr0xylife/IcedID/blob/8dd1e218460db4f750d955b4c65b2f918a1db906/icedID_09.28.2023.txt
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-10-18
tags:
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\curl.exe'
  - OriginalFileName: 'curl.exe'
  selection_ip:
    CommandLine|re: '://[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
  selection_http:
    CommandLine|contains: 'http'
  selection_flag:
    CommandLine|contains:
    - ' -O'          # covers the alias for --remote-name and --output
    - '--remote-name'
    - '--output'
  filter_main_ext:
        # Note: This filter exists to avoid duplication with 5cb299fc-5fb1-4d07-b989-0644c68b6043
    CommandLine|endswith:
    - '.bat'
    - '.bat"'
    - '.dat'
    - '.dat"'
    - '.dll'
    - '.dll"'
    - '.exe'
    - '.exe"'
    - '.gif'
    - '.gif"'
    - '.hta'
    - '.hta"'
    - '.jpeg'
    - '.jpeg"'
    - '.log'
    - '.log"'
    - '.msi'
    - '.msi"'
    - '.png'
    - '.png"'
    - '.ps1'
    - '.ps1"'
    - '.psm1'
    - '.psm1"'
    - '.vbe'
    - '.vbe"'
    - '.vbs'
    - '.vbs"'
    - ".bat'"
    - ".dat'"
    - ".dll'"
    - ".exe'"
    - ".gif'"
    - ".hta'"
    - ".jpeg'"
    - ".log'"
    - ".msi'"
    - ".png'"
    - ".ps1'"
    - ".psm1'"
    - ".vbe'"
    - ".vbs'"
  condition: all of selection_* and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule detects file downloads initiated from an IP address URL using the `curl.exe` command-line tool. The detection focuses on process creation events, specifically looking for instances where `curl.exe` is invoked with a command line that includes an IP address (in the format `http://<IP>`). The rule is designed to catch potentially malicious behavior, as attackers may leverage `curl` to retrieve payloads or tools directly from an external server, especially those hosted at IP addresses instead of standard domain names. Relevant technical data sources include command-line parameters coupled with the original file name of the process (`curl.exe`). This rule maps to the MITRE ATT&CK tactic of `Execution`, specifically under the technique of `Command-Line Interface` (T1059.003), where command execution can be a precursor to further malicious activities.
  ### Investigation Steps
  - **Verify Process Execution:** Utilize EDR tools to check for the execution of `curl.exe` within the relevant time frame and assess its command line arguments for actual occurrence of IP-based downloads.
  - **Inspect Network Connections:** Analyze firewall and network traffic logs to see if there were outbound connections from the host to the IP address mentioned in the command line of the `curl.exe` execution.
  - **Review Downloaded Files:** If the command executed successfully, collect and analyze files that were downloaded. Check if they match any known malicious hashes or are located in suspicious directories.
  - **Cross-Reference with Threat Intelligence:** Use threat intelligence feeds to determine if the detected IP address is known for hosting malware or has been previously reported in incidents.
  ### Prioritization
  The alert is assigned a medium severity level because while file downloads via `curl.exe` using an IP address may indicate benign behavior in some contexts, they often signal active exploitation attempts or reconnaissance activities, necessitating prompt investigation.
  ### Blind Spots and Assumptions
  The rule assumes that `curl.exe` is being used within the expected context and does not account for more sophisticated methods of file retrieval that do not include common command-line tools. Additionally, if the command is obscured or obfuscated (for instance, using custom scripts or tools to mimic `curl` functionality), the detection may fail. Furthermore, the rule may not fire if legitimate traffic patterns resemble the defined conditions, thus potentially leading to false negatives in known enterprise usage scenarios.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
