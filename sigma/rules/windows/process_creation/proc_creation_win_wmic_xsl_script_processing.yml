title: XSL Script Execution Via WMIC.EXE
id: 05c36dd6-79d6-4a9a-97da-3db20298ab2d
status: test
description: |
  Detects the execution of WMIC with the "format" flag to potentially load XSL files.
  Adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses.
  Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1220/T1220.md
author: Timur Zinniatullin, oscd.community, Swachchhanda Shrawan Poudel
date: 2019-10-21
modified: 2024-03-05
tags:
- attack.defense-evasion
- attack.t1220
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\wmic.exe'
    CommandLine|contains|windash: '-format'         # wmic process list -FORMAT /? or wmic process list /FORMAT /?
  filter_main_known_format:
    CommandLine|contains:
    - 'Format:List'
    - 'Format:htable'
    - 'Format:hform'
    - 'Format:table'
    - 'Format:mof'
    - 'Format:value'
    - 'Format:rawxml'
    - 'Format:xml'
    - 'Format:csv'
  condition: selection and not 1 of filter_main_*
falsepositives:
- WMIC.exe FP depend on scripts and administrative methods used in the monitored environment.
- Static format arguments - https://petri.com/command-line-wmi-part-3
level: medium
notes: |
  ### Technical Context
  This detection rule monitors for the execution of the Windows Management Instrumentation Command-line (WMIC) tool with the `-format` flag, which can be misused by adversaries to execute arbitrary XSL files. WMIC is primarily used in Windows environments for system management, but by exploiting the `-format` option, attackers can load XSL stylesheets that could lead to malicious activity, such as executing unauthorized scripts or commands while potentially evading standard application whitelisting measures. The rule specifically looks for process creation events where WMIC is invoked with the `-format` parameter, excluding common format types that may be used legitimately in administrative tasks. This aligns with the MITRE ATT&CK technique T1220: “XSL Script Execution,” which falls under the Defense Evasion tactic, as adversaries seek ways to conceal their activities or functionality.
  The rule is designed to capture specific command-line invocations of WMIC, utilizing Windows process creation logs. Analysts are encouraged to use these logs in conjunction with other telemetry sources, such as endpoint detection and response (EDR), to gather comprehensive context during investigations.
  ### Investigation Steps
  - **Check WMIC Executions:** Use EDR tools to search for recent WMIC.exe process executions showing the `-format` flag. Review related command-line arguments and timestamps to identify potential malicious usage.
  - **Collect Related Logs:** Review Windows Security logs for any user accounts that invoked the WMIC command and correlate these records to identify unusual behavioral patterns or unauthorized access.
  - **Analyze Network Activity:** Examine network connection logs and DNS queries for unusual traffic that may correlate with the execution of suspicious scripts or XSL file fetching from external sources.
  - **Review System Changes:** Inspect any recent file creation or modification events related to the loading of XSL files or associated scripts to identify unauthorized changes within the environment.
  ### Prioritization
  Alerts generated from this rule are assigned a medium severity level due to the potential for significant impact if an attacker successfully executes malicious commands or scripts via the WMIC tool, which is often permitted in many operational environments.
  ### Blind Spots and Assumptions
  This rule may not fire if WMIC is utilized with legitimate commands that do not include the `-format` flag or if the environment has restricted the use of WMIC entirely. Additionally, configurations that limit the logging of process creation or unusual command-line arguments could cause this rule to miss significant malicious behavior. It operates under the assumption that appropriate logging is enabled and that adversaries may also try to obfuscate their command-line usage further.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
