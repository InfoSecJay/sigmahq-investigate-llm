title: Suspicious Powercfg Execution To Change Lock Screen Timeout
id: f8d6a15e-4bc8-4c27-8e5d-2b10f0b73e5b
status: test
description: Detects suspicious execution of 'Powercfg.exe' to change lock screen
  timeout
references:
- https://blogs.vmware.com/security/2022/11/batloader-the-evasive-downloader-malware.html
- https://learn.microsoft.com/en-us/windows-hardware/design/device-experiences/powercfg-command-line-options
author: frack113
date: 2022-11-18
tags:
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_power:
  - Image|endswith: '\powercfg.exe'
  - OriginalFileName: 'PowerCfg.exe'
  selection_standby:
        # powercfg.exe /SETACVALUEINDEX SCHEME_CURRENT SUB_VIDEO VIDEOCONLOCK
  - CommandLine|contains|all:
    - '/setacvalueindex '
    - 'SCHEME_CURRENT'
    - 'SUB_VIDEO'
    - 'VIDEOCONLOCK'
        # powercfg -change -standby-timeout-dc 3000
        # powercfg -change -standby-timeout-ac 3000
  - CommandLine|contains|all:
    - '-change '
    - '-standby-timeout-'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious executions of the `Powercfg.exe` utility, specifically targeting command-line arguments that manipulate the lock screen timeout settings on Windows systems. `Powercfg.exe` is a built-in Windows command-line tool that is commonly used for configuring power settings, but its misuse can indicate potential evasion tactics by threat actors. The rule looks for instances where `Powercfg.exe` is executed with command-line parameters like `/setacvalueindex`, `SCHEME_CURRENT`, or other related parameters that change video lock timeout settings. By analyzing process creation logs and command-line parameters, this detection can help identify abnormal activities that may go unnoticed.
  The relevant technical data sources involved in this detection include process creation logs that reveal the execution of `Powercfg.exe` as well as the specific command-line parameters associated with that execution. This provides context for analysts to investigate whether a legitimate user action has taken place or if a malicious actor may be attempting to alter system behaviors stealthily.
  ### Investigation Steps
  - Review the EDR logs for any recent executions of `Powercfg.exe` to identify the user and system involved in the activity.
  - Investigate the command-line parameters associated with the process to confirm if the execution pattern aligns with normal administrative activities.
  - Check for related activity in the event logs, such as changes to other power management settings, which could indicate further malicious intent.
  - Cross-reference the user's access privileges and recent login history to determine if this action fits within their usual behavior or if it raises any flags for further investigation.
