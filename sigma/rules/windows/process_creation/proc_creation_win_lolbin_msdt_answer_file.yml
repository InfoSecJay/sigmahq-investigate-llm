title: Execute MSDT Via Answer File
id: 9c8c7000-3065-44a8-a555-79bcba5d9955
status: test
description: Detects execution of "msdt.exe" using an answer file which is simulating
  the legitimate way of calling msdt via "pcwrun.exe" (For example from the compatibility
  tab)
references:
- https://lolbas-project.github.io/lolbas/Binaries/Msdt/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-06-13
tags:
- attack.defense-evasion
- attack.t1218
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection_cli:
    Image|endswith: '\msdt.exe'
    CommandLine|contains: '\WINDOWS\diagnostics\index\PCWDiagnostic.xml'
  selection_answer:
    CommandLine|contains:
    - ' -af '
    - ' /af '
  filter:
    ParentImage|endswith: '\pcwrun.exe'
  condition: all of selection* and not filter
falsepositives:
- Possible undocumented parents of "msdt" other than "pcwrun"
level: high
notes: |
  ### Technical Context
  This detection rule is designed to identify the execution of `msdt.exe` (Microsoft Support Diagnostic Tool) via an answer file, which represents potential abuse of this tool in a way that mimics legitimate processes executed via `pcwrun.exe`. The rule looks for specific command-line parameters (`-af` or `/af`) that indicate the use of an answer file, in conjunction with process creation logs for `msdt.exe` being initiated from `pcwrun.exe`. In particular, the rule targets activities that fit the MITRE ATT&CK tactics of Defense Evasion (T1218) and Execution (T1203). By monitoring the use of process creation logs, sources such as Sysmon can provide visibility into the command-line arguments and parent-child process relationships necessary to detect this suspicious behavior.
  ### Investigation Steps
  - **Review Process Creation Events:** Investigate Windows Event Logs (specifically Sysmon) for the creation of `msdt.exe`, noting the command line for the presence of answer file parameters and the parent process.
    
  - **Check Parent Process Validity:** Determine if the parent process (`pcwrun.exe`) is a legitimate invocation by correlating with the normal execution patterns of these applications. 
  - **Examine Alternative Execution Paths:** Look for any other parent processes that could invoke `msdt.exe`, as the rule assumes only `pcwrun.exe` as the parent process, which may lead to potential false negatives.
  - **Analyze EDR Alerts:** Use EDR tools to check if there are related indicators of compromise or other malicious behaviors occurring around the same time that could suggest wider attempts at exploitation.
  ### Prioritization
  Given the high severity level of this alert, it indicates a significant risk of an attacker leveraging legitimate Windows tools to bypass security controls, suggesting potential compromise or advanced persistent threat (APT) behavior.
  ### Blind Spots and Assumptions
  This rule may not fire if `msdt.exe` is executed using valid methods other than `pcwrun.exe`, or if attackers deliberately obfuscate their use of parameters to avoid detection. Additionally, if the answer file is executed through alternative scripting languages or environments, the telemetry may not capture the necessary execution details. The assumption that invocation will always come from `pcwrun.exe` could lead to gaps in detection for attackers creating custom loaders or scripts to execute `msdt.exe` directly.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
