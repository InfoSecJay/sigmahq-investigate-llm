title: Always Install Elevated MSI Spawned Cmd And Powershell
id: 1e53dd56-8d83-4eb4-a43e-b790a05510aa
status: test
description: Detects Windows Installer service (msiexec.exe) spawning "cmd" or "powershell"
references:
- https://image.slidesharecdn.com/kheirkhabarovoffzonefinal-181117201458/95/hunting-for-privilege-escalation-in-windows-environment-50-638.jpg
author: Teymur Kheirkhabarov (idea), Mangatas Tondang (rule), oscd.community
date: 2020-10-13
modified: 2022-10-20
tags:
- attack.privilege-escalation
- attack.t1548.002
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith:
    - '\cmd.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'Cmd.Exe'
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_parent:
    ParentImage|contains|all:
    - '\Windows\Installer\'
    - 'msi'
    ParentImage|endswith: 'tmp'
  condition: all of selection_*
fields:
- Image
- ParentImage
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule targets a potential privilege escalation scenario leveraging the Windows Installer service (msiexec.exe) for spawning command line interfaces, specifically cmd.exe or PowerShell (pwsh.exe). By monitoring process creation events, this rule identifies when a Windows Installer process executes these command-line tools, which may indicate an attempt by an attacker to execute arbitrary commands with elevated privileges. The critical data sources utilized for this detection include process creation logs that capture the parent-child relationship between these processes, specifically looking for msiexec.exe as the parent process. The rule is pertinent to the MITRE ATT&CK tactic of Privilege Escalation, specifically the technique T1548.002, which pertains to "Abuse Elevation Control Mechanism".
  ### Investigation Steps
  - **Review Alert Context:** Check the details of the alert in your EDR solution to view the specific processes involved and their execution context, including parent and child process relationships.
  - **Correlate with Sysmon Logs:** Cross-reference with Sysmon logs to identify any anomalous process creation activities around the time of the alert, particularly looking for other processes spawned by msiexec.exe.
  - **Examine Network Activity:** Utilize network connection logs to inspect if the invoked cmd or powershell spawned any unauthorized outbound connections which may indicate command and control (C2) communications.
  - **Check for Persistence Mechanisms:** Review the registry and various startup folders for any persistence mechanisms that could have been established following the privilege escalation event.
  ### Prioritization
  The alert has a medium severity level due to the nature of the process spawning mechanism that could indicate a sophisticated attempt by an adversary to escalate privileges. Given the potential impact of such actions, they warrant immediate investigation to determine the intent and scope.
  ### Blind Spots and Assumptions
  This rule may not fire in environments with minimal reliance on the Windows Installer service or where such processes are deliberately controlled by administrative policies. Additionally, stealthy attacks may utilize obfuscation techniques or alternate methods of invoking cmd or PowerShell that do not involve msiexec.exe as a parent process, potentially bypassing detection. It is assumed that proper logging is enabled and that system policies do not restrict the execution of these commands under normal circumstances.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
