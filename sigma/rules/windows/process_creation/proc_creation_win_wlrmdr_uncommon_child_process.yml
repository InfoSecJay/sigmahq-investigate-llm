title: Wlrmdr.EXE Uncommon Argument Or Child Process
id: 9cfc00b6-bfb7-49ce-9781-ef78503154bb
status: test
description: |
  Detects the execution of "Wlrmdr.exe" with the "-u" command line flag which allows anything passed to it to be an argument of the ShellExecute API, which would allow an attacker to execute arbitrary binaries.
  This detection also focuses on any uncommon child processes spawned from "Wlrmdr.exe" as a supplement for those that posses "ParentImage" telemetry.
references:
- https://twitter.com/0gtweet/status/1493963591745220608?s=20&t=xUg9DsZhJy1q9bPTUWgeIQ
- https://lolbas-project.github.io/lolbas/Binaries/Wlrmdr/
author: frack113, manasmbellani
date: 2022-02-16
modified: 2024-03-06
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:   # This selection is looking for processes spawned from wlrmdr using the "-u" flag
    ParentImage|endswith: '\wlrmdr.exe'
  selection_child_img:
  - Image|endswith: '\wlrmdr.exe'
  - OriginalFileName: 'WLRMNDR.EXE'
  selection_child_cli:
    CommandLine|contains|all|windash:
    - '-s '
    - '-f '
    - '-t '
    - '-m '
    - '-a '
    - '-u '
  filter_main_winlogon:
    ParentImage: 'C:\Windows\System32\winlogon.exe'
  filter_main_empty:
    ParentImage:
    - ''
    - '-'
  filter_main_null:
    ParentImage:
  condition: selection_parent or (all of selection_child_* and not 1 of filter_main_*)
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled **Wlrmdr.EXE Uncommon Argument Or Child Process** detects the execution of the `Wlrmdr.exe` process with the `-u` command-line argument, which is a significant indicator of potential abuse. The `-u` flag allows any arguments passed to `Wlrmdr.exe` to be executed through the ShellExecute API, creating a vector for adversaries to launch arbitrary binaries without raising immediate suspicion. This detection rule also examines any uncommon child processes spawned by `Wlrmdr.exe`, focusing on those that may not have standard parent relationships, signifying potential misuse or compromise. 
  The primary data sources for this detection include process creation logs, specifically monitoring for processes with command line parameters that include uncommon flags like `-s`, `-f`, `-t`, `-m`, `-a`, and `-u`. The rule aligns with the MITRE ATT&CK framework, particularly the tactic of **Defense Evasion** (TA0022) and the technique of **Application Layer Protocol** (T1218), highlighting the possibility that attackers may leverage legitimate applications for malicious purposes.
  ### Investigation Steps
  - **Review Process Creation Logs:** 
    Analyze the process creation logs in your EDR for instances of `Wlrmdr.exe` running with the `-u` argument, focusing on associated child processes and their command line arguments.
  - **Inspect Child Processes:**
    Identify any child processes spawned from `Wlrmdr.exe` to determine if their command-line arguments are typical for the given environment or if they exhibit unusual behavior.
  - **Cross-Reference with Other Data Sources:**
    Utilize additional logs from Windows Security and Sysmon to enrich the investigation by linking the identified processes with potential anomalies in registry or network connections.
  - **Check for Additional Context:**
    Review proxy and VPN logs to ascertain if there are unusual outbound connections associated with the flagged processes, as this could indicate data exfiltration or further malicious activity.
  ### Prioritization
  This alert should be treated with medium severity. The use of `Wlrmdr.exe` with uncommon flags carries a level of risk that may indicate potential exploitation or malware behavior, necessitating timely investigation and response to mitigate any potential compromise.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where `Wlrmdr.exe` is executed without the specified command-line arguments or when it operates as expected within a benign context. Additionally, if an adversary employs process injection techniques or renames the executable, the detection may fail. The rule assumes that the `Wlrmdr.exe` process is monitored adequately across all endpoints, which may not be the case in environments with inconsistent Sysmon deployment or where the executable is not present.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and security, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
