title: PowerShell Base64 Encoded Invoke Keyword
id: 6385697e-9f1b-40bd-8817-f4a91f40508e
related:
- id: fd6e2919-3936-40c9-99db-0aa922c356f7
  type: obsolete
status: test
description: Detects UTF-8 and UTF-16 Base64 encoded powershell 'Invoke-' calls
references:
- https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/
author: pH-T (Nextron Systems), Harjot Singh, @cyb3rjy0t
date: 2022-05-20
modified: 2023-04-06
tags:
- attack.execution
- attack.t1059.001
- attack.defense-evasion
- attack.t1027
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli_enc:
    CommandLine|contains: ' -e'
  selection_cli_invoke:
    CommandLine|contains:
            # Invoke-
            # UTF-16LE
    - 'SQBuAHYAbwBrAGUALQ'
    - 'kAbgB2AG8AawBlAC0A'
    - 'JAG4AdgBvAGsAZQAtA'
            # UTF-8
    - 'SW52b2tlL'
    - 'ludm9rZS'
    - 'JbnZva2Ut'
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies the execution of PowerShell commands that utilize Base64 encoding, specifically focusing on the 'Invoke-' commands, which are often employed in malicious activities to obfuscate scripts. The rule monitors process creation logs, specifically targeting instances of PowerShell (`powershell.exe` and `pwsh.exe`) and evaluates the CommandLine parameters for Base64 encoded stringsâ€”signs of potential evasion techniques used by attackers. The detection is triggered when the command line contains the `-e` switch (indicating an encoded command) combined with common prefixes used in Base64 strings related to 'Invoke-' calls. By filtering based on these characteristics, analysts can effectively isolate potentially harmful execution patterns.
  ### Investigation Steps
  - Review the EDR logs for the detected process creation events that triggered the alert, focusing on the command-line parameters used and any parent processes that initiated the PowerShell execution.
  - Cross-reference the command-line details with known threat intelligence databases to assess if the observed Base64 encoded strings correlate with known malicious activity patterns.
  - Investigate nearby network traffic using the NDR tool to determine if any outbound connections were made by the PowerShell process, which may indicate further compromise or data exfiltration.
  - Examine relevant logs in the SIEM from affected endpoints as well as any cloud resource logs (AWS, GCP, Azure) to identify unusual activity or alerts that coincide with the timeframe of the detected execution.
