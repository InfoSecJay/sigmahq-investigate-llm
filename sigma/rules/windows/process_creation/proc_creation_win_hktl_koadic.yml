title: HackTool - Koadic Execution
id: 5cddf373-ef00-4112-ad72-960ac29bac34
status: test
description: Detects command line parameters used by Koadic hack tool
references:
- https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/
- https://github.com/offsecginger/koadic/blob/457f9a3ff394c989cdb4c599ab90eb34fb2c762c/data/stager/js/stdlib.js
- https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/
author: wagga, Jonhnathan Ribeiro, oscd.community
date: 2020-01-12
modified: 2023-02-11
tags:
- attack.execution
- attack.t1059.003
- attack.t1059.005
- attack.t1059.007
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\cmd.exe'
  - OriginalFileName: 'Cmd.Exe'
  selection_cli:
    CommandLine|contains|all:
    - '/q'
    - '/c'
    - 'chcp'
  condition: all of selection_*
fields:
- CommandLine
- ParentCommandLine
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule "HackTool 
  - Koadic Execution" is designed to detect the execution of the Koadic hack tool by analyzing command-line parameters typically associated with its usage. Koadic, also known as the "Combat Application Tool," is a post-exploitation framework that adversaries may utilize to control Windows systems remotely. The rule looks specifically for process creation events linked to `cmd.exe`, targeting command-line parameters that include options such as `/q`, `/c`, and the command `chcp`. These parameters are indicative of Koadic's operational behavior and are extracted from Windows process creation logs. The detection is reliant on the Sysmon telemetry, particularly focusing on attributes like command lines and parent command lines.
  This rule is aligned with the MITRE ATT&CK framework, particularly under the tactics of Execution (T1059) and specific techniques including Command-Line Interface (T1059.003), Scripting (T1059.005), and Windows Command Shell (T1059.007). By identifying the specified command line patterns, analysts can better understand potential malicious activity and initiate the necessary investigative process.
  ### Investigation Steps
  - **Check Process Creation Logs:** Utilize EDR tools to review process creation logs for occurrences of `cmd.exe` along with the specified command-line parameters associated with Koadic execution.
  - **Analyze Parent Processes:** Investigate the parent command line of any detected `cmd.exe` instances to identify the originating process and assess if it correlates with known malicious activities or legitimate usage.
  - **Correlate with Network Activity:** Examine network connection logs to determine if additional suspicious outgoing connections were made around the time of Koadic execution, which could indicate further compromise.
  - **Review Security Logs:** Cross-reference findings with Windows Security Event Logs to look for any related security events, such as suspicious logins or privilege escalations that may have preceded the execution.
  ### Prioritization
  The severity level is marked as high because the detection of Koadic's execution can often indicate an active compromise on a system, potentially leading to expansive lateral movement or data exfiltration within the enterprise environment.
  ### Blind Spots and Assumptions
  The rule assumes that the command-line parameters used by Koadic will be present and not obfuscated in some manner (e.g., through encoded or altered arguments). It may not fire if the tool is executed in a non-standard manner or if domain policies restrict the logging of certain process creation events. Moreover, adversaries could alter their execution patterns to evade detection by modifying command line inputs or using other means of execution that do not rely on `cmd.exe.` 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
