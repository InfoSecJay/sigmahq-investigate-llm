title: Potentially Suspicious Command Targeting Teams Sensitive Files
id: d2eb17db-1d39-41dc-b57f-301f6512fa75
status: test
description: |
  Detects a commandline containing references to the Microsoft Teams database or cookies files from a process other than Teams.
  The database might contain authentication tokens and other sensitive information about the logged in accounts.
references:
- https://www.bleepingcomputer.com/news/security/microsoft-teams-stores-auth-tokens-as-cleartext-in-windows-linux-macs/
- https://www.vectra.ai/blogpost/undermining-microsoft-teams-security-by-mining-tokens
author: '@SerkinValery'
date: 2022-09-16
modified: 2023-12-18
tags:
- attack.credential-access
- attack.t1528
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    CommandLine|contains:
    - '\Microsoft\Teams\Cookies'
    - '\Microsoft\Teams\Local Storage\leveldb'
  filter_main_legit_locations:
    Image|endswith: '\Microsoft\Teams\current\Teams.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially suspicious command-line activity targeting sensitive files associated with Microsoft Teams, specifically related to its cookies or local storage. It examines process creation logs for any command lines that include references to the Microsoft Teams database paths, such as `\Microsoft\Teams\Cookies` and `\Microsoft\Teams\Local Storage\leveldb`. Importantly, the rule includes filtering criteria that restrict alerts to processes not running from the legitimate Teams executable (`Teams.exe`). This detection is pertinent under the MITRE ATT&CK framework, specifically targeting the **Credential Access** tactic and the **T1528** technique, which involves the extraction of account credentials or sensitive authentication tokens.
  The underlying data sources for this detection include Windows process creation logs, notably capturing command-line parameters to identify anomalous behavior indicative of an attempt to access sensitive Teams files. Given that these files can contain authentication tokens and other sensitive information about logged-in accounts, the potential for misuse is high, which underscores the importance of proactive monitoring and detection in an enterprise environment.
  ### Investigation Steps
  - **Analyze Process Creation Events:** Review the EDR for any recent process creation events linked to the alert, focusing on the command lines of processes attempting to access the Teams file paths mentioned in the rule.
  - **Correlate User Activity:** Investigate the user account associated with the suspicious command for any prior logged activities, ensuring that the behaviors align with expected usage patterns of Microsoft Teams.
  - **Review Network Connections:** Check for any outbound network connections from the alerted process that may indicate data exfiltration, especially looking for connections to known malicious IPs or domains.
  - **Examine System Logs:** Scrutinize any related Windows Event Logs (Security, System, and Application) for additional anomalies or indicators of compromise that could corroborate the suspicious behavior of the flagged process.
  ### Prioritization
  Alerts triggered by this rule are classified as medium severity due to the potential for credential theft and unauthorized access to sensitive information within Microsoft Teams. Investigating these alerts promptly is crucial to mitigate risks associated with potential data breaches.
  ### Blind Spots and Assumptions
  There are several assumptions and known limitations associated with this rule. It may not fire if an attacker uses a legitimate process to access the Teams database, bypassing the filtering criteria. Additionally, if the attack is executed from a process that isn't commonly monitored (e.g., a custom-built tool), the rule would fail to detect this activity. The rule also assumes that the Teams application is installed at the default path; if the path is altered, these alerts could be missed. Analysts should remain vigilant for unexpected command-line patterns and consider adding further telemetry to cover other legitimate processes that could similarly target sensitive files.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
