title: DllUnregisterServer Function Call Via Msiexec.EXE
id: 84f52741-8834-4a8c-a413-2eb2269aa6c8
status: test
description: Detects MsiExec loading a DLL and calling its DllUnregisterServer function
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md
- https://lolbas-project.github.io/lolbas/Binaries/Msiexec/
- https://twitter.com/_st0pp3r_/status/1583914515996897281
author: frack113
date: 2022-04-24
modified: 2024-03-13
tags:
- attack.defense-evasion
- attack.t1218.007
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\msiexec.exe'
  - OriginalFileName: '\msiexec.exe'
  selection_flag:
    CommandLine|contains|windash: ' -z '
  selection_dll:
    CommandLine|contains: '.dll'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect when the `msiexec.exe` process is used to invoke the `DllUnregisterServer` function on a DLL file. The rule performs its detection by examining process creation logs to identify instances where `msiexec.exe` is running with specific command line arguments indicating the loading of a DLL, particularly those that contain the `.dll` extension and the `-z` argument. The key data sources involved in this detection include the command line parameters of the process, the image path of the `msiexec.exe`, and its original file name. This activity is classified under the MITRE ATT&CK framework specifically in the tactics for Defense Evasion (T1218.007), as it can be used to obfuscate the actions of malicious actors seeking to unregister essential DLLs as part of a larger attack strategy.
  ### Investigation Steps
  - **Review Process Creation Logs:** Check Windows Event Logs for process creation events (Event ID 4688) related to `msiexec.exe`, focusing on the command line parameters used for execution. Investigating any occurrences that include `-z` and a `.dll` file will provide insight into potential malicious activity.
    
  - **Analyze EDR Alerts:** Utilize the Endpoint Detection and Response (EDR) tool to examine alerts tied to `msiexec.exe` process calls. Gather detailed contextual information about these executions, such as timestamps, user accounts, and originating systems.
    
  - **Correlate with Other Logs:** Cross-reference findings with additional logs like Sysmon network connections and DNS queries to identify any suspicious external communications or activations related to the recognized DLLs. This helps determine if the process is correlated with potential command-and-control activities.
  - **Investigate Historical Context:** Utilize the Windows Security Logs and any available cloud platform logs to assess whether this behavior aligns with normal operations or if it deviates significantly, indicating a potential security incident.
  ### Prioritization
  This alert is considered medium priority due to the potential for the `msiexec.exe` process to execute actions that might lead to system configurations being altered or necessary DLLs being removed, which can pave the way for further exploitation or stability issues.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where legitimate uses of `msiexec.exe` for software installations or updates are prevalent, leading to many false positives. Additionally, the mechanism may be bypassed if an attacker employs other binaries or methods to unregister DLLs without invoking `msiexec.exe`. Lastly, the rule assumes that the presence of `.dll` and the `-z` flag is indicative of foul play, which may not always be the case in certain software deployment scenarios.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
