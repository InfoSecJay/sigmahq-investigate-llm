title: MSHTA Suspicious Execution 01
id: cc7abbd0-762b-41e3-8a26-57ad50d2eea3
status: test
description: Detection for mshta.exe suspicious execution patterns sometimes involving
  file polyglotism
references:
- http://blog.sevagas.com/?Hacking-around-HTA-files
- https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356
- https://learn.microsoft.com/en-us/previous-versions/dotnet/framework/data/xml/xslt/xslt-stylesheet-scripting-using-msxsl-script
- https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997
- https://twitter.com/mattifestation/status/1326228491302563846
author: Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)
date: 2019-02-22
modified: 2022-11-07
tags:
- attack.defense-evasion
- attack.t1140
- attack.t1218.005
- attack.execution
- attack.t1059.007
- cve.2020-1599
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\mshta.exe'
    CommandLine|contains:
    - 'vbscript'
    - '.jpg'
    - '.png'
    - '.lnk'
            # - '.chm'  # could be prone to false positives
    - '.xls'
    - '.doc'
    - '.zip'
    - '.dll'
            # - '.exe'
  condition: selection
falsepositives:
- False positives depend on scripts and administrative tools used in the monitored
  environment
level: high
notes: |
  ### Technical Context
  This Sigma rule monitors for suspicious execution patterns involving `mshta.exe`, a Windows utility that executes HTML applications (HTA files). Attackers have leveraged `mshta.exe` to run malicious scripts or commands, often exploiting file polyglotismâ€”where a single file can act as multiple formats, typically combining scripts with seemingly innocuous file types like images or documents. The rule specifically looks for process creation events where the image name ends with `mshta.exe` and the command line includes certain file extensions that could indicate an attempt to execute untrusted scripts disguised within typical files (e.g., `.jpg`, `.png`, `.xls`). By analyzing these command-line parameters, the rule aims to detect potentially malicious activities.
  ### Investigation Steps
  - Examine the command line of the detected `mshta.exe` process using EDR tools to identify any unusual patterns or file extensions that might indicate a compromise.
  - Cross-reference the list of executed scripts or files against security logs in the antivirus and endpoint protection solutions to identify any flagged or quarantined items related to this activity.
  - Review network traffic logs from the NDR to detect any outbound connections initiated by the `mshta.exe` process, as this may lead to command and control servers.
  - Investigate user behavior associated with the execution of `mshta.exe`, utilizing logs from the Proxy or VPN to assess any anomalous access to external resources or repositories.
