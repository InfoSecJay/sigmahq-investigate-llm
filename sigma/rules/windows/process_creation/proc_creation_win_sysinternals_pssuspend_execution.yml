title: Sysinternals PsSuspend Execution
id: 48bbc537-b652-4b4e-bd1d-281172df448f
related:
- id: 4beb6ae0-f85b-41e2-8f18-8668abc8af78
  type: similar
status: test
description: Detects usage of Sysinternals PsSuspend which can be abused to suspend
  critical processes
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/pssuspend
- https://twitter.com/0gtweet/status/1638069413717975046
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-03-23
tags:
- attack.discovery
- attack.persistence
- attack.t1543.003
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - OriginalFileName: 'pssuspend.exe'
  - Image|endswith:
    - '\pssuspend.exe'
    - '\pssuspend64.exe'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Sysinternals PsSuspend Execution" is designed to detect the execution of `PsSuspend.exe`, a tool from the Sysinternals suite commonly used for suspending processes on Windows systems. This activity can be indicative of malicious behavior, as attackers might leverage this functionality to pause critical processes to evade detection or manipulate system functionality. The rule specifically looks for the presence of `pssuspend.exe` or `pssuspend64.exe` in process creation logs. 
  Detection is based on Windows process creation logs sourced from Sysmon, which allows for detailed monitoring of process activities on a host. By identifying when these specific executables are run, security teams can investigate potential misuse in alignment with the MITRE ATT&CK framework under the tactics of "Discovery" and "Persistence," particularly referencing technique T1543.003 (Create or Modify System Process: Windows Service). Understanding the execution patterns of tools like PsSuspend can help in recognizing attempts by adversaries to manipulate or disable security controls.
  ### Investigation Steps
  - **Review Process Creation Logs**: Investigate recent process creation logs for instances of `pssuspend.exe` or `pssuspend64.exe` to identify the source user and time of execution.
  - **Analyze Command-Line Arguments**: Using EDR tools, examine the command-line arguments used during the execution of `PsSuspend` to determine if it was targeting critical processes.
  - **Correlate Activity with User Behavior**: Check user activity logs for the account that executed `PsSuspend` to assess whether the actions align with legitimate operational tasks or indicate potential insider threats.
  - **Assess Impacted Processes**: Identify any critical or sensitive processes that were suspended and evaluate the potential impact on system security and stability.
  ### Prioritization
  The alert is classified as medium severity because the execution of `PsSuspend` can indicate potential evasion techniques employed by attackers, and it requires immediate investigation to determine if critical processes are being targeted.
  ### Blind Spots and Assumptions
  There are several factors that could lead to the rule failing to fire, including legitimate use of `PsSuspend` by authorized personnel for system maintenance. Additionally, if the telemetry from Sysmon is not implemented or is misconfigured, then no logs will be generated for the events. An adversary might also rename or modify the executable to avoid detection. It is crucial for detection engineers to monitor for cases where legitimate use might overlap with malicious intent and ensure comprehensive logging and monitoring is in place.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
