title: Suspicious Double Extension File Execution
id: 1cdd9a09-06c9-4769-99ff-626e2b3991b8
related:
- id: 5e6a80c8-2d45-4633-9ef4-fa2671a39c5c     # ParentImage/ParentCommandLine
  type: similar
status: stable
description: Detects suspicious use of an .exe extension after a non-executable file
  extension like .pdf.exe, a set of spaces or underlines to cloak the executable file
  in spear phishing campaigns
references:
- https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html
- https://twitter.com/blackorbird/status/1140519090961825792
author: Florian Roth (Nextron Systems), @blu3_team (idea), Nasreddine Bencherchali
  (Nextron Systems)
date: 2019-06-26
modified: 2023-02-28
tags:
- attack.initial-access
- attack.t1566.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - '.doc.exe'
    - '.docx.exe'
    - '.xls.exe'
    - '.xlsx.exe'
    - '.ppt.exe'
    - '.pptx.exe'
    - '.rtf.exe'
    - '.pdf.exe'
    - '.txt.exe'
    - '      .exe'
    - '______.exe'
    - '.doc.js'
    - '.docx.js'
    - '.xls.js'
    - '.xlsx.js'
    - '.ppt.js'
    - '.pptx.js'
    - '.rtf.js'
    - '.pdf.js'
    - '.txt.js'
    CommandLine|contains:
    - '.doc.exe'
    - '.docx.exe'
    - '.xls.exe'
    - '.xlsx.exe'
    - '.ppt.exe'
    - '.pptx.exe'
    - '.rtf.exe'
    - '.pdf.exe'
    - '.txt.exe'
    - '      .exe'
    - '______.exe'
    - '.doc.js'
    - '.docx.js'
    - '.xls.js'
    - '.xlsx.js'
    - '.ppt.js'
    - '.pptx.js'
    - '.rtf.js'
    - '.pdf.js'
    - '.txt.js'
  condition: selection
falsepositives:
- Unknown
level: critical
notes: |
  ### Technical Context
  The "Suspicious Double Extension File Execution" Sigma rule is designed to detect potentially malicious executable files that masquerade as non-executable file types through the use of double extensions or other deceptive tactics, such as excessive spaces or underscores. This technique is commonly used in spear phishing campaigns to trick users into inadvertently executing harmful software when they believe they are opening a benign document. The rule monitors Windows process creation logs, focusing on filenames and command-line parameters that exhibit suspicious patternsâ€”specifically files with extensions such as `.exe`, `.js`, or combinations of both that would typically indicate document formats (like `.doc`, `.xls`, `.pdf`) preceding an executable extension. This aligns with the MITRE ATT&CK techniques related to initial access, specifically T1566.001, which is concerned with spear phishing attachments.
  ### Investigation Steps
  - **Verify the Process:** Check the process creation details in your EDR to identify the source of the executable. Investigate the parent process to understand whether it originated from a legitimate application or an unusual source.
  - **Analyze Command-Line Arguments:** Look at the command-line arguments associated with the detected process in the EDR logs to confirm any suspicious parameters. This can reveal additional hidden attempts to obfuscate the true nature of the file.
  - **Review User Behavior:** Assess the user's actions prior to the alert. Verify whether they have interacted with any unexpected email attachments or links that could have led to executing the malicious file.
  - **Conduct Network Analysis:** Utilize your Network Detection and Response (NDR) tools to monitor any unusual outbound connections initiated by the flagged process. This could indicate exfiltration or communication with a command-and-control server.
  ### Prioritization
  This alert carries critical severity due to the high likelihood that the detected format represents an intentional attempt to deceive users and execute malicious code. Prompt investigation is essential to prevent potential breaches and unauthorized access to sensitive information.
  ### Blind Spots and Assumptions
  This rule may not trigger if an attacker uses less common file types for obfuscation beyond the specified extensions or employs techniques outside the typical naming conventions. Additionally, if an environment restricts script execution or has strong antivirus solutions that detect malicious payloads, the effectiveness of this rule may be diminished. Understanding the variety in user behavior and file access patterns can help analysts know when to be especially vigilant.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
