title: Potential Configuration And Service Reconnaissance Via Reg.EXE
id: 970007b7-ce32-49d0-a4a4-fbef016950bd
status: test
description: Detects the usage of "reg.exe" in order to query reconnaissance information
  from the registry. Adversaries may interact with the Windows registry to gather
  information about credentials, the system, configuration, and installed software.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1012/T1012.md
author: Timur Zinniatullin, oscd.community
date: 2019-10-21
modified: 2023-02-05
tags:
- attack.discovery
- attack.t1012
- attack.t1007
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\reg.exe'
  - OriginalFileName: 'reg.exe'
  selection_flag:
    CommandLine|contains: 'query'
  selection_key:
    CommandLine|contains:
    - 'currentVersion\windows'
    - 'winlogon\'
    - 'currentVersion\shellServiceObjectDelayLoad'
    - 'currentVersion\run'         # Also covers the strings "RunOnce", "RunOnceEx" and "runServicesOnce"
    - 'currentVersion\policies\explorer\run'
    - 'currentcontrolset\services'
  condition: all of selection_*
falsepositives:
- Discord
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potentially malicious reconnaissance activities carried out by adversaries utilizing the Windows command-line utility `reg.exe`. Specifically, it looks for instances where `reg.exe` is executed with the 'query' command to request information from specific registry keys that may reveal critical details about system configuration, installed software, and stored credentials. The rule monitors process creation logs, capturing essential data such as the command-line parameters used during the execution of `reg.exe` and the image name associated with the process. 
  The key registry paths targeted by this query include common locations such as `HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\`, which may indicate the system setup, and the `HKEY_LOCAL_MACHINE\CurrentControlSet\Services\`, which may expose service and driver configurations. This falls within the MITRE ATT&CK framework under the Discovery tactics, particularly the techniques T1012 (Query Registry) and T1007 (System Service Discovery), making it a crucial detection for identifying unauthorized reconnaissance activities.
  ### Investigation Steps
  - **Check Process Details:** Use the EDR to review the details of `reg.exe` executions, including the timestamp, user context, and associated parent process. This can help identify whether the activity is part of legitimate operations or reflects suspicious behavior.
  - **Analyze Command-Line Arguments:** Review the command-line arguments provided to `reg.exe`, particularly focusing on the presence of keywords such as `currentVersion` and `run`. This will allow you to determine if the queries align with any known malicious activity patterns.
  - **Correlate with User Activity:** Investigate the user account associated with the process creation to confirm whether this account has a legitimate need for registry access. Cross-reference with user activity logs from the SIEM.
  - **Review Related Logs:** Examine other logs from the alertâ€™s timestamp, such as network connections or PowerShell activity, to ascertain if there were any further suspicious activities that coincide with the registry queries.
  ### Prioritization
  This alert is categorized with medium severity due to the potential implications of reconnaissance activities that could be precursors to more damaging attacks, such as privilege escalation or lateral movement within the network.
  ### Blind spots and Assumptions
  This rule may not trigger if an adversary uses alternative scripts or tools capable of querying registry data without invoking `reg.exe`, such as PowerShell cmdlets (e.g., `Get-ItemProperty`). Additionally, legitimate applications like Discord, which may also access the registry, can generate false positives. It's assumed that an atypical execution context would be evaluated, and response teams should be mindful of monitoring thresholds to reduce alert noise from benign software behavior.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
