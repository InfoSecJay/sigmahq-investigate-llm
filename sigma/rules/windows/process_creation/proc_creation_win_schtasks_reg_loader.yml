title: Scheduled Task Executing Payload from Registry
id: 86588b36-c6d3-465f-9cee-8f9093e07798
related:
- id: c4eeeeae-89f4-43a7-8b48-8d1bdfa66c78
  type: derived
status: test
description: Detects the creation of a schtasks that potentially executes a payload
  stored in the Windows Registry using PowerShell.
references:
- https://thedfirreport.com/2022/02/21/qbot-and-zerologon-lead-to-full-domain-compromise/
author: X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2023-07-18
tags:
- attack.execution
- attack.persistence
- attack.t1053.005
- attack.t1059.001
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
        # schtasks.exe /Create /F /TN "{97F2F70B-10D1-4447-A2F3-9B070C86E261}" /TR "cmd /c start /min \"\" powershell.exe -Command IEX([System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String((Get-ItemProperty -Path HKCU:\SOFTWARE\Pvoeooxf).yzbbvhhdypa))) " /SC MINUTE /MO 30
  - Image|endswith: '\schtasks.exe'
  - OriginalFileName: 'schtasks.exe'
  selection_cli_create:
    CommandLine|contains: '/Create'
  selection_cli_get:
    CommandLine|contains:
    - 'Get-ItemProperty'
    - ' gp '         # Alias
  selection_cli_hive:
    CommandLine|contains:
    - 'HKCU:'
    - 'HKLM:'
    - 'registry::'
    - 'HKEY_'
  filter_main_encoding:
    CommandLine|contains:
    - 'FromBase64String'
    - 'encodedcommand'
  condition: all of selection_* and not 1 of filter_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the suspicious use of the Windows Task Scheduler (`schtasks.exe`) to create a scheduled task that executes a potentially malicious payload stored in the Windows Registry. Specifically, it monitors for instances where the command-line parameters of `schtasks.exe` include the creation of a task with embedded PowerShell commands that leverage registry values. The rule looks for specific command-line patterns that indicate a scheduled task creation, particularly focusing on the invocation of `Get-ItemProperty` to retrieve values from the Windows Registry (HKCU or HKLM) and subsequently use those values as part of an encoded PowerShell command executed via `cmd`. 
  The rule ties into the MITRE ATT&CK framework under the tactics of Execution and Persistence (techniques T1053.005, T1059.001), indicating a potential method by which adversaries can maintain a foothold and execute malicious payloads on target systems without user interaction.
  ### Investigation Steps
  - **Verify Scheduled Task Creation:** Use the Windows Task Scheduler or Sysinternals tools to list the tasks created within the relevant timeframe and identify any suspicious entries, particularly those invoking PowerShell commands.
  - **Analyze Process Creation Logs:** Investigate the corresponding Windows event logs for process creation events (particularly Sysmon logs) related to the detected `schtasks.exe` executions and review the command-line arguments.
  - **Examine Registry Access:** Check Windows Registry logs to identify if there were any recent access or modifications to the specified keys (`HKCU` or `HKLM`) that may correlate with the execution of the suspicious scheduled task.
  - **Conduct EDR Analysis:** Utilize EDR tools to obtain full context on the processes involved, including parent-child relationships, user account behavior, and any associated malicious indicators that may indicate broader compromise.
  ### Prioritization
  The alert carries a medium severity level due to the potential for malicious activity that can enable persistence and execution of harmful payloads. Given the nature of user-level scheduled tasks and PowerShell usage, further investigation is warranted to prevent possible data breaches or malware propagation.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where scheduled tasks are frequently used for legitimate automation, resulting in possible false positives. Additionally, an adversary could evade detection by using obfuscation techniques, such as altered command patterns or alternative methods of task creation that don't invoke `schtasks.exe`. Users must also ensure that registry access logging is in place; missing such telemetry can prevent detection of the critical actions leading up to the alert.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
