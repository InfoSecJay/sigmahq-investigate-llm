title: Python Inline Command Execution
id: 899133d5-4d7c-4a7f-94ee-27355c879d90
status: test
description: Detects execution of python using the "-c" flag. This is could be used
  as a way to launch a reverse shell or execute live python code.
references:
- https://docs.python.org/3/using/cmdline.html#cmdoption-c
- https://www.revshells.com/
- https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-02
modified: 2025-01-20
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'python.exe'
  - Image|endswith:
    - 'python.exe'           # no \ bc of e.g. ipython.exe
    - 'python3.exe'
    - 'python2.exe'
  selection_cli:
    CommandLine|contains: ' -c'
  filter_main_python:   # Based on baseline
    ParentImage|startswith: 'C:\Program Files\Python'
    ParentImage|endswith: '\python.exe'
    ParentCommandLine|contains: '-E -s -m ensurepip -U --default-pip'
  filter_optional_vscode:
    ParentImage|endswith: '\AppData\Local\Programs\Microsoft VS Code\Code.exe'
  filter_optional_pip:
    CommandLine|contains|all:
    - '<pip-setuptools-caller>'
    - 'exec(compile('
  condition: all of selection_* and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Python libraries that use a flag starting with "-c". Filter according to your environment
level: medium
notes: |
  n
  ### Technical Context
  The "Python Inline Command Execution" detection rule identifies instances of Python execution that leverage the "-c" flag, which allows inline code execution. This behavior is often exploited by adversaries to run arbitrary commands, potentially leading to a reverse shell or the execution of malicious Python scripts. The rule analyzes process creation logs specifically targeting the execution of `python.exe`, `python2.exe`, and `python3.exe`, focusing on command-line arguments that include the "-c" flag. Key telemetry sources include process creation events from Windows, primarily focusing on command-line parameters and parent process information to discern legitimate uses from suspicious activity. This detection aligns with the MITRE ATT&CK tactic of Execution and technique T1059, which encompasses the use of command-line interfaces for malicious purposes.
  ### Investigation Steps
  - **Check Process Creation Logs:** Utilize EDR tools to review process creation logs related to Python executions, specifically looking for any instances involving the "-c" flag.
  - **Analyze Parent Process Context:** Investigate the parent processes of the detected Python commands to determine if they stem from legitimate applications or potentially malicious origins.
  - **Review Network Activity:** If a reverse shell is suspected, analyze network connections initiated by the Python process using NDR logs to identify any suspicious outbound connections.
  - **Validate Code Execution Intent:** Cross-reference with historical evidence or known baselines to determine if the execution of inline Python commands is legitimate for your environment, focusing on established use cases.
  ### Prioritization
  This alert is considered medium severity due to the potential for executing malicious commands through inline Python scripts, which could lead to further compromise or data exfiltration if not promptly investigated.
  ### Blind Spots and Assumptions
  This rule may not trigger in scenarios where the Python interpreter's execution is masked or executed through obfuscation techniques. Additionally, certain legitimate applications may invoke Python with the "-c" flag for benign purposes, such as internal tooling or scripts. The detection assumes that the established process baselines are accurate, and any variance may not be captured. It is critical for detection engineers to incorporate contextual filtering and maintain up-to-date baselines.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
