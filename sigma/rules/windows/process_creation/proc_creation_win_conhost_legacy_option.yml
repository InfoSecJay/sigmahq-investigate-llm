title: Suspicious High IntegrityLevel Conhost Legacy Option
id: 3037d961-21e9-4732-b27a-637bcc7bf539
status: test
description: ForceV1 asks for information directly from the kernel space. Conhost
  connects to the console application. High IntegrityLevel means the process is running
  with elevated privileges, such as an Administrator context.
references:
- https://cybercryptosec.medium.com/covid-19-cyber-infection-c615ead7c29
- https://thedfirreport.com/2022/04/04/stolen-images-campaign-ends-in-conti-ransomware/
- https://learn.microsoft.com/en-us/windows/win32/secauthz/mandatory-integrity-control
author: frack113
date: 2022-12-09
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.t1202
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    IntegrityLevel:
    - 'High'
    - 'S-1-16-12288'
    CommandLine|contains|all:
    - 'conhost.exe'
    - '0xffffffff'
    - '-ForceV1'
  condition: selection
falsepositives:
- Very Likely, including launching cmd.exe via Run As Administrator
level: informational
notes: |
  n
  ### Technical Context
  The Sigma rule for detecting "Suspicious High IntegrityLevel Conhost Legacy Option" focuses on identifying instances where `conhost.exe` (Console Host) is executed with high integrity levels and specific command-line arguments that may indicate an attempt to interact with kernel-level functionalities. This is particularly concerning because running processes at high integrity levels, such as Administrator context, can allow for significant control and manipulation of the system, potentially leading to unauthorized or malicious activities. The detection leverages Windows process creation logs, monitoring the `IntegrityLevel` and `CommandLine` parameters. Specifically, it looks for the presence of `conhost.exe`, the flag `-ForceV1`, and the hexadecimal value `0xffffffff`â€”a combination that is indicative of attempts to bypass normal security controls via advanced techniques, referenced under the MITRE ATT&CK tactic "Defense Evasion" (Technique T1202).
  ### Investigation Steps
  - **Review Process Creation Logs:** Investigate all related process creation events involving `conhost.exe` to confirm the integrity level and parent-child process relationships utilizing EDR tools.
  - **Analyze Command-Line Invocations:** Check the full command-line parameters logged for any unusual or unexpected options that could illustrate malicious intent, particularly the presence of `-ForceV1`.
  - **Check for Compromised Accounts:** Determine if the user account that executed the command is associated with any known compromises or unusual behavior, reviewing authentication logs via Windows Security logs.
  - **Assess Impacted Systems:** Identify what systems were affected by this behavior and correlate findings with any known indicators of compromise from threat intelligence reports.
  ### Prioritization
  Alerts generated by this rule should be treated with high priority in an enterprise environment as they could potentially indicate a design for privilege escalation or execution of malicious payloads.
  ### Blind Spots and Assumptions
  There may be instances where legitimate administrative tasks may cause false positives, as invoking `conhost.exe` with elevated privileges can be a standard procedure for many administrative commands. This rule may not fire if the command does not utilize the specific parameters or if the integrity level is misconfigured. Additionally, skilled adversaries might modify the command execution patterns to evade detection, thereby requiring a continuous review and adjustment of detection rules to adapt to emerging tactics.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
