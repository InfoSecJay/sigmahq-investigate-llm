title: Potential Homoglyph Attack Using Lookalike Characters
id: 32e280f1-8ad4-46ef-9e80-910657611fbc
status: test
description: |
  Detects the presence of unicode characters which are homoglyphs, or identical in appearance, to ASCII letter characters.
  This is used as an obfuscation and masquerading techniques. Only "perfect" homoglyphs are included; these are characters that
  are indistinguishable from ASCII characters and thus may make excellent candidates for homoglyph attack characters.
references:
- https://redcanary.com/threat-detection-report/threats/socgholish/#threat-socgholish
- http://www.irongeek.com/homoglyph-attack-generator.php
author: Micah Babinski, @micahbabinski
date: 2023-05-07
tags:
- attack.defense-evasion
- attack.t1036
- attack.t1036.003
   # - attack.t1036.008
logsource:
  category: process_creation
  product: windows
detection:
  selection_upper:
    CommandLine|contains:
    - "А"              # А/A
    - "В"              # В/B
    - "Е"              # Е/E
    - "К"              # К/K
    - "М"              # М/M
    - "Н"              # Н/H
    - "О"              # О/O
    - "Р"              # Р/P
    - "С"              # С/C
    - "Т"              # Т/T
    - "Х"              # Х/X
    - "Ѕ"              # Ѕ/S
    - "І"              # І/I
    - "Ј"              # Ј/J
    - "Ү"              # Ү/Y
    - "Ӏ"              # Ӏ/I
    - "Ԍ"              # Ԍ/G
    - "Ԛ"              # Ԛ/Q
    - "Ԝ"              # Ԝ/W
    - "Α"              # Α/A
    - "Β"              # Β/B
    - "Ε"              # Ε/E
    - "Ζ"              # Ζ/Z
    - "Η"              # Η/H
    - "Ι"              # Ι/I
    - "Κ"              # Κ/K
    - "Μ"              # Μ/M
    - "Ν"              # Ν/N
    - "Ο"              # Ο/O
    - "Ρ"              # Ρ/P
    - "Τ"              # Τ/T
    - "Υ"              # Υ/Y
    - "Χ"              # Χ/X
  selection_lower:
    CommandLine|contains:
    - "а"              # а/a
    - "е"              # е/e
    - "о"              # о/o
    - "р"              # р/p
    - "с"              # с/c
    - "х"              # х/x
    - "ѕ"              # ѕ/s
    - "і"              # і/i
    - "ӏ"              # ӏ/l
    - "ј"              # ј/j
    - "һ"              # һ/h
    - "ԁ"              # ԁ/d
    - "ԛ"              # ԛ/q
    - "ԝ"              # ԝ/w
    - "ο"              # ο/o
  condition: 1 of selection_*
falsepositives:
- Commandlines with legitimate Cyrillic text; will likely require tuning (or not be
  usable) in countries where these alphabets are in use.
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Homoglyph Attack Using Lookalike Characters" is designed to detect Unicode characters that function as homoglyphs for standard ASCII letters. These homoglyphs are visually indistinguishable from their ASCII counterparts, making them useful for obfuscation techniques in various malicious activities, such as phishing attacks or software misuse. The rule inspects the command-line parameters associated with process creation events on Windows systems, focusing specifically on the presence of certain Unicode characters that are potential candidates for masking malicious commands.
  By leveraging Windows Process Creation logs, this rule identifies command-line inputs that contain critical homoglyph characters from both upper and lower case. For instance, the character "А" may be used in place of "A", and similarly for other alphabetic substitutions. These detections align with the MITRE ATT&CK technique T1036, specifically T1036.003, which pertains to the use of obfuscation and masquerading in attacks. By identifying such inputs, the SOC is alerted to potential misuse that warrants further investigation.
  ### Investigation Steps
  - **Check Process Context:** Review the operational context of the detected process using your EDR solution. Check for any unusual parent-child relationships and the execution path that could indicate malicious intent.
  - **Examine Command-Line Parameters:** Analyze the command-line arguments in detail to identify any further obfuscation techniques or signs of compromise. Pay close attention to whether the command is being executed from a commonly used application or from atypical locations.
  - **Search for Related Logs:** Investigate associated logs such as Windows Security events and Sysmon logs for additional evidence of suspicious activity related to the detected process. Look for multiple occurrences or patterns that may suggest automated or scripted attack methods.
  - **Determine User Activity:** Utilize Windows Security logs to track the user account associated with the process. Cross-reference their activity to determine if there has been any unauthorized access or user account compromise.
  ### Prioritization
  This alert is classified with a medium severity level due to the potential risk that homoglyphs present in command lines can lead to successful obfuscation of malicious activities. Such attacks can have significant repercussions for organizational security and warrant immediate investigation.
  ### Blind Spots and Assumptions
  The rule assumes that command-lines containing legitimate Cyrillic text may produce false positives, particularly in environments where these alphabets are naturally used. Consequently, analysts should be aware that this rule may not fire in situations where the environment includes frequent use of languages or applications that utilize these homoglyphs. Additionally, skilled adversaries might use other, more intricate methods of obfuscation, which could bypass this detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
