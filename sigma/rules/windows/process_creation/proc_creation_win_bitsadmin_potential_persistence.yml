title: Monitoring For Persistence Via BITS
id: b9cbbc17-d00d-4e3d-a827-b06d03d2380d
status: test
description: |
  BITS will allow you to schedule a command to execute after a successful download to notify you that the job is finished.
  When the job runs on the system the command specified in the BITS job will be executed.
  This can be abused by actors to create a backdoor within the system and for persistence.
  It will be chained in a BITS job to schedule the download of malware/additional binaries and execute the program after being downloaded.
references:
- https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html
- http://0xthem.blogspot.com/2014/03/t-emporal-persistence-with-and-schtasks.html
- https://isc.sans.edu/diary/Wipe+the+drive+Stealthy+Malware+Persistence+Mechanism+-+Part+1/15394
author: Sreeman
date: 2020-10-29
modified: 2024-01-25
tags:
- attack.defense-evasion
- attack.t1197
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
  - Image|endswith: '\bitsadmin.exe'
  - OriginalFileName: 'bitsadmin.exe'
  selection_cli_notify_1:
    CommandLine|contains: '/SetNotifyCmdLine'
  selection_cli_notify_2:
    CommandLine|contains:
    - '%COMSPEC%'
    - 'cmd.exe'
    - 'regsvr32.exe'
  selection_cli_add_1:
    CommandLine|contains: '/Addfile'
  selection_cli_add_2:
    CommandLine|contains:
    - 'http:'
    - 'https:'
    - 'ftp:'
    - 'ftps:'
  condition: selection_img and (all of selection_cli_notify_* or all of selection_cli_add_*)
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Monitoring For Persistence Via BITS" is designed to detect malicious activities that exploit the Background Intelligent Transfer Service (BITS) for persistence mechanisms on Windows systems. BITS is a Windows component that facilitates the transfer of files in the background without interfering with user activity. Malicious actors can leverage BITS to schedule commands that execute after downloading malicious binaries, allowing them to maintain persistence on compromised systems. This rule primarily looks for specific patterns related to the execution of `bitsadmin.exe`, including command-line invocations that contain parameters commonly abused for establishing persistence, such as `/SetNotifyCmdLine` and `/AddFile`. The key data sources involved in this detection include Windows process creation logs that provide insights into the execution of command-line instructions associated with BITS. It aligns with the MITRE ATT&CK tactic of Defense Evasion (TA0005), specifically technique T1197 (Bait and Switch with BITS).
  ### Investigation Steps
  - **Review Process Creation Logs:** Check the Windows Security logs for any instances of `bitsadmin.exe` and capture the associated command-line parameters to assess the legitimacy of the usage.
  - **Analyze Command-Line Arguments:** Investigate command-line executions that include `/SetNotifyCmdLine` and `/AddFile` to identify if they are pointing to suspicious or unexpected locations.
  - **Correlate with Other Security Tools:** Use EDR solutions to examine the process context further, looking for lateral movement or unusual behavior associated with the identified `bitsadmin.exe` executions.
  - **Inspect Network Activity:** Analyze network traffic logs for outbound connections that may relate to downloads initiated by the BITS job, particularly focusing on unexpected protocols like HTTP, HTTPS, or FTP.
  ### Prioritization
  The alert generated by this rule is classified as medium severity due to the potential for exploitation of Windows BITS in establishing persistence. If detected, it indicates a noteworthy risk that warrants immediate investigation, as it could signify a sophisticated attack attempting to maintain a foothold within the environment.
  ### Blind Spots and Assumptions
  One potential blind spot of this rule is the possibility that legitimate use of BITS could generate false positives, especially in environments where BITS is heavily used for normal operations. Additionally, if an adversary uses alternate methods to bypass the detection mechanism, such as employing different tools for file transfers or executing commands directly without utilizing BITS, this rule may not trigger. Responders should also be aware that if system configurations change or if security policies are relaxed, the efficacy of this rule may diminish.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
