title: HackTool - Inveigh Execution
id: b99a1518-1ad5-4f65-bc95-1ffff97a8fd0
status: test
description: Detects the use of Inveigh a cross-platform .NET IPv4/IPv6 machine-in-the-middle
  tool
references:
- https://github.com/Kevin-Robertson/Inveigh
- https://thedfirreport.com/2020/11/23/pysa-mespinoza-ransomware/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-24
modified: 2023-02-04
tags:
- attack.credential-access
- attack.t1003.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith: '\Inveigh.exe'
  - OriginalFileName:
    - '\Inveigh.exe'
    - '\Inveigh.dll'
  - Description: 'Inveigh'
  - CommandLine|contains:
    - ' -SpooferIP'
    - ' -ReplyToIPs '
    - ' -ReplyToDomains '
    - ' -ReplyToMACs '
    - ' -SnifferIP'
  condition: selection
falsepositives:
- Very unlikely
level: critical
notes: |
  ### Technical Context
  The Sigma rule "HackTool 
  - Inveigh Execution" is designed to detect the execution of Inveigh, a well-known machine-in-the-middle tool that leverages both IPv4 and IPv6 protocols to intercept network communications. This detection works by looking for specific indicators related to the execution of the Inveigh executable, including the image name, original file name, and process description. Additionally, the rule examines command-line arguments associated with Inveigh that indicate its operational context, such as spooling IPs, replying to specified domains, and sniffing traffic. The primary technical data source involved in this detection is process creation logs from Windows, which capture the necessary characteristics of process executions. In terms of the MITRE ATT&CK framework, this rule is related to the "Credential Access" tactic (T1003.001), which covers tools used for capturing credentials and enabling unauthorized access to sensitive data.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review recent process creation logs for instances of `Inveigh.exe` or `Inveigh.dll` from Windows Sysmon to confirm the execution of the tool.
  - **Analyze Command-Line Arguments:** Inspect the command-line parameters associated with the `Inveigh` process, focusing on any use of arguments such as `-SpooferIP` or `-ReplyToIPs` to understand the potential malicious intent or configuration.
  - **Correlate with Network Activity:** Use EDR and network logs to identify any unusual network traffic patterns or suspicious connections that correlate with the use of Inveigh, indicating potential data exfiltration or man-in-the-middle activities.
  - **Review Affected Systems:** Assess the affected systems for any signs of exploitation, such as unauthorized access attempts or other tools being used in conjunction with Inveigh, to determine the scope of the compromise.
  ### Prioritization
  The alert generated by this rule is marked as critical due to the significant risks associated with the use of Inveigh, which can facilitate data interception and credential theft within the network environment.
  ### Blind Spots and Assumptions
  This rule may not fire if the attacker utilizes a renamed or altered version of Inveigh, bypassing signature detection. Additionally, if the command-line arguments or associated processes do not align with the established criteria, the rule might fail to trigger. It's also assumed that the telemetry sources are properly configured and monitored to capture all relevant process execution events. Adversaries may employ methods to obfuscate their activities, which could circumvent detection efforts not specifically tailored to their tactics.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
