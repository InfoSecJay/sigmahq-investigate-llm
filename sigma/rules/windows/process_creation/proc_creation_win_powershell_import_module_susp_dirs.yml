title: Import PowerShell Modules From Suspicious Directories - ProcCreation
id: c31364f7-8be6-4b77-8483-dd2b5a7b69a3
related:
- id: 21f9162c-5f5d-4b01-89a8-b705bd7d10ab
  type: similar
status: test
description: Detects powershell scripts that import modules from suspicious directories
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1003.002/T1003.002.md
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-10
tags:
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
    - 'Import-Module "$Env:Temp\'
    - Import-Module '$Env:Temp\
    - 'Import-Module $Env:Temp\'
    - 'Import-Module "$Env:Appdata\'
    - Import-Module '$Env:Appdata\
    - 'Import-Module $Env:Appdata\'
    - 'Import-Module C:\Users\Public\'
            # Import-Module alias is "ipmo"
    - 'ipmo "$Env:Temp\'
    - ipmo '$Env:Temp\
    - 'ipmo $Env:Temp\'
    - 'ipmo "$Env:Appdata\'
    - ipmo '$Env:Appdata\
    - 'ipmo $Env:Appdata\'
    - 'ipmo C:\Users\Public\'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Import PowerShell Modules From Suspicious Directories" is designed to detect potentially malicious PowerShell commands that import modules from unconventional or suspicious directories, such as the Temp or AppData folders and the Public directory. This behavior is often associated with adversaries aiming to execute scripts or modules that may facilitate unauthorized access or data exfiltration. The rule leverages data from process creation logs, specifically focusing on the command-line parameters utilized during the execution of PowerShell commands. The rule aligns with the MITRE ATT&CK Tactic of Execution and is specifically linked to Technique T1059.001, which covers script execution via PowerShell.
  When a command includes 'Import-Module' targeting these directories, it triggers an alert, enabling security teams to investigate the underlying activity. Organizations can monitor this behavior effectively using tools that collect and analyze process creation logs, allowing for timely responses to potential security breaches.
  ### Investigation Steps
  - **Confirm Alert and Context**: Review the alert details in the SIEM to confirm if the detected command was indeed executed. Check the user account that initiated the command for any known associations with malicious activity.
  - **Analyze Related Process**: Utilize EDR tools to investigate the related process tree initiated by the PowerShell command. Look for any parent processes or sibling processes that may indicate malicious intent or a larger compromise.
  - **Review Command Line Metadata**: Use Windows Event Logs to retrieve the command-line arguments used during the execution of PowerShell. This will provide insight into the specific modules being imported and their legitimacy.
  - **Check for Other Indicators**: Cross-reference logs from the firewall, proxy, and any relevant EDR alerts to identify any further malicious activity or external connections made during the same time frame.
  ### Prioritization
  The alert has been categorized as medium severity due to the potential for misuse of PowerShell in importing modules from risky directories. This could indicate initial stages of a compromise that warrant further investigation but may not always indicate an immediate high-risk situation.
  ### Blind Spots and Assumptions
  This rule may not fire if an adversary has obfuscated their commands or used different aliases for module imports, or if the system has any PowerShell logging disabled. Moreover, legitimate administrative activities could also generate false positives when authorized users execute scripts from these directories. It assumes that all PowerShell execution is directly monitored and that access logs are intact and available for analysis.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
