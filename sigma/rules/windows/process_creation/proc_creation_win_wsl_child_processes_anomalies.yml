title: WSL Child Process Anomaly
id: 2267fe65-0681-42ad-9a6d-46553d3f3480
related:
- id: dec44ca7-61ad-493c-bfd7-8819c5faa09b     # LOLBIN Rule
  type: derived
status: test
description: Detects uncommon or suspicious child processes spawning from a WSL process.
  This could indicate an attempt to evade parent/child relationship detections or
  persistence attempts via cron using WSL
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/
- https://twitter.com/nas_bench/status/1535431474429808642
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-23
modified: 2023-08-15
tags:
- attack.execution
- attack.defense-evasion
- attack.t1218
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith:
    - '\wsl.exe'
    - '\wslhost.exe'
  selection_children_images:
    Image|endswith:
            # Add more suspicious/uncommon "lolbin" processes
    - '\calc.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\wscript.exe'
  selection_children_paths:
    Image|contains:
    - '\AppData\Local\Temp\'
    - 'C:\Users\Public\'
    - 'C:\Windows\Temp\'
    - 'C:\Temp\'
    - '\Downloads\'
    - '\Desktop\'
  condition: selection_parent and 1 of selection_children_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "WSL Child Process Anomaly" detection rule is designed to identify unusual child processes spawned by Windows Subsystem for Linux (WSL) applications, specifically `wsl.exe` and `wslhost.exe`. By monitoring process creation logs, the rule captures instances where commonly used or unusual executables (e.g., `calc.exe`, `powershell.exe`, `mshta.exe`) are invoked as children of WSL parent processes. This activity may indicate potential evasion tactics used by threat actors to bypass traditional detection mechanisms or persistent malicious behaviors, such as scheduling tasks via cron in a WSL environment. The integration of key paths from the local system's temporary files or user directories further assists in identifying suspicious activities attempting to leverage these environments.
  ### Investigation Steps
  - Review process creation logs within the EDR platform to identify any recent instances of `wsl.exe` or `wslhost.exe` launching suspicious child processes.
  - Analyze command-line parameters of the identified child processes to look for encoded commands or unusual arguments that could highlight malicious activity.
  - Cross-reference the timestamps with user activity logs to determine if the execution aligns with legitimate user actions or anomalous behavior.
  - Collect and analyze any related artifacts from system locations such as `C:\Users\Public`, `C:\Temp`, and the local `AppData` directories for further context on any identified processes.
