title: WSL Child Process Anomaly
id: 2267fe65-0681-42ad-9a6d-46553d3f3480
related:
- id: dec44ca7-61ad-493c-bfd7-8819c5faa09b     # LOLBIN Rule
  type: derived
status: test
description: Detects uncommon or suspicious child processes spawning from a WSL process.
  This could indicate an attempt to evade parent/child relationship detections or
  persistence attempts via cron using WSL
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Wsl/
- https://twitter.com/nas_bench/status/1535431474429808642
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-23
modified: 2023-08-15
tags:
- attack.execution
- attack.defense-evasion
- attack.t1218
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith:
    - '\wsl.exe'
    - '\wslhost.exe'
  selection_children_images:
    Image|endswith:
            # Add more suspicious/uncommon "lolbin" processes
    - '\calc.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\wscript.exe'
  selection_children_paths:
    Image|contains:
    - '\AppData\Local\Temp\'
    - 'C:\Users\Public\'
    - 'C:\Windows\Temp\'
    - 'C:\Temp\'
    - '\Downloads\'
    - '\Desktop\'
  condition: selection_parent and 1 of selection_children_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "WSL Child Process Anomaly" detection rule aims to identify suspicious or uncommon child processes that spawn from Windows Subsystem for Linux (WSL) processes, specifically `wsl.exe` and `wslhost.exe`. This rule searches for child processes that may indicate potential evasion techniques used by malicious actors, such as creating unauthorized persistence mechanisms via cron jobs on WSL. The rule leverages process creation logs, focusing on the parent-child relationship between processes to detect unusual command executions that can signal exploitation attempts or misuse of legitimate tools for malicious purposes. Notable related techniques from the MITRE ATT&CK framework include **Execution (T1202)** and **Defense Evasion (T1218)**, both highlighting the risks associated with executing commands in a manner that bypasses standard security monitoring.
  ### Investigation Steps
  - **Check Process Creation Logs**: Utilize EDR to review process creation logs around the time the alert was triggered, focusing on specific WSL parent processes and their associated child processes to understand the context of the execution.
  - **Analyze Suspicious File Paths**: Investigate the file paths of the flagged child processes to determine whether they originate from common legitimate locations (e.g., `C:\Windows\Temp\`) or suspicious directories such as user-owned temporary folders or public folders.
  - **Review Lateral Movement Techniques**: Utilize threat intelligence resources to check if the detected processes are categorized as Living Off The Land Binaries (LOLBINs) and validate the behavior of these binaries in relation to WSL context.
  - **Assess EDR and AV Alerts**: Correlate findings with alerts and logs from EDR and AV tools to identify any prior or subsequent malicious activity tied to the processes involved, forming a complete picture of the potential incident.
  ### Prioritization
  The severity level for this alert is defined as medium, given that while the detection indicates potentially malicious activity, further context is required to ascertain the actor's intent and any real impact on the enterprise environment.
  ### Blind spots and Assumptions
  There may be blind spots when the WSL feature is used for legitimate administrative tasks, leading to possible false positives from benign processes like updates or scheduled tasks. Furthermore, attackers may use obfuscation techniques or other binaries that are not accounted for in the rule, potentially evading detection. It is essential for detection engineers to regularly update the list of uncommon binaries and paths used in this context to maintain the rule's effectiveness.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
