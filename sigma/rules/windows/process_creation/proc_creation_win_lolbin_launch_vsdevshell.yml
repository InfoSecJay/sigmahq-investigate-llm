title: Launch-VsDevShell.PS1 Proxy Execution
id: 45d3a03d-f441-458c-8883-df101a3bb146
status: test
description: Detects the use of the 'Launch-VsDevShell.ps1' Microsoft signed script
  to execute commands.
references:
- https://twitter.com/nas_bench/status/1535981653239255040
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-19
tags:
- attack.defense-evasion
- attack.t1216.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_script:
    CommandLine|contains: 'Launch-VsDevShell.ps1'
  selection_flags:
    CommandLine|contains:
    - 'VsWherePath '
    - 'VsInstallationPath '
  condition: all of selection_*
falsepositives:
- Legitimate usage of the script by a developer
level: medium
notes: |
  n
  ### Technical Context
  The "Launch-VsDevShell.PS1 Proxy Execution" detection rule is designed to identify when the Microsoft-signed script `Launch-VsDevShell.ps1` is executed on a Windows system. This script is typically used in development environments to set up the necessary conditions for developing applications with Visual Studio. The rule specifically monitors the command-line parameters associated with the process creation events, looking for instances where the command line includes `Launch-VsDevShell.ps1` along with optional parameters like `VsWherePath` and `VsInstallationPath`. By analyzing these parameters, the rule can help identify potentially malicious behavior if an adversary attempts to misuse the script for evading defenses, thereby aligning with the MITRE ATT&CK technique for Defense Evasion (T1216.001).
  The primary data source for this rule is Windows Process Creation logs, which detail the commands issued by processes. When this rule triggers, it prompts further investigation into the context of the script execution to determine whether it was legitimate use by a developer or if it may indicate suspicious activity.
  ### Investigation Steps
  - **Review the User Context:** Check which user account initiated the command execution. Correlate this with your user access logs to determine if the user has legitimate rights to use this script.
  - **Analyze Process Creation Logs:** Utilize the EDR tool to examine additional process creation logs surrounding the time of the alert. Look for any unusual parent-child process relationships or suspicious command-line activity.
  - **Check Network Connections:** Investigate any network connections made by the process when the script was executed. Ensure that there are no attempts to communicate with known malicious IP addresses or domains.
  - **Examine Security Monitoring Alerts:** Cross-reference any alerts from your SIEM that correlate with the execution of the script. Look for logs that might suggest privilege escalation or lateral movement attempts.
  ### Prioritization
  The alert has a medium severity level due to the potential misuse of a legitimate script in a development environment, combined with the risk of evasion tactics employed by adversaries. Prompt investigation is required to rule out malicious intent.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where the script is commonly used, leading to a higher prevalence of false positives from legitimate development work. Additionally, if the script name is altered or executed in a non-standard way (e.g., through obfuscation), the rule may fail to trigger. It is also assumed that the environment will have proper logging for process creation events enabled at all times, which may not always be the case.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
