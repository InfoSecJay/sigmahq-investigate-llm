title: Sdiagnhost Calling Suspicious Child Process
id: f3d39c45-de1a-4486-a687-ab126124f744
status: test
description: Detects sdiagnhost.exe calling a suspicious child process (e.g. used
  in exploits for Follina / CVE-2022-30190)
references:
- https://twitter.com/nao_sec/status/1530196847679401984
- https://doublepulsar.com/follina-a-microsoft-office-code-execution-vulnerability-1a47fce5629e
- https://app.any.run/tasks/713f05d2-fe78-4b9d-a744-f7c133e3fafb/
- https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/
- https://app.any.run/tasks/c4117d9a-f463-461a-b90f-4cd258746798/
author: Nextron Systems, @Kostastsale
date: 2022-06-01
modified: 2024-08-23
tags:
- attack.defense-evasion
- attack.t1036
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\sdiagnhost.exe'
    Image|endswith:
            # Add more suspicious LOLBins
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\cmd.exe'
    - '\mshta.exe'
    - '\cscript.exe'
    - '\wscript.exe'
    - '\taskkill.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
            # - '\csc.exe'   # https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/
    - '\calc.exe'          # https://app.any.run/tasks/f420d295-0457-4e9b-9b9e-6732be227583/
  filter_main_cmd_bits:
    Image|endswith: '\cmd.exe'
    CommandLine|contains: 'bits'
  filter_main_powershell_noprofile:
    Image|endswith: '\powershell.exe'
    CommandLine|endswith:
    - '-noprofile -'
    - '-noprofile'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect instances where the `sdiagnhost.exe` process, which is a legitimate Windows process used for diagnostics, spawns a potentially malicious child process. This behavior is particularly relevant due to exploitation scenarios involving the Follina vulnerability (CVE-2022-30190), where attackers misuse legitimate processes to execute arbitrary code. The rule analyzes process creation logs to identify if the parent process is `sdiagnhost.exe` and assesses the child process against a list of known suspicious executables, including shells (like `powershell.exe` and `cmd.exe`), scripting hosts (like `wscript.exe` and `cscript.exe`), and other commonly misused Windows utilities. This detection aligns with MITRE ATT&CK tactics for defense evasion (T1036) and execution (T1218), making it essential for spotting attacks that leverage these common administrative tools as part of an attack chain.
  ### Investigation Steps
  - **Confirm Process Hierarchy:** Use EDR to trace the execution chain of the alerted process, inspecting the relationship between `sdiagnhost.exe` and the identified child process. Confirm the legitimacy of the parent process and the context under which it was executed.
  - **Analyze Command-Line Parameters:** Investigate the command-line parameters associated with the child process. Focus on specific flags, such as those indicating potential misuse of parameters like `-noprofile` in PowerShell, which can conceal execution contexts.
  - **Check Network Activity:** Review firewall and network logs (NDR) corresponding to the timeframe of the detection alert. Look for unusual external connections initiated by the child process that may indicate data exfiltration or interaction with known malicious infrastructure.
  - **Review Related Event Logs:** Examine Windows Event Logs, specifically Security and Application logs, for any events that correlate with the detected behavior. Identify any failure audits or suspicious application events that provide context around the process execution.
  ### Prioritization
  Given the high severity level of this alert, it indicates that the detected behavior may suggest an ongoing exploitation attempt, which can lead to significant compromise of systems and data. Timely investigation is crucial to mitigate any potential risks.
  ### Blind Spots and Assumptions
  This rule may not fire if `sdiagnhost.exe` is not present in an environment or if the suspicious child processes are executed in a manner not captured by the detection logic. Additionally, sophisticated adversaries may use obfuscation techniques or rename malicious binaries to evade detection. It is assumed that all relevant telemetry (e.g., Process Creation) is correctly ingested and indexed within the SIEM solution; without this, the rule's effectiveness is diminished.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
