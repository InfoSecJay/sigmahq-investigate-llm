title: System File Execution Location Anomaly
id: e4a6b256-3e47-40fc-89d2-7a477edd6915
related:
- id: be58d2e2-06c8-4f58-b666-b99f6dc3b6cd     # Dedicated SvcHost rule
  type: derived
status: experimental
description: |
  Detects the execution of a Windows system binary that is usually located in the system folder from an uncommon location.
references:
- https://twitter.com/GelosSnake/status/934900723426439170
- https://asec.ahnlab.com/en/39828/
author: Florian Roth (Nextron Systems), Patrick Bareiss, Anton Kutepov, oscd.community,
  Nasreddine Bencherchali (Nextron Systems)
date: 2017-11-27
modified: 2024-07-16
tags:
- attack.defense-evasion
- attack.t1036
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - '\atbroker.exe'
    - '\audiodg.exe'
    - '\bcdedit.exe'
    - '\bitsadmin.exe'
    - '\certreq.exe'
    - '\certutil.exe'
    - '\cmstp.exe'
    - '\conhost.exe'
    - '\consent.exe'
    - '\cscript.exe'
    - '\csrss.exe'
    - '\dashost.exe'
    - '\defrag.exe'
    - '\dfrgui.exe'         # Was seen used by Lazarus Group - https://asec.ahnlab.com/en/39828/
    - '\dism.exe'
    - '\dllhost.exe'
    - '\dllhst3g.exe'
    - '\dwm.exe'
    - '\eventvwr.exe'
    - '\logonui.exe'
    - '\LsaIso.exe'
    - '\lsass.exe'
    - '\lsm.exe'
    - '\msiexec.exe'
    - '\ntoskrnl.exe'
    - '\powershell_ise.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\runonce.exe'
    - '\RuntimeBroker.exe'
    - '\schtasks.exe'
    - '\services.exe'
    - '\sihost.exe'
    - '\smartscreen.exe'
    - '\smss.exe'
    - '\spoolsv.exe'
    - '\svchost.exe'
    - '\taskhost.exe'
    - '\Taskmgr.exe'
    - '\userinit.exe'
    - '\wininit.exe'
    - '\winlogon.exe'
    - '\winver.exe'
    - '\wlanext.exe'
    - '\wscript.exe'
    - '\wsl.exe'
    - '\wsmprovhost.exe'         # Was seen used by Lazarus Group - https://asec.ahnlab.com/en/39828/
  filter_main_generic:
    Image|startswith:
    - 'C:\$WINDOWS.~BT\'
    - 'C:\$WinREAgent\'
    - 'C:\Windows\SoftwareDistribution\'
    - 'C:\Windows\System32\'
    - 'C:\Windows\SystemTemp\'
    - 'C:\Windows\SysWOW64\'
    - 'C:\Windows\uus\'
    - 'C:\Windows\WinSxS\'
  filter_optional_system32:
    Image|contains: '\SystemRoot\System32\'
  filter_main_powershell:
    Image:
    - 'C:\Program Files\PowerShell\7\pwsh.exe'
    - 'C:\Program Files\PowerShell\7-preview\pwsh.exe'
  filter_main_wsl_windowsapps:
    Image|startswith: 'C:\Program Files\WindowsApps\MicrosoftCorporationII.WindowsSubsystemForLinux'
    Image|endswith: '\wsl.exe'
  condition: selection and not 1 of filter_main_* and not 1 of filter_optional_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "System File Execution Location Anomaly" detection rule aims to identify instances where a recognized Windows system binary—such as `powershell.exe`, `lsass.exe`, or `winlogon.exe`—is executed from an unusual location outside of its typical directory (e.g., `C:\Windows\System32\`). This rule utilizes process creation events logged by Windows and looks for specific system binaries whose paths suggest malicious activity, such as execution from a temporary directory or unexpected subdirectories. The rule aligns with the MITRE ATT&CK technique T1036: "Masquerading," which encompasses the tactics of evading detection by using legitimate executables from non-standard locations.
  The signals captured for this rule largely involve the process creation logs that include the image path of executed binaries, enabling SOC analysts to assess whether the process execution occurred outside of permitted directories. The detection filters out common benign paths, ensuring that alerts are generated only when suspicious conditions are met.
  ### Investigation Steps
  - **Verify Process Source**: Investigate the details of the triggered process creation event using EDR tools to confirm the execution path and the account that executed the process.
  - **Check Process Parentage**: Use Windows Event Logs to analyze the parent process of the execution; legitimate processes typically exhibit a known parentage while a rogue execution may show an anomalous origin.
  - **Review Network Activity**: Inspect network connection logs from EDR or NDR tools associated with the flagged process to identify any unusual outbound communication, which can suggest data exfiltration or contact with command and control servers.
  - **Assess File Integrity**: Examine the integrity of the executable that triggered the alert. Utilize hash comparisons with known good values to determine if the binary has been altered or replaced, indicating possible malicious activity.
  ### Prioritization
  Given the high severity level of this alert, it signifies a potential security breach or malware presence within the enterprise environment. Immediate investigation is warranted as adversaries may employ such tactics to execute malicious code while bypassing traditional security measures.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where the affected binaries are freely deployed in unusual locations by legitimate applications or administrative practices. It assumes that all execution paths align with standard operating procedures and that organizations maintain secure configurations to prevent exploitation. Additionally, adversaries may use encryption or obfuscation to disguise their activities, allowing them to execute malicious binaries from common paths, which could lead to false negatives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
