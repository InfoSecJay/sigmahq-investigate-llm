title: HackTool - SharpWSUS/WSUSpendu Execution
id: b0ce780f-10bd-496d-9067-066d23dc3aa5
status: experimental
description: |
  Detects the execution of SharpWSUS or WSUSpendu, utilities that allow for lateral movement through WSUS.
  Windows Server Update Services (WSUS) is a critical component of Windows systems and is frequently configured in a way that allows an attacker to circumvent internal networking limitations.
references:
- https://labs.nettitude.com/blog/introducing-sharpwsus/
- https://github.com/nettitude/SharpWSUS
- https://web.archive.org/web/20210512154016/https://github.com/AlsidOfficial/WSUSpendu/blob/master/WSUSpendu.ps1
author: '@Kostastsale, Nasreddine Bencherchali (Nextron Systems)'
date: 2022-10-07
modified: 2024-08-23
tags:
- attack.execution
- attack.lateral-movement
- attack.t1210
logsource:
  product: windows
  category: process_creation
detection:
  selection_wsuspendu_inject:
    CommandLine|contains: ' -Inject '
  selection_wsuspendu_payload:
    CommandLine|contains:
    - ' -PayloadArgs '
    - ' -PayloadFile '
  selection_sharpwsus_commands:
    CommandLine|contains:
    - ' approve '
    - ' create '
    - ' check '
    - ' delete '
  selection_sharpwsus_flags:
    CommandLine|contains:
    - ' /payload:'
    - ' /payload='
    - ' /updateid:'
    - ' /updateid='
  condition: all of selection_wsuspendu_* or all of selection_sharpwsus_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule detects the execution of SharpWSUS and WSUSpendu, tools commonly used for lateral movement within a network through Windows Server Update Services (WSUS). These utilities enable attackers to manipulate and manage update installations on targeted machines without raising conventional network alerts. The rule monitors process creation events for specific command-line arguments typically associated with these tools, including commands related to payloads and update approvals. Key technical data sources involved in this detection include process creation logs that capture command-line parameters utilized during execution, enabling security analysts to identify potential misuse of these utilities.
  ### Investigation Steps
  - Review the alert in your SIEM to identify the specific process execution details, including the user account associated with the command execution.
  - Use EDR tools to analyze process creation logs on the affected system for further suspicious activity or lateral movement indicative of a potential compromise.
  - Investigate the network traffic using NDR tools to examine any abnormal connections or data exfiltration attempts originating from the compromised system.
  - Check logs from Windows Event Viewer and proxy servers for signs of unusual update approvals or any interactions with WSUS that coincide with the alert timeframe.
