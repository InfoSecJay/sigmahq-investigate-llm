title: Imports Registry Key From a File
id: 73bba97f-a82d-42ce-b315-9182e76c57b1
related:
- id: 0b80ade5-6997-4b1d-99a1-71701778ea61
  type: similar
status: test
description: Detects the import of the specified file to the registry with regedit.exe.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Regedit/
- https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f
author: Oddvar Moe, Sander Wiebing, oscd.community
date: 2020-10-07
modified: 2024-03-13
tags:
- attack.t1112
- attack.defense-evasion
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\regedit.exe'
  - OriginalFileName: 'REGEDIT.EXE'
  selection_cli:
    CommandLine|contains:
    - ' /i '
    - ' /s '
    - '.reg'
  filter_1:
    CommandLine|contains|windash:
    - ' -e '
    - ' -a '
    - ' -c '
  filter_2:
    CommandLine|re: ':[^ \\]'         # to avoid intersection with ADS rule
  condition: all of selection_* and not all of filter_*
fields:
- ParentImage
- CommandLine
falsepositives:
- Legitimate import of keys
- Evernote
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the importation of a registry key from a file using the Windows utility `regedit.exe`. Specifically, it monitors process creation events to identify instances where `regedit.exe` is executed with command line arguments indicating a registry file (`.reg`) is being imported. The detection focuses on certain command line flags (`/i` and `/s`) that are commonly associated with importing registry files while filtering out legitimate usages that do not align with typical patterns of registry manipulation. The monitoring leverages telemetry from Windows event logs, particularly those related to process creation, to capture the relevant data points. This activity falls under the MITRE ATT&CK framework Tactic: **Defense Evasion** and Technique: **T1112: Modify Registry**.
  ### Investigation Steps
  - **Check the Context of the Process:** Review the parent process of the `regedit.exe` invocation to determine its origin and legitimacy using EDR or Windows event logs.
  - **Analyze Command-Line Arguments:** Examine the command line used to execute `regedit.exe`. Focus on parameters that suggest potentially malicious intent, like unnecessary flags or unusual file paths.
  - **Review Registry Changes:** Use Windows Registry monitoring tools to identify changes that followed the detected import event. Pay special attention to modifications that will impact security or system configurations.
  - **Correlate with Other Logs:** Cross-reference with logs from Firewall, Proxy, and other security tools to check if the activity was accompanied by other suspicious behaviors or external communications to validate the scope of the event.
  ### Prioritization
  This alert is categorized as medium severity, as importation of registry keys could indicate unauthorized changes within the system that facilitate evasion or persistence tactics. Prompt investigation is essential to assess potential impacts on system integrity and security posture.
  ### Blind Spots and Assumptions
  This rule may not fire if `regedit.exe` is executed without the specified command-line parameters or if legitimate applications (e.g., Evernote) import registry keys in a way that bypasses detection. Additionally, malicious actors might employ other methods for modifying the registry that do not involve the use of `regedit.exe`, such as PowerShell or other scripting languages. It's important to be aware of these avenues to adjust the detection coverage accordingly.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
