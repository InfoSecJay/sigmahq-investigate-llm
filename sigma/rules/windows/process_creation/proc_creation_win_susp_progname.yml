title: Suspicious Program Names
id: efdd8dd5-cee8-4e59-9390-7d4d5e4dd6f6
status: test
description: Detects suspicious patterns in program names or folders that are often
  found in malicious samples or hacktools
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md
author: Florian Roth (Nextron Systems)
date: 2022-02-11
modified: 2023-03-22
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_image:
  - Image|contains:
    - '\CVE-202'           # Update this when we reach the year 2100
    - '\CVE202'           # Update this when we reach the year 2100
  - Image|endswith:
    - '\poc.exe'
    - '\artifact.exe'
    - '\artifact64.exe'
    - '\artifact_protected.exe'
    - '\artifact32.exe'
    - '\artifact32big.exe'
    - 'obfuscated.exe'
    - 'obfusc.exe'
    - '\meterpreter'
  selection_commandline:
    CommandLine|contains:
    - 'inject.ps1'
    - 'Invoke-CVE'
    - 'pupy.ps1'
    - 'payload.ps1'
    - 'beacon.ps1'
    - 'PowerView.ps1'
    - 'bypass.ps1'
    - 'obfuscated.ps1'
    - 'obfusc.ps1'
    - 'obfus.ps1'
    - 'obfs.ps1'
    - 'evil.ps1'
    - 'MiniDogz.ps1'
    - '_enc.ps1'
    - '\shell.ps1'
    - '\rshell.ps1'
    - 'revshell.ps1'
    - '\av.ps1'
    - '\av_test.ps1'
    - 'adrecon.ps1'
    - 'mimikatz.ps1'
    - '\PowerUp_'
    - 'powerup.ps1'
    - '\Temp\a.ps1'
    - '\Temp\p.ps1'
    - '\Temp\1.ps1'
    - 'Hound.ps1'
    - 'encode.ps1'
    - 'powercat.ps1'
  condition: 1 of selection*
fields:
- CommandLine
- ParentCommandLine
- CurrentDirectory
falsepositives:
- Legitimate tools that accidentally match on the searched patterns
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious program names and command-line parameters associated with potentially malicious activities on Windows systems. The detection focuses on specific filename patterns and command-line arguments that are commonly found in well-known hacking tools or malware. It leverages process creation logs, specifically monitoring the appearance of software that either reflects known vulnerabilities (CVE patterns) or matches the naming conventions of malicious scripts and tools (e.g., "meterpreter," "mimikatz," and various obfuscation scripts). By examining both the executable image names and their respective command-line arguments, the rule aims to identify potentially harmful behaviors aligning with the MITRE ATT&CK technique T1059 (Command and Scripting Interpreter), which emphasizes the role of scripting languages in executing commands that could lead to a compromise.
  ### Investigation Steps
  - **Review Process Creation Logs:** Use the EDR to search for process creation events that triggered this rule, focusing on the specific image names and command-line arguments highlighted in the alert.
  - **Analyze Command-Line Context:** Inspect the 'CommandLine' and 'ParentCommandLine' fields for suspicious activity, particularly those involving known malicious scripts or patterns.
  - **Correlate with Previous Alerts:** Cross-reference the identified processes and names with historical alerts in your SIEM to determine if similar alerts have occurred previously, assisting in establishing whether this is a recurrent issue.
  - **Check for Legitimate Usage:** Validate if the detected items are part of legitimate administrative tasks or security tools regularly used in the environment to manage potential false positives.
  ### Prioritization
  This alert is classified as high severity due to the inherent risk associated with the execution of suspicious programs and scripts that could indicate an ongoing attack or the presence of malicious actors within the network.
  ### Blind Spots and Assumptions
  There may be legitimate tools or administrative scripts within the environment that match the detection criteria, leading to false positives. Furthermore, if an adversary employs unconventional naming conventions or custom scripts that do not align with known patterns, this rule may fail to trigger. It is also assumed that the telemetry sources are correctly configured to log all relevant data; if there are issues with logging or if processes execute in an already compromised environment, detection capabilities may be hindered.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
