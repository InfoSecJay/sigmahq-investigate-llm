title: Suspicious Csi.exe Usage
id: 40b95d31-1afc-469e-8d34-9a3a667d058e
status: test
description: Csi.exe is a signed binary from Microsoft that comes with Visual Studio
  and provides C# interactive capabilities. It can be used to run C# code from a file
  passed as a parameter in command line. Early version of this utility provided with
  Microsoft “Roslyn” Community Technology Preview was named 'rcsi.exe'
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Csi/
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Rcsi/
- https://enigma0x3.net/2016/11/21/bypassing-application-whitelisting-by-using-rcsi-exe/
- https://twitter.com/Z3Jpa29z/status/1317545798981324801
author: Konstantin Grishchenko, oscd.community
date: 2020-10-17
modified: 2022-07-11
tags:
- attack.execution
- attack.t1072
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\csi.exe'
    - '\rcsi.exe'
  - OriginalFileName:
    - 'csi.exe'
    - 'rcsi.exe'
  selection_cli:
    Company: 'Microsoft Corporation'
  condition: all of selection*
fields:
- ComputerName
- User
- CommandLine
- ParentCommandLine
falsepositives:
- Legitimate usage by software developers
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Suspicious Csi.exe Usage" is designed to detect potentially malicious use of Csi.exe or its predecessor, Rcsi.exe, which are Microsoft-signed binaries associated with the Visual Studio development environment. Csi.exe enables users to execute C# code interactively, making it a powerful tool for developers but also a potential target for exploitation. The rule functions by monitoring for process creation events where the image name ends with "csi.exe" or "rcsi.exe" and where the original file name corresponds to these binaries. It also checks that the company associated with the executing file is Microsoft Corporation. The detection relies on event logs from process creation, which include crucial information such as command-line parameters, the name of the executing user, and the parent process that initiated the command. This rule is particularly relevant to the MITRE ATT&CK tactics of Execution (T1072) and Defense Evasion (T1218), as the legitimate use of these binaries can be obscured by malicious actors aiming to execute arbitrary code.
  ### Investigation Steps
  - **Examine Process Creation Logs:** Search for process creation events associated with csi.exe or rcsi.exe in your EDR logs. Validate the user and processes responsible for initiating these events to assess legitimacy.
    
  - **Review Command Line Arguments:** Inspect the command line parameters passed to csi.exe or rcsi.exe for any suspicious scripts or unusual arguments that may indicate malicious activity.
    
  - **Analyze Parent Process:** Check the parent command line to understand the context in which csi.exe or rcsi.exe is being executed. Look for any anomalies, such as unexpected applications that typically wouldn’t spawn these binaries.
    
  - **Monitor User Activity:** Investigate any historical user activity related to software development tools on the device to determine if the usage of these binaries corresponds with normal operational behavior.
  ### Prioritization
  The alert is categorized as medium severity because although csi.exe and rcsi.exe are legitimate tools mainly used by developers, their abilities to execute code can pose a significant security risk if misused by malicious actors.
  ### Blind spots and Assumptions
  This rule may not trigger in environments where developers frequently use csi.exe for legitimate activities, leading to potential false positives. Additionally, it assumes that adversaries cannot alter the file properties of these executables to conceal their activities. The rule may fail to detect custom binaries or renamed copies of csi.exe that have been created for malicious use, along with environments that do not log process creation events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
