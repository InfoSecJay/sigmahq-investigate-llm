title: Powershell Inline Execution From A File
id: ee218c12-627a-4d27-9e30-d6fb2fe22ed2
status: test
description: Detects inline execution of PowerShell code from a file
references:
- https://speakerdeck.com/heirhabarov/hunting-for-powershell-abuse?slide=50
author: frack113
date: 2022-12-25
tags:
- attack.execution
- attack.t1059.001
logsource:
  product: windows
  category: process_creation
detection:
  selection_exec:
    CommandLine|contains:
    - 'iex '
    - 'Invoke-Expression '
    - 'Invoke-Command '
    - 'icm '
  selection_read:
    CommandLine|contains:
    - 'cat '
    - 'get-content '
    - 'type '
  selection_raw:
    CommandLine|contains: ' -raw'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule focuses on detecting the inline execution of PowerShell commands sourced from a file, a tactic often employed by adversaries to carry out malicious actions. It looks for specific PowerShell command patterns such as `iex`, `Invoke-Expression`, `Invoke-Command`, and file-read commands like `cat`, `get-content`, and `type` in the command line executed on Windows systems. The use of these commands, especially in combination with the `-raw` parameter, may indicate that a script or command has been fetched from an external source or file and executed directly, potentially signaling an attempt at script-based attacks or lateral movement. The relevant MITRE ATT&CK tactic and technique associated with this detection is **Execution** (T1059.001), which pertains to the execution of commands through scripting languages like PowerShell.
  This rule primarily utilizes telemetry from Windows Process Creation logs, which provide insights into command-line interactions and execution behavior on endpoints. By analyzing this data, security analysts can detect potentially malicious PowerShell activities and respond accordingly.
  ### Investigation Steps
  - **Leverage EDR Solutions**: Examine the endpoint EDR logs identified by the alert to check for any suspicious process creation and execution of PowerShell commands in relation to the detected inline execution patterns.
  - **Analyze Command-Line Arguments**: Investigate the command-line arguments associated with the PowerShell execution, focusing on the source file or script executed and any external connections made during the execution.
  - **Review Process Chain**: Follow the process chain starting from the PowerShell execution to identify any parent or child processes involved, as well as verify if any other forms of execution (e.g., scheduled tasks) are related to the incident.
  - **Inspect Firewall and Proxy Logs**: Check the network connection logs from the NGFW or proxy for any unusual outbound requests made by the endpoint, particularly those that align with the timing of the PowerShell execution.
  ### Prioritization
  This alert is categorized as medium severity due to the potential for inline PowerShell execution to facilitate various attack vectors, including data exfiltration and command-and-control communications. However, it is essential to correlate the findings with additional context to rule out benign use cases.
  ### Blind Spots and Assumptions
  This rule may not fire in instances where PowerShell command execution happens without the specific patterns being captured in the command-line arguments, or if command execution is obfuscated. Additionally, if an attacker utilizes a method to execute code without invoking PowerShell directly or employs other scripting methodologies, the detection may be bypassed. Analysts should be aware that legitimate system tools or administrative scripts may also trigger false positives, making it crucial to investigate alerts in context.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
