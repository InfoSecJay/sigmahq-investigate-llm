title: Potentially Suspicious CMD Shell Output Redirect
id: 8e0bb260-d4b2-4fff-bb8d-3f82118e6892
related:
- id: aa2efee7-34dd-446e-8a37-40790a66efd7
  type: derived
- id: 4f4eaa9f-5ad4-410c-a4be-bc6132b0175a
  type: similar
status: test
description: |
  Detects inline Windows shell commands redirecting output via the ">" symbol to a suspicious location.
  This technique is sometimes used by malicious actors in order to redirect the output of reconnaissance commands such as "hostname" and "dir" to files for future exfiltration.
references:
- https://thedfirreport.com/2022/07/11/select-xmrig-from-sqlserver/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-12
modified: 2024-03-19
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\cmd.exe'
  - OriginalFileName: 'Cmd.Exe'
  selection_cli_1:
    CommandLine|contains:
            # Note: Add more suspicious locations as you find them
            # Note: The space from the start is missing to cover append operations ">>"
            # Note: We use the "?" to account for both a single and a double quote
            # Note: If you want to account for more spaces which is still a valid bypass option. Use a regex with "\s"
    - '>?%APPDATA%\'
    - '>?%TEMP%\'
    - '>?%TMP%\'
    - '>?%USERPROFILE%\'
    - '>?C:\ProgramData\'
    - '>?C:\Temp\'
    - '>?C:\Users\Public\'
    - '>?C:\Windows\Temp\'
  selection_cli_2:
    CommandLine|contains:
    - ' >'
    - '">'
    - "'>"
    CommandLine|contains|all:
    - 'C:\Users\'
    - '\AppData\Local\'
  condition: selection_img and 1 of selection_cli_*
falsepositives:
- Legitimate admin or third party scripts used for diagnostic collection might generate
  some false positives
level: medium
notes: |
  ### Technical Context
  The rule "Potentially Suspicious CMD Shell Output Redirect" is designed to identify the redirection of command-line output using the Windows command shell (cmd.exe). By monitoring process creation events, particularly those related to `cmd.exe`, the rule checks for the syntax indicating that output is being sent to specific file locations (including user-specific and system directories). This is a common technique employed by threat actors to log the output of commands such as `hostname` or `dir`, often for reconnaissance purposes or to prepare data for exfiltration. The detection leverages command-line parameters that suggest an output redirection operation. This rule ties into the MITRE ATT&CK technique for Defense Evasion (T1218), where adversaries use legitimate tools in potentially malicious ways.
  ### Investigation Steps
  - **Check Process Details:** Review the process creation logs in your EDR to determine the exact command-line input that triggered the alert, focusing on the command executed and any associated parent processes.
  - **Monitor File Locations:** Inspect the identified output file locations specified in the command, using file monitoring tools to see if any suspicious files were created or modified around the same time as the alert.
  - **Analyze User Activity:** Investigate the user account that executed the command to identify any unusual activity or patterns, utilizing historical activity logs alongside current session information from systems like Windows Event Logs.
  - **Correlate with Other Alerts:** Cross-reference the alert with other security events (e.g., from EDR or AV solutions) to determine if this command execution is part of a larger suspicious behavior pattern within the environment.
  ### Prioritization
  This alert is categorized as medium severity due to its potential indication of an adversarial technique; legitimate administrative activities can trigger it. However, when combined with other suspicious behaviors, it warrants attention from incident responders to rule out compromised systems.
  ### Blind Spots and Assumptions
  The rule may not trigger if the command-line output redirection is executed using different encoding methods or if the output files are sent to locations not covered by the specified paths. Additionally, legitimate administrative scripts may mask similar command usage, leading to false positives. It is assumed that any commands executed via other execution environments (e.g., PowerShell or scripts) would not be captured by this rule, and adversaries may use various evasive techniques to obfuscate their actions.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
