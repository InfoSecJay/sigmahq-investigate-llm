title: Potentially Suspicious EventLog Recon Activity Using Log Query Utilities
id: beaa66d6-aa1b-4e3c-80f5-e0145369bfaf
related:
- id: 9cd55b6c-430a-4fa9-96f4-7cadf5229e9f
  type: derived
status: experimental
description: |
  Detects execution of different log query utilities and commands to search and dump the content of specific event logs or look for specific event IDs.
  This technique is used by threat actors in order to extract sensitive information from events logs such as usernames, IP addresses, hostnames, etc.
references:
- http://blog.talosintelligence.com/2022/09/lazarus-three-rats.html
- https://thedfirreport.com/2023/10/30/netsupport-intrusion-results-in-domain-compromise/
- https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-144a
- https://www.group-ib.com/blog/apt41-world-tour-2021/
- https://labs.withsecure.com/content/dam/labs/docs/f-secureLABS-tlp-white-lazarus-threat-intel-report2.pdf
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.diagnostics/get-winevent?view=powershell-7.3
- https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-eventlog?view=powershell-5.1
- http://www.solomonson.com/posts/2010-07-09-reading-eventviewer-command-line/
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil
author: Nasreddine Bencherchali (Nextron Systems), X__Junior (Nextron Systems)
date: 2022-09-09
modified: 2024-08-15
tags:
- attack.credential-access
- attack.discovery
- attack.t1552
logsource:
  category: process_creation
  product: windows
detection:
  selection_wmi:
    CommandLine|contains|all:
    - 'Select'
    - 'Win32_NTLogEvent'
  selection_wevtutil_img:
  - Image|endswith: '\wevtutil.exe'
  - OriginalFileName: 'wevtutil.exe'
  selection_wevtutil_cli:
    CommandLine|contains:
    - ' qe '
    - ' query-events '
  selection_wmic_img:
  - Image|endswith: '\wmic.exe'
  - OriginalFileName: 'wmic.exe'
  selection_wmic_cli:
    CommandLine|contains: ' ntevent'
  selection_cmdlet:
    CommandLine|contains:
    - 'Get-WinEvent '
    - 'get-eventlog '
  selection_logs_name:
    CommandLine|contains:
            # Note: Add more event log channels that are interesting for attackers
    - 'Microsoft-Windows-PowerShell'
    - 'Microsoft-Windows-Security-Auditing'
    - 'Microsoft-Windows-TerminalServices-LocalSessionManager'
    - 'Microsoft-Windows-TerminalServices-RemoteConnectionManager'
    - 'Microsoft-Windows-Windows Defender'
    - 'PowerShellCore'
    - 'Security'
    - 'Windows PowerShell'
  selection_logs_eid:
    CommandLine|contains:
            # Note: We use the "?" to account for both a single and a double quote
            # Note: Please add additional interesting event IDs
            # Note: As this only focuses on EIDs and we know EIDs are not unique across providers. Rare FPs might occur with legit queries to EIDs from different providers.
            # This covers EID 4624 and 4628 from Security Log
    - '-InstanceId 462?'
    - '.eventid -eq 462?'
    - 'EventCode=?462?'
    - 'EventIdentifier=?462?'
    - 'System[EventID=462?]'
            # This covers EID 4778 from Security Log
    - '-InstanceId 4778'
    - '.eventid -eq 4778'
    - 'System[EventID=4778]'
    - 'EventCode=?4778?'
    - 'EventIdentifier=?4778?'
            # This covers EID 25 from Microsoft-Windows-TerminalServices-LocalSessionManager/Operational log
    - '-InstanceId 25'
    - '.eventid -eq 25'
    - 'System[EventID=25]'
    - 'EventCode=?25?'
    - 'EventIdentifier=?25?'
  condition: 1 of selection_logs_* and (selection_wmi or all of selection_wevtutil_*
    or all of selection_wmic_* or selection_cmdlet)
falsepositives:
- Legitimate usage of the utility by administrators to query the event log
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule aims to identify potentially suspicious activity related to querying Windows Event Logs using various log query utilities. It specifically monitors for the execution of commands and tools such as `wevtutil`, `wmic`, and PowerShell cmdlets like `Get-WinEvent` and `Get-EventLog` that are frequently employed by threat actors to extract sensitive information from system logs. Attackers typically utilize these utilities to gather crucial data, including usernames, hostnames, and IP addresses, which can play a role in further compromising the environment. This rule ties back to the MITRE ATT&CK techniques observed under Credential Access (T1552) and Discovery. By watching for command line arguments associated with specific event IDs, the rule helps in flagging potentially malicious reconnaissance activities executed on Windows systems.
  ### Investigation Steps
  - **Verify Process Source**: Check the source of process creation by examining the EDR logs to confirm whether the invocation of logging utilities came from a legitimate administrative context or a potentially compromised account.
  - **Analyze Command-Line Arguments**: Scrutinize the command line parameters used during the execution for suspicious patterns or event log IDs that are indicative of reconnaissance behavior.
  - **Correlate with Event Logs**: Cross-reference the events retrieved by the detected commands with Windows Event Logs to assess whether sensitive information was accessed or if any unusual login activities occurred around the same timeframe.
  - **User Activity Review**: Investigate the user accounts associated with the command execution, focusing on their privileges and any prior behavior to determine if there is an indication of credential theft or unauthorized access.
  ### Prioritization
  This alert is considered medium severity, as while legitimate administrative actions can trigger it, the context of its execution can indicate potential reconnaissance by threat actors. Immediate investigation is warranted to determine the nature of the activity and mitigate any risks.
  ### Blind Spots and Assumptions
  The rule may not fire if attackers use alternative legitimate log querying tools or obfuscation techniques in their command lines that do not match the specified patterns. Additionally, high levels of legitimate administrative activities could lead to false positives, complicating investigations. Assumptions include the idea that all command executions originate from known administrator accounts, which may not always hold true. Engineers should be aware of these gaps and consider enhancing the rule with additional logging sources or refining command patterns to capture more evasive actions.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
