title: AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl
id: 074e0ded-6ced-4ebd-8b4d-53f55908119d
status: test
description: Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via
  winrm.vbs and copied cscript.exe (can be renamed)
references:
- https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404
author: Julia Fomina, oscd.community
date: 2020-10-06
modified: 2022-10-09
tags:
- attack.defense-evasion
- attack.t1216
logsource:
  category: process_creation
  product: windows
detection:
  contains_format_pretty_arg:
    CommandLine|contains:
    - 'format:pretty'
    - 'format:"pretty"'
    - 'format:"text"'
    - 'format:text'
  image_from_system_folder:
    Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
  contains_winrm:
    CommandLine|contains: 'winrm'
  condition: contains_winrm and (contains_format_pretty_arg and not image_from_system_folder)
falsepositives:
- Unlikely
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential evasion techniques employed by attackers using Windows Remote Management (WinRM) scripting. Specifically, it monitors for the execution of attacker-controlled scripts (`WsmPty.xsl` or `WsmTxt.xsl`) utilizing `winrm.vbs`. The detection primarily focuses on the command line arguments indicating a misuse of the legitimate command line, specifically where these attackers' scripts attempt to bypass application whitelisting by being executed from outside the standard Windows system folders (e.g., `C:\Windows\System32\` or `C:\Windows\SysWOW64\`). 
  The rule looks for command-line parameters indicative of this technique, such as an occurrence of `format:pretty`, and actions taken using `winrm`. The MITRE ATT&CK framework identifies this behavior under the tactic of **Defense Evasion** (T1216). By correlating logs from process creation events with specific command-line patterns, the rule helps identify attempts to execute unsigned, potentially malicious code that could evade standard security controls.
  ### Investigation Steps
  - **Verify Process Execution:** Check EDR logs for instances where `cscript.exe` or `winrm.vbs` were executed inappropriately from unexpected paths or with suspicious command-line arguments.
  - **Review Command Line Arguments:** Analyze the command line associated with the process creation event to ensure it aligns with legitimate usage patterns and does not contain potentially harmful parameters.
  - **Correlate with Additional Logs:** Utilize Windows Security logs, Sysmon logs, and network connection logs to determine if any remote connections were established that align with unauthorized activity.
  - **Search for Indicators of Compromise:** Look for known indicators of compromise (IoCs) related to `WsmPty.xsl` or `WsmTxt.xsl` across file systems and network traffic to identify early signs of infection or exploitation.
  ### Prioritization
  This alert is categorized as medium severity due to the potential for successful evasion of application whitelisting, allowing attackers to execute unauthorized code on the system. Effective identification of this behavior is critical, as it can lead to further compromise or persistence within the environment.
  ### Blind Spots and Assumptions
  It is important to recognize that detection may fail if an attacker employs techniques to obfuscate or rename `cscript.exe`, or if they utilize legitimate scripts that do not feature the targeted command-line properties. Additionally, environments with limited logging or those relying on traditional whitelisting without additional contextual monitoring may overlook these anomalous actions. False negatives could occur if the adversary employs processes that do not match the specified patterns or if they execute the scripts in normal system directories.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
