title: AWL Bypass with Winrm.vbs and Malicious WsmPty.xsl/WsmTxt.xsl
id: 074e0ded-6ced-4ebd-8b4d-53f55908119d
status: test
description: Detects execution of attacker-controlled WsmPty.xsl or WsmTxt.xsl via
  winrm.vbs and copied cscript.exe (can be renamed)
references:
- https://posts.specterops.io/application-whitelisting-bypass-and-arbitrary-unsigned-code-execution-technique-in-winrm-vbs-c8c24fb40404
author: Julia Fomina, oscd.community
date: 2020-10-06
modified: 2022-10-09
tags:
- attack.defense-evasion
- attack.t1216
logsource:
  category: process_creation
  product: windows
detection:
  contains_format_pretty_arg:
    CommandLine|contains:
    - 'format:pretty'
    - 'format:"pretty"'
    - 'format:"text"'
    - 'format:text'
  image_from_system_folder:
    Image|startswith:
    - 'C:\Windows\System32\'
    - 'C:\Windows\SysWOW64\'
  contains_winrm:
    CommandLine|contains: 'winrm'
  condition: contains_winrm and (contains_format_pretty_arg and not image_from_system_folder)
falsepositives:
- Unlikely
level: medium
notes: |
  ### Technical Context
  This detection rule identifies attempts to bypass application whitelisting mechanisms through the execution of scripts using the Windows Remote Management Service (WinRM). Specifically, it looks for the invocation of `winrm.vbs` that is executing attacker-controlled graphical style sheets, such as `WsmPty.xsl` or `WsmTxt.xsl`, with the command-line parameter `format:pretty` or its variations. The rule also checks if the process is not originating from the standard system folders, indicating potential malicious intent. Data sources involved include process creation logs and command-line parameters from Windows, which help to pinpoint suspicious execution patterns associated with whitelisted applications.
  ### Investigation Steps
  - Utilize EDR solutions to review the process creation logs for instances of `winrm.vbs` and check the source of `WsmPty.xsl` or `WsmTxt.xsl` being executed.
  - Examine the command-line parameters associated with the execution of `winrm.vbs` for the presence of `format:pretty` or similar variations to confirm if it's part of a bypass technique.
  - Inspect system logs to determine if the executed script originated from a non-standard location instead of typical system directories like `C:\Windows\System32\` or `C:\Windows\SysWOW64\`.
  - Analyze network traffic logs for any outbound connections related to the execution of `winrm.vbs`, which may indicate attempts to communicate with external command and control servers.
