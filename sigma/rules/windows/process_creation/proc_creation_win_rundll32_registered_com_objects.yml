title: Rundll32 Registered COM Objects
id: f1edd233-30b5-4823-9e6a-c4171b24d316
status: test
description: load malicious registered COM objects
references:
- https://nasbench.medium.com/a-deep-dive-into-rundll32-exe-642344b41e90
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1546.015/T1546.015.md
author: frack113
date: 2022-02-13
modified: 2023-02-09
tags:
- attack.privilege-escalation
- attack.persistence
- attack.t1546.015
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\rundll32.exe'
  - OriginalFileName: 'RUNDLL32.EXE'
  selection_cli:
    CommandLine|contains:
    - '-sta '
    - '-localserver '
    CommandLine|contains|all:
    - '{'
    - '}'
  condition: all of selection_*
falsepositives:
- Legitimate use
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Rundll32 Registered COM Objects" focuses on detecting the execution of malicious COM objects through the legitimate Windows process `rundll32.exe`. `rundll32.exe` is a system binary that allows execution of functions exported from dynamic link libraries (DLLs). Attackers may exploit this functionality for executing malicious code, often to maintain persistence or escalate privileges, utilizing COM objects that are registered maliciously to evade detection. 
  The detection logic uses process creation logs, particularly monitoring for command-line parameters and specific characteristics of the `rundll32.exe` process. It looks for instances where `rundll32.exe` is invoked with certain command-line options that are commonly associated with COM object interactions, such as `-sta` and `-localserver`, while also ensuring that the command line contains specific bracketed inputs indicative of potential malicious activity. The rule falls under the MITRE ATT&CK techniques for Persistence (T1546.015) and Privilege Escalation.
  ### Investigation Steps
  - **Review Process Creation Logs:** Use EDR tools to examine process creation logs for occurrences of `rundll32.exe` execution. Check for command lines that include the specified parameters and brackets.
    
  - **Analyze Related Network Activity:** Investigate network connections established by the `rundll32.exe` process to identify any suspicious communications that may indicate data exfiltration or command and control activity.
  - **Inspect Com Objects Registry Entries:** Query the Windows Registry for registered COM objects to identify any anomalous entries associated with the `rundll32.exe` execution. Look for DLL files noted in the command line to see if they match known malicious signatures.
  - **Cross-reference with Security Alerts:** Check concurrent alerts from AV solutions, firewalls, or proxy logs for signs of suspicious traffic or other related malicious activities that coincide with the execution of `rundll32.exe`.
  ### Prioritization
  This alert is prioritized as high severity because the presence of suspicious activity involving `rundll32.exe` could indicate malicious behavior aimed at persistence or privilege escalation, both of which can have severe implications for an organization's security posture.
  ### Blind Spots and Assumptions
  There are certain limitations to this detection rule. It may not fire if attackers use obfuscation techniques to disguise command-line parameters or utilize a different method to invoke `rundll32.exe`. Additionally, the rule assumes that proper logging configurations are in place and that no legitimate business applications misuse similar command-line patterns as part of their operation. Therefore, analysts should be cautious of potential false positives from benign sources.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
