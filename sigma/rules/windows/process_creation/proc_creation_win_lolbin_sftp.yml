title: Use Of The SFTP.EXE Binary As A LOLBIN
id: a85ffc3a-e8fd-4040-93bf-78aff284d801
status: test
description: Detects the usage of the "sftp.exe" binary as a LOLBIN by abusing the
  "-D" flag
references:
- https://github.com/LOLBAS-Project/LOLBAS/pull/264
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-11-10
tags:
- attack.defense-evasion
- attack.execution
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\sftp.exe'     # The "sftp.exe" located in the OpenSSH directory has no OriginalFileName :(
    CommandLine|contains:
            # Since "-D" is a valid flag for other usage we assume the user is going to enter a path
            # Either a full one like "C:\Windows\System32\calc.exe" or a relative one "..\..\..\Windows\System32\calc.exe"
            # In my testing you can't execute direct binaries by their name via this method (if you found a way please update the rule)
    - ' -D ..'
    - ' -D C:\'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Use Of The SFTP.EXE Binary As A LOLBIN" is designed to detect the potentially malicious use of the SFTP client (`sftp.exe`) available in the OpenSSH suite on Windows systems. This rule specifically targets the execution of `sftp.exe` with the `-D` flag, which is typically used to specify a local directory for file transfers but can be abused by attackers as a "Living Off The Land Binary" (LOLBIN) for other malicious purposes. The command line parameters are central to this detection; particularly, it looks for instances where the command line contains the `-D` specifier followed by either a directory path or a relative path that could point to a malicious executable (e.g., `C:\Windows\System32\calc.exe`). The primary data sources involved in this detection comprise process creation logs from Windows, enabling the monitoring of executables and their command-line arguments. This rule relates to the MITRE ATT&CK technique T1218 (Signed Binary Proxy Execution), which emphasizes the evasion tactics used by adversaries to exploit trusted binaries in the environment.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the process creation logs in your EDR solution for instances of `sftp.exe` being executed with the `-D` flag to confirm whether the command lines align with the rule criteria.
  - **Analyze Command-Line Arguments:** Investigate the complete command-line arguments used with `sftp.exe` to identify the target paths specified and assess if they lead to known legitimate files or processes.
  - **Correlate with User Context:** Examine user activity logs to establish whether the user executing `sftp.exe` has a legitimate use case for the binary, considering abnormal usage patterns or unusual permissions.
  - **Inspect Network Activity:** Utilize network connection logs to inspect any outgoing connections made by `sftp.exe`, especially if communicating with unknown or suspicious external servers that could indicate data exfiltration.
  ### Prioritization
  The alert generated by this rule is categorized as medium severity because the unauthorized usage of trusted binaries for malicious actions can indicate a potential compromise. Prompt investigation is required to prevent possible data breaches or further exploitation of the environment.
  ### Blind Spots and Assumptions
  This rule may not fire if the `sftp.exe` binary is executed without the specified `-D` flag or in non-standard ways that don't match the defined patterns. Additionally, if an adversary modifies the command line to obscure its intent or uses a different low-level binary, the detection could fail. There is an assumption that all necessary logs are enabled and properly monitored within the environment, as missing telemetry can result in undetected malicious activity.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
