title: Use Of The SFTP.EXE Binary As A LOLBIN
id: a85ffc3a-e8fd-4040-93bf-78aff284d801
status: test
description: Detects the usage of the "sftp.exe" binary as a LOLBIN by abusing the
  "-D" flag
references:
- https://github.com/LOLBAS-Project/LOLBAS/pull/264
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-11-10
tags:
- attack.defense-evasion
- attack.execution
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\sftp.exe'     # The "sftp.exe" located in the OpenSSH directory has no OriginalFileName :(
    CommandLine|contains:
            # Since "-D" is a valid flag for other usage we assume the user is going to enter a path
            # Either a full one like "C:\Windows\System32\calc.exe" or a relative one "..\..\..\Windows\System32\calc.exe"
            # In my testing you can't execute direct binaries by their name via this method (if you found a way please update the rule)
    - ' -D ..'
    - ' -D C:\'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies suspicious use of the `sftp.exe` binary, commonly utilized in OpenSSH for secure file transfers, when invoked with the `-D` command-line flag. The `-D` option allows the user to connect to a specified destination, which can be abused by malicious actors to execute unwarranted commands or transfer files discreetly. The rule focuses primarily on process creation logs where the image name ends with `sftp.exe` and the command line contains specific patterns indicating an attempt to leverage the binary for nefarious purposes. By examining command-line parameters, this rule can help detect activities that may be categorized under living off the land binaries (LOLBIN), a tactic often used to evade traditional security mechanisms.
  ### Investigation Steps
  - Utilize EDR tools to retrieve and analyze the process creation logs for the timeframe surrounding the alert, focusing on entries involving `sftp.exe` and its command-line arguments. 
  - Correlate the identified `sftp.exe` invocations with network activity logs from NDR and firewall systems to determine if any suspicious outbound connections were established during this time.
  - Review endpoint logs for any potential instances of lateral movement or other indicators of compromise involving other binaries that may have been executed alongside `sftp.exe`.
  - Check for abnormal user behavior in authentication logs from proxies and VPN connections, looking for any unauthorized access or unusual login patterns that coincide with the usage of the flagged command.
