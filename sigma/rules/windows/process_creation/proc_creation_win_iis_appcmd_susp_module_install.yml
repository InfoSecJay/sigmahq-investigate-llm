title: IIS Native-Code Module Command Line Installation
id: 9465ddf4-f9e4-4ebd-8d98-702df3a93239
status: test
description: Detects suspicious IIS native-code module installations via command line
references:
- https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/
- https://www.microsoft.com/security/blog/2022/07/26/malicious-iis-extensions-quietly-open-persistent-backdoors-into-servers/
author: Florian Roth (Nextron Systems)
date: 2019-12-11
modified: 2024-03-13
tags:
- attack.persistence
- attack.t1505.003
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\appcmd.exe'
  - OriginalFileName: 'appcmd.exe'
  selection_cli:
    CommandLine|contains|all:
    - 'install'
    - 'module'
    CommandLine|contains|windash: '-name:'
  filter_iis_setup:
    ParentImage: 'C:\Windows\System32\inetsrv\iissetup.exe'
  condition: all of selection_* and not 1 of filter_*
falsepositives:
- Unknown as it may vary from organisation to organisation how admins use to install
  IIS modules
level: medium
notes: |
  ### Technical Context
  The Sigma rule "IIS Native-Code Module Command Line Installation" is designed to detect potentially malicious installations of native-code modules for Internet Information Services (IIS) through specific command line activity. The rule targets the use of `appcmd.exe`, Windows' IIS command-line tool, to look for instances where this executable is called with keywords such as "install" and "module" in the command line parameters, particularly focusing on commands that include `-name:` to specify module names. Additionally, the rule establishes a filter to ignore legitimate invocations that originate from the `iissetup.exe` process, which indicates a standard setup operation. 
  This detection aligns with the MITRE ATT&CK framework under the tactics of persistence and the technique T1505.003, which pertains to the installation of malicious components via IIS. The primary data source involved in this rule is the process creation logs, which track the execution of processes and can provide insights into command-line arguments used during execution.
  ### Investigation Steps
  - **Review Process Creation Logs**: Examine the process creation logs for events related to `appcmd.exe`, focusing particularly on entries that include commands related to module installation.
  - **Correlate with File Changes**: Investigate whether any new module files were created in the IIS directory (typically under `C:\inetpub\wwwroot`) that correlate with the timestamps of the detected command executions.
  - **Check Parent Process Details**: Analyze the parent process for any `appcmd.exe` instances identified. If the parent process is `iissetup.exe`, it may indicate a legitimate installation.
  - **Assess Command Line Arguments**: Look into the specific command line arguments used during the invocation of `appcmd.exe`. Ensure they align with sanctioned administrative practices within the organization.
  ### Prioritization
  This alert is categorized as medium severity due to the risks associated with unauthorized module installations that can lead to persistent backdoors or other security vulnerabilities. Malicious actors often exploit IIS modules to gain persistent access, making this alert a concern that warrants further investigation.
  ### Blind Spots and Assumptions
  The detection rule may not trigger in certain scenarios, such as when administrators use alternative methods or tools for module installation that do not involve `appcmd.exe`. Additionally, if legitimate administrative scripts or changes are misconfigured, this may lead to false negatives. Itâ€™s important to recognize that not all IIS module installations are malicious; a contextual understanding of the organization's operational baseline is necessary. Furthermore, adversaries with knowledge of this detection mechanism may employ stealth techniques to avoid using recognizable command patterns, potentially evading detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
