title: PUA - Chisel Tunneling Tool Execution
id: 8b0e12da-d3c3-49db-bb4f-256703f380e5
related:
- id: cf93e05e-d798-4d9e-b522-b0248dc61eaf
  type: similar
status: test
description: Detects usage of the Chisel tunneling tool via the commandline arguments
references:
- https://github.com/jpillora/chisel/
- https://arcticwolf.com/resources/blog/lorenz-ransomware-chiseling-in/
- https://blog.sekoia.io/lucky-mouse-incident-response-to-detection-engineering/
author: Florian Roth (Nextron Systems)
date: 2022-09-13
modified: 2023-02-13
tags:
- attack.command-and-control
- attack.t1090.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
    Image|endswith: '\chisel.exe'
  selection_param1:
    CommandLine|contains:
    - 'exe client '
    - 'exe server '
  selection_param2:
    CommandLine|contains:
    - '-socks5'
    - '-reverse'
    - ' r:'
    - ':127.0.0.1:'
    - '-tls-skip-verify '
    - ':socks'
  condition: selection_img or all of selection_param*
falsepositives:
- Some false positives may occur with other tools with similar commandlines
level: high
notes: |
  ### Technical Context
  This detection rule identifies the execution of Chisel, a popular tunneling tool often used by attackers for command-and-control purposes. Chisel facilitates the creation of secure tunnels to relay traffic from a compromised system, and its detection is crucial for spotting potential malicious activity. The rule focuses on analyzing process creation logs for instances where the executable `chisel.exe` is run with specific command-line arguments indicative of tunneling operations. Data sources involved in this detection include the Windows process creation logs, particularly the `CommandLine` parameter, which reveals how the tool is being utilized, such as connecting to SOCKS5 proxies or establishing reverse communication. This rule is linked to the MITRE ATT&CK technique T1090.001 (Application Layer Protocol), highlighting its relevance to identifying tunneling activities employed by adversaries.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine logs in your EDR solution to find instances of `chisel.exe` execution, noting the associated user accounts and timestamps for context.
  - **Analyze Command-Line Arguments:** Look for command-line parameters associated with tunneling (e.g., `-socks5`, `-tls-skip-verify`) to assess the intent and potential impact of the executed command.
  - **Correlate with Network Traffic:** Use your NDR or firewall logs to identify unusual outbound traffic patterns that may correlate with the activity of Chisel, especially on unusual ports.
  - **Check for Related Activity:** Investigate the presence of other potentially malicious software or tools and consider running an AV scan to identify any compromised systems or artifacts.
  ### Prioritization
  Given the rule's identification of Chisel execution, an alert signifies a high-severity situation as it suggests potential unauthorized access and tunneling activity within the network, warranting immediate investigation.
  ### Blind Spots and Assumptions
  This detection rule may not fire if Chisel is executed with different command-line parameters or if the tool is renamed, which could bypass detection based on the image path. Additionally, the rule may produce false positives for legitimate software that has similar command-line constructs. Monitoring and contextual validation may be required to differentiate between benign and malicious use cases effectively.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
