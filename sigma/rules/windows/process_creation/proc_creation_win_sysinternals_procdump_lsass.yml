title: Potential LSASS Process Dump Via Procdump
id: 5afee48e-67dd-4e03-a783-f74259dcf998
status: stable
description: |
  Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process.
  This way we are also able to catch cases in which the attacker has renamed the procdump executable.
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/procdump
author: Florian Roth (Nextron Systems)
date: 2018-10-30
modified: 2024-03-13
tags:
- attack.defense-evasion
- attack.t1036
- attack.credential-access
- attack.t1003.001
- car.2013-05-009
logsource:
  category: process_creation
  product: windows
detection:
  selection_flags:
    CommandLine|contains|windash: ' -ma '
  selection_process:
    CommandLine|contains: ' ls'     # Short for lsass
  condition: all of selection*
falsepositives:
- Unlikely, because no one should dump an lsass process memory
- Another tool that uses command line flags similar to ProcDump
level: high
notes: |
  ### Technical Context
  This Sigma rule identifies potentially malicious activity involving the use of the SysInternals tool, Procdump, specifically targeting the Local Security Authority Subsystem Service (LSASS) process. By monitoring the command-line parameters used for process creation, the rule detects instances where Procdump is invoked with the `-ma` parameter in relation to the `lsass.exe` process. This command is particularly relevant as it enables the dumping of sensitive information such as credential material stored in memory, making it a favored technique among attackers for credential theft. The telemetry required for this detection primarily comes from Windows Process Creation logs, which capture detailed information about command-line execution across the operating system.
  This rule aligns with the MITRE ATT&CK framework, specifically under the tactics of Defense Evasion (TA0005) and Credential Access (TA0006). The techniques of interest are T1036 (Masquerading) and T1003.001 (Credential Dumping: LSASS Memory). Detecting such an invocation is critical as it indicates potential malicious actors attempting to extract user credentials and bypass security measures.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review the Windows Process Creation logs for instances of `procdump` being executed with the `-ma` flag and associated with the `lsass.exe` process.
  - **Investigate Command Line Parameters:** Analyze the command line history for any variations in the Procdump executable name, as attackers may rename the tool to remain undetected.
  - **Correlate with EDR Data:** Use the Endpoint Detection and Response (EDR) tool to further investigate the endpoint for signs of compromised activity, looking for related behaviors or connections.
  - **Examine User Access Logs:** Check user account activity logs to identify any anomalous access patterns, particularly from users allowed to execute such utilities.
  ### Prioritization
  This alert is classified as high severity due to the sensitive nature of the LSASS process and the context of credential theft that can lead to significant security breaches within the enterprise.
  ### Blind Spots and Assumptions
  This rule may not fire if the process is executed using command line parameters that differ from those defined in the rule or if attackers employ other tools capable of performing similar functions without using Procdump. Additionally, environments where Procdump is utilized for legitimate purposes may result in false negatives. It is assumed that telemetry for process creation is fully enabled and monitoring all relevant activities; otherwise, detection could fail.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
