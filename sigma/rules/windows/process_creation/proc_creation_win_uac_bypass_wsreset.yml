title: Bypass UAC via WSReset.exe
id: d797268e-28a9-49a7-b9a8-2f5039011c5c
related:
- id: bdc8918e-a1d5-49d1-9db7-ea0fd91aa2ae
  type: obsolete
status: test
description: Detects use of WSReset.exe to bypass User Account Control (UAC). Adversaries
  use this technique to execute privileged processes.
references:
- https://eqllib.readthedocs.io/en/latest/analytics/532b5ed4-7930-11e9-8f5c-d46d6d62a49e.html
- https://lolbas-project.github.io/lolbas/Binaries/Wsreset/
- https://www.activecyber.us/activelabs/windows-uac-bypass
- https://twitter.com/ReaQta/status/1222548288731217921
author: E.M. Anhaus (originally from Atomic Blue Detections, Tony Lambert), oscd.community,
  Florian Roth
date: 2019-10-24
modified: 2022-05-13
tags:
- attack.privilege-escalation
- attack.defense-evasion
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\wsreset.exe'
  filter:
  - Image|endswith: '\conhost.exe'
  - OriginalFileName: 'CONHOST.EXE'
  condition: selection and not filter
falsepositives:
- Unknown sub processes of Wsreset.exe
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "Bypass UAC via WSReset.exe" is designed to detect the misuse of the WSReset.exe application, which is a legitimate Windows utility used to reset the Windows Store cache. However, adversaries can exploit this tool to bypass User Account Control (UAC) prompts, allowing them to execute privileged processes without user intervention. This rule leverages process creation logs, specifically monitoring instances where `WSReset.exe` is the parent process and its child process is `conhost.exe`. By focusing on the characteristics of these processes, the detection mechanism enables security teams to identify potential privilege escalation activities, as highlighted by the MITRE ATT&CK technique T1548.002.
  When an instance of `WSReset.exe` initiates a child process (i.e., `conhost.exe` that is expected to be benign), the rule captures this activity to ascertain whether any unauthorized privilege escalation activities may be taking place. It excludes known benign scenarios involving `conhost.exe` to reduce false positives, thereby enhancing the probability of detecting genuine malicious actions targeting elevated privileges.
  ### Investigation Steps
  - **Monitor EDR Alerts:** Investigate alerts raised by the endpoint detection and response (EDR) tool for additional context about the process creation, focusing particularly on the execution paths and any related processes.
  - **Analyze Process Trees:** Use tools like Sysinternals Process Explorer to visualize the process tree of `wsreset.exe` and its child processes to understand the process execution flow and identify any anomalous behaviors.
  - **Review Event Logs:** Inspect Windows Security and Sysmon logs for any related events around the same timestamp, particularly those involving privilege elevation or execution from non-standard locations.
  - **Check Network Connections:** Query firewall or network detection logs for unusual outgoing connections made by `conhost.exe`, as these can indicate attempts to reach external command and control servers.
  ### Prioritization
  The alert is classified as high severity due to the potential for malicious actors to leverage this method for privilege escalation, which can lead to further compromise of sensitive data or system control within an enterprise environment.
  ### Blind Spots and Assumptions
  This detection rule may not fire in scenarios where `wsreset.exe` is legitimately executed without privilege escalation or where security measures are implemented to block its use. Additionally, adversaries may employ techniques like process hollowing or fileless malware, which might evade detection by masking the malicious activity within legitimate process structures. It is important for investigators to be aware that these behaviors could circumvent the rule, signifying the need for layered defenses.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
