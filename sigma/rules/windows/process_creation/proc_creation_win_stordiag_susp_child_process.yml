title: Execution via stordiag.exe
id: 961e0abb-1b1e-4c84-a453-aafe56ad0d34
status: test
description: Detects the use of stordiag.exe to execute schtasks.exe systeminfo.exe
  and fltmc.exe
references:
- https://strontic.github.io/xcyclopedia/library/stordiag.exe-1F08FC87C373673944F6A7E8B18CD845.html
- https://twitter.com/eral4m/status/1451112385041911809
author: Austin Songer (@austinsonger)
date: 2021-10-21
modified: 2022-12-25
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\stordiag.exe'
    Image|endswith:
    - '\schtasks.exe'
    - '\systeminfo.exe'
    - '\fltmc.exe'
  filter:
    ParentImage|startswith:     # as first is "Copy c:\windows\system32\stordiag.exe to a folder"
    - 'c:\windows\system32\'
    - 'c:\windows\syswow64\'
  condition: selection and not filter
falsepositives:
- Legitimate usage of stordiag.exe.
level: high
notes: |
  ### Technical Context  
  The Sigma rule titled "Execution via stordiag.exe" is designed to detect potentially malicious activities involving the execution of system commands via the `stordiag.exe` application. It specifically looks for instances where `stordiag.exe` serves as a parent process that spawns the execution of other legitimate system utilities, namely `schtasks.exe`, `systeminfo.exe`, and `fltmc.exe`. This detection mechanism utilizes process creation logs to identify this behavior, leveraging fields that indicate the image of the process being executed and the parent image responsible for its creation. The rule targets the MITRE ATT&CK tactics of **Defense Evasion** (T12018), which encompasses strategies adversaries may employ to obfuscate their actions from traditional security mechanisms by leveraging legitimate applications and processes to execute commands covertly.
  In particular, the rule fixes its attention on where the parent process is located in either the `C:\Windows\System32\` or `C:\Windows\SysWOW64\` directories, thus filtering out instances of `stordiag.exe` that may not correspond to potentially malicious usage. This precise targeting helps to narrow down alerts to only those instances where there may be a risk involved, facilitating a more streamlined investigation.
  ### Investigation Steps  
  - **Verify Process Execution:**
    Check the EDR solution for details on the execution of `stordiag.exe`, specifically confirming whether it has spawned any instances of `schtasks.exe`, `systeminfo.exe`, or `fltmc.exe`.
  - **Review Command-Line Arguments:**
    Analyze the command-line arguments used during the execution of the identified processes. Unusual or suspicious flags might indicate malicious intent and warrant deeper investigation.
  - **Correlate with Logs:**
    Cross-check the identified events with Windows Event Logs (Security, System, or Application) for any anomalies, such as failed logins or unusual system activities around the time of the detected execution.
  - **Examine Network Activity:**
    Investigate network connection logs, especially through an EDR or NDR tool, to identify any outbound connections that align with the execution of the flagged processes, which may suggest data exfiltration or command-and-control communications.
  ### Prioritization  
  Given the nature of the processes involved and the context of `stordiag.exe` possibly being leveraged for malicious execution, alerts generated by this rule should be considered high priority. The potential for an attacker to utilize legitimate system utilities to conduct unauthorized actions raises significant security concerns.
  ### Blind Spots and Assumptions  
  This rule may not fire in the event that an adversary uses alternative methods or modified binaries to execute the same functionality outside the specified process paths or execution patterns. Additionally, legitimate use cases of `stordiag.exe` might create false positives, as companies may use this tool regularly without malicious intent. The detection may also fail in environments where endpoint monitoring is not adequately configured or if the processes are executed without the expected parent-child relationship, necessitating a proactive approach to regularly review both legitimate and suspicious usage within the enterprise network.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
