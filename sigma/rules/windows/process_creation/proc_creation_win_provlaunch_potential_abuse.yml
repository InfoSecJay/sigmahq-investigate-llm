title: Potential Provlaunch.EXE Binary Proxy Execution Abuse
id: 7f5d1c9a-3e83-48df-95a7-2b98aae6c13c
related:
- id: f9999590-1f94-4a34-a91e-951e47bedefd     # CLI Abuse
  type: similar
- id: 2a4b3e61-9d22-4e4a-b60f-6e8f0cde6f25     # CLI Registry
  type: similar
- id: 7021255e-5db3-4946-a8b9-0ba7a4644a69     # Registry
  type: similar
status: test
description: Detects child processes of "provlaunch.exe" which might indicate potential
  abuse to proxy execution.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Provlaunch/
- https://twitter.com/0gtweet/status/1674399582162153472
author: Nasreddine Bencherchali (Nextron Systems), Swachchhanda Shrawan Poudel
date: 2023-08-08
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\provlaunch.exe'
  filter_main_covered_children:
        # Note: this filter is here to avoid duplicate alerting by f9999590-1f94-4a34-a91e-951e47bedefd
  - Image|endswith:
    - '\calc.exe'
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\notepad.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\wscript.exe'
  - Image|contains:
    - ':\PerfLogs\'
    - ':\Temp\'
    - ':\Users\Public\'
    - '\AppData\Temp\'
    - '\Windows\System32\Tasks\'
    - '\Windows\Tasks\'
    - '\Windows\Temp\'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Potential Provlaunch.EXE Binary Proxy Execution Abuse" is designed to detect suspicious child processes spawned by `provlaunch.exe`, a legitimate system executable often associated with the provisioning of user profiles and settings. The rule works by monitoring process creation events where the `ParentImage` is `provlaunch.exe`. It specifically looks for child processes that are typically benign but could be abused for malicious purposes, such as `calc.exe`, `cmd.exe`, or PowerShell interpreters. By focusing on child processes that originate from `provlaunch.exe`, the rule leverages Windows process telemetry to highlight potential unauthorized or unintended actions. 
  The rule correlates with the MITRE ATT&CK tactic of `Defense Evasion` and the technique `T1218`, which involves the use of process launching methods to evade detection mechanisms. Therefore, the implementation of this detection rule can assist SOC analysts in identifying adversarial behavior that attempts to disguise malicious actions within legitimate operational activity.
  ### Investigation Steps
  - **Check Process Tree:** Review the process tree of the detected alert in your EDR solution to understand the context in which `provlaunch.exe` initiated the suspicious child process.
  - **Analyze Command Line Arguments:** Investigate the command-line parameters of the child processes captured in the alert. Look for signs of obfuscation or unusual flags that could indicate misuse.
  - **Review Parent Process Activity:** Examine historical logs for `provlaunch.exe` to see if it has been invoked regularly or if this is an isolated incident, which may suggest a shift in usage patterns.
  - **Correlate with Other Logs:** Query related logs across different telemetry sources (e.g., Windows Security, Sysmon logs) to find out if there are any other indicators or related activities that match the timeframe of the alert.
  ### Prioritization
  This alert is categorized as medium severity because the detection of suspicious child processes from `provlaunch.exe` warrants immediate investigation to rule out possible abuse or misconfiguration, while also recognizing that legitimate applications may occasionally generate similar behavior.
  ### Blind Spots and Assumptions
  This detection rule may not fire in scenarios where `provlaunch.exe` is not used in the environment, or where an attacker manages to obfuscate their process creation, bypassing child process creation. Additionally, if legitimate applications employ similar tactics for benign purposes or if telemetry data is incomplete, the detection could introduce false negatives. There is an inherent assumption that `provlaunch.exe` and its child processes are not commonly used for acceptable business practices within the organization; if they are, additional tuning may be required to reduce false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
