title: Uncommon System Information Discovery Via Wmic.EXE
id: 9d5a1274-922a-49d0-87f3-8c653483b909
related:
- id: d85ecdd7-b855-4e6e-af59-d9c78b5b861e
  type: derived
status: test
description: |
  Detects the use of the WMI command-line (WMIC) utility to identify and display various system information,
  including OS, CPU, GPU, and disk drive names; memory capacity; display resolution; and baseboard, BIOS,
  and GPU driver products/versions.
  Some of these commands were used by Aurora Stealer in late 2022/early 2023.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/a2ccd19c37d0278b4ffa8583add3cf52060a5418/atomics/T1082/T1082.md#atomic-test-25---system-information-discovery-with-wmic
- https://nwgat.ninja/getting-system-information-with-wmic-on-windows/
- https://blog.sekoia.io/aurora-a-rising-stealer-flying-under-the-radar
- https://blog.cyble.com/2023/01/18/aurora-a-stealer-using-shapeshifting-tactics/
- https://app.any.run/tasks/a6aa0057-82ec-451f-8f99-55650ca537da/
- https://www.virustotal.com/gui/file/d6f6bc10ae0e634ed4301d584f61418cee18e5d58ad9af72f8aa552dc4aaeca3/behavior
author: TropChaud
date: 2023-01-26
modified: 2023-12-19
tags:
- attack.discovery
- attack.t1082
logsource:
  category: process_creation
  product: windows
detection:
  selection_wmic:
  - Description: 'WMI Commandline Utility'
  - OriginalFileName: 'wmic.exe'
  - Image|endswith: '\WMIC.exe'
  selection_commands:
    CommandLine|contains:
    - 'LOGICALDISK get Name,Size,FreeSpace'
    - 'os get Caption,OSArchitecture,Version'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule detects the use of the Windows Management Instrumentation (WMI) command-line utility (WMIC) to extract detailed system information, which may be indicative of reconnaissance activities performed by threat actors. Specifically, the rule focuses on command-line inputs piped into WMIC that request details about the operating system (OS), disk drives, memory, and other critical system metrics. The data sources monitored include process creation logs where WMIC is executed, capturing the command-line parameters that can provide insights into the queries invoked. The rule is aligned with the MITRE ATT&CK framework under the tactic of Discovery, specifically the technique T1082, which deals with system information discovery.
  Adversaries often use tools like WMIC to gather information that assists in later stages of an attack, making the detection of such activities crucial for early intervention. In the past, variants of malware, such as the Aurora Stealer, have exploited the WMIC utility for similar information-gathering purposes, emphasizing the importance of being vigilant against these queries.
  ### Investigation Steps
  - **Review Process Creation Logs:** Use the EDR tool to examine recent process creation events that include `wmic.exe` in the command line. Investigate timestamps, user accounts, and parent processes for anomalies. 
  - **Analyze Command-Line Parameters:** Check the command-line parameters of the detected WMIC execution to determine if they correlate with typical administrative use or if they appear suspicious. Look for commands pulled from the ruleâ€™s specified parameters, like `LOGICALDISK` or `os`.
  - **Correlate with User Activity:** Cross-reference the identified WMIC executions with user activity logs from Windows Security Event Logs to identify if the user behavior aligns with expected administrative tasks or indicates possible malicious intent.
  - **Examine Network Activity:** Utilize NDR and proxy logs to trace any unusual outbound connections from the host that executed WMIC. Look for connections to known malicious IPs or anomalous destinations following the WMIC command execution.
  ### Prioritization
  The severity of this alert is classified as medium, as the use of WMIC could indicate either legitimate administrative activity or potential reconnaissance efforts by an adversary. Quick identification and response to such events help mitigate the risk before further exploitation occurs.
  ### Blind Spots and Assumptions
  This rule may not fire if the attacker uses alternate methods to gather system information that do not involve WMIC, such as PowerShell commands or native system tools that are not monitored by this specific detection setup. Additionally, if the environment employs obfuscation techniques or custom utilities for information gathering, these may bypass detection. It's assumed that all environments have standard logging enabled; if logs are disabled or incorrectly configured, this rule will fail to detect potential threats.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
