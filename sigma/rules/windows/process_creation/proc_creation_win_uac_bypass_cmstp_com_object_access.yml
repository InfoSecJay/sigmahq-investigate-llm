title: CMSTP UAC Bypass via COM Object Access
id: 4b60e6f2-bf39-47b4-b4ea-398e33cfe253
status: stable
description: Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile
  Installer Autoelevate-capable COM Objects (e.g. UACMe ID of 41, 43, 58 or 65)
references:
- https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/
- https://twitter.com/hFireF0X/status/897640081053364225
- https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf
- https://github.com/hfiref0x/UACME
author: Nik Seetharaman, Christian Burkard (Nextron Systems)
date: 2019-07-31
modified: 2024-12-01
tags:
- attack.execution
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
- attack.t1218.003
- attack.g0069
- car.2019-04-001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\DllHost.exe'
    ParentCommandLine|contains:
    - ' /Processid:{3E5FC7F9-9A51-4367-9063-A120244FBEC7}'         # cmstplua.dll
    - ' /Processid:{3E000D72-A845-4CD9-BD83-80C07C3B881F}'         # CMLUAUTIL
    - ' /Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}'         # EditionUpgradeManagerObj.dll
    - ' /Processid:{D2E7041B-2927-42FB-8E9F-7CE93B6DC937}'         # colorui.dll
    - ' /Processid:{E9495B87-D950-4AB5-87A5-FF6D70BF3E90}'         # wscui.cpl
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Legitimate CMSTP use (unlikely in modern enterprise environments)
level: high
notes: |
  n
  ### Technical Context
  This Sigma rule detects potential User Account Control (UAC) bypass attempts via the Microsoft Connection Manager Profile Installer by monitoring process creation events. Specifically, it looks for instances where processes, such as `DllHost.exe`, are called with specific command-line parameters associated with auto-elevate-capable COM objects. These parameters pertain to known identifiers that facilitate the UAC bypass, allowing an adversary to escalate privileges without triggering user consent. The rule leverages data from Windows Process Creation logs and examines the integrity level of the processes involved and their parent-child relationships, correlating with the MITRE ATT&CK techniques T1548.002 (Abuse Elevation Control Mechanism) and T1218.003 (Signed Binary Proxy Execution).
  ### Investigation Steps
  - **Review Process Creation Logs**: Utilize the EDR to examine the process creation logs, focusing on the `DllHost.exe` and any associated command-line arguments listed in the Sigma rule.
  - **Check Integrity Levels**: Confirm the integrity levels of the processes involved; any high or system-level processes should be scrutinized further to evaluate their legitimacy.
  - **Correlate with User Activity**: Investigate the timeline of user activities around the time of the alert to determine if there was any expected use of CMSTP or if this event appears anomalous.
  - **Analyze Network Activity**: Use the network connection logs to identify any unusual outbound connections that may correlate with the process in question, as these could indicate data exfiltration or additional malicious activities.
  ### Prioritization
  This alert is classified as high severity because successful exploitation of UAC bypass techniques can lead to privilege escalation, allowing adversaries to gain elevated permissions and control over systems, potentially compromising sensitive data and resources within the enterprise.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where legitimate applications that utilize CMSTP are executed in modern enterprise environments, where such usage is less common. Additionally, the presence of security configurations that block or alter standard COM objects can prevent detection, and skilled adversaries may modify their command lines or utilize custom-built tools to evade detection. It is assumed that all standard logging configurations are properly in place, and if they are not, this could hinder the ability to capture relevant events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
