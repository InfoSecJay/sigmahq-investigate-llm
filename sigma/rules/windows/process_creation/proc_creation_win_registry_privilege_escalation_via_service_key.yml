title: Potential Privilege Escalation via Service Permissions Weakness
id: 0f9c21f1-6a73-4b0e-9809-cb562cb8d981
status: test
description: Detect modification of services configuration (ImagePath, FailureCommand
  and ServiceDLL) in registry by processes with Medium integrity level
references:
- https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment
- https://pentestlab.blog/2017/03/31/insecure-registry-permissions/
author: Teymur Kheirkhabarov
date: 2019-10-26
modified: 2024-12-01
tags:
- attack.privilege-escalation
- attack.t1574.011
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    IntegrityLevel:
    - 'Medium'
    - 'S-1-16-8192'
    CommandLine|contains|all:
    - 'ControlSet'
    - 'services'
    CommandLine|contains:
    - '\ImagePath'
    - '\FailureCommand'
    - '\ServiceDll'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect potential privilege escalation attempts by monitoring modifications to Windows service configurations made by processes with a medium integrity level. The rule specifically looks for changes to the registry keys associated with services, particularly focusing on `ImagePath`, `FailureCommand`, and `ServiceDLL` within the `ControlSet` and `services` paths. When malicious actors exploit inconsistent or weak service permissions, they can manipulate these registry entries to escalate privileges. The primary sources of telemetry for this rule include Windows process creation logs that capture command line arguments and integrity levels of the processes in question. The detection aligns with the MITRE ATT&CK tactic for privilege escalation, specifically Technique [T1574.011](https://attack.mitre.org/techniques/T1574/011).
  ### Investigation Steps
  - **Check Process Details:** Review the process details associated with the alert using the EDR tool to identify the specific application or executable that made the modifications. Look for any discrepancies or known association with malicious activity.
  - **Verify Registry Changes:** Use Windows Registry tools to investigate the specific keys that were modified, focusing on the `ImagePath`, `FailureCommand`, and `ServiceDLL`. Validate if these changes were legitimate or indicative of an attack.
  - **Analyze User Accounts:** Examine the user account used to execute the process. Cross-reference with your asset management or identity management system to determine if the account has suitable permissions and if it should be modifying service configurations.
  - **Review System Logs:** Inspect relevant Windows security and system event logs to correlate with the detected activity. Look for any unusual login attempts, privilege changes, or configurations outside of standard operating practices.
  ### Prioritization
  This alert is classified as a high-severity incident due to the potential impact of privilege escalation on the system's security posture. If an adversary gains elevated access through modified service permissions, they could perform further malicious activities, leading to data breaches or complete system compromise.
  ### Blind Spots and Assumptions
  This rule assumes that processes with medium integrity levels are not typically associated with legitimate service modifications. However, this could lead to false positives, especially in environments with custom applications or scripting that legitimate users may implement. Additionally, the rule may not fire if malicious activities employ techniques to elevate their integrity level before modifying the services. Adversaries could potentially use in-memory attacks or services with administrative privileges to bypass the checks outlined in the rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and reliability, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
