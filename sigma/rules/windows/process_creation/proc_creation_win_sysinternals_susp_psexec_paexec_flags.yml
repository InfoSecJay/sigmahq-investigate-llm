title: Potential Privilege Escalation To LOCAL SYSTEM
id: 207b0396-3689-42d9-8399-4222658efc99
related:
- id: 8834e2f7-6b4b-4f09-8906-d2276470ee23     # PsExec specific rule
  type: similar
status: test
description: Detects unknown program using commandline flags usually used by tools
  such as PsExec and PAExec to start programs with SYSTEM Privileges
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/psexec
- https://www.poweradmin.com/paexec/
- https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2021-05-22
modified: 2024-03-05
tags:
- attack.resource-development
- attack.t1587.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # Escalation to LOCAL_SYSTEM
    CommandLine|contains|windash:
            # Note that you don't need to add the ".exe" part when using psexec/paexec
            # The "-" can also be replaced with "/"
            # The order of args isn't important
            # "cmd" can be replaced by "powershell", "pwsh" or any other console like software
    - ' -s cmd'
    - ' -s -i cmd'
    - ' -i -s cmd'
            # Pwsh (For PowerShell 7)
    - ' -s pwsh'
    - ' -s -i pwsh'
    - ' -i -s pwsh'
            # PowerShell (For PowerShell 5)
    - ' -s powershell'
    - ' -s -i powershell'
    - ' -i -s powershell'
  filter_main_exclude_coverage:
        # This filter exclude strings covered by 8834e2f7-6b4b-4f09-8906-d2276470ee23
    CommandLine|contains:
    - 'paexec'
    - 'PsExec'
    - 'accepteula'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Weird admins that rename their tools
- Software companies that bundle PsExec/PAExec with their software and rename it,
  so that it is less embarrassing
level: high
notes: |
  n
  ### Technical Context
  The "Potential Privilege Escalation To LOCAL SYSTEM" detection rule focuses on identifying suspicious command line execution patterns typically used by tools like PsExec and PAExec to launch processes with SYSTEM privileges. These tools allow users to execute programs on remote systems as if they were the "SYSTEM" user, enabling elevated access that can be exploited by threat actors for privilege escalation. The rule looks specifically for command-line flags that indicate an attempt to execute commands in this manner, monitoring process creation logs where command lines contain specific patterns such as ' -s cmd' or ' -i -s pwsh'. This rule leverages Windows process creation events (Sysmon's process creation logs), making it essential to ensure that Sysmon is configured correctly to capture this telemetry. This detection aligns with the MITRE ATT&CK technique "T1587.001 
  - Resource Development: Compromised Software."
  ### Investigation Steps
  - **Review the Alert Details:** Examine the details of the alert in your EDR to gain insights into the original process and user context that triggered the alert.
  - **Check Process Creation Events:** Utilize Sysmon logs to investigate the process creation events associated with the discovered command-line execution. Look for additional suspicious parameters or unusual parent processes.
  - **Correlate with User Activity:** Cross-reference the alert details with user logins and activities in Windows Security logs to determine if the user has legitimate reasons for executing commands that leverage elevated privileges.
  - **Analyze Network Connections:** Investigate any outbound network connections made by the suspicious process using EDR or NDR tools to identify potential exfiltration or C2 communication.
  ### Prioritization
  This alert is prioritized as high severity due to the potential for significant impact on an organization's security posture. Execution of processes with SYSTEM privileges can lead to complete control over the affected system, thus necessitating immediate investigation.
  ### Blind Spots and Assumptions
  This detection rule may not fire if an attacker uses fully renamed versions of PsExec or similar tools that do not match the command-line patterns defined in the rule. Additionally, if legitimate administrative activities occur that use altered command flags, it could lead to false positives. Engineers should also note that environments with overly restrictive process execution policies may limit the effectiveness of this rule by preventing these tools from running altogether.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
