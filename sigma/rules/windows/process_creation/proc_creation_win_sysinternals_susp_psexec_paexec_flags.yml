title: Potential Privilege Escalation To LOCAL SYSTEM
id: 207b0396-3689-42d9-8399-4222658efc99
related:
- id: 8834e2f7-6b4b-4f09-8906-d2276470ee23     # PsExec specific rule
  type: similar
status: test
description: Detects unknown program using commandline flags usually used by tools
  such as PsExec and PAExec to start programs with SYSTEM Privileges
references:
- https://learn.microsoft.com/en-us/sysinternals/downloads/psexec
- https://www.poweradmin.com/paexec/
- https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html
author: Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2021-05-22
modified: 2024-03-05
tags:
- attack.resource-development
- attack.t1587.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # Escalation to LOCAL_SYSTEM
    CommandLine|contains|windash:
            # Note that you don't need to add the ".exe" part when using psexec/paexec
            # The "-" can also be replaced with "/"
            # The order of args isn't important
            # "cmd" can be replaced by "powershell", "pwsh" or any other console like software
    - ' -s cmd'
    - ' -s -i cmd'
    - ' -i -s cmd'
            # Pwsh (For PowerShell 7)
    - ' -s pwsh'
    - ' -s -i pwsh'
    - ' -i -s pwsh'
            # PowerShell (For PowerShell 5)
    - ' -s powershell'
    - ' -s -i powershell'
    - ' -i -s powershell'
  filter_main_exclude_coverage:
        # This filter exclude strings covered by 8834e2f7-6b4b-4f09-8906-d2276470ee23
    CommandLine|contains:
    - 'paexec'
    - 'PsExec'
    - 'accepteula'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Weird admins that rename their tools
- Software companies that bundle PsExec/PAExec with their software and rename it,
  so that it is less embarrassing
level: high
notes: |
  ### Technical Context
  This rule is designed to detect potential privilege escalation attempts using command-line arguments that are commonly associated with tools like PsExec and PAExec. These tools enable users to execute processes on remote systems with SYSTEM privileges, which can significantly elevate access rights and create security risks. The detection examines process creation logs specifically for command line inputs that contain terms such as 'cmd' or 'powershell', combined with command-line flags typically used for privilege escalation (like '-s' or '-i'). The detection also filters out known benign uses of PsExec and PAExec to reduce false positives, focusing on unknown programs that are not recognized as legitimate instances of these tools.
  ### Investigation Steps
  - Review the process creation logs in the EDR to identify any instances of command lines containing the specified flags, focusing on their corresponding Parent Process IDs to trace their origins.
  - Confirm whether the detected command is associated with a legitimate activity or an unauthorized execution attempt, reviewing user access levels and associated roles in the identity and access management system.
  - Cross-reference the detection with firewall and proxy logs to check for any anomalous outbound connections that may indicate data exfiltration following the execution.
  - Investigate the system for any additional signs of compromise, such as unusual file modifications or the presence of known malicious indicators related to privilege escalation tools.
