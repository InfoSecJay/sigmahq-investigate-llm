title: Suspicious ZipExec Execution
id: 90dcf730-1b71-4ae7-9ffc-6fcf62bd0132
status: test
description: ZipExec is a Proof-of-Concept (POC) tool to wrap binary-based tools into
  a password-protected zip file.
references:
- https://twitter.com/SBousseaden/status/1451237393017839616
- https://github.com/Tylous/ZipExec
author: frack113
date: 2021-11-07
modified: 2022-12-25
tags:
- attack.execution
- attack.defense-evasion
- attack.t1218
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  run:
    CommandLine|contains|all:
    - '/generic:Microsoft_Windows_Shell_ZipFolder:filename='
    - '.zip'
    - '/pass:'
    - '/user:'
  delete:
    CommandLine|contains|all:
    - '/delete'
    - 'Microsoft_Windows_Shell_ZipFolder:filename='
    - '.zip'
  condition: run or delete
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Suspicious ZipExec Execution" detection rule identifies the use of ZipExec, a Proof-of-Concept (PoC) tool designed to conceal the execution of malicious binaries by wrapping them in password-protected zip files. The rule specifically looks for command-line arguments that include indicators of ZipExec functionality, such as references to the Microsoft Windows Shell ZipFolder and the use of passwords (`/pass:`) when extracting files. This detection leverages `process_creation` logs, capturing the process creation events that may indicate an attempt to execute potentially malicious code hidden within zip files. The rule is aligned with MITRE ATT&CK techniques such as T1218 (Signed Binary Proxy Execution) and T1202 (Payload Delivery).
  ### Investigation Steps
  - **Analyze Process Creation Logs:** Review process creation events in the EDR for instances where the command line includes both '`/generic:Microsoft_Windows_Shell_ZipFolder:filename=`' and '`/pass:`', indicating possible use of ZipExec.
  - **Check User Context:** Validate the user account that initiated the process to determine if it is a legitimate user or if there are any anomalies indicating compromised credentials.
  - **Inspect Network Connections:** Utilize network traffic logs to identify any outbound connections that may correlate with the execution of ZipExec, particularly if sensitive data is being exfiltrated.
  - **Conduct File Analysis:** Examine the files being zipped or unzipped, checking for known malicious indicators. Use scanning tools to analyze any binaries mentioned in the command line for potential threats.
  ### Prioritization
  The alert generated by this rule is categorized as medium severity due to the potential risk of an adversary leveraging ZipExec to hide malicious activity or files. While not a definitive indication of compromise, its execution warrants further investigation.
  ### Blind Spots and Assumptions
  The detection rule may not fire if ZipExec is executed with altered command-line arguments that do not match the specified patterns, such as the use of alternative flags or filename structures. Additionally, if an attacker utilizes a different method to execute their payload that avoids the use of the ZipExec tool, the rule could fail to trigger. It is important for engineers to consider that effective obfuscation techniques may be employed by adversaries to bypass this detection, necessitating a comprehensive approach to threat detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and applicability, we recommend validating the content and adapting it to specific environmental and operational needs. Please communicate any changes to the detection engineering team.
