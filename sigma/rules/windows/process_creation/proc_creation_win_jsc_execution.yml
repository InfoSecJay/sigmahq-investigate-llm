title: JScript Compiler Execution
id: 52788a70-f1da-40dd-8fbd-73b5865d6568
status: test
description: |
  Detects the execution of the "jsc.exe" (JScript Compiler).
  Attacker might abuse this in order to compile JScript files on the fly and bypassing application whitelisting.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Jsc/
- https://www.phpied.com/make-your-javascript-a-windows-exe/
- https://twitter.com/DissectMalware/status/998797808907046913
author: frack113
date: 2022-05-02
modified: 2024-04-24
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  product: windows
  category: process_creation
detection:
  selection:
  - Image|endswith: '\jsc.exe'
  - OriginalFileName: 'jsc.exe'
  condition: selection
falsepositives:
- Legitimate use to compile JScript by developers.
# Note: Can be decreased to informational or increased to medium depending on how this utility is used.
level: low
notes: |
  n
  ### Technical Context
  The detection rule for JScript Compiler Execution identifies instances where the executable "jsc.exe" is run on a Windows system. This behavior is significant as attackers may use jsc.exe to compile and execute JScript code in real-time, potentially circumventing established application whitelisting defenses. The rule examines process creation logs, particularly focusing on the full path and original file name of the executable being invoked. Incidents captured by this rule can be associated with the MITRE ATT&CK technique T1127 (Trusted Relationship), which indicates techniques for defenders to be aware of when monitoring for potential abuse of trusted system binaries.
  ### Investigation Steps
  - **Investigate Process Creation Logs:** Review the process creation logs in Sysmon for instances of jsc.exe execution, paying special attention to parent processes and command-line arguments.
    
  - **Correlate with Other Artifacts:** Use EDR tools to cross-reference the jsc.exe executions with any related suspicious activities, such as unusual network connections or file changes at the same time.
  - **Check for Legitimate Usage:** Verify if the detected jsc.exe executions can be linked to legitimate activities by checking user accounts or scripts that may have triggered these executions.
  - **Review Application Whitelisting Policies:** Investigate the effectiveness of application whitelisting controls in place and determine if the execution of jsc.exe may indicate a potential bypass of these controls.
  ### Prioritization
  This alert is categorized with a low severity due to the potential for legitimate development activities involving JScript compilation. However, any unexpected usage should be investigated to rule out malicious intent.
  ### Blind Spots and Assumptions
  The rule may not trigger in environments where jsc.exe is deemed a legitimate tool used frequently by developers. Furthermore, adversaries may employ obfuscation or rename the executable to evade detection. The effectiveness of this rule also relies on comprehensive logging being enabled and maintained in the environment to capture all relevant instances of process creation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
