title: Rundll32 UNC Path Execution
id: 5cdb711b-5740-4fb2-ba88-f7945027afac
status: test
description: Detects rundll32 execution where the DLL is located on a remote location
  (share)
references:
- https://www.cybereason.com/blog/rundll32-the-infamous-proxy-for-executing-malicious-code
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-10
tags:
- attack.defense-evasion
- attack.execution
- attack.t1021.002
- attack.t1218.011
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\rundll32.exe'
  - OriginalFileName: 'RUNDLL32.EXE'
  - CommandLine|contains: 'rundll32'
  selection_cli:
    CommandLine|contains: ' \\\\'
  condition: all of selection_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The "Rundll32 UNC Path Execution" detection rule is designed to identify potentially malicious use of the `rundll32.exe` utility, particularly when it executes Dynamic Link Library (DLL) files located on a network share. Attackers often exploit this legitimate Windows utility to run remote code, leveraging UNC (Universal Naming Convention) paths (formatted as `\\server\share`) to obscure malicious activities from traditional detection methods. The rule predominantly leverages process creation logs from Windows hosts, specifically analyzing the command line arguments passed to `rundll32.exe`. The presence of a UNC path in the command line is a key indicator, as it may signify an attempt to execute DLLs from an untrusted location. This detection correlates with the MITRE ATT&CK tactics of Execution (T1218.011) and Defense Evasion (T1021.002), highlighting its relevance in both executing commands on compromised systems and evading security measures.
  ### Investigation Steps
  - **Check Process Creation Logs:** Review process creation logs in the SIEM or EDR for instances of `rundll32.exe` being executed. Focus on command lines containing UNC paths to identify potentially malicious executions.
    
  - **Correlate with Network Activity:** Use the network detection and response (NDR) tools to analyze any outbound connections made as a result of the `rundll32.exe` execution. Ensure that connections are not to unrecognized or suspicious IP addresses.
    
  - **Review Windows Event Logs:** Inspect relevant Windows Security event logs to determine if there was any unusual authentication activity associated with the network share referenced in the UNC path. Check for events like access to files or directories that should be limited.
    
  - **Analyze File Integrity:** Use antivirus or endpoint protection tools to assess the integrity of the DLLs executed via `rundll32.exe`. Evaluate if the DLLs are known malicious files or if they have been modified.
  ### Prioritization
  Alerts triggered by this rule should be treated with high severity due to the nature of malicious actions often associated with `rundll32.exe`, particularly when executing files from remote locations which increases the risk of advanced threat actors compromising critical systems.
  ### Blind Spots and Assumptions
  This rule may not trigger in environments where remote execution of DLLs is standard practice or where monitoring configurations do not capture command-line arguments effectively. Furthermore, obfuscation techniques may be used by adversaries to hide actual commands or to change execution patternsâ€”thus evading detection. It assumes that logging configurations are properly set up to log command-line details for process creations.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
