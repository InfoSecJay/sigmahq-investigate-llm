title: PowerShell Download Pattern
id: 3b6ab547-8ec2-4991-b9d2-2b06702a48d7
related:
- id: e6c54d94-498c-4562-a37c-b469d8e9a275
  type: derived
status: test
description: Detects a Powershell process that contains download commands in its command
  line string
references:
- https://blog.redteam.pl/2020/06/black-kingdom-ransomware.html
- https://lab52.io/blog/winter-vivern-all-summer/
- https://hatching.io/blog/powershell-analysis/
author: Florian Roth (Nextron Systems), oscd.community, Jonhnathan Ribeiro
date: 2019-01-16
modified: 2023-01-26
tags:
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
  - OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli:
    CommandLine|contains|all:
    - 'new-object'
    - 'net.webclient).'
    - 'download'
    CommandLine|contains:
    - 'string('
    - 'file('
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "PowerShell Download Pattern" detection rule is designed to identify potentially malicious PowerShell activity by monitoring processes that utilize specific command line arguments associated with downloading files. The rule focuses on PowerShell (`powershell.exe` and `pwsh.exe`) processes that contain terms like "new-object," "net.webclient," and "download" in their command line strings. When such commands are executed, they often indicate a User or a script attempting to download files, which is a common technique used by threat actors to fetch malware or exfiltrate data. This rule aligns with the MITRE ATT&CK technique T1059.001, which targets script execution as a means to carry out attacks.
  The detection leverages process creation logs from Windows, analyzing both the image name and command line parameters to discern potentially dangerous actions. As PowerShell is a powerful tool, it is important to scrutinize its usage in an enterprise environment to detect early signs of malicious activity or policy violations.
  ### Investigation Steps
  - **Check PowerShell Logs**: Use PowerShell logging features to review script block logs, module logs, and transcription logs for any suspicious activity that aligns with the detected command line patterns.
  - **Correlate with EDR Alerts**: Investigate any alerts tied to the PowerShell process in your EDR solution; look for suspicious parent-child relationships and additional indicators of compromise.
  - **Analyze Network Traffic**: Use NDR tools to examine outbound network connections that coincide with the detected PowerShell activity. Check for connections made to known malicious domains or IPs.
  - **Review Endpoint Security Logs**: Examine the logs from endpoint security solutions for signs of malware installation or execution related to the downloaded content, focusing on alerts around the time of detection.
  ### Prioritization
  This alert is classified as medium severity because it signals potentially malicious behavior, typical of initial access techniques employed by adversaries. However, the context of the environment and the specific strings detected will dictate the response and urgency.
  ### Blind Spots and Assumptions
  The rule may not trigger in scenarios where legitimate scripts are used for downloading necessary updates or files, particularly if they are heavily obfuscated or utilize uncommon methodologies to execute downloads. Furthermore, the rule assumes the presence of standard PowerShell usage patterns; if a threat actor uses an alternate method or a different scripting tool, the detection may fail. It is also worth noting that users with legitimate administrative tasks may generate similar command lines that could lead to false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
