title: UAC Bypass WSReset
id: 89a9a0e0-f61a-42e5-8957-b1479565a658
status: test
description: Detects the pattern of UAC Bypass via WSReset usable by default sysmon-config
references:
- https://lolbas-project.github.io/lolbas/Binaries/Wsreset/
- https://github.com/hfiref0x/UACME
- https://medium.com/falconforce/falconfriday-detecting-uac-bypasses-0xff16-86c2a9107abf
author: Christian Burkard (Nextron Systems)
date: 2021-08-23
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\wsreset.exe'
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The UAC Bypass WSReset detection rule is designed to identify instances where the Windows utility WSReset.exe is executed with a high or system integrity level, which could indicate an attempt to bypass User Account Control (UAC). UAC is a security feature in Windows that helps prevent unauthorized changes to the operating system. The rule leverages process creation logs from Sysmon to monitor the execution of WSReset.exe, specifically targeting scenarios where the integrity level associated with the process is set to high or system. This can be indicative of unauthorized privilege escalation attempts or evasion tactics employed by malicious actors. The rule correlates with the MITRE ATT&CK framework under the tactics of "Defense Evasion" and "Privilege Escalation," specifically technique T1548.002.
  ### Investigation Steps
  - **Check Process Creation Logs:** Use Sysmon logs to identify the instances where WSReset.exe was executed. Look for anomalies such as unusual parent processes or command-line arguments passed at execution.
  - **Analyze Integrity Levels:** Verify the integrity levels of the instances of WSReset.exe. Investigate any execution with a high or system integrity level that deviates from normal operational behavior.
  - **Review Related Activity:** Cross-reference the identified WSReset executions against other security tools like EDR or AV for additional context on potential malicious behavior related to process execution.
  - **Conduct User Behavior Analysis:** Review the user accounts associated with the WSReset executions, noting any that are unusual or have recently escalated permissions to understand if this is part of a larger privilege escalation event.
  ### Prioritization
  The severity of the alert is categorized as high due to the potential for malicious activity associated with UAC bypass, which can grant attackers elevated privileges, allowing them to compromise sensitive system security.
  ### Blind spots and Assumptions
  This rule may not fire in scenarios where WSReset.exe is executed legitimately by a trusted process or where the Sysmon logging is misconfigured or disabled. Additionally, attackers may utilize various semi-legitimate paths to launch WSReset without raising alerts, leveraging custom configurations or native tools like PowerShell. Assumptions include the consistent presence of Sysmon across the monitored endpoints and proper configuration to capture relevant process creation events.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
