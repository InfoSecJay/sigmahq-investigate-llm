title: Potential WinAPI Calls Via CommandLine
id: ba3f5c1b-6272-4119-9dbd-0bc8d21c2702
related:
- id: 03d83090-8cba-44a0-b02f-0b756a050306
  type: derived
status: test
description: Detects the use of WinAPI Functions via the commandline. As seen used
  by threat actors via the tool winapiexec
references:
- https://twitter.com/m417z/status/1566674631788007425
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-09-06
modified: 2023-01-09
tags:
- attack.execution
- attack.t1106
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
    - 'AddSecurityPackage'
    - 'AdjustTokenPrivileges'
    - 'Advapi32'
    - 'CloseHandle'
    - 'CreateProcessWithToken'
    - 'CreatePseudoConsole'
    - 'CreateRemoteThread'
    - 'CreateThread'
    - 'CreateUserThread'
    - 'DangerousGetHandle'
    - 'DuplicateTokenEx'
    - 'EnumerateSecurityPackages'
    - 'FreeHGlobal'
    - 'FreeLibrary'
    - 'GetDelegateForFunctionPointer'
    - 'GetLogonSessionData'
    - 'GetModuleHandle'
    - 'GetProcAddress'
    - 'GetProcessHandle'
    - 'GetTokenInformation'
    - 'ImpersonateLoggedOnUser'
    - 'kernel32'
    - 'LoadLibrary'
    - 'memcpy'
    - 'MiniDumpWriteDump'
            # - 'msvcrt'
    - 'ntdll'
    - 'OpenDesktop'
    - 'OpenProcess'
    - 'OpenProcessToken'
    - 'OpenThreadToken'
    - 'OpenWindowStation'
    - 'PtrToString'
    - 'QueueUserApc'
    - 'ReadProcessMemory'
    - 'RevertToSelf'
    - 'RtlCreateUserThread'
    - 'secur32'
    - 'SetThreadToken'
            # - 'user32'
    - 'VirtualAlloc'
    - 'VirtualFree'
    - 'VirtualProtect'
    - 'WaitForSingleObject'
    - 'WriteInt32'
    - 'WriteProcessMemory'
    - 'ZeroFreeGlobalAllocUnicode'
  filter_optional_mpcmdrun:
    Image|endswith: '\MpCmdRun.exe'
    CommandLine|contains: 'GetLoadLibraryWAddress32'
  condition: selection and not 1 of filter_optional_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential misuse of WinAPI functions through command-line execution, specifically targeting the behavior exhibited by threat actors using the `winapiexec` tool. The rule leverages process creation logs to inspect command-line parameters for known API functions indicative of malicious activity. By tracking calls to functions like `CreateRemoteThread`, `OpenProcess`, or `WriteProcessMemory`, which can be associated with process manipulation and malware exploitation, the rule helps to surface activities that often characterize lateral movement, privilege escalation, and remote access attempts within a Windows environment. This aligns with the MITRE ATT&CK framework's Execution tactic (T1106), focusing on the adversarial use of legitimate APIs to achieve potentially malicious objectives.
  ### Investigation Steps
  - **Check EDR alerts:** Review the EDR console for additional alerts linked to the identified process. Look for any suspicious activities associated with the process during the timeframe of the alert.
  - **Correlate with Process Creation Logs:** Analyze the Windows Security event logs for the process creation events relating to the detected command-line. Pay attention to parent-child process relationships to determine the origin of the suspicious commands.
  - **Examine Network Connections:** Use the NDR tools to investigate any network connections initiated by the process. Assess whether these connections target unusual or suspicious domains and IPs that deviate from normal behavior.
  - **Evaluate Additional Context:** Investigate logs from the NGFW, AV, and any proxy solutions to gain context around the identified activity. Check if there are any web requests or downloads that could link the activity to known threats or malware.
  ### Prioritization
  The alert has been classified as high severity due to the potential for significant risk to the enterprise environment, as WinAPI function misuse can lead to unauthorized access, privilege escalation, or compromise of sensitive data. Immediate investigation is recommended to prevent potential exploitation.
  ### Blind spots and Assumptions
  This rule may not trigger for all instances of malicious WinAPI calls if the attacker employs obfuscation techniques that modify command-line parameters or if they use alternative methods outside of standard command execution. Additionally, the presence of legitimate software utilizing such API calls may result in false positives. It's also assumed that all relevant telemetry is properly configured and collected; gaps in monitoring could lead to missed detections.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
