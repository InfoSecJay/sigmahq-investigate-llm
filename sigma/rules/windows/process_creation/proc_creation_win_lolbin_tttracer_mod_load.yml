title: Time Travel Debugging Utility Usage
id: 0b4ae027-2a2d-4b93-8c7e-962caaba5b2a
related:
- id: e76c8240-d68f-4773-8880-5c6f63595aaf
  type: derived
status: test
description: Detects usage of Time Travel Debugging Utility. Adversaries can execute
  malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Tttracer/
- https://twitter.com/mattifestation/status/1196390321783025666
- https://twitter.com/oulusoyum/status/1191329746069655553
author: 'Ensar Åžamil, @sblmsrsn, @oscd_initiative'
date: 2020-10-06
modified: 2022-10-09
tags:
- attack.defense-evasion
- attack.credential-access
- attack.t1218
- attack.t1003.001
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    ParentImage|endswith: '\tttracer.exe'
  condition: selection
falsepositives:
- Legitimate usage by software developers/testers
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the utilization of the Time Travel Debugging Utility (TTT), specifically monitoring its process creation activity. The rule checks for processes spawned (children) by `tttracer.exe`, which is a legitimate debugging tool that can also be exploited by adversaries. Malicious actors may leverage this utility to perform operations such as dumping processes (e.g., `lsass.exe`), which can expose sensitive information such as credentials. The detection leverages Windows process creation logs as the primary data source, focusing on the parent-child relationship between processes to identify potentially unwanted or malicious use of TTT.
  ### Investigation Steps
  - Review the process creation logs in your EDR solution to confirm instances of `tttracer.exe` as a parent process and identify any suspicious child processes started under it.
  - Analyze command-line parameters associated with `tttracer.exe` to determine if any flags or options indicate suspicious behavior, such as process dumps.
  - Investigate the user accounts that initiated the `tttracer.exe` execution to verify if they have legitimate reasons for using the debugging utility.
  - Cross-reference any identified processes with known threat intelligence feeds and perform a review of the process history to detect any anomalous patterns or actions.
