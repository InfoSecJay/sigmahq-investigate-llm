title: Time Travel Debugging Utility Usage
id: 0b4ae027-2a2d-4b93-8c7e-962caaba5b2a
related:
- id: e76c8240-d68f-4773-8880-5c6f63595aaf
  type: derived
status: test
description: Detects usage of Time Travel Debugging Utility. Adversaries can execute
  malicious processes and dump processes, such as lsass.exe, via tttracer.exe.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Tttracer/
- https://twitter.com/mattifestation/status/1196390321783025666
- https://twitter.com/oulusoyum/status/1191329746069655553
author: 'Ensar Åžamil, @sblmsrsn, @oscd_initiative'
date: 2020-10-06
modified: 2022-10-09
tags:
- attack.defense-evasion
- attack.credential-access
- attack.t1218
- attack.t1003.001
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    ParentImage|endswith: '\tttracer.exe'
  condition: selection
falsepositives:
- Legitimate usage by software developers/testers
level: high
notes: |
  ### Technical Context
  The "Time Travel Debugging Utility Usage" detection rule is designed to identify the execution of the Time Travel Debugging (TTD) tool, specifically through the process `tttracer.exe`. This utility is sometimes leveraged by adversaries to manipulate application behavior or gain unauthorized access to sensitive information within processes, such as dumping the contents of critical memory locations like `lsass.exe`. The rule specifically looks for instances where `tttracer.exe` is identified as the parent image of a process, indicating potential misuse. The primary data sources utilized for this detection include Windows process creation logs, which capture details on when and how processes are initiated, along with their hierarchical relationships. This rule aligns with the MITRE ATT&CK tactics of **Defense Evasion** (T1070) and **Credential Access** (T1003), as it targets methods adversaries may use to obscure potentially malicious activity and steal credentials.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the Windows process creation logs within your EDR to identify all instances where `tttracer.exe` is the parent image. Pay particular attention to child processes initiated from `tttracer.exe`.
  - **Analyze Command-Line Arguments:** Look at the command-line parameters used during the execution of any detected processes to identify potentially suspicious or unusual arguments indicative of malicious intent.
  - **Correlate with Sysmon Events:** Utilize Sysmon logs to gather more context about the identified processes, such as network connections, image loads, and file accesses associated with `tttracer.exe`.
  - **Assess User and Machine Context:** Investigate the user account and machine from which the `tttracer.exe` process was spawned. This includes checking if the action was initiated from a system account or another privileged user in a sensitive environment.
  ### Prioritization
  The alert generated by this rule is marked as high severity due to the potential exploitation of debugging utilities by adversaries to extract credentials and manipulate processes. Given the sensitive nature of the processes that may be targeted, such as `lsass.exe`, any alerts should be prioritized for immediate investigation.
  ### Blind Spots and Assumptions
  It is important to recognize that legitimate software developers and testers may use TTD for debugging purposes, which can lead to false positives if not adequately triaged. Additionally, this rule may not trigger if an adversary uses different methods to invoke TTD, such as directly from scripts or leveraging other executables that do not follow the expected process hierarchy. Furthermore, if process creation logging is disabled or improperly configured, the detection may fail altogether. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
