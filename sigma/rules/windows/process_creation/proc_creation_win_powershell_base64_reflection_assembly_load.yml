title: PowerShell Base64 Encoded Reflective Assembly Load
id: 62b7ccc9-23b4-471e-aa15-6da3663c4d59
related:
- id: 9c0295ce-d60d-40bd-bd74-84673b7592b1
  type: similar
status: test
description: Detects base64 encoded .NET reflective loading of Assembly
references:
- https://github.com/Neo23x0/Raccine/blob/20a569fa21625086433dcce8bb2765d0ea08dcb6/yara/mal_revil.yar
- https://thedfirreport.com/2022/05/09/seo-poisoning-a-gootloader-story/
author: Christian Burkard (Nextron Systems), pH-T (Nextron Systems)
date: 2022-03-01
modified: 2023-01-30
tags:
- attack.execution
- attack.t1059.001
- attack.defense-evasion
- attack.t1027
- attack.t1620
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            # [Reflection.Assembly]::Load(
    - 'WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA'
    - 'sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA'
    - 'bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA'
            # [reflection.assembly]::("Load")
    - 'AFsAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiAC'
    - 'BbAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgAp'
    - 'AWwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAK'
            # [Reflection.Assembly]::("Load")
    - 'WwBSAGUAZgBsAGUAYwB0AGkAbwBuAC4AQQBzAHMAZQBtAGIAbAB5AF0AOgA6ACgAIgBMAG8AYQBkACIAKQ'
    - 'sAUgBlAGYAbABlAGMAdABpAG8AbgAuAEEAcwBzAGUAbQBiAGwAeQBdADoAOgAoACIATABvAGEAZAAiACkA'
    - 'bAFIAZQBmAGwAZQBjAHQAaQBvAG4ALgBBAHMAcwBlAG0AYgBsAHkAXQA6ADoAKAAiAEwAbwBhAGQAIgApA'
            # [reflection.assembly]::Load(
    - 'WwByAGUAZgBsAGUAYwB0AGkAbwBuAC4AYQBzAHMAZQBtAGIAbAB5AF0AOgA6AEwAbwBhAGQAKA'
    - 'sAcgBlAGYAbABlAGMAdABpAG8AbgAuAGEAcwBzAGUAbQBiAGwAeQBdADoAOgBMAG8AYQBkACgA'
    - 'bAHIAZQBmAGwAZQBjAHQAaQBvAG4ALgBhAHMAcwBlAG0AYgBsAHkAXQA6ADoATABvAGEAZAAoA'
  condition: selection
fields:
- CommandLine
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule identifies potentially malicious activity involving the reflective loading of .NET assemblies utilizing PowerShell. Specifically, it looks for encoded Base64 strings that indicate the use of the `[Reflection.Assembly]::Load()` method, which can be employed by attackers to dynamically load malicious code into memory, bypassing traditional security measures. The rule captures various patterns of these command-line expressions alongside their Base64-encoded representations. The data sources involved in this detection primarily include process creation logs, which provide insights into the commands being executed alongside their parameters, crucial for identifying suspicious actions occurring on the system.
  ### Investigation Steps
  - Review process creation logs in the EDR to identify when the suspicious PowerShell commands were executed, and determine the parent process to trace the origin of the command.
  - Analyze command-line parameters and correlate them with known threat intelligence to assess if they can be linked to previously identified malicious behavior.
  - Check network logs on the NGFW and Proxy for any associated outbound connections made by the process for suspicious activity or any known indicators of compromise.
  - Investigate the system's application and log files for any additional context around the time of the alert to gather information on user activity and environmental changes.
