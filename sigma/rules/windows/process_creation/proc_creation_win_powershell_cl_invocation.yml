title: Potential Process Execution Proxy Via CL_Invocation.ps1
id: a0459f02-ac51-4c09-b511-b8c9203fc429
status: test
description: Detects calls to "SyncInvoke" that is part of the "CL_Invocation.ps1"
  script to proxy execution using "System.Diagnostics.Process"
references:
- https://lolbas-project.github.io/lolbas/Scripts/Cl_invocation/
- https://twitter.com/bohops/status/948061991012327424
author: Nasreddine Bencherchali (Nextron Systems), oscd.community, Natalia Shornikova
date: 2020-10-14
modified: 2023-08-17
tags:
- attack.defense-evasion
- attack.t1216
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # Note: As this function is usually called from within powershell, classical process creation even would not catch it. This will only catch inline calls via "-Command" or "-ScriptBlock" flags for example.
    CommandLine|contains: 'SyncInvoke '
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule targets the potential execution of malicious processes through the PowerShell script "CL_Invocation.ps1," specifically monitoring for calls made to the `SyncInvoke` method contained within this script. By leveraging `System.Diagnostics.Process`, the script can circumvent traditional security measures, enabling attackers to execute commands covertly without triggering common alerts associated with process creation. The detection is based on observing specific command-line parameters, particularly looking for instances where 'SyncInvoke' is invoked directly via PowerShell commands. This can often indicate attempts to bypass security controls or execute scripts in an obfuscated manner, thus classified under the MITRE ATT&CK tactic of Defense Evasion and the technique T1216 (Script Hosting).
  The primary data sources utilized for detection include process creation logs and command-line parameters, particularly from the Windows Event Logs focused on process creation. Given that this type of technique often operates under the radar of traditional monitoring tools, it is important for incident responders to be vigilant in identifying these potentially suspicious calls.
  ### Investigation Steps
  - **Check Command-Line Parameters**: Use EDR to review the command-line arguments associated with the detected process creation event. Look for any parameters that resemble invocation through `SyncInvoke` as outlined in the rule.
    
  - **Review Process Trees**: Investigate the parent and child process hierarchy via EDR to identify if the suspicious process was spawned by legitimate processes. This can help determine if it's part of a broader attack chain.
  - **Analyze Script Contents**: If available, retrieve the PowerShell script "CL_Invocation.ps1" to verify its legitimacy and the context of usage. This should involve checking for any signs of modification or unauthorized changes.
  - **Correlate with Network Activity**: Look at corresponding network logs (NDR) and DNS queries to check if the suspicious process initiated unexpected outbound connections or contacted known malicious domains.
  ### Prioritization
  Alerts generated by this rule should be treated with medium severity, as while they may indicate potential obfuscation tactics used by adversaries, they require further context to determine if they signify genuine threats or benign activities.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where the command-line style differs from expected formats or if PowerShell execution policies block the script from running. Furthermore, advanced adversaries may utilize encoding or other evasion techniques to obscure their activities, preventing detection. Itâ€™s crucial to remain aware that legitimate use of `SyncInvoke` in authorized scripts might trigger false positives, requiring careful analysis of the context to differentiate between benign and malicious actions.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
