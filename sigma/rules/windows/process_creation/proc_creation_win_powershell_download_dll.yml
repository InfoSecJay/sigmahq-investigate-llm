title: Potential DLL File Download Via PowerShell Invoke-WebRequest
id: 0f0450f3-8b47-441e-a31b-15a91dc243e2
status: test
description: Detects potential DLL files being downloaded using the PowerShell Invoke-WebRequest
  cmdlet
references:
- https://www.zscaler.com/blogs/security-research/onenote-growing-threat-malware-distribution
author: Florian Roth (Nextron Systems), Hieu Tran
date: 2023-03-13
tags:
- attack.command-and-control
- attack.execution
- attack.t1059.001
- attack.t1105
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    CommandLine|contains:
    - 'Invoke-WebRequest '
    - 'IWR '
    CommandLine|contains|all:
    - 'http'
    - 'OutFile'
    - '.dll'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This SigmaHQ rule is designed to detect potentially malicious activities involving the download of Dynamic Link Library (DLL) files using the PowerShell `Invoke-WebRequest` cmdlet. The rule specifically looks for command-line executions that contain variations of `Invoke-WebRequest` or its abbreviation `IWR`, along with the presence of parameters that specify an HTTP URL, the `OutFile` flag, and a file name ending with `.dll`. This behavior can be indicative of attempts to download and execute malicious DLLs, which are often used in attacks to load malicious code into legitimate processes, either for persistence or as part of a larger compromise.
  The detection relies on process creation logs, specifically monitoring command-line arguments to identify these potentially harmful requests. The associated MITRE ATT&CK techniques include **Execution** (T1059.001 – PowerShell) and **Command and Control** (T1105 – Ingress Tool Transfer), highlighting the risk that downloading malicious files poses in terms of executing untrusted code and enabling remote access to compromised systems.
  ### Investigation Steps
  - **Check Process Logs:** Review the process creation logs for any instances of `Invoke-WebRequest` or `IWR` commands, paying special attention to the user context under which they were executed, as this can indicate potential misuse by an attacker.
    
  - **Verify File Downloads:** Cross-reference any detected downloads with established hash databases (e.g., VirusTotal) to confirm whether the downloaded DLL files are known malware or benign.
    
  - **Analyze Network Traffic:** Utilize network detection and response (NDR) tools to track outgoing connections related to the detected commands, identifying the sources of the files and any potentially malicious URLs listed in the command execution.
  - **Inspect EDR Alerts:** Leverage endpoint detection and response (EDR) tools to assess the behavioral patterns of the processes associated with the detected PowerShell commands, checking for any parent-child process relationships that may indicate escalation or lateral movement.
  ### Prioritization
  Alerts generated by this rule are categorized as medium severity due to the potential risk associated with downloading executable files, which can serve as a precursor to larger compromises within the enterprise environment. The presence of DLL downloads often warrants immediate investigation as they can enable attackers to maintain persistence in the systems.
  ### Blind Spots and Assumptions
  This detection rule may not fire if the attacker utilizes alternative methods to download files, such as using other utilities or custom scripts that do not involve `Invoke-WebRequest`. Additionally, if the PowerShell logging is disabled or improperly configured, relevant command-line arguments may be omitted, leading to missed detections. It is also essential to consider that legitimate software updates or administrative actions may trigger false positives, so context is critical in determining the accuracy of alerts raised by this rule.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
