title: Suspicious Electron Application Child Processes
id: f26eb764-fd89-464b-85e2-dc4a8e6e77b8
related:
- id: 378a05d8-963c-46c9-bcce-13c7657eac99
  type: similar
status: test
description: |
  Detects suspicious child processes of electron apps (teams, discord, slack, etc.). This could be a potential sign of ".asar" file tampering (See reference section for more information) or binary execution proxy through specific CLI arguments (see related rule)
references:
- https://taggart-tech.com/quasar-electron/
- https://github.com/mttaggart/quasar
- https://positive.security/blog/ms-officecmd-rce
- https://lolbas-project.github.io/lolbas/Binaries/Msedge/
- https://lolbas-project.github.io/lolbas/Binaries/Teams/
- https://lolbas-project.github.io/lolbas/Binaries/msedgewebview2/
- https://medium.com/@MalFuzzer/one-electron-to-rule-them-all-dc2e9b263daf
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-10-21
modified: 2024-07-12
tags:
- attack.execution
logsource:
  category: process_creation
  product: windows
detection:
  selection_parent:
    ParentImage|endswith:
            # Add more electron based app to the list
    - '\chrome.exe'         # Might require additional tuning
    - '\discord.exe'
    - '\GitHubDesktop.exe'
    - '\keybase.exe'
    - '\msedge.exe'
    - '\msedgewebview2.exe'
    - '\msteams.exe'
    - '\slack.exe'
    - '\teams.exe'
            # - '\code.exe' # Prone to a lot of FPs. Requires an additional baseline
  selection_child_image:
    Image|endswith:
            # Add more suspicious/unexpected paths
    - '\cmd.exe'
    - '\cscript.exe'
    - '\mshta.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\whoami.exe'
    - '\wscript.exe'
  selection_child_paths:
    Image|contains:
            # Add more suspicious/unexpected paths
    - ':\ProgramData\'
    - ':\Temp\'
    - '\AppData\Local\Temp\'
    - '\Users\Public\'
    - '\Windows\Temp\'
  filter_optional_discord:
    ParentImage|endswith: '\Discord.exe'
    Image|endswith: '\cmd.exe'
    CommandLine|contains: '\NVSMI\nvidia-smi.exe'
  condition: selection_parent and 1 of selection_child_* and not 1 of filter_optional_*
falsepositives:
- Unknown
# Increase the level once FP rate is reduced (see status)
level: medium
notes: |
  n
  ### Technical Context
  The "Suspicious Electron Application Child Processes" detection rule is designed to identify potentially malicious activity involving Electron-based applications, such as Microsoft Teams, Discord, and Slack. The rule works by monitoring process creation events on Windows systems, specifically looking for child processes spawned by these applications that may indicate nefarious activity. It focuses on several key indicators: if an Electron app (parent process) is responsible for launching suspicious child processes—including command line executables and script interpreters (e.g., cmd.exe, powershell.exe)—from high-risk directories like ProgramData or Temp, this could suggest exploitation via ".asar" file tampering or unauthorized command execution.
  This rule is aligned with the MITRE ATT&CK framework, particularly the Execution tactic (T1203), which encompasses techniques used to execute arbitrary code. By detecting this behavior, SOC analysts can promptly investigate potential security incidents involving exploit attempts against Electron applications.
  ### Investigation Steps
  - **Review Parent Process Details:** Inspect the Windows Event Logs, particularly process creation logs, to verify the properties and behaviors of the parent applications (e.g., Discord, Slack) leading to the alert.
  - **Analyze Child Process Behavior:** Utilize EDR tools to examine the command-line arguments and behavior of the detected child processes for any obfuscated or suspicious activity.
  - **Check File System Locations:** Confirm if the child processes are operating from unexpected locations, such as Temp or ProgramData. Log interactions and anomalies within these directories could indicate potential compromise.
  - **Cross-reference with Threat Intelligence:** Consult threat intelligence feeds or logs for known malicious behaviors or signatures related to the observed child processes, particularly focusing on those involving Electron application exploitation.
  ### Prioritization
  This alert is categorized as medium severity due to the potential for exploitation of widely used Electron applications, which can serve as a foothold for attackers to conduct further malicious activities within an enterprise environment.
  ### Blind Spots and Assumptions
  There are several inherent blind spots within the rule. False positives may arise from legitimate applications that utilize Electron frameworks, which could trigger alerts when they spawn processes in normal operation. Additionally, the rule may not fire if an adversary employs more sophisticated methods of process execution that avoid standard parent-child relationships or utilizes whitelisted paths. It is assumed that the telemetry from Windows Process Creation is comprehensive and correctly configured across systems; missing or disabled logging could lead to undetected malicious behavior.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
