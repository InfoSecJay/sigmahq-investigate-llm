title: Script Event Consumer Spawning Process
id: f6d1dd2f-b8ce-40ca-bc23-062efb686b34
status: test
description: Detects a suspicious child process of Script Event Consumer (scrcons.exe).
references:
- https://redcanary.com/blog/child-processes/
- https://docs.paloaltonetworks.com/cortex/cortex-xdr/cortex-xdr-analytics-alert-reference/cortex-xdr-analytics-alert-reference/scrcons-exe-rare-child-process.html
author: Sittikorn S
date: 2021-06-21
modified: 2022-07-14
tags:
- attack.execution
- attack.t1047
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\scrcons.exe'
    Image|endswith:
    - '\svchost.exe'
    - '\dllhost.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\wscript.exe'
    - '\cscript.exe'
    - '\schtasks.exe'
    - '\regsvr32.exe'
    - '\mshta.exe'
    - '\rundll32.exe'
    - '\msiexec.exe'
    - '\msbuild.exe'
  condition: selection
fields:
- CommandLine
- ParentCommandLine
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Script Event Consumer Spawning Process" Sigma rule is designed to detect potentially malicious child processes spawned by the Script Event Consumer (scrcons.exe), which is a legitimate component typically used for executing scripts in Windows environments. The rule specifically targets situations where scrcons.exe acts as a parent process, giving rise to known malicious child processes such as svchost.exe, PowerShell, and others. The objective of this detection is to identify unusual behavior in the execution of scripts that could signal the presence of an adversary attempting to execute code in a stealthy manner to evade detection.
  Data sources leveraged for this rule primarily include the Windows Process Creation logs, which record each time a new process is launched and provide critical details such as the name of the process, its command-line arguments, and the parent process that initiated it. Specifically, this rule looks at the `ParentImage` field to verify if it ends with 'scrcons.exe' and the `Image` field to see if it matches any of the predefined potentially suspicious processes. The MITRE ATT&CK technique relevant to this detection is Execution (T1047), which focuses on the execution of code by legitimate scripting tools, highlighting how adversaries may leverage these mechanisms for nefarious actions.
  ### Investigation Steps
  - **Review Process Creation Logs:** Examine the process creation logs in your EDR solution to identify the instances where scrcons.exe spawned any suspicious child processes. Pay special attention to the `CommandLine` and `ParentCommandLine` fields for extraction of contextual information.
  - **Cross-Reference Internet Traffic:** Use network detection tools to investigate any outbound connections made by the child processes identified. This will help determine if there was any communication with external malicious entities.
  - **Analyze File and Registry Changes:** Leverage Windows Security logs and EDR to check for any file or registry modifications made by the identified suspicious processes. Look for signs of persistence mechanisms that may indicate malware behavior.
  - **Validate Known Environments:** Consult with system admins and threat intelligence reports to ascertain whether the detected child processes are normal for your enterprise infrastructure. This can help in filtering out false positives from genuine script usage.
  ### Prioritization
  Alerts generated by this rule are considered high severity due to the potential for remote execution of malicious code stemming from legitimate software. Prompt investigation is crucial to ascertain if a genuine security incident is in progress.
  ### Blind Spots and Assumptions
  The rule may fail to trigger if scrcons.exe is not being utilized in the environment, thus making it impossible for malicious actors to exploit it in lateral movement. Additionally, it's assumed that attackers will not use valid processes that are not covered in the list, potentially enabling evasion. Note that legitimate administrative tasks using the identified processes can also cause false positives, which may necessitate correlation with historical behavior for confirmation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
