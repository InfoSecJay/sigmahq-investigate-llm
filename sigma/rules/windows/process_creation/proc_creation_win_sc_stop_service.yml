title: Stop Windows Service Via Sc.EXE
id: 81bcb81b-5b1f-474b-b373-52c871aaa7b1
related:
- id: eb87818d-db5d-49cc-a987-d5da331fbd90
  type: obsolete
status: test
description: Detects the stopping of a Windows service via the "sc.exe" utility
references:
- https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc742107(v=ws.11)
author: Jakob Weinzettl, oscd.community, Nasreddine Bencherchali (Nextron Systems)
date: 2023-03-05
modified: 2024-01-18
tags:
- attack.impact
- attack.t1489
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'sc.exe'
  - Image|endswith: '\sc.exe'
  selection_cli:
    CommandLine|contains: ' stop '
  condition: all of selection_*
falsepositives:
- There are many legitimate reasons to stop a service. This rule isn't looking for
  any suspicious behavior in particular. Filter legitimate activity accordingly
level: low
notes: |
  n
  ### Technical Context
  The rule "Stop Windows Service Via Sc.EXE" monitors for instances where the `sc.exe` utility is employed to stop a Windows service. The detection logic focuses on the process creation logs, specifically by identifying the execution of `sc.exe` and examining its command line for the presence of the keyword "stop". This monitoring approach leverages Windows process creation telemetry to seek potential disruptive activities relating to service management. As services can be critical to the functioning of various applications and systems, stopping them without proper justification could indicate malicious intent as per MITRE ATT&CK tactic "Impact" under technique T1489 (Service Stop).
  ### Investigation Steps
  - **EDR Analysis**: Use the EDR tool to investigate the endpoint where the alert was triggered. Look for other correlated events, including process execution history and suspicious behavior patterns around the time of the service stop.
    
  - **Command Line Review**: Inspect the command line arguments associated with the `sc.exe` execution to confirm whether the "stop" command was issued intentionally or linked to automated scripts. 
  - **Event Log Examination**: Access the Windows Event Logs (particularly Security and System) to gain insights into other activities occurring on the system during the same timeframe, checking for unauthorized or unusual service modifications.
  - **Service Account Validation**: Verify the user account that executed the command. Identify if it was a legitimate administrator action or if it was executed by a non-privileged or suspicious account which may indicate a potential security incident.
  ### Prioritization
  Although it is categorized as a low-level alert, the stopping of critical services could still lead to severe operational disruptions. Therefore, quick verification is necessary to ensure it's not part of a larger compromise.
  ### Blind spots and Assumptions
  This rule assumes that malicious actors will use the standard `sc.exe` utility for stopping services openly, not employing alternative methods or scripts that obscure their actions. There may be legitimate administrative tasks being flagged as false positives, and filtering must be calibrated to reduce noise. Additionally, this detection may not cover scenarios where services are stopped through graphical interfaces or third-party management tools that do not utilize `sc.exe`.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
