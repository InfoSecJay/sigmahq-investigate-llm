title: PowerShell Execution With Potential Decryption Capabilities
id: 434c08ba-8406-4d15-8b24-782cb071a691
status: test
description: Detects PowerShell commands that decrypt an ".LNK" "file to drop the
  next stage of the malware.
references:
- https://research.checkpoint.com/2023/chinese-threat-actors-targeting-europe-in-smugx-campaign/
author: X__Junior (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)
date: 2023-06-30
modified: 2023-12-05
tags:
- attack.execution
logsource:
  product: windows
  category: process_creation
detection:
  selection_img:
    Image|endswith:
    - '\powershell.exe'
    - '\pwsh.exe'
    OriginalFileName:
    - 'PowerShell.EXE'
    - 'pwsh.dll'
  selection_cli_dir:
    CommandLine|contains:
    - "Get-ChildItem "
    - "dir "
    - "gci "
    - "ls "
  selection_cli_gc:
    CommandLine|contains:
    - "Get-Content "
    - "gc "
    - 'cat '
    - 'type '
    - 'ReadAllBytes'
  selection_cli_specific:
  - CommandLine|contains|all:
    - ' ^| '
    - '\*.lnk'
    - '-Recurse'
    - '-Skip '
  - CommandLine|contains|all:
    - ' -ExpandProperty '
    - '\*.lnk'
    - 'WriteAllBytes'
    - ' .length '
  condition: all of selection_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This Sigma rule identifies potentially malicious PowerShell executables that may be used in the malware lifecycle, specifically involving the decryption of ".LNK" files. The rule works by scrutinizing the command lines used in PowerShell scripts, looking for specific commands that are commonly associated with file discovery and content reading, such as `Get-ChildItem`, `Get-Content`, and others. The command lines must also include particular parameters aimed at processing ".LNK" files, suggesting an intention to retrieve and execute payloads hidden within these files. This aligns with the MITRE ATT&CK tactic of "Execution" and technique "Command-Line Interface" (T1059.001), which denotes activities involving command execution through various interfaces.
  The data sources monitored primarily include the process creation logs provided by Windows, specifically events captured through Sysmon or native Windows Security logs. The rule's criteria focus on identifying unusual patterns in command line invocations that deviate from standard operational behavior, which can signify potential infiltration or execution of malicious payloads.
  ### Investigation Steps
  - **Analyze EDR Alerts**: Review the EDR logs for the identified PowerShell executions to determine the context and legitimacy of the activity, including the user account involved and the execution history.
  - **Check PowerShell Transcripts**: Inspect any available PowerShell transcripts for the specific command lines executed. Validate if the actions would be typical for the user or process invoking them.
  - **Investigate File System Activity**: Utilize file integrity monitoring to assess any file write activities performed during the same timestamp as the PowerShell execution, particularly focusing on ".LNK" file manipulations.
  - **Cross-reference Network Activity**: Review network logs for any unusual outbound connections or DNS queries initiated by the system during the PowerShell execution to detect potential data exfiltration attempts.
  ### Prioritization
  The alert is assigned a high severity level due to the potential for significant compromise via malware execution that uses sophisticated techniques, which can lead to widespread harm if not addressed swiftly.
  ### Blind Spots and Assumptions
  This rule may not fire in environments where legitimate administrative PowerShell usage involves similar command patterns, potentially leading to false negatives. Additionally, if an adversary employs techniques to obfuscate command lines or uses alternative scripting languages, the detection may fail. It is assumed that the rule will effectively capture standard patterns of malicious PowerShell execution, but it might be bypassed if commands are significantly altered or hidden.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and clarity, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
