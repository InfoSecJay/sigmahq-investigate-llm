title: DLL Sideloading by VMware Xfer Utility
id: ebea773c-a8f1-42ad-a856-00cb221966e8
status: test
description: Detects execution of VMware Xfer utility (VMwareXferlogs.exe) from the
  non-default directory which may be an attempt to sideload arbitrary DLL
references:
- https://www.sentinelone.com/labs/lockbit-ransomware-side-loads-cobalt-strike-beacon-with-legitimate-vmware-utility/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-02
tags:
- attack.defense-evasion
- attack.t1574.002
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    Image|endswith: '\VMwareXferlogs.exe'
  filter:   # VMware might be installed in another path so update the rule accordingly
    Image|startswith: 'C:\Program Files\VMware\'
  condition: selection and not filter
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  This detection rule identifies potential DLL sideloading activities associated with the VMware Xfer Utility, specifically the executable `VMwareXferlogs.exe`. The rule triggers when this utility is executed from non-default paths that deviate from the standard installation directory, indicating a possible malicious intent to sideload arbitrary DLLs. By monitoring process creation logs, the rule analyzes the execution path of VMwareXferlogs.exe, flagging instances where the image path does not start with the typical installation directory (C:\Program Files\VMware\). Such behavior can be indicative of various attacks, including those leveraging legitimate tools to bypass security mechanisms.
  This detection is pertinent because threat actors may exploit trusted applications like VMware to execute malicious DLLs, employing them as payloads that are hard to detect. The ability to identify this suspicious execution pattern plays a crucial role in proactive threat hunting and incident response activities.
  ### Investigation Steps
  - Utilize EDR tools to examine the process creation logs for instances of `VMwareXferlogs.exe`, specifically noting any non-standard file paths.
  - Investigate the command-line parameters associated with the execution of the utility to identify any unusual flags or arguments that may indicate malicious behavior.
  - Correlate the logs with firewall and network traffic data to check for any outbound connections made by the non-standard execution, looking for any signs of exfiltration or command-and-control communications.
  - Review the file integrity and signature of any loaded DLLs to ensure they are legitimate and not part of a malicious payload that could have been sideloaded during the execution.
