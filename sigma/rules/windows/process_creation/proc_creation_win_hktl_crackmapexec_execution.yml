title: HackTool - CrackMapExec Execution
id: 42a993dd-bb3e-48c8-b372-4d6684c4106c
status: test
description: This rule detect common flag combinations used by CrackMapExec in order
  to detect its use even if the binary has been replaced.
references:
- https://mpgn.gitbook.io/crackmapexec/smb-protocol/authentication/checking-credentials-local
- https://www.mandiant.com/resources/telegram-malware-iranian-espionage
- https://www.infosecmatter.com/crackmapexec-module-library/?cmem=mssql-mimikatz
- https://www.infosecmatter.com/crackmapexec-module-library/?cmem=smb-pe_inject
author: Florian Roth (Nextron Systems)
date: 2022-02-25
modified: 2023-03-08
tags:
- attack.execution
- attack.persistence
- attack.privilege-escalation
- attack.credential-access
- attack.discovery
- attack.t1047
- attack.t1053
- attack.t1059.003
- attack.t1059.001
- attack.t1110
- attack.t1201
logsource:
  category: process_creation
  product: windows
detection:
  selection_binary:
    Image|endswith: '\crackmapexec.exe'
  selection_special:
    CommandLine|contains: ' -M pe_inject '
  selection_execute:
    CommandLine|contains|all:
    - ' --local-auth'
    - ' -u '
    - ' -x '
  selection_hash:
    CommandLine|contains|all:
    - ' --local-auth'
    - ' -u '
    - ' -p '
    - " -H 'NTHASH'"
  selection_module_mssql:
    CommandLine|contains|all:
    - ' mssql '
    - ' -u '
    - ' -p '
    - ' -M '
    - ' -d '
  selection_module_smb1:
    CommandLine|contains|all:
    - ' smb '
    - ' -u '
    - ' -H '
    - ' -M '
    - ' -o '
  selection_module_smb2:
    CommandLine|contains|all:
    - ' smb '
    - ' -u '
    - ' -p '
    - ' --local-auth'
  part_localauth_1:
    CommandLine|contains|all:
    - ' --local-auth'
    - ' -u '
    - ' -p '
  part_localauth_2:
    CommandLine|contains|all:
    - ' 10.'
    - ' 192.168.'
    - '/24 '
  condition: 1 of selection_* or all of part_localauth*
fields:
- ComputerName
- User
- CommandLine
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "HackTool 
  - CrackMapExec Execution" detection rule identifies the use of CrackMapExec, a popular post-exploitation tool commonly utilized for lateral movement and credential access within Windows environments. This rule focuses on detecting specific command-line parameters and flag combinations associated with CrackMapExec execution, regardless of whether the original binary has been replaced. The log source for this rule is the Windows process creation logs, particularly monitoring details such as the image name and command-line arguments. The rule targets activities aligned with the MITRE ATT&CK techniques for execution (T1047), credential access (T1003, T1110), and lateral movement (T1075), aiming to raise alerts for suspicious commands typically employed for brute force attacks or exploitation of SMB services.
  ### Investigation Steps
  - **Check Process Creation Logs:** Utilize EDR tools to review process creation events, focusing on entries that reference `crackmapexec.exe`, and examine the associated command-line arguments for any signs of unauthorized execution.
  - **Review User Authorization:** Investigate the user account associated with the execution of CrackMapExec to determine if there are any indicators of compromised credentials or unauthorized access attempts within the network.
  - **Inspect Network Connections:** Analyze any outgoing or incoming network connections linked to the execution of CrackMapExec using network monitoring tools to identify connections to known or suspicious IP addresses and validate the destination services.
  - **Examine Related Logs:** Review Windows Security and Sysmon logs for additional indicators of compromise, such as failed login attempts, unusual access patterns, or signs of lateral movement across the environment.
  ### Prioritization
  Alerts generated by this rule are classified as high severity due to the potential for widespread compromise and lateral movement within the network, which could significantly impact the enterprise by exposing sensitive data or systems.
  ### Blind Spots and Assumptions
  This rule assumes that the system retains visibility of process creation events and that no obfuscation techniques are employed by the adversary to hide the execution of the CrackMapExec tool. Potential blind spots include situations where adversaries rename or modify the tool, or if the execution occurs on systems not sufficiently monitored for process creation events. Additionally, the rule may not fire if incorrect command-line parameters are used, or if the tool is executed in a non-standard environment where logging is disabled.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
