title: SQLite Firefox Profile Data DB Access
id: 4833155a-4053-4c9c-a997-777fcea0baa7
status: test
description: Detect usage of the "sqlite" binary to query databases in Firefox and
  other Gecko-based browsers for potential data stealing.
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1539/T1539.md#atomic-test-1---steal-firefox-cookies-windows
- https://blog.cyble.com/2022/04/21/prynt-stealer-a-new-info-stealer-performing-clipper-and-keylogger-activities/
author: frack113
date: 2022-04-08
modified: 2023-01-19
tags:
- attack.credential-access
- attack.t1539
- attack.collection
- attack.t1005
logsource:
  category: process_creation
  product: windows
detection:
  selection_sql:
  - Product: SQLite
  - Image|endswith:
    - '\sqlite.exe'
    - '\sqlite3.exe'
  selection_firefox:
    CommandLine|contains:
    - 'cookies.sqlite'
    - 'places.sqlite'         # Bookmarks, history
  condition: all of selection_*
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The Sigma rule titled "SQLite Firefox Profile Data DB Access" is designed to detect suspicious usage of the SQLite database binaries in relation to Gecko-based browsers like Firefox. Specifically, it looks for instances where the `sqlite.exe` or `sqlite3.exe` executables are invoked with command-line parameters that indicate attempts to access sensitive database files, such as `cookies.sqlite` or `places.sqlite`. These databases may contain user credentials, cookies, and browsing history, making them attractive targets for information-stealing malware. The primary data sources involved are process creation logs that capture process execution details, including image names and command-line arguments.
  When this rule triggers, it signals potential credential access or data collection activities by malicious actors, who may exploit the SQLite command-line interface to read sensitive browser data covertly. As such, it is essential for SOC analysts to swiftly assess the context of these alerts to determine if they indicate genuine threats or benign activities.
  ### Investigation Steps
  - Review recent process creation logs to identify instances of `sqlite.exe` or `sqlite3.exe` being executed, specifically filtering by the image paths noted in the detection rule.
  - Analyze the command-line parameters associated with these processes to confirm if they include references to `cookies.sqlite` or `places.sqlite`, which could indicate attempts to access sensitive information.
  - Utilize EDR tools to examine the behavior of the processes in question, looking for any unusual parent-child relationships or other indicators of malicious activity.
  - Check relevant threat intelligence sources for known associations between the detected activity and malicious actors or families, looking for any established patterns of exploitation in the wild.
