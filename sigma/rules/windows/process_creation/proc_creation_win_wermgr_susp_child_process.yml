title: Suspicious Child Process Of Wermgr.EXE
id: 396f6630-f3ac-44e3-bfc8-1b161bc00c4e
related:
- id: 5394fcc7-aeb2-43b5-9a09-cac9fc5edcd5
  type: similar
status: experimental
description: Detects suspicious Windows Error Reporting manager (wermgr.exe) child
  process
references:
- https://www.trendmicro.com/en_us/research/22/j/black-basta-infiltrates-networks-via-qakbot-brute-ratel-and-coba.html
- https://www.echotrail.io/insights/search/wermgr.exe
- https://github.com/binderlabs/DirCreate2System
author: Florian Roth (Nextron Systems)
date: 2022-10-14
modified: 2024-08-29
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1055
- attack.t1036
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\wermgr.exe'
    Image|endswith:
    - '\cmd.exe'
    - '\cscript.exe'
    - '\ipconfig.exe'
    - '\mshta.exe'
    - '\net.exe'
    - '\net1.exe'
    - '\netstat.exe'
    - '\nslookup.exe'
    - '\powershell_ise.exe'
    - '\powershell.exe'
    - '\pwsh.exe'
    - '\regsvr32.exe'
    - '\rundll32.exe'
    - '\systeminfo.exe'
    - '\whoami.exe'
    - '\wscript.exe'
  filter_main_rundll32:
    Image|endswith: '\rundll32.exe'
    CommandLine|contains|all:
    - 'C:\Windows\system32\WerConCpl.dll'
    - 'LaunchErcApp '
    CommandLine|contains:
    - '-queuereporting'
    - '-responsepester'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule titled "Suspicious Child Process Of Wermgr.EXE" is designed to detect potentially malicious activity where the Windows Error Reporting manager (wermgr.exe) spawns child processes that can be indicative of exploitation or lateral movement within a network. This rule specifically checks for parent-child process relationships where wermgr.exe generates commands that could deploy scripts or invoke system utilities such as `cmd.exe`, `powershell.exe`, `rundll32.exe`, and others. These commands and processes can be misused to evade detection, escalate privileges, or execute unwanted scripts. The rule leverages Windows process creation logs to identify these relationships and command-line parameters used in the execution of suspicious child processes. This detection aligns with the MITRE ATT&CK techniques T1055 (Process Injection) and T1036 (Masquerading).
  ### Investigation Steps
  - **Review Process Trees:** Examine the process execution hierarchy in your EDR tool to identify the context of `wermgr.exe` and its child processes. Ensure you look for unusual relationships or unexpected command executions.
  - **Analyze Command-Line Parameters:** Inspect the command-line arguments associated with the detected child processes for indicators of compromise. Look for suspicious flags or parameters indicative of malicious actions (e.g., `-queuereporting`, `-responsepester`).
  - **Correlate with Other Logs:** Compare findings with Windows Security and Application event logs to detect any preceding or follow-up events that could provide a broader context of the potential incident.
  - **Investigate Network Connections:** Check for related network connections using NDR tools to ascertain whether the detected processes are communicating with known malicious servers or engaging in suspicious data transfers.
  ### Prioritization
  This alert is considered high severity due to the potential implications of privilege escalation and evasive tactics employed by adversaries. The execution of child processes from wermgr.exe, especially with suspicious parameters, can indicate an immediate risk requiring urgent investigation.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where wermgr.exe is not used or is not active in the environment, potentially overlooking other forms of process spawning that could indicate compromise. Additionally, if an attacker employs a less common or modified method to leverage wermgr.exe, this detection might fail. Assumptions include that wermgr.exe is being used as an initial launching point for malicious behavior; thus, any variations in process naming or method could lead to missed detection. Analysts should be aware of legitimate uses of wermgr.exe in their environment as these may generate false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
