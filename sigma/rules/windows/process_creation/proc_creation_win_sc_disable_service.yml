title: Service StartupType Change Via Sc.EXE
id: 85c312b7-f44d-4a51-a024-d671c40b49fc
status: test
description: Detect the use of "sc.exe" to change the startup type of a service to
  "disabled" or "demand"
references:
- https://www.virustotal.com/gui/file/38283b775552da8981452941ea74191aa0d203edd3f61fb2dee7b0aea3514955
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-08-01
modified: 2023-03-04
tags:
- attack.execution
- attack.defense-evasion
- attack.t1562.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\sc.exe'
  - OriginalFileName: 'sc.exe'
  selection_cli:
    CommandLine|contains|all:
    - ' config '
    - 'start'
    CommandLine|contains:
    - 'disabled'
    - 'demand'
  condition: all of selection_*
falsepositives:
- False positives may occur with troubleshooting scripts
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "Service StartupType Change Via Sc.EXE" is designed to detect the execution of the `sc.exe` (Service Control) command-line tool when used to alter the startup type of a Windows service. This particular rule focuses on scenarios where the startup type is changed to either "disabled" or "demand," potentially indicating malicious intentions to prevent essential services from running or to obscure activity on the target system. The detection operates by monitoring process creation logs and command-line parametersâ€”specifically looking for processes where the image name corresponds to `sc.exe` and where the command-line includes certain keywords, such as `config`, `start`, `disabled`, or `demand`. This detection aligns with the MITRE ATT&CK tactics of **Execution** and **Defense Evasion**, specifically technique **T1562.001**, which relates to "Disable or Modify System Security Software."
  ### Investigation Steps
  - **Validate the Command Execution:** Review the command history in EDR to confirm if `sc.exe` was executed with parameters related to service configuration changes, specifically identifying the service(s) affected.
  - **Check Service Status:** Use Windows Management Instrumentation (WMI) or PowerShell to list the current status of the service(s) that were modified to determine if their state aligns with the changes reported by the detection rule.
  - **Review Logs for Patterns:** Examine Windows Event Logs for any unusual patterns or repeated attempts to modify services that coincide with the flagged execution of `sc.exe`, looking for anomalies in user activity or timing.
  - **Correlate with Network Activities:** Investigate recent network connection logs for any outbound connections tied to the time of the detected `sc.exe` execution to identify potential C2 communications or data exfiltration.
  ### Prioritization
  The severity level of this alert is considered medium due to the potential implications of service disruption and modification by unauthorized users, which could lead to larger compromise scenarios.
  ### Blind Spots and Assumptions
  This rule may not fire if legitimate administrative activities or troubleshooting scripts use `sc.exe` extensively for service management within a trusted context. Additionally, if the command is executed in a non-standard manner (e.g., through a remote management tool), the detection may also be bypassed. Analysts should consider that the environment's configuration, including the legitimate use of services and service modifications, can generate false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
