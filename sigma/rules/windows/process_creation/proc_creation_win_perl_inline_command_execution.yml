title: Perl Inline Command Execution
id: f426547a-e0f7-441a-b63e-854ac5bdf54d
status: test
description: Detects execution of perl using the "-e"/"-E" flags. This is could be
  used as a way to launch a reverse shell or execute live perl code.
references:
- https://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet
- https://www.revshells.com/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-01-02
tags:
- attack.execution
- attack.t1059
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\perl.exe'
  - OriginalFileName: 'perl.exe'       # Also covers perlX.XX.exe
  selection_cli:
    CommandLine|contains: ' -e'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The "Perl Inline Command Execution" detection rule focuses on identifying potentially malicious use of Perl by monitoring the execution of the Perl interpreter with specific command-line flags: `-e` or `-E`. These flags allow users to execute Perl code directly from the command line, which can be exploited by attackers to run arbitrary instructions or establish reverse shells, thereby compromising system security. This detection employs process creation logs to look for the execution of `perl.exe` (or its variations), while specifically analyzing the command-line parameters used during that process creation.
  The rule aligns with the MITRE ATT&CK framework under the tactic of execution (`T1059`), which encompasses various methods adversaries use to execute code on victim systems. By monitoring executions of Perl with suspicious command-line arguments, security teams can detect and respond to potential threats in a timely manner.
  ### Investigation Steps
  - **Check Process Details:** Review the EDR logs for the process creation events related to `perl.exe`, including timestamps, parent processes, and user accounts involved to ascertain context and legitimacy.
  - **Analyze Command-Line Arguments:** Scrutinize the command-line parameters passed to the `perl.exe` process. If `-e` or `-E` flags are found, assess the code or commands being executed for potential indicators of malicious intent.
  - **Correlate with Network Activity:** Investigate any network connections made by the same user or host around the time of the alert. Look for unusual outbound connections that may indicate data exfiltration or reverse shell creation.
  - **Review for Previous Alerts:** Check the SIEM for any previous alerts or suspicious activities involving the same system or user. A pattern may that indicates persistent malicious activity could warrant a deeper investigation.
  ### Prioritization
  This alert is prioritized as medium severity due to the implications of arbitrary code execution through Perl, which could lead to system compromise, data exfiltration, or lateral movement within the network.
  ### Blind spots and Assumptions
  This rule may not trigger if Perl is executed without the specified command-line flags, or if execution occurs in a non-standard environment not capturing process creation logs. Additionally, legitimate use of Perl for administrative tasks may result in false positives if not contextualized correctly. Adversaries may also employ obfuscation tactics or utilize different scripts/languages to avoid detection, which could bypass this alert.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
