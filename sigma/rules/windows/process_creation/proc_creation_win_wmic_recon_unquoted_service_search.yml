title: Potential Unquoted Service Path Reconnaissance Via Wmic.EXE
id: 68bcd73b-37ef-49cb-95fc-edc809730be6
related:
- id: 09658312-bc27-4a3b-91c5-e49ab9046d1b     # PowerShell Variant
  type: similar
- id: 76f55eaa-d27f-4213-9d45-7b0e4b60bbae
  type: similar
status: test
description: Detects known WMI recon method to look for unquoted service paths using
  wmic. Often used by pentester and attacker enumeration scripts
references:
- https://github.com/nccgroup/redsnarf/blob/35949b30106ae543dc6f2bc3f1be10c6d9a8d40e/redsnarf.py
- https://github.com/S3cur3Th1sSh1t/Creds/blob/eac23d67f7f90c7fc8e3130587d86158c22aa398/PowershellScripts/jaws-enum.ps1
- https://www.absolomb.com/2018-01-26-Windows-Privilege-Escalation-Guide/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-06-20
modified: 2023-09-11
tags:
- attack.execution
- attack.t1047
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - OriginalFileName: 'wmic.exe'
  - Image|endswith: '\WMIC.exe'
  selection_cli:
    CommandLine|contains|all:
    - ' service get '
    - 'name,displayname,pathname,startmode'
  condition: all of selection*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule detects reconnaissance activities that target unquoted service paths on Windows systems using the `wmic.exe` (Windows Management Instrumentation Command-line). The rule focuses on the command-line execution of `wmic.exe` where it is used to query services, particularly looking for service paths that are not quoted. Unquoted service paths can expose vulnerabilities that attackers and penetration testers exploit to escalate privileges or execute arbitrary code. The relevant technical data sources involved in this rule come from process creation logs, specifically monitoring the invocation of `wmic.exe` along with the command-line arguments passed to it. This detection ties in with the MITRE ATT&CK framework under the tactic of Execution and the technique T1047 â€“ Windows Management Instrumentation.
  ### Investigation Steps
  - **Check Process Creation Logs:** Utilize EDR tools to review the execution logs for `wmic.exe` during the time frame of the alert to ascertain the initiating user and any suspicious command-line arguments used.
  - **Analyze Command-Line Parameters:** Validate the command-line inputs to confirm they contain `service get` with the parameters 'name, displayname, pathname, startmode,' focusing on correlating them with known safe usages versus potential reconnaissance.
  - **Inspect Service Configuration:** Access Windows service configuration through `services.msc` or PowerShell commands to identify any unquoted paths in the service settings that could be exploited by attackers.
  - **Review User Activity Logs:** Check user activity and history logs against other telemetry sources (such as VPN or Proxy logs) for unusual access patterns or elevated privileges that may indicate malicious intent.
  ### Prioritization
  This alert is classified as medium severity due to the potentially sensitive nature of service paths being enumerated by unauthorized individuals or automated scripts, which could indicate advanced reconnaissance activities leading towards privilege escalation.
  ### Blind Spots and Assumptions
  This rule may not fire if `wmic.exe` usage is legitimate and conforms to expected operational behavior in the environment. Additionally, it assumes that logging is appropriately configured to capture all relevant process creations and command-line details. Adversaries may evade detection by using additional obfuscation techniques or by invoking similar commands through alternative tools, rendering this specific detection less effective.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
