title: PowerShell Web Download
id: 6e897651-f157-4d8f-aaeb-df8151488385
status: test
description: Detects suspicious ways to download files or content using PowerShell
references:
- https://github.com/VirtualAlllocEx/Payload-Download-Cradles/blob/88e8eca34464a547c90d9140d70e9866dcbc6a12/Download-Cradles.cmd
author: Florian Roth (Nextron Systems)
date: 2022-03-24
modified: 2023-01-05
tags:
- attack.command-and-control
- attack.execution
- attack.t1059.001
- attack.t1105
logsource:
  product: windows
  category: process_creation
detection:
  selection:
    CommandLine|contains:
    - '.DownloadString('
    - '.DownloadFile('
    - 'Invoke-WebRequest '
    - 'iwr '
  condition: selection
falsepositives:
- Scripts or tools that download files
level: medium
notes: |
  ### Technical Context
  The "PowerShell Web Download" detection rule focuses on identifying potentially malicious downloads initiated via PowerShell, a common attack vector used by threat actors to retrieve payloads or exfiltrate data. This rule specifically monitors for PowerShell command-line executions that utilize methods for downloading content, such as `.DownloadString`, `.DownloadFile`, and `Invoke-WebRequest`, as well as the shorthand `iwr`. By analyzing process creation logs from Windows systems, this rule helps identify unusual patterns indicative of unauthorized file downloads, which may suggest an attempt to execute code from an external source. This detection aligns with MITRE ATT&CK tactics under the `Command and Control` (T1071) and `Execution` (T1059.001) techniques, highlighting its relevance in the threat landscape.
  ### Investigation Steps
  - **Check Process Details:** Review the alert details in the EDR to examine the associated process creation event, including the command-line arguments and parent process information to ascertain the origin of the download.
  - **Correlate with Network Activity:** Utilize the Network Detection and Response (NDR) tool to investigate any outbound network connections for unusual or unauthorized destinations correlating with the time of the PowerShell execution.
  - **Review Windows Event Logs:** Access relevant Windows Security logs to check for account activity and privilege elevation that coincides with the suspicious PowerShell execution, which can signal compromised accounts or abnormal behavior.
  - **Analyze Proxy Logs:** Inspect proxy logs to capture details on website requests and downloads initiated during the PowerShell command execution, linking any malicious URLs or domains to the alert.
  ### Prioritization
  This alert is categorized with a medium severity level due to the potential threat posed by unsanctioned PowerShell executions that involve file downloads, which may indicate preliminary stages of an attack, such as malware deployment or data exfiltration.
  ### Blind Spots and Assumptions
  This rule may not fire if an attacker obfuscates PowerShell commands or utilizes alternative methods for file retrieval that do not involve the specified command strings. Additionally, false positives can arise from legitimate scripts or automation tasks that perform file downloads for valid administrative purposes. It is essential for detection engineers to consider variations in command-line syntax or the use of inline obscured commands that could evade detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
