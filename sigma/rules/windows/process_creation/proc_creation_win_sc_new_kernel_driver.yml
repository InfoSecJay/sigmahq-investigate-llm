title: New Kernel Driver Via SC.EXE
id: 431a1fdb-4799-4f3b-91c3-a683b003fc49
status: test
description: Detects creation of a new service (kernel driver) with the type "kernel"
references:
- https://www.aon.com/cyber-solutions/aon_cyber_labs/yours-truly-signed-av-driver-weaponizing-an-antivirus-driver/
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-14
modified: 2022-08-08
tags:
- attack.persistence
- attack.privilege-escalation
- attack.t1543.003
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\sc.exe'
    CommandLine|contains:
    - 'create'
    - 'config'
    CommandLine|contains|all:
    - 'binPath'
    - 'type'
    - 'kernel'
  condition: selection
falsepositives:
- Rare legitimate installation of kernel drivers via sc.exe
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect the creation of a new kernel driver service using the Service Control Manager (SC.EXE). The rule focuses on identifying instances where the `sc.exe` executable is invoked with command line parameters indicative of creating a service that has a type of "kernel". Specifically, it looks for command lines that include "create", "config", "binPath", and "type" with "kernel" as its value. The data sources leveraged in this rule include the Windows process creation logs, which capture the execution of processes and the parameters with which they were invoked. The identified behavior is linked to MITRE ATT&CK tactics, particularly persistence (T1543.003) and privilege escalation, as attackers often use kernel drivers to maintain persistence on a compromised system or to escalate privileges.
  ### Investigation Steps
  - **Check Process Activity:** Use EDR tools to examine the process tree of `sc.exe` to identify its parent process and any suspicious child processes created around the same time.
  - **Review Service Configuration:** Investigate the relevant service configuration using the Windows Services management console or PowerShell commands like `Get-Service` to confirm if the created service is legitimate and necessary.
  - **Analyze Event Logs:** Review the Windows Security and System event logs to find related events such as security logs for service creation and system logs that capture other pertinent system changes.
  - **Inspect BinPath Values:** Validate the `binPath` of the new service to ensure that it points to a legitimate executable and not to uncommon paths that could indicate a security threat.
  ### Prioritization
  The alert is assigned a medium severity level due to the potential for an attacker to gain elevated privileges and establish persistence through the installation of a kernel driver. While not all instances of this behavior indicate malicious activity, it warrants further investigation to rule out compromise.
  ### Blind Spots and Assumptions
  This rule may not fire in scenarios where attackers use alternative methods to install kernel drivers or when legitimate kernel driver installations occur without the exact command-line patterns specified. Additionally, it may also miss situations where the service creation is conducted via other means, such as scripting or direct API calls not captured by `sc.exe`. Analysts should be aware that well-crafted attacks may leverage legitimate administrative access to bypass detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
