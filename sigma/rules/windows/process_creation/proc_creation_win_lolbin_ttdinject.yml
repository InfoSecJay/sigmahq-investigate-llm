title: Use of TTDInject.exe
id: b27077d6-23e6-45d2-81a0-e2b356eea5fd
status: test
description: Detects the executiob of TTDInject.exe, which is used by Windows 10 v1809
  and newer to debug time travel (underlying call of tttracer.exe)
references:
- https://lolbas-project.github.io/lolbas/Binaries/Ttdinject/
author: frack113
date: 2022-05-16
tags:
- attack.defense-evasion
- attack.t1127
logsource:
  product: windows
  category: process_creation
detection:
  selection:
  - Image|endswith: 'ttdinject.exe'
  - OriginalFileName: 'TTDInject.EXE'
  condition: selection
falsepositives:
- Legitimate use
level: medium
notes: |
  n
  ### Technical Context
  This Sigma rule is designed to detect the execution of `TTDInject.exe`, a tool integrated into Windows 10 version 1809 and later that aids in debugging time travel. By capturing process creation events, the rule focuses on identifying instances where `TTDInject.exe` is invoked, specifically checking for the file name to ensure it ends with 'ttdinject.exe' and verifying the original file name as 'TTDInject.EXE'. This process is critical to understanding potential attempts at defense evasion, categorized under the MITRE ATT&CK technique T1127. The primary data source leveraged for this detection is the Windows Sysmon logs, which provides a detailed view of process creation activities on the system.
  ### Investigation Steps
  - **Review EDR Alerts:** Check your endpoint detection and response (EDR) tool for any alerts related to the execution of `TTDInject.exe`. Analyze the context of the alert to determine if it corresponds to legitimate usage or potential malicious activity.
    
  - **Check Process Tree:** Utilize the EDR or Sysmon tool to investigate the process tree associated with `TTDInject.exe`. Reviewing its parent processes can help understand how it was initiated and if it appears suspicious.
    
  - **Analyze Command-Line Arguments:** Inspect the command-line parameters used when `TTDInject.exe` was executed. Unusual or unexpected arguments may indicate abnormal behavior or an adversary's attempt to evade detection.
    
  - **Cross-reference with Threat Intelligence:** Use threat intelligence feeds to determine if the usage of `TTDInject.exe` has been linked to known malicious activities or actors. This can provide further context for assessing the severity of the alert.
  ### Prioritization
  The alert is categorized as medium severity due to the potential for `TTDInject.exe` to be used as a legitimate debugging tool, but it also presents an opportunity for adversaries to evade detection or manipulate system behavior. Investigations are warranted to confirm the context of its usage and assess any potential risks.
  ### Blind Spots and Assumptions
  This rule may not fire if `TTDInject.exe` is executed in ways that do not create process creation events captured by Sysmon, such as through certain scripting or automated processes. Additionally, legitimate debugging sessions by trusted application developers might produce false positives. It is also assumed that the environment is configured to log and monitor process creation adequately; if not, this detection may miss critical events on those systems. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
