title: File Download Using ProtocolHandler.exe
id: 104cdb48-a7a8-4ca7-a453-32942c6e5dcb
status: test
description: |
  Detects usage of "ProtocolHandler" to download files. Downloaded files will be located in the cache folder (for example - %LOCALAPPDATA%\Microsoft\Windows\INetCache\IE)
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218/T1218.md
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/ProtocolHandler/
author: frack113
date: 2021-07-13
modified: 2023-11-09
tags:
- attack.defense-evasion
- attack.t1218
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\protocolhandler.exe'
  - OriginalFileName: 'ProtocolHandler.exe'
  selection_cli:
    CommandLine|contains:
    - 'ftp://'
    - 'http://'
    - 'https://'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  The Sigma rule titled "File Download Using ProtocolHandler.exe" is designed to detect the use of `ProtocolHandler.exe` for file downloads over common protocols such as FTP, HTTP, and HTTPS. This executable is a component of Windows that is primarily used to handle specific protocol requests but can be abused by malicious actors to download files without proper user interaction or awareness. The rule inspects process creation events, particularly looking at the file paths and command line arguments associated with `ProtocolHandler.exe`. By focusing on the command line parameters that include URL schemes (like `http://`, `https://`, and `ftp://`), the rule identifies potential unauthorized file downloads, especially those that could lead to data exfiltration or malware delivery.
  This rule is related to the MITRE ATT&CK technique T1218, which highlights the utilization of native applications for defense evasion. By leveraging built-in tools like `ProtocolHandler.exe`, attackers can potentially evade traditional security measures while executing nefarious activities within an enterprise environment.
  ### Investigation Steps
  - **Check Process Creation Logs**: Use your EDR solution to review process creation logs for any instances of `ProtocolHandler.exe` in conjunction with suspicious URL patterns in the command line.
  - **Examine Cached Files**: Access the `%LOCALAPPDATA%\Microsoft\Windows\INetCache\IE` directory to investigate any files downloaded by `ProtocolHandler.exe`, determining their nature and whether they are legitimate.
  - **Analyze Network Traffic**: Utilize NDR tools to inspect network traffic related to the time of the alert, focusing on connections to external domains initiated by `ProtocolHandler.exe`.
  - **Review Proxy Logs**: Check proxy logs for any outbound requests that may correlate with the alert and verify whether the URLs accessed are associated with known malicious domains.
  ### Prioritization
  Given that `ProtocolHandler.exe` can be used for file downloads that may introduce vulnerability or exfiltrate sensitive data, alerts fired by this detection rule are considered medium severity. It requires prompt investigation to mitigate potential threats before they can escalate.
  ### Blind Spots and Assumptions
  There are several factors that may lead to this rule not firing or providing false assurances. Firstly, if the `ProtocolHandler.exe` is not executed in a way that includes the specified protocols in its command line, the detection will fail. Additionally, legitimate applications that also utilize `ProtocolHandler.exe` without harmful intent may generate false positives, though these should be minimal due to the specificity of the rule. Lastly, an adversary could potentially manipulate command line arguments, obfuscate their activities, or use alternate methods to download files that do not invoke this executable, thus bypassing detection.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
