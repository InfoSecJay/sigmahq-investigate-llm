title: Share And Session Enumeration Using Net.EXE
id: 62510e69-616b-4078-b371-847da438cc03
status: stable
description: Detects attempts to enumerate file shares, printer shares and sessions
  using "net.exe" with the "view" flag.
references:
- https://eqllib.readthedocs.io/en/latest/analytics/b8a94d2f-dc75-4630-9d73-1edc6bd26fff.html
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1018/T1018.md
author: Endgame, JHasenbusch (ported for oscd.community)
date: 2018-10-30
modified: 2023-02-21
tags:
- attack.discovery
- attack.t1018
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith:
    - '\net.exe'
    - '\net1.exe'
  - OriginalFileName:
    - 'net.exe'
    - 'net1.exe'
  selection_cli:
    CommandLine|contains: 'view'
  filter:
    CommandLine|contains: '\\\\'
  condition: all of selection_* and not filter
fields:
- ComputerName
- User
- CommandLine
falsepositives:
- Legitimate use of net.exe utility by legitimate user
level: low
notes: |
  ### Technical Context
  This Sigma rule is designed to detect activities involving the enumeration of file shares, printer shares, and user sessions on Windows systems using the `net.exe` command-line utility. It specifically looks for instances where the utility is invoked with the `view` parameter in the command line, indicating an intent to retrieve a list of network shares or sessions. The detection is based on process creation logs that monitor when `net.exe` or `net1.exe` runs, examining both the image file's name and its command line arguments to identify potentially malicious behavior. If the command line contains `view` and is using a double backslash (indicative of a network path) but does not match the filter condition, it triggers an alert. This detection falls under the MITRE ATT&CK framework's tactic of discovery (Tactic: Discovery; Technique: T1018), which focuses on how adversaries gather information about systems to aid in later attacks.
  ### Investigation Steps
  - **Verify Alert Source**: Check the EDR solution for the process creation logs associated with the alert, confirming the details of the `net.exe` execution and which user executed the command.
  - **Analyze User Context**: Assess the account's permissions and recent activity in the Windows Security logs to determine if the user typically performs this action or if it deviates from their standard behavior.
  - **Check Network Activity**: Use network monitoring tools to review any connections made during the time of the alert to identify potential targets of the share enumeration process.
  - **Review for Legitimate Use**: Investigate the context and purpose of the `net.exe` command by cross-referencing additional logs, such as PowerShell command logs or application logs, to validate whether the execution was legitimate.
  ### Prioritization
  The severity level of this alert is considered low; while it indicates potential enumeration of resources that could precede a larger attack, it may frequently occur in legitimate administrative routines.
  ### Blind Spots and Assumptions
  This rule may not fire in situations where `net.exe` is executed without the specified parameters, or if the malicious actor employs obfuscation techniques to disguise their command. It also assumes that all relevant data sources are adequately monitored; if logs from the process creation source are not retained or accessible, the detection could be missed. Moreover, legitimate administrative activities by users who routinely manage shares may generate noise, leading to potential false positives.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
