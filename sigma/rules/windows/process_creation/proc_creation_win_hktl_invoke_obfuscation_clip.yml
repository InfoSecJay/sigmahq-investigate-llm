title: Invoke-Obfuscation CLIP+ Launcher
id: b222df08-0e07-11eb-adc1-0242ac120002
status: test
description: Detects Obfuscated use of Clip.exe to execute PowerShell
references:
- https://github.com/SigmaHQ/sigma/issues/1009      # (Task 26)
author: Jonathan Cheong, oscd.community
date: 2020-10-13
modified: 2022-11-17
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # CommandLine|re: 'cmd.{0,5}(?:\/c|\/r).+clip(?:\.exe)?.{0,4}&&.+clipboard]::\(\s\\\"\{\d\}.+\-f.+\"'
        # Example 1: Cmd /c" echo/Invoke-Expression (New-Object Net.WebClient).DownloadString |cLiP&& POWerSheLl -Nolog -sT . (\"{1}{2}{0}\"-f'pe','Ad',(\"{1}{0}\" -f'Ty','d-' ) ) -Assemb ( \"{5}{1}{3}{0}{2}{4}\" -f'ows','y','.F',(\"{0}{1}{2}\" -f'stem.W','i','nd'),( \"{0}{1}\"-f 'o','rms' ),'S' ) ; ([SySTEM.wiNDows.FoRmS.CLiPbOArd]::( \"{1}{0}\" -f (\"{1}{0}\" -f'T','TTeX' ),'gE' ).\"invO`Ke\"( ) ) ^| ^&( \"{5}{1}{2}{4}{3}{0}\" -f 'n',( \"{1}{0}\"-f'KE-','o' ),(\"{2}{1}{0}\"-f 'pRESS','x','e' ),'o','i','iNV') ; [System.Windows.Forms.Clipboard]::(\"{0}{1}\" -f( \"{1}{0}\"-f'e','SetT' ),'xt').\"InV`oKe\"( ' ')"
        # Example 2: CMD/c " ECho Invoke-Expression (New-Object Net.WebClient).DownloadString|c:\WiNDowS\SySteM32\cLip && powershElL -noPRO -sTa ^& (\"{2}{0}{1}\" -f 'dd',(\"{1}{0}\"-f 'ype','-T' ),'A' ) -AssemblyN (\"{0}{3}{2}{1}{4}\"-f'Pr','nCo',(\"{0}{1}\"-f'e','ntatio'),'es','re' ) ; ^& ( ( [StRinG]${ve`RB`OSE`pr`e`FeReNCE} )[1,3] + 'x'-JoiN'') ( ( [sySTem.WInDOWs.ClipbOaRD]::( \"{1}{0}\" -f(\"{0}{1}\" -f'tTe','xt' ),'ge' ).\"IN`Vo`Ke\"( ) ) ) ; [System.Windows.Clipboard]::( \"{2}{1}{0}\" -f't',( \"{0}{1}\" -f 'tT','ex' ),'Se' ).\"In`V`oKe\"( ' ' )"
    CommandLine|contains|all:
    - 'cmd'
    - '&&'
    - 'clipboard]::'
    - '-f'
    CommandLine|contains:
    - '/c'
    - '/r'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The "Invoke-Obfuscation CLIP+ Launcher" Sigma rule detects attempts to execute obfuscated PowerShell commands via the Clip.exe utility on Windows systems. This technique, often associated with evasion tactics, utilizes the clipboard functionality to execute potentially malicious scripts. The rule scans for specific patterns in command-line execution, particularly those that involve invoking PowerShell commands using the clipboard interface. The telemetry sources monitored include process creation logs to capture command-line parameters and related execution artifacts. This rule is aligned with the MITRE ATT&CK framework under the tactics of **Defense Evasion** (Tactic ID: TA0040) and specific techniques such as **Obfuscated Files or Information** (T1027) and **Command and Scripting Interpreter** (T1059.001).
  ### Investigation Steps
  - **Verify Process Creation Events:** Check the process creation logs using Sysmon or Windows Event Logs to identify instances of Clip.exe and the associated command-line arguments. Look for patterns consistent with obfuscation.
  - **Analyze PowerShell Execution:** Use EDR tools to review PowerShell execution logs, focusing on any scripts that were invoked from the clipboard commands. Investigate further if unexpected behaviors or anomalies are detected.
  - **Cross-reference Network Activity:** Inspect network logs (from EDR or NDR) for any outbound connections established immediately following the Clip.exe execution, which may indicate data exfiltration or command-and-control communications.
  - **Review User Behavior:** Utilize logs from security systems (e.g., VPN, AV, proxy logs) to examine user actions leading up to the alert. Determine if legitimate users performed the actions or if they were part of an attack.
  ### Prioritization
  This alert is assigned a high severity level due to the potential for significant impact on the enterprise environment if malicious scripts are executed undetected. User execution of obfuscated commands often indicates advanced persistent threats or targeted attacks, necessitating immediate investigation.
  ### Blind Spots and Assumptions
  The rule may not fire if the attacker avoids using recognized process names or if command obfuscation techniques vary significantly from the defined patterns. Additionally, if the environment does not use Sysmon for extensive logging, important indicators may be missed. The reliance on command-line parameters assumes that adversaries will not substantially alter their strategies or utilize alternative execution methods that bypass traditional logging. 
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
