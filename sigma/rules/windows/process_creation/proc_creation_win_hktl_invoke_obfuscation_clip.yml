title: Invoke-Obfuscation CLIP+ Launcher
id: b222df08-0e07-11eb-adc1-0242ac120002
status: test
description: Detects Obfuscated use of Clip.exe to execute PowerShell
references:
- https://github.com/SigmaHQ/sigma/issues/1009      # (Task 26)
author: Jonathan Cheong, oscd.community
date: 2020-10-13
modified: 2022-11-17
tags:
- attack.defense-evasion
- attack.t1027
- attack.execution
- attack.t1059.001
logsource:
  category: process_creation
  product: windows
detection:
  selection:
        # CommandLine|re: 'cmd.{0,5}(?:\/c|\/r).+clip(?:\.exe)?.{0,4}&&.+clipboard]::\(\s\\\"\{\d\}.+\-f.+\"'
        # Example 1: Cmd /c" echo/Invoke-Expression (New-Object Net.WebClient).DownloadString |cLiP&& POWerSheLl -Nolog -sT . (\"{1}{2}{0}\"-f'pe','Ad',(\"{1}{0}\" -f'Ty','d-' ) ) -Assemb ( \"{5}{1}{3}{0}{2}{4}\" -f'ows','y','.F',(\"{0}{1}{2}\" -f'stem.W','i','nd'),( \"{0}{1}\"-f 'o','rms' ),'S' ) ; ([SySTEM.wiNDows.FoRmS.CLiPbOArd]::( \"{1}{0}\" -f (\"{1}{0}\" -f'T','TTeX' ),'gE' ).\"invO`Ke\"( ) ) ^| ^&( \"{5}{1}{2}{4}{3}{0}\" -f 'n',( \"{1}{0}\"-f'KE-','o' ),(\"{2}{1}{0}\"-f 'pRESS','x','e' ),'o','i','iNV') ; [System.Windows.Forms.Clipboard]::(\"{0}{1}\" -f( \"{1}{0}\"-f'e','SetT' ),'xt').\"InV`oKe\"( ' ')"
        # Example 2: CMD/c " ECho Invoke-Expression (New-Object Net.WebClient).DownloadString|c:\WiNDowS\SySteM32\cLip && powershElL -noPRO -sTa ^& (\"{2}{0}{1}\" -f 'dd',(\"{1}{0}\"-f 'ype','-T' ),'A' ) -AssemblyN (\"{0}{3}{2}{1}{4}\"-f'Pr','nCo',(\"{0}{1}\"-f'e','ntatio'),'es','re' ) ; ^& ( ( [StRinG]${ve`RB`OSE`pr`e`FeReNCE} )[1,3] + 'x'-JoiN'') ( ( [sySTem.WInDOWs.ClipbOaRD]::( \"{1}{0}\" -f(\"{0}{1}\" -f'tTe','xt' ),'ge' ).\"IN`Vo`Ke\"( ) ) ) ; [System.Windows.Clipboard]::( \"{2}{1}{0}\" -f't',( \"{0}{1}\" -f 'tT','ex' ),'Se' ).\"In`V`oKe\"( ' ' )"
    CommandLine|contains|all:
    - 'cmd'
    - '&&'
    - 'clipboard]::'
    - '-f'
    CommandLine|contains:
    - '/c'
    - '/r'
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  The "Invoke-Obfuscation CLIP+ Launcher" detection rule is designed to identify the obfuscated use of `clip.exe` to execute PowerShell commands through the Windows Command Prompt (`cmd`). Attackers may leverage this obfuscation technique to evade detection while executing potentially malicious PowerShell scripts that utilize the system clipboard. The rule inspects process creation logs for command-line arguments that include patterns indicative of this type of execution, such as commands invoking clipboard functions or using specific flags like `/c` or `/r`. By monitoring these indicators, the rule seeks to catch instances of command execution that are frequently employed in malicious activities, particularly in scenarios of defense evasion by exploiting common utilities already present on the host.
  ### Investigation Steps
  - Review the process creation logs in your EDR solution to identify instances where `cmd` was invoked with arguments containing `clip.exe`, paying special attention to any obfuscation patterns.
  - Check the command-line history for associated PowerShell execution commands to evaluate their legitimacy and determine if they were executed in conjunction with the detected `clip.exe` usage.
  - Investigate your organization's firewall logs to see if there were any outbound connections made by processes related to this execution, which could suggest data exfiltration attempts.
  - Assess the alert against recent user activities or scheduled tasks to ascertain whether this behavior is part of a legitimate operation or indicative of nefarious intent.
