title: Msiexec Quiet Installation
id: 79a87aa6-e4bd-42fc-a5bb-5e6fbdcd62f5
status: test
description: |
  Adversaries may abuse msiexec.exe to proxy execution of malicious payloads.
  Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi)
references:
- https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/msiexec
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1218.007/T1218.007.md
- https://twitter.com/_st0pp3r_/status/1583914244344799235
author: frack113
date: 2022-01-16
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.t1218.007
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Image|endswith: '\msiexec.exe'
  - OriginalFileName: 'msiexec.exe'
  selection_cli:
        # Note that there is no space before and after the arguments because it's possible to write a commandline as such
        # Example: msiexec -q/i [MSI Package]
    CommandLine|contains|windash:
    - '-i'
    - '-package'
    - '-a'
    - '-j'
  selection_quiet:
    CommandLine|contains|windash: '-q'
  filter_user_temp:
        # The %temp% is a very common location for installers
    ParentImage|startswith: 'C:\Users\'
    ParentImage|contains: '\AppData\Local\Temp\'
  filter_system_temp:
    ParentImage|startswith: 'C:\Windows\Temp\'
  filter_ccm:
    ParentImage: 'C:\Windows\CCM\Ccm32BitLauncher.exe'
    IntegrityLevel:
    - 'System'
    - 'S-1-16-16384'
  condition: all of selection_* and not 1 of filter_*
falsepositives:
- WindowsApps installing updates via the quiet flag
level: medium
notes: |
  ### Technical Context
  The Sigma rule "Msiexec Quiet Installation" is designed to detect malicious usage of `msiexec.exe`, the command-line utility for Windows Installer. Adversaries often exploit `msiexec.exe` to execute installation packages with stealth, particularly using the quiet installation flag (`-q`) to avoid user interaction and enable background execution of malicious payloads. The rule identifies specific command-line patterns commonly associated with such abusive executions, focusing on crucial parameters like `-i`, `-package`, and other related flags. The detection relies on process creation logs, specifically evaluating attributes such as the command line parameters utilized when invoking `msiexec.exe`, the parent image locations that indicate common temporary folder usage, and the integrity level of the process to differentiate between legitimate and potentially harmful execution contexts.
  ### Investigation Steps
  - Utilize EDR tools to review process creation logs for instances of `msiexec.exe` executed with the `-q` flag alongside other suspicious command-line parameters.
  - Examine the parent process of any detected `msiexec.exe` instances to determine if it originated from unusual locations, especially checking `C:\Users\*\AppData\Local\Temp\` and `C:\Windows\Temp\`.
  - Assess the integrity level of the execution context by checking if the process was run with System-level permissions or assemblies that are often associated with malicious intent.
  - Correlate findings with historical logs from the AV and NGFW to identify any previous alerts related to the same binaries or command-line parameters used in the detected execution.
