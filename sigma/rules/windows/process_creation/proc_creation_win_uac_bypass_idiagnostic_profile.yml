title: UAC Bypass Using IDiagnostic Profile
id: 4cbef972-f347-4170-b62a-8253f6168e6d
status: test
description: Detects the "IDiagnosticProfileUAC" UAC bypass technique
references:
- https://github.com/Wh04m1001/IDiagnosticProfileUAC
author: Nasreddine Bencherchali (Nextron Systems)
date: 2022-07-03
modified: 2024-12-01
tags:
- attack.execution
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    ParentImage|endswith: '\DllHost.exe'
    ParentCommandLine|contains: ' /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}'
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This rule aims to detect potential UAC (User Account Control) bypass attempts using the IDiagnosticProfile technique in a Windows environment. Specifically, it focuses on processes that have been initiated with the parent process `DllHost.exe`, which is typically associated with COM object execution. The rule captures events where the command line includes a specific process ID parameter indicative of potential malicious intent. Additionally, it monitors the integrity levels of the process to ensure that only those with high or system privileges are flagged, as these levels are commonly exploited in privilege escalation attempts. The technical data sources involved primarily consist of process creation logs, which detail the command-line parameters and the hierarchy of running processes.
  ### Investigation Steps
  - Review the process creation logs in the EDR solution to identify instances of `DllHost.exe` as the parent process where the command line includes ` /Processid:{12C21EA7-2EB8-4B55-9249-AC243DA8C666}`.
  - Analyze the integrity levels of the flagged processes to ensure they are classified as high or system. This will help determine if the process may have been executed with elevated privileges.
  - Utilize network traffic logs from NDR and proxy tools to check for any unusual outbound connections correlated with the detected processes.
  - Investigate the history and behavior of the identified process in the AV logs to identify any previous alerts or known malicious signatures associated with it.
