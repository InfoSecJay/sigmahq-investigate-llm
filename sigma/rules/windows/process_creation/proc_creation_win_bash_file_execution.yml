title: Indirect Command Execution From Script File Via Bash.EXE
id: 2d22a514-e024-4428-9dba-41505bd63a5b
related:
- id: 5edc2273-c26f-406c-83f3-f4d948e740dd
  type: similar
status: test
description: |
  Detects execution of Microsoft bash launcher without any flags to execute the content of a bash script directly.
  This can be used to potentially bypass defenses and execute Linux or Windows-based binaries directly via bash.
references:
- https://lolbas-project.github.io/lolbas/Binaries/Bash/
- https://linux.die.net/man/1/bash
- Internal Research
author: Nasreddine Bencherchali (Nextron Systems)
date: 2023-08-15
tags:
- attack.defense-evasion
- attack.t1202
logsource:
  category: process_creation
  product: windows
detection:
  selection:
  - Image|endswith:
    - ':\Windows\System32\bash.exe'
    - ':\Windows\SysWOW64\bash.exe'
  - OriginalFileName: 'Bash.exe'
  filter_main_cli_flag:
    CommandLine|contains:
            # Note: we're not interested in flags being passed first
    - 'bash.exe -'
    - 'bash -'
  filter_main_no_cli:
    CommandLine:
  filter_main_empty:
    CommandLine: ''
  filter_main_no_flag:
    CommandLine:
    - 'bash.exe'
    - 'bash'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the execution of the Microsoft Bash launcher, specifically when it is invoked without any command-line flags. By monitoring the `Process Creation` logs, the rule captures instances where `bash.exe` or `bash` is launched directly, which could indicate an attempt by an adversary to utilize the Bash environment within Windows to execute scripts or binaries without raising red flags. Bypassing security mechanisms in this manner can be indicative of defensive evasion tactics as specified under the MITRE ATT&CK framework, particularly the technique T1202 (Execution via Command-Line Interface).
  The rule focuses on specific attributes of the process creation event, examining the image path and the command-line parameters. It restricts matches to those situations where Bash is executed without accompanying commands, flags, or arguments. This targeted detection aids in identifying potentially malicious activity while minimizing false positives from legitimate use of the Bash shell in Windows environments.
  ### Investigation Steps
  - **Investigate Process Details:** Use your EDR tool to review the process creation logs that triggered the alert, focusing on the command-line arguments and parent process information.
  - **Check for Suspicious Activity:** Analyze surrounding events and logs for this process execution, including any file modifications or network connections, to understand the broader context of the execution.
  - **Audit User Activity:** Review the user account associated with the command execution. Check for any anomalous usage patterns or recent changes in user privileges that could indicate compromise.
  - **Correlate with Additional Tools:** Investigate proxy and VPN logs for any network activity that may have arisen as a result of the command execution, particularly connections to external command and control (C2) servers.
  ### Prioritization
  The alert is classified as medium severity due to the potential for this method of execution to be leveraged for defensive evasion, often enabling further exploitation without detection. Malicious intent is implied when Bash is executed without accompanying arguments, warranting prompt investigation.
  ### Blind Spots and Assumptions
  This rule may fail to fire in scenarios where attackers utilize obfuscation techniques, such as incorporating additional flags or parameters that were excluded from the focus. Additionally, it might not capture benign usage from authorized users, particularly those legitimately leveraging Bash for script execution in a controlled environment. Another assumption is that the system settings and permissions are intact; any deviations might allow an adversary to bypass detection mechanisms entirely.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality and relevance, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
