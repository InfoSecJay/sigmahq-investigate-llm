title: Suspicious Process Masquerading As SvcHost.EXE
id: be58d2e2-06c8-4f58-b666-b99f6dc3b6cd
related:
- id: 01d2e2a1-5f09-44f7-9fc1-24faa7479b6d
  type: similar
- id: e4a6b256-3e47-40fc-89d2-7a477edd6915
  type: similar
status: experimental
description: |
  Detects a suspicious process that is masquerading as the legitimate "svchost.exe" by naming its binary "svchost.exe" and executing from an uncommon location.
  Adversaries often disguise their malicious binaries by naming them after legitimate system processes like "svchost.exe" to evade detection.
references:
- https://tria.ge/240731-jh4crsycnb/behavioral2
- https://redcanary.com/blog/threat-detection/process-masquerading/
author: Swachchhanda Shrawan Poudel
date: 2024-08-07
tags:
- attack.defense-evasion
- attack.t1036.005
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith: '\svchost.exe'
  filter_main_img_location:
    Image:
    - 'C:\Windows\System32\svchost.exe'
    - 'C:\Windows\SysWOW64\svchost.exe'
  filter_main_ofn:
    OriginalFileName: 'svchost.exe'
  condition: selection and not 1 of filter_main_*
falsepositives:
- Unlikely
level: high
notes: |
  ### Technical Context
  The rule "Suspicious Process Masquerading As SvcHost.EXE" is designed to detect instances where a process is maliciously masquerading as the legitimate Windows system process "svchost.exe." Adversaries often employ such tactics to evade detection by using common names associated with trusted system files, thus effectively disguising their malicious activities. The detection mechanism focuses on process creation events monitored through Windows Sysmon logs, specifically looking for processes that have the image name ending in 'svchost.exe' but are running from uncommon file paths, which deviates from the expected legitimate locations (primarily C:\Windows\System32 and C:\Windows\SysWOW64). This behavior is categorized under the MITRE ATT&CK technique T1036.005, indicating a specific sub-technique of 'Masquerading,' which describes the tactic of altering an object's appearance to mislead security mechanisms.
  The detection strategy operates by matching attributes such as the image name and the original file name of the process. If a process with the designated attributes is noted but is not sourced from one of the legitimate directories, it raises a flag, triggering an alert for further investigation. This is crucial for identifying potential malware or unauthorized software that seeks to mimic system processes to gain extended privileges and compromise system integrity.
  ### Investigation Steps
  - **Review Process Details:** Check the alerting process's details in your EDR solution. Identify the full command line, parent process, and the user context under which it is running.
  - **Analyze File Path:** Use Windows Security or Sysmon logs to script for any recent changes in file paths. Investigate if the suspicious svchost.exe instance emerged from an unusual directory compared to normal operations.
  - **Correlate with Other Logs:** Cross-reference other telemetry sources like firewall or proxy logs to assess if the suspicious process has made any outbound network connections that could indicate data exfiltration or command and control (C2) communication.
  - **Examine System Integrity:** Review files and entries in the Windows Registry related to the identified process. Look for any persistence mechanisms or additional malicious artifacts that may have been installed.
  ### Prioritization
  This alert is classified as high severity due to the potential risk that processes masquerading as legitimate system files can pose. They can lead to unauthorized access, system compromise, or data breaches if not swiftly investigated and remediated.
  ### Blind Spots and Assumptions
  - **Legitimate Variants:** The rule may not fire in environments where legitimate software or services name their executables similarly to "svchost.exe," creating potential false negatives or alerts.
  - **Path Uniqueness:** The rule relies heavily on specific file paths, so if an attacker manages to place a malicious executable in a common directory, detection could fail.
  - **Evasion Techniques:** Sophisticated adversaries may use techniques, such as process hollowing or DLL side-loading, avoiding direct creation of a malicious process that would trigger this rule.
  - **Monitoring Gaps:** If your organization does not consistently monitor Sysmon logs or lacks comprehensive logging settings, the rule may not function effectively.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
