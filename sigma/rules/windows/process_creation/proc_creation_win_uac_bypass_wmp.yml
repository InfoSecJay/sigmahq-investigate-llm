title: UAC Bypass Using Windows Media Player - Process
id: 0058b9e5-bcd7-40d4-9205-95ca5a16d7b2
status: test
description: Detects the pattern of UAC Bypass using Windows Media Player osksupport.dll
  (UACMe 32)
references:
- https://github.com/hfiref0x/UACME
author: Christian Burkard (Nextron Systems)
date: 2021-08-23
modified: 2024-12-01
tags:
- attack.defense-evasion
- attack.privilege-escalation
- attack.t1548.002
logsource:
  category: process_creation
  product: windows
detection:
  selection_img_1:
    Image: 'C:\Program Files\Windows Media Player\osk.exe'
  selection_img_2:
    Image: 'C:\Windows\System32\cmd.exe'
    ParentCommandLine: '"C:\Windows\system32\mmc.exe" "C:\Windows\system32\eventvwr.msc"
      /s'
  selection_integrity:
    IntegrityLevel:
    - 'High'
    - 'System'
    - 'S-1-16-16384'         # System
    - 'S-1-16-12288'         # High
  condition: 1 of selection_img_* and selection_integrity
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This Sigma rule is designed to detect a specific method of UAC (User Account Control) bypass utilizing Windows Media Player, specifically through the `osk.exe` executable. The detection focuses on monitoring process creation events where `osk.exe` is launched with elevated permissions, typically through a command line initiated by `mmc.exe` (Microsoft Management Console) to load the Event Viewer. It looks for signs of privilege escalation by examining the integrity levels of the process and the command line parameters associated with the parent process.
  The rule triggers alerts based on two key conditions: the creation of a process for `osk.exe` and `cmd.exe`, both of which are executed with high or system integrity levels. The MITRE ATT&CK techniques relevant to this rule include T1548.002 (Bypass User Account Control) under the Defense Evasion and Privilege Escalation tactics, indicating that the detected activity may be an attempt to perform unauthorized operations with elevated privileges.
  ### Investigation Steps
  - **Review Process Creation Logs**: Check the Windows Security logs for pertinent details of `osk.exe` process creation, and any associated command lines from `mmc.exe` to identify the context of execution.
  - **Analyze EDR Alerts**: Utilize your endpoint detection and response (EDR) platform to assess any actions taken by the identified processes, focusing on subsequent behaviors that may indicate malicious activity.
  - **Cross-reference with Sysmon Data**: Investigate Sysmon logs for related network connections, image loads, or registry modifications that may provide further context on the execution flow and integrity level of the processes.
  - **Check User Privilege Context**: Validate the user accounts involved, ensuring they were legitimately authorized to execute commands with high privilege levels and are not part of any suspicious activity.
  ### Prioritization
  This alert is classified as high severity due to the inherent risk posed by potential UAC bypass techniques, which can lead to privilege escalation and allow attackers to execute malicious commands with elevated rights within the enterprise environment.
  ### Blind Spots and Assumptions
  This rule has limitations in detecting variations of UAC bypass techniques that do not utilize `osk.exe` or the specified command patterns. If an adversary employs custom methods or obfuscates their command lines, they might avoid detection. Additionally, if system policies restrict access to logging certain process creation events, key telemetry data may be lost. It is assumed that all relevant logging mechanisms are properly configured and functioning as expected.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
