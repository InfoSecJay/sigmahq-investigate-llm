title: HackTool - CrackMapExec Execution Patterns
id: 058f4380-962d-40a5-afce-50207d36d7e2
status: stable
description: Detects various execution patterns of the CrackMapExec pentesting framework
references:
- https://github.com/byt3bl33d3r/CrackMapExec
author: Thomas Patzke
date: 2020-05-22
modified: 2023-11-06
tags:
- attack.execution
- attack.t1047
- attack.t1053
- attack.t1059.003
- attack.t1059.001
- attack.s0106
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            # cme/protocols/smb/wmiexec.py (generalized execute_remote and execute_fileless)
    - 'cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1'
            # cme/protocols/smb/atexec.py:109 (fileless output via share)
    - 'cmd.exe /C * > \\\\*\\*\\* 2>&1'
            # cme/protocols/smb/atexec.py:111 (fileless output via share)
    - 'cmd.exe /C * > *\\Temp\\* 2>&1'
            # https://github.com/byt3bl33d3r/CrackMapExec/blob/d8c50c8cbaf36c29329078662473f75e440978d2/cme/helpers/powershell.py#L136 (PowerShell execution with obfuscation)
    - 'powershell.exe -exec bypass -noni -nop -w 1 -C "'
            # https://github.com/byt3bl33d3r/CrackMapExec/blob/d8c50c8cbaf36c29329078662473f75e440978d2/cme/helpers/powershell.py#L160 (PowerShell execution without obfuscation)
    - 'powershell.exe -noni -nop -w 1 -enc '
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### Technical Context
  This detection rule identifies execution patterns characteristic of the CrackMapExec (CME) framework, a popular penetration testing tool that can facilitate various attack techniques, particularly in environments using SMB (Server Message Block) and WMI (Windows Management Instrumentation). The rule monitors Windows process creation logs, specifically focusing on command-line parameters that exhibit behaviors consistent with the execution of remote commands and fileless attacks. It looks for commands that involve PowerShell and cmd.exe, especially those redirecting output to network shares or temporary directories, suggesting possible attempts at maintaining persistence or exfiltration of data. By detecting these specific patterns, incident responders can quickly identify potential misuse of the CME tool within their environments.
  ### Investigation Steps
  - Review the related process creation logs in your EDR system to find any instances of cmd.exe or powershell.exe executions matching the specified command-line patterns.
  - Investigate network traffic associated with the identified process executions to check for connections to SMB shares or unusual external destinations.
  - Cross-reference the user accounts involved in the executions against your organizationâ€™s policies and access logs to determine if they align with expected behavior.
  - Analyze logs from your Firewall and Proxy for any outbound connections that may correlate with the identified command executions, possibly indicating data exfiltration attempts.
