title: HackTool - CrackMapExec Execution Patterns
id: 058f4380-962d-40a5-afce-50207d36d7e2
status: stable
description: Detects various execution patterns of the CrackMapExec pentesting framework
references:
- https://github.com/byt3bl33d3r/CrackMapExec
author: Thomas Patzke
date: 2020-05-22
modified: 2023-11-06
tags:
- attack.execution
- attack.t1047
- attack.t1053
- attack.t1059.003
- attack.t1059.001
- attack.s0106
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    CommandLine|contains:
            # cme/protocols/smb/wmiexec.py (generalized execute_remote and execute_fileless)
    - 'cmd.exe /Q /c * 1> \\\\*\\*\\* 2>&1'
            # cme/protocols/smb/atexec.py:109 (fileless output via share)
    - 'cmd.exe /C * > \\\\*\\*\\* 2>&1'
            # cme/protocols/smb/atexec.py:111 (fileless output via share)
    - 'cmd.exe /C * > *\\Temp\\* 2>&1'
            # https://github.com/byt3bl33d3r/CrackMapExec/blob/d8c50c8cbaf36c29329078662473f75e440978d2/cme/helpers/powershell.py#L136 (PowerShell execution with obfuscation)
    - 'powershell.exe -exec bypass -noni -nop -w 1 -C "'
            # https://github.com/byt3bl33d3r/CrackMapExec/blob/d8c50c8cbaf36c29329078662473f75e440978d2/cme/helpers/powershell.py#L160 (PowerShell execution without obfuscation)
    - 'powershell.exe -noni -nop -w 1 -enc '
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  n
  ### Technical Context
  The Sigma rule "HackTool 
  - CrackMapExec Execution Patterns" is specifically designed to detect instances of the CrackMapExec (CME) pentesting framework being utilized in a Windows environment. This tool is often leveraged by adversaries for lateral movement within a network, and it employs various command-line techniques to execute payloads remotely. The rule looks for specific patterns in the command line arguments associated with process creation, such as the usage of `cmd.exe` and `powershell.exe` with flags that suggest obfuscated or indirect execution techniques. Key command patterns include outputs being redirected to network shares or temporary locations, indicative of fileless execution methods.
  The detected patterns align with several techniques within the MITRE ATT&CK framework, specifically under the tactics of Execution (TA0002) and the techniques T1047 (Windows Management Instrumentation), T1053 (Scheduled Task/Job), and T1059 (Scripting) categorized as PowerShell and Command-Line Interface. This highlights the usage of common task automation tools that can be misused by threat actors to execute commands on remote systems.
  ### Investigation Steps
  - **Check Process Creation Logs**: Query EDR for process creation logs to identify instances where `cmd.exe` or `powershell.exe` were executed with suspicious arguments that match the patterns outlined in the detection rule.
  - **Analyze Network Connections**: Utilize NDR tools to investigate any unusual external connections from hosts where CME is suspected to ensure that no unauthorized commands or data are exfiltrated.
  - **Review GPO and Scheduled Tasks**: Examine group policies and task scheduler on the affected systems for any unauthorized or suspicious entries that may correlate with the execution patterns of CrackMapExec.
  - **Inspect System and Security Events**: Search Windows Event Logs (Security, System) for user logon events and activity that could be linked to the execution of the tool, particularly focusing on anomalies that deviate from normal operational behavior.
  ### Prioritization
  This alert is classified as high severity due to the potential risk associated with the use of CrackMapExec, which can facilitate unauthorized access and lateral movement by attackers within the network, indicating a significant threat to organizational security.
  ### Blind Spots and Assumptions
  The rule may not fire in situations where the command patterns of CrackMapExec are altered to evade detection, or if attacks use encrypted channels to obfuscate their activities. Additionally, the effectiveness of the rule relies on complete and accurate logging configuration; therefore, any misconfigurations in Sysmon or process creation logging may result in false negatives. Lastly, environments that heavily utilize legitimate instances of CrackMapExec for pen testing may create false positives that require careful context-aware investigation.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
