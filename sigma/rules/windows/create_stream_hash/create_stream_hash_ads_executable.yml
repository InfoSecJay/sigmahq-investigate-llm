title: Hidden Executable In NTFS Alternate Data Stream
id: b69888d4-380c-45ce-9cf9-d9ce46e67821
status: test
description: Detects the creation of an ADS (Alternate Data Stream) that contains
  an executable by looking at a non-empty Imphash
references:
- https://twitter.com/0xrawsec/status/1002478725605273600?s=21
author: Florian Roth (Nextron Systems), @0xrawsec
date: 2018-06-03
modified: 2023-02-10
tags:
- attack.defense-evasion
- attack.s0139
- attack.t1564.004
logsource:
  product: windows
  category: create_stream_hash
  definition: 'Requirements: Sysmon or equivalent configured with Imphash logging'
detection:
  selection:
    Hash|contains: 'IMPHASH='
  filter_main_null:
    Hash|contains: 'IMPHASH=00000000000000000000000000000000'
  condition: selection and not 1 of filter_main_*
falsepositives:
- This rule isn't looking for any particular binary characteristics. As legitimate
  installers and programs were seen embedding hidden binaries in their ADS. Some false
  positives are expected from browser processes and similar.
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect the creation of Alternate Data Streams (ADS) on Windows systems that contain executable files, indicated by a non-empty Import Hash (Imphash). ADS are a feature of the NTFS file system that allow additional metadata or files to be attached to a regular file without disclosing their presence in conventional file system views. The rule triggers when the system logs events associated with the creation of an ADS that includes the string "IMPHASH=" while simultaneously filtering out events with an Imphash value of all zeros, which is often associated with benign or empty streams. The data source for this detection relies on Sysmon or an equivalent logging mechanism that captures process creation events along with their associated hashes.
  ### Investigation Steps
  - Review EDR logs to identify the process that created the alternate data stream, taking note of its parent-child relationships for potential indicators of malicious behavior.
  - Analyze the associated Imphash of the detected ADS to determine if it matches any known malicious binaries or exhibits suspicious patterns.
  - Search Proxy logs for any URLs or downloads that may correlate with the time of ADS creation, as attackers often leverage legitimate downloads to hide their payloads.
  - Check Windows Event Logs to look for concurrent security events or alerts that may provide additional context, such as unusual account activity or failed authentication attempts.
