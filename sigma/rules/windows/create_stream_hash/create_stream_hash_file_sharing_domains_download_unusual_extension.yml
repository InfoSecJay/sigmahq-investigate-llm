title: Unusual File Download From File Sharing Websites - File Stream
id: ae02ed70-11aa-4a22-b397-c0d0e8f6ea99
related:
- id: 52182dfb-afb7-41db-b4bc-5336cb29b464
  type: similar
status: experimental
description: Detects the download of suspicious file type from a well-known file and
  paste sharing domain
references:
- https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=90015
- https://www.cisa.gov/uscert/ncas/alerts/aa22-321a
- https://www.microsoft.com/en-us/security/blog/2024/01/17/new-ttps-observed-in-mint-sandstorm-campaign-targeting-high-profile-individuals-at-universities-and-research-orgs/
author: Florian Roth (Nextron Systems)
date: 2022-08-24
modified: 2024-10-21
tags:
- attack.defense-evasion
- attack.s0139
- attack.t1564.004
logsource:
  product: windows
  category: create_stream_hash
detection:
  selection_domain:
    Contents|contains:
    - '.githubusercontent.com'               # Includes both gists and github repositories / Michael Haag (idea)
    - 'anonfiles.com'
    - 'cdn.discordapp.com'
    - 'ddns.net'
    - 'dl.dropboxusercontent.com'
    - 'ghostbin.co'
    - 'glitch.me'
    - 'gofile.io'
    - 'hastebin.com'
    - 'mediafire.com'
    - 'mega.nz'
    - 'onrender.com'
    - 'pages.dev'
    - 'paste.ee'
    - 'pastebin.com'
    - 'pastebin.pl'
    - 'pastetext.net'
    - 'pixeldrain.com'
    - 'privatlab.com'
    - 'privatlab.net'
    - 'send.exploit.in'
    - 'sendspace.com'
    - 'storage.googleapis.com'
    - 'storjshare.io'
    - 'supabase.co'
    - 'temp.sh'
    - 'transfer.sh'
    - 'trycloudflare.com'
    - 'ufile.io'
    - 'w3spaces.com'
    - 'workers.dev'
  selection_extension:
    TargetFilename|contains:
    - '.bat:Zone'
    - '.cmd:Zone'
    - '.ps1:Zone'
  condition: all of selection_*
falsepositives:
- Unknown
level: medium
notes: |
  n
  ### Technical Context
  This detection rule is designed to identify suspicious file downloads originating from various file sharing and paste sharing domains. It focuses on the contents of file downloads by examining the target filename and the source domain associated with the download request. Specifically, it looks for specific extensions like `.bat`, `.cmd`, or `.ps1` that are tagged with ":Zone", indicating they may have been sandboxed or modified in a way that could represent a security risk. The rule uses the `create_stream_hash` log source, leveraging telemetry from Windows to observe downloaded content and its origins. The associated MITRE ATT&CK techniques here include defense evasion (T1564.004) and are relevant in investigations focused on the exfiltration or introduction of malicious files into a network environment.
  ### Investigation Steps
  - **Correlate Alerts with EDR:** Use your EDR tool to cross-reference the alert with other endpoint data, looking for any suspicious behavior related to the file download and its execution on the target system.
  - **Review Proxy Logs:** Retrieve proxy logs to gain insights on web traffic, specifically focusing on outbound requests to the identified file-sharing domains to confirm if the download took place.
  - **Analyze Windows Event Logs:** Examine the Windows Security logs for any related events that indicate logged user activity around the time the file download was detected, particularly focusing on the Security, System, and Application logs.
  - **Check for Active Malware:** Utilize your AV tool to scan the endpoint for any signs of malware that could have resulted from the downloaded files, prioritizing the identified extensions (.bat, .cmd, .ps1).
  ### Prioritization
  This alert is marked as medium severity due to the potential risk associated with files downloaded from potentially untrusted sources, which can lead to malware execution or other malicious activities if not contained or investigated promptly.
  ### Blind Spots and Assumptions
  This rule may not trigger if the file download does not follow the expected patterns identified in the rule, such as being obscured, renamed, or utilizing alternative channels outside the noted file-sharing domains. Additionally, if the malicious actor uses legitimate credentials to download files, or if they leverage encrypted connections, this could evade detection mechanisms. It is also assumed that the endpoint monitoring is comprehensive enough to capture the necessary telemetry; if there are gaps, such as systems not being covered by the EDR, detection efficacy may diminish.
  > **Disclaimer:** This investigation guide was created using generative AI technology and has not been reviewed for its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit specific environment and operational needs. Please communicate any changes to the detection engineering team.
