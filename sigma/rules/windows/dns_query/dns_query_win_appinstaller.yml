title: AppX Package Installation Attempts Via AppInstaller.EXE
id: 7cff77e1-9663-46a3-8260-17f2e1aa9d0a
related:
- id: 180c7c5c-d64b-4a63-86e9-68910451bc8b
  type: derived
status: test
description: |
  Detects DNS queries made by "AppInstaller.EXE". The AppInstaller is the default handler for the "ms-appinstaller" URI. It attempts to load/install a package from the referenced URL
references:
- https://twitter.com/notwhickey/status/1333900137232523264
- https://lolbas-project.github.io/lolbas/Binaries/AppInstaller/
author: frack113
date: 2021-11-24
modified: 2023-11-09
tags:
- attack.command-and-control
- attack.t1105
logsource:
  product: windows
  category: dns_query
detection:
  selection:
    Image|startswith: 'C:\Program Files\WindowsApps\Microsoft.DesktopAppInstaller_'
    Image|endswith: '\AppInstaller.exe'
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This Sigma rule is designed to detect suspicious activities involving the `AppInstaller.EXE` binary, which is utilized by Windows for installing applications via MSIX packages. The rule specifically monitors for DNS queries generated by `AppInstaller.EXE`, indicating that an installation attempt is being made from an external URI. By scrutinizing the processes that initiate these DNS queries, the detection aims to identify potentially unauthorized or malicious package installations that could lead to exploitation or compromise of the system. The primary data sources involved include DNS query logs, which capture the generated DNS requests, and process creation logs, which help to establish the context of the `AppInstaller.EXE` execution.
  ### Investigation Steps
  - Review the DNS query logs for any suspicious domain names or unusual timestamps associated with the `AppInstaller.EXE` process.
  - Utilize your EDR solution to correlate the detected process with other potentially harmful behaviors or indicators of compromise on the same endpoint.
  - Check for recent application installations or updates in the respective enterprise deployment tools to validate the legitimacy of the activity.
  - Analyze network traffic logs to identify any outgoing connections initiated by `AppInstaller.EXE` that may point to malicious repositories or unauthorized external sources.
