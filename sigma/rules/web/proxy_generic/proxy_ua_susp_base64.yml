title: Potential Base64 Encoded User-Agent
id: 894a8613-cf12-48b3-8e57-9085f54aa0c3
related:
- id: d443095b-a221-4957-a2c4-cd1756c9b747
  type: derived
status: test
description: Detects User Agent strings that end with an equal sign, which can be
  a sign of base64 encoding.
references:
- https://blogs.jpcert.or.jp/en/2022/07/yamabot.html
- https://deviceatlas.com/blog/list-of-user-agent-strings#desktop
author: Florian Roth (Nextron Systems), Brian Ingram (update)
date: 2022-07-08
modified: 2023-05-04
tags:
- attack.command-and-control
- attack.t1071.001
logsource:
  category: proxy
detection:
  selection:
    c-useragent|endswith: '='
  condition: selection
falsepositives:
- Unknown
level: medium
notes: |
  ### Technical Context
  This detection rule identifies suspicious User-Agent strings that end with an equal sign (`=`), a potential indicator of Base64 encoded content. This encoding practice is commonly seen in command-and-control (C2) communications, where attackers may obfuscate their traffic to bypass security mechanisms. The rule pulls data from proxy logs, specifically focusing on the `c-useragent` field, which contains the User-Agent strings sent by clients when making HTTP requests. By monitoring for these anomalies, the security operations team can uncover potential malicious activities such as C2 communications or data exfiltration attempts.
  ### Investigation Steps
  - Review proxy logs to identify the specific requests associated with the flagged User-Agent strings, focusing on timestamps and source IP addresses.
  - Utilize EDR tools to analyze the endpoint behavior correlated with these requests, checking for any associated processes or file modifications.
  - Validate if the external IPs contacted belong to known threats or untrusted domains by cross-referencing threat intelligence databases.
  - Investigate user activity logs to ascertain whether the detected User-Agent patterns align with legitimate user behavior or indicate potential account compromise.
