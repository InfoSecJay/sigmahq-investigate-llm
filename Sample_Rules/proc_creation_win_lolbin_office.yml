title: Suspicious File Download Using Office Application
id: 0c79148b-118e-472b-bdb7-9b57b444cc19
status: test
description: Detects the usage of one of three Microsoft office applications (Word,
  Excel, PowerPoint) to download arbitrary files
references:
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Powerpnt/
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Excel/
- https://lolbas-project.github.io/lolbas/OtherMSBinaries/Winword/
- https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191
author: Beyu Denis, oscd.community
date: 2019/10/26
modified: 2023/02/04
tags:
- attack.command_and_control
- attack.t1105
logsource:
  category: process_creation
  product: windows
detection:
  selection:
    Image|endswith:
    - \powerpnt.exe
    - \winword.exe
    - \excel.exe
    CommandLine|contains: http
  condition: selection
falsepositives:
- Unknown
level: high
notes: |
  ### LLM Investigation Guide Notice
  This guide has been generated entirely with the use of an LLM and may include incorrect information, this guide will be
  reviewed in the future for accuracy.

  ### Technical Context
  This detection rule aims to identify potentially malicious activity where Microsoft Office applications (Word, Excel,
  PowerPoint) are used to download arbitrary files from the internet. Such actions can indicate an adversary leveraging
  these trusted applications as vectors for malware delivery, often resulting in data exfiltration or system compromise.
  The use of well-known productivity software for malicious actions is a growing concern as attackers exploit trust in
  these applications, making detection essential for maintaining enterprise security.

  ### Investigation Steps
  1. **Review Process Creation Logs**: Analyze process creation logs in the EDR to identify instances of `powerpnt.exe`,
  `winword.exe`, or `excel.exe` being executed with suspicious command line arguments containing "http."
  2. **Inspect Command Line for Malicious URLs**: Check the complete command line parameters associated with the
  identified processes for any external URLs or file downloads, flagging any that appear odd or unfamiliar.
  3. **Check Proxy Logs**: Correlate findings with proxy logs to determine if any outgoing requests were made to the URLs
  noted in the command line, looking for downloads or interactions that match the suspect timeline.
  4. **Scan for Potential Malware**: Utilize the AV solution to perform a scan on any downloaded files or related
  artifacts to identify known malware signatures or anomalies that could suggest malicious activity.
