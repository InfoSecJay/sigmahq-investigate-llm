title: Compress Data and Lock With Password for Exfiltration With 7-ZIP
id: 9fbf5927-5261-4284-a71d-f681029ea574
status: test
description: An adversary may compress or encrypt data that is collected prior to
  exfiltration using 3rd party utilities
references:
- https://github.com/redcanaryco/atomic-red-team/blob/f339e7da7d05f6057fdfcdd3742bfcf365fee2a9/atomics/T1560.001/T1560.001.md
author: frack113
date: 2021-07-27
modified: 2023-03-13
tags:
- attack.collection
- attack.t1560.001
logsource:
  category: process_creation
  product: windows
detection:
  selection_img:
  - Description|contains: 7-Zip
  - Image|endswith:
    - \7z.exe
    - \7zr.exe
    - \7za.exe
  - OriginalFileName:
    - 7z.exe
    - 7za.exe
  selection_password:
    CommandLine|contains: ' -p'
  selection_action:
    CommandLine|contains:
    - ' a '
    - ' u '
  condition: all of selection_*
falsepositives:
- Legitimate activity is expected since compressing files with a password is common.
level: medium
notes: |
  ### LLM Investigation Guide Notice
  This guide has been generated entirely with the use of an LLM and may include incorrect information, this guide will be
  reviewed in the future for accuracy.

  ### Technical Context
  The technique of compressing or encrypting data prior to exfiltration using third-party utilities, such as 7-Zip, is a
  prevalent strategy employed by adversaries to obfuscate sensitive information and evade detection. By utilizing
  compression, attackers can minimize the size of the data, while password protection adds another layer of complexity for
  security systems attempting to analyze the content. This detection rule highlights the use of 7-Zip, a widely used file
  archiving tool, which has been manipulated by threat actors for illicit data exfiltration.

  ### Investigation Steps
  1. **Check Process Creation Logs**: Utilize EDR to search for instances of 7-Zip (7z.exe, 7zr.exe, 7za.exe) being
  executed, paying attention to the associated command line arguments for patterns indicating compression and password
  usage.
  2. **Analyze Command Line Arguments**: Review command line parameters in Windows Event Logs to identify occurrences that
  include '-p', which indicates password-protected compression, signaling potential malicious activity.
  3. **Correlate with Proxy Logs**: Investigate recent outbound connections in Proxy logs to discern if any large
  transfers coincide with the times when 7-Zip was executed, implying possible data exfiltration attempts.
  4. **Examine Antivirus Alerts**: Consult AV logs for alerts related to compressed files or specific signatures that
  could indicate malicious activities involving 7-Zip, corroborating findings from EDR data.
